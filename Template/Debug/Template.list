
Template.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000120  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002c8  080002d0  000102d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002c8  080002c8  000102d0  2**0
                  CONTENTS
  4 .ARM          00000000  080002c8  080002c8  000102d0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002c8  080002d0  000102d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002c8  080002c8  000102c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002cc  080002cc  000102cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000102d0  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000102d0  2**0
                  CONTENTS, READONLY
 13 .debug_info   000005c4  00000000  00000000  00010300  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000171  00000000  00000000  000108c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00010a38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000048  00000000  00000000  00010aa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000181b7  00000000  00000000  00010af0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000009b3  00000000  00000000  00028ca7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008809e  00000000  00000000  0002965a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000b16f8  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000ac  00000000  00000000  000b1748  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080002b0 	.word	0x080002b0

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080002b0 	.word	0x080002b0

080001e8 <main>:
#include <stdint.h>



int main(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 80001ec:	e7fe      	b.n	80001ec <main+0x4>
	...

080001f0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001f0:	b480      	push	{r7}
 80001f2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80001f4:	4b06      	ldr	r3, [pc, #24]	; (8000210 <SystemInit+0x20>)
 80001f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80001fa:	4a05      	ldr	r2, [pc, #20]	; (8000210 <SystemInit+0x20>)
 80001fc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000200:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000204:	bf00      	nop
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	e000ed00 	.word	0xe000ed00

08000214 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000214:	480d      	ldr	r0, [pc, #52]	; (800024c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000216:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000218:	f7ff ffea 	bl	80001f0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800021c:	480c      	ldr	r0, [pc, #48]	; (8000250 <LoopForever+0x6>)
  ldr r1, =_edata
 800021e:	490d      	ldr	r1, [pc, #52]	; (8000254 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000220:	4a0d      	ldr	r2, [pc, #52]	; (8000258 <LoopForever+0xe>)
  movs r3, #0
 8000222:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000224:	e002      	b.n	800022c <LoopCopyDataInit>

08000226 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000226:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000228:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800022a:	3304      	adds	r3, #4

0800022c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800022c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800022e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000230:	d3f9      	bcc.n	8000226 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000232:	4a0a      	ldr	r2, [pc, #40]	; (800025c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000234:	4c0a      	ldr	r4, [pc, #40]	; (8000260 <LoopForever+0x16>)
  movs r3, #0
 8000236:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000238:	e001      	b.n	800023e <LoopFillZerobss>

0800023a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800023a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800023c:	3204      	adds	r2, #4

0800023e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800023e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000240:	d3fb      	bcc.n	800023a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000242:	f000 f811 	bl	8000268 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000246:	f7ff ffcf 	bl	80001e8 <main>

0800024a <LoopForever>:

LoopForever:
  b LoopForever
 800024a:	e7fe      	b.n	800024a <LoopForever>
  ldr   r0, =_estack
 800024c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000250:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000254:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000258:	080002d0 	.word	0x080002d0
  ldr r2, =_sbss
 800025c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000260:	2000001c 	.word	0x2000001c

08000264 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000264:	e7fe      	b.n	8000264 <ADC_IRQHandler>
	...

08000268 <__libc_init_array>:
 8000268:	b570      	push	{r4, r5, r6, lr}
 800026a:	4d0d      	ldr	r5, [pc, #52]	; (80002a0 <__libc_init_array+0x38>)
 800026c:	4c0d      	ldr	r4, [pc, #52]	; (80002a4 <__libc_init_array+0x3c>)
 800026e:	1b64      	subs	r4, r4, r5
 8000270:	10a4      	asrs	r4, r4, #2
 8000272:	2600      	movs	r6, #0
 8000274:	42a6      	cmp	r6, r4
 8000276:	d109      	bne.n	800028c <__libc_init_array+0x24>
 8000278:	4d0b      	ldr	r5, [pc, #44]	; (80002a8 <__libc_init_array+0x40>)
 800027a:	4c0c      	ldr	r4, [pc, #48]	; (80002ac <__libc_init_array+0x44>)
 800027c:	f000 f818 	bl	80002b0 <_init>
 8000280:	1b64      	subs	r4, r4, r5
 8000282:	10a4      	asrs	r4, r4, #2
 8000284:	2600      	movs	r6, #0
 8000286:	42a6      	cmp	r6, r4
 8000288:	d105      	bne.n	8000296 <__libc_init_array+0x2e>
 800028a:	bd70      	pop	{r4, r5, r6, pc}
 800028c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000290:	4798      	blx	r3
 8000292:	3601      	adds	r6, #1
 8000294:	e7ee      	b.n	8000274 <__libc_init_array+0xc>
 8000296:	f855 3b04 	ldr.w	r3, [r5], #4
 800029a:	4798      	blx	r3
 800029c:	3601      	adds	r6, #1
 800029e:	e7f2      	b.n	8000286 <__libc_init_array+0x1e>
 80002a0:	080002c8 	.word	0x080002c8
 80002a4:	080002c8 	.word	0x080002c8
 80002a8:	080002c8 	.word	0x080002c8
 80002ac:	080002cc 	.word	0x080002cc

080002b0 <_init>:
 80002b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002b2:	bf00      	nop
 80002b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002b6:	bc08      	pop	{r3}
 80002b8:	469e      	mov	lr, r3
 80002ba:	4770      	bx	lr

080002bc <_fini>:
 80002bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002be:	bf00      	nop
 80002c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002c2:	bc08      	pop	{r3}
 80002c4:	469e      	mov	lr, r3
 80002c6:	4770      	bx	lr
