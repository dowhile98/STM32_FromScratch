/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */
/*Includes -------------------------------------------------------------------*/
#include <stdint.h>
#include <stdio.h>
#include "stm32f4xx.h"
#include <stdbool.h>
#include "defines.h"
#include "delay.h"
#include "button.h"
#include "buttonV2.h"
/*Typedef --------------------------------------------------------------------*/


/*Defines ------------------------------------------------------------------- */
#define LED		D , 12
#define SW		A , 0

/*Global variables ---------------------------------------------------------- */
Button_Time_t button;
/*function prototype ---------------------------------------------------------*/

void button1_callback(void);

void TIMER6_Init(void);
/*main function --------------------------------------------------------------*/

int main(void)
{
	printf("EJEMPLO GPIO1\r\n");
	printf("%s, %s\r\n", __DATE__, __TIME__);
	//PD12 (LED1)
	RCC->AHB1ENR |= GPIOX_CLOCK(LED) | GPIOX_CLOCK(SW);
	GPIOX_MODER(MODE_OUT, LED);
	GPIOX_OTYPER(MODE_OT_PP, LED);
	GPIOX_OSPEEDR(MODE_SPD_VHIGH, LED);
	GPIOX_PUPDR(MODE_PU_NONE, LED);

	//PA0
	GPIOX_MODER(MODE_DIGITAL_INPUT, SW);
	GPIOX_PUPDR(MODE_PU_NONE, SW);
	//systick
	SysTickInit();

	//inicializar
	ButtonInit(&button1, GPIOA, 0, &button1_callback);
	ButtonInit(&button2, GPIOD, 13, NULL);
    /* Loop forever */
	for(;;){
		ButtonRead(&button1, PIN_TO_LOW);
		if(ButtonRead(&button2, PIN_TO_HIGH)){
			//todo
		}
		if(GPIOX_IDR(SW) == 1){
			//todo

		}

	}
}

/*Function definition ---------------------------------------------------------*/
void button1_callback(void){
	GPIOX_ODR(LED) ^= 0x1;
	count++;
	printf("pulsador se presiono..%u\r\n", count);
}


void TIMER6_Init(void){
	RCC->APB1ENR|= RCC_APB1ENR_TIM6EN;
	/**
	 * CONFIGURACION DEL TIMER CON SIMPLE RECURSO DE TEMP...
	 */
	TIM6->CR1 = 0;
	/**
	 * ARR
	 * PSC
	 * periodCounter = 5ms (1 / 5ms -> 200)
	 * ARR = 16E+6 / (16 *  (200) - 1 = 5000 - 1
	 */
	TIM6->PSC = 16 - 1;
	TIM6->ARR = 5000 - 1;
	/*Habilitar las interrupciones*/
	//update event
	TIM6->DIER |= TIM_DIER_UIE;
	NVIC_EnableIRQ(TIM6_DAC_IRQn);
	//HABILITAR EL CONTADOR
	TIM6->CR1 |= TIM_CR1_CEN;
	return;
}


int __io_putchar(int ch){
	ITM_SendChar(ch);
	return ch;
}
