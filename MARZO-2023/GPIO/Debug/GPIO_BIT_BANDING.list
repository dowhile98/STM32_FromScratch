
GPIO_BIT_BANDING.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000146c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e4  0800161c  0800161c  0001161c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001700  08001700  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001700  08001700  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001700  08001700  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001700  08001700  00011700  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001704  08001704  00011704  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001708  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020064  2**0
                  CONTENTS
 10 .bss          00000030  20000064  20000064  00020064  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000094  20000094  00020064  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001404  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000056c  00000000  00000000  00021498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000150  00000000  00000000  00021a08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000108  00000000  00000000  00021b58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019f0b  00000000  00000000  00021c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001b12  00000000  00000000  0003bb6b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008da42  00000000  00000000  0003d67d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000cb0bf  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000c3c  00000000  00000000  000cb110  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000064 	.word	0x20000064
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08001604 	.word	0x08001604

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000068 	.word	0x20000068
 80001ec:	08001604 	.word	0x08001604

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
 8000296:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000298:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800029c:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80002a0:	f003 0301 	and.w	r3, r3, #1
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d013      	beq.n	80002d0 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80002a8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ac:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80002b0:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d00b      	beq.n	80002d0 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80002b8:	e000      	b.n	80002bc <ITM_SendChar+0x2c>
    {
      __NOP();
 80002ba:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80002bc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80002c6:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002ca:	687a      	ldr	r2, [r7, #4]
 80002cc:	b2d2      	uxtb	r2, r2
 80002ce:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80002d0:	687b      	ldr	r3, [r7, #4]
}
 80002d2:	4618      	mov	r0, r3
 80002d4:	370c      	adds	r7, #12
 80002d6:	46bd      	mov	sp, r7
 80002d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002dc:	4770      	bx	lr
	...

080002e0 <main>:
 */
bool GPIO_PinRead(GPIO_TypeDef *GPIO, uint16_t pin);
/*main function --------------------------------------------------------------*/

int main(void)
{
 80002e0:	b580      	push	{r7, lr}
 80002e2:	af00      	add	r7, sp, #0
	//volatile uint8_t *idr0 = (volatile uint8_t*)(BITBAND_PERI(GPIOA_BASE + 0X10, 0));
	printf("EJEMPLO GPIO1\r\n");
 80002e4:	482c      	ldr	r0, [pc, #176]	; (8000398 <main+0xb8>)
 80002e6:	f000 fa0f 	bl	8000708 <puts>
	printf("%s, %s\r\n", __DATE__, __TIME__);
 80002ea:	4a2c      	ldr	r2, [pc, #176]	; (800039c <main+0xbc>)
 80002ec:	492c      	ldr	r1, [pc, #176]	; (80003a0 <main+0xc0>)
 80002ee:	482d      	ldr	r0, [pc, #180]	; (80003a4 <main+0xc4>)
 80002f0:	f000 f984 	bl	80005fc <iprintf>
	//PD12 (LED1)
	//1. HABILITAR EL RELOJ
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80002f4:	4b2c      	ldr	r3, [pc, #176]	; (80003a8 <main+0xc8>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a2b      	ldr	r2, [pc, #172]	; (80003a8 <main+0xc8>)
 80002fa:	f043 0308 	orr.w	r3, r3, #8
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
	//2. Configurar el modo
	GPIOD->MODER &=~ (GPIO_MODER_MODE12);		//CLEAR
 8000300:	4b2a      	ldr	r3, [pc, #168]	; (80003ac <main+0xcc>)
 8000302:	681b      	ldr	r3, [r3, #0]
 8000304:	4a29      	ldr	r2, [pc, #164]	; (80003ac <main+0xcc>)
 8000306:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 800030a:	6013      	str	r3, [r2, #0]
	GPIOD->MODER |= GPIO_MODER_MODE12_0;	//salida de proposito general
 800030c:	4b27      	ldr	r3, [pc, #156]	; (80003ac <main+0xcc>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	4a26      	ldr	r2, [pc, #152]	; (80003ac <main+0xcc>)
 8000312:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000316:	6013      	str	r3, [r2, #0]
	//3. definir el modo de salida
	GPIOD->OTYPER &=~ GPIO_OTYPER_OT12;		//SALIDA PUSH PULL
 8000318:	4b24      	ldr	r3, [pc, #144]	; (80003ac <main+0xcc>)
 800031a:	685b      	ldr	r3, [r3, #4]
 800031c:	4a23      	ldr	r2, [pc, #140]	; (80003ac <main+0xcc>)
 800031e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000322:	6053      	str	r3, [r2, #4]
	//4. VELODIDAD CONMUTACION
	GPIOD->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR12;	//VERY HIGH SPEED
 8000324:	4b21      	ldr	r3, [pc, #132]	; (80003ac <main+0xcc>)
 8000326:	689b      	ldr	r3, [r3, #8]
 8000328:	4a20      	ldr	r2, [pc, #128]	; (80003ac <main+0xcc>)
 800032a:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
 800032e:	6093      	str	r3, [r2, #8]
	//5. RESISTENCIA PULL UP
	GPIOD->PUPDR &=~ GPIO_PUPDR_PUPD12;		//SIN RESISTENCIAS
 8000330:	4b1e      	ldr	r3, [pc, #120]	; (80003ac <main+0xcc>)
 8000332:	68db      	ldr	r3, [r3, #12]
 8000334:	4a1d      	ldr	r2, [pc, #116]	; (80003ac <main+0xcc>)
 8000336:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 800033a:	60d3      	str	r3, [r2, #12]

	printf("configuracion termida\r\n");
 800033c:	481c      	ldr	r0, [pc, #112]	; (80003b0 <main+0xd0>)
 800033e:	f000 f9e3 	bl	8000708 <puts>

	GPIOD->ODR |= GPIO_ODR_OD12;			//PONE EN ALTO EL PIN
 8000342:	4b1a      	ldr	r3, [pc, #104]	; (80003ac <main+0xcc>)
 8000344:	695b      	ldr	r3, [r3, #20]
 8000346:	4a19      	ldr	r2, [pc, #100]	; (80003ac <main+0xcc>)
 8000348:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800034c:	6153      	str	r3, [r2, #20]
	GPIOD->ODR &=~ GPIO_ODR_OD12;			//PONE EN BAJO
 800034e:	4b17      	ldr	r3, [pc, #92]	; (80003ac <main+0xcc>)
 8000350:	695b      	ldr	r3, [r3, #20]
 8000352:	4a16      	ldr	r2, [pc, #88]	; (80003ac <main+0xcc>)
 8000354:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000358:	6153      	str	r3, [r2, #20]

	//PA0 -> (BUTTON PULL DOWN)
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 800035a:	4b13      	ldr	r3, [pc, #76]	; (80003a8 <main+0xc8>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a12      	ldr	r2, [pc, #72]	; (80003a8 <main+0xc8>)
 8000360:	f043 0301 	orr.w	r3, r3, #1
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER &=~ GPIO_MODER_MODE0;		//RESET (INPUT FLOATING)
 8000366:	4b13      	ldr	r3, [pc, #76]	; (80003b4 <main+0xd4>)
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	4a12      	ldr	r2, [pc, #72]	; (80003b4 <main+0xd4>)
 800036c:	f023 0303 	bic.w	r3, r3, #3
 8000370:	6013      	str	r3, [r2, #0]
	GPIOA->PUPDR &=~ GPIO_PUPDR_PUPD0;		//CLEAR (NO PULL UP, PULL DOWN)
 8000372:	4b10      	ldr	r3, [pc, #64]	; (80003b4 <main+0xd4>)
 8000374:	68db      	ldr	r3, [r3, #12]
 8000376:	4a0f      	ldr	r2, [pc, #60]	; (80003b4 <main+0xd4>)
 8000378:	f023 0303 	bic.w	r3, r3, #3
 800037c:	60d3      	str	r3, [r2, #12]
    /* Loop forever */
	for(;;){
		if(IDR_PA0 == 1){
 800037e:	4b0e      	ldr	r3, [pc, #56]	; (80003b8 <main+0xd8>)
 8000380:	781b      	ldrb	r3, [r3, #0]
 8000382:	b2db      	uxtb	r3, r3
 8000384:	2b01      	cmp	r3, #1
 8000386:	d103      	bne.n	8000390 <main+0xb0>
			ODR_PD12 = 1;		//TURN ON
 8000388:	4b0c      	ldr	r3, [pc, #48]	; (80003bc <main+0xdc>)
 800038a:	2201      	movs	r2, #1
 800038c:	701a      	strb	r2, [r3, #0]
 800038e:	e7f6      	b.n	800037e <main+0x9e>
		}else{
			ODR_PD12 = 0;		//TURN OFF
 8000390:	4b0a      	ldr	r3, [pc, #40]	; (80003bc <main+0xdc>)
 8000392:	2200      	movs	r2, #0
 8000394:	701a      	strb	r2, [r3, #0]
		if(IDR_PA0 == 1){
 8000396:	e7f2      	b.n	800037e <main+0x9e>
 8000398:	0800161c 	.word	0x0800161c
 800039c:	0800162c 	.word	0x0800162c
 80003a0:	08001638 	.word	0x08001638
 80003a4:	08001644 	.word	0x08001644
 80003a8:	40023800 	.word	0x40023800
 80003ac:	40020c00 	.word	0x40020c00
 80003b0:	08001650 	.word	0x08001650
 80003b4:	40020000 	.word	0x40020000
 80003b8:	42400200 	.word	0x42400200
 80003bc:	424182b0 	.word	0x424182b0

080003c0 <__io_putchar>:
}




int __io_putchar(int ch){
 80003c0:	b580      	push	{r7, lr}
 80003c2:	b082      	sub	sp, #8
 80003c4:	af00      	add	r7, sp, #0
 80003c6:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	4618      	mov	r0, r3
 80003cc:	f7ff ff60 	bl	8000290 <ITM_SendChar>
	return ch;
 80003d0:	687b      	ldr	r3, [r7, #4]
}
 80003d2:	4618      	mov	r0, r3
 80003d4:	3708      	adds	r7, #8
 80003d6:	46bd      	mov	sp, r7
 80003d8:	bd80      	pop	{r7, pc}

080003da <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003da:	b580      	push	{r7, lr}
 80003dc:	b086      	sub	sp, #24
 80003de:	af00      	add	r7, sp, #0
 80003e0:	60f8      	str	r0, [r7, #12]
 80003e2:	60b9      	str	r1, [r7, #8]
 80003e4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003e6:	2300      	movs	r3, #0
 80003e8:	617b      	str	r3, [r7, #20]
 80003ea:	e00a      	b.n	8000402 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80003ec:	f3af 8000 	nop.w
 80003f0:	4601      	mov	r1, r0
 80003f2:	68bb      	ldr	r3, [r7, #8]
 80003f4:	1c5a      	adds	r2, r3, #1
 80003f6:	60ba      	str	r2, [r7, #8]
 80003f8:	b2ca      	uxtb	r2, r1
 80003fa:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fc:	697b      	ldr	r3, [r7, #20]
 80003fe:	3301      	adds	r3, #1
 8000400:	617b      	str	r3, [r7, #20]
 8000402:	697a      	ldr	r2, [r7, #20]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	429a      	cmp	r2, r3
 8000408:	dbf0      	blt.n	80003ec <_read+0x12>
  }

  return len;
 800040a:	687b      	ldr	r3, [r7, #4]
}
 800040c:	4618      	mov	r0, r3
 800040e:	3718      	adds	r7, #24
 8000410:	46bd      	mov	sp, r7
 8000412:	bd80      	pop	{r7, pc}

08000414 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	b086      	sub	sp, #24
 8000418:	af00      	add	r7, sp, #0
 800041a:	60f8      	str	r0, [r7, #12]
 800041c:	60b9      	str	r1, [r7, #8]
 800041e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000420:	2300      	movs	r3, #0
 8000422:	617b      	str	r3, [r7, #20]
 8000424:	e009      	b.n	800043a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000426:	68bb      	ldr	r3, [r7, #8]
 8000428:	1c5a      	adds	r2, r3, #1
 800042a:	60ba      	str	r2, [r7, #8]
 800042c:	781b      	ldrb	r3, [r3, #0]
 800042e:	4618      	mov	r0, r3
 8000430:	f7ff ffc6 	bl	80003c0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000434:	697b      	ldr	r3, [r7, #20]
 8000436:	3301      	adds	r3, #1
 8000438:	617b      	str	r3, [r7, #20]
 800043a:	697a      	ldr	r2, [r7, #20]
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	429a      	cmp	r2, r3
 8000440:	dbf1      	blt.n	8000426 <_write+0x12>
  }
  return len;
 8000442:	687b      	ldr	r3, [r7, #4]
}
 8000444:	4618      	mov	r0, r3
 8000446:	3718      	adds	r7, #24
 8000448:	46bd      	mov	sp, r7
 800044a:	bd80      	pop	{r7, pc}

0800044c <_close>:

int _close(int file)
{
 800044c:	b480      	push	{r7}
 800044e:	b083      	sub	sp, #12
 8000450:	af00      	add	r7, sp, #0
 8000452:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000454:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000458:	4618      	mov	r0, r3
 800045a:	370c      	adds	r7, #12
 800045c:	46bd      	mov	sp, r7
 800045e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000462:	4770      	bx	lr

08000464 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000464:	b480      	push	{r7}
 8000466:	b083      	sub	sp, #12
 8000468:	af00      	add	r7, sp, #0
 800046a:	6078      	str	r0, [r7, #4]
 800046c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800046e:	683b      	ldr	r3, [r7, #0]
 8000470:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000474:	605a      	str	r2, [r3, #4]
  return 0;
 8000476:	2300      	movs	r3, #0
}
 8000478:	4618      	mov	r0, r3
 800047a:	370c      	adds	r7, #12
 800047c:	46bd      	mov	sp, r7
 800047e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000482:	4770      	bx	lr

08000484 <_isatty>:

int _isatty(int file)
{
 8000484:	b480      	push	{r7}
 8000486:	b083      	sub	sp, #12
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800048c:	2301      	movs	r3, #1
}
 800048e:	4618      	mov	r0, r3
 8000490:	370c      	adds	r7, #12
 8000492:	46bd      	mov	sp, r7
 8000494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000498:	4770      	bx	lr

0800049a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800049a:	b480      	push	{r7}
 800049c:	b085      	sub	sp, #20
 800049e:	af00      	add	r7, sp, #0
 80004a0:	60f8      	str	r0, [r7, #12]
 80004a2:	60b9      	str	r1, [r7, #8]
 80004a4:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80004a6:	2300      	movs	r3, #0
}
 80004a8:	4618      	mov	r0, r3
 80004aa:	3714      	adds	r7, #20
 80004ac:	46bd      	mov	sp, r7
 80004ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b2:	4770      	bx	lr

080004b4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004b4:	b580      	push	{r7, lr}
 80004b6:	b086      	sub	sp, #24
 80004b8:	af00      	add	r7, sp, #0
 80004ba:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004bc:	4a14      	ldr	r2, [pc, #80]	; (8000510 <_sbrk+0x5c>)
 80004be:	4b15      	ldr	r3, [pc, #84]	; (8000514 <_sbrk+0x60>)
 80004c0:	1ad3      	subs	r3, r2, r3
 80004c2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004c4:	697b      	ldr	r3, [r7, #20]
 80004c6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004c8:	4b13      	ldr	r3, [pc, #76]	; (8000518 <_sbrk+0x64>)
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	2b00      	cmp	r3, #0
 80004ce:	d102      	bne.n	80004d6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004d0:	4b11      	ldr	r3, [pc, #68]	; (8000518 <_sbrk+0x64>)
 80004d2:	4a12      	ldr	r2, [pc, #72]	; (800051c <_sbrk+0x68>)
 80004d4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004d6:	4b10      	ldr	r3, [pc, #64]	; (8000518 <_sbrk+0x64>)
 80004d8:	681a      	ldr	r2, [r3, #0]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4413      	add	r3, r2
 80004de:	693a      	ldr	r2, [r7, #16]
 80004e0:	429a      	cmp	r2, r3
 80004e2:	d207      	bcs.n	80004f4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004e4:	f000 f858 	bl	8000598 <__errno>
 80004e8:	4603      	mov	r3, r0
 80004ea:	220c      	movs	r2, #12
 80004ec:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004ee:	f04f 33ff 	mov.w	r3, #4294967295
 80004f2:	e009      	b.n	8000508 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004f4:	4b08      	ldr	r3, [pc, #32]	; (8000518 <_sbrk+0x64>)
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004fa:	4b07      	ldr	r3, [pc, #28]	; (8000518 <_sbrk+0x64>)
 80004fc:	681a      	ldr	r2, [r3, #0]
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	4413      	add	r3, r2
 8000502:	4a05      	ldr	r2, [pc, #20]	; (8000518 <_sbrk+0x64>)
 8000504:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000506:	68fb      	ldr	r3, [r7, #12]
}
 8000508:	4618      	mov	r0, r3
 800050a:	3718      	adds	r7, #24
 800050c:	46bd      	mov	sp, r7
 800050e:	bd80      	pop	{r7, pc}
 8000510:	20020000 	.word	0x20020000
 8000514:	00000400 	.word	0x00000400
 8000518:	20000080 	.word	0x20000080
 800051c:	20000098 	.word	0x20000098

08000520 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000520:	b480      	push	{r7}
 8000522:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000524:	4b06      	ldr	r3, [pc, #24]	; (8000540 <SystemInit+0x20>)
 8000526:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800052a:	4a05      	ldr	r2, [pc, #20]	; (8000540 <SystemInit+0x20>)
 800052c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000530:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000534:	bf00      	nop
 8000536:	46bd      	mov	sp, r7
 8000538:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053c:	4770      	bx	lr
 800053e:	bf00      	nop
 8000540:	e000ed00 	.word	0xe000ed00

08000544 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000544:	480d      	ldr	r0, [pc, #52]	; (800057c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000546:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000548:	f7ff ffea 	bl	8000520 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800054c:	480c      	ldr	r0, [pc, #48]	; (8000580 <LoopForever+0x6>)
  ldr r1, =_edata
 800054e:	490d      	ldr	r1, [pc, #52]	; (8000584 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000550:	4a0d      	ldr	r2, [pc, #52]	; (8000588 <LoopForever+0xe>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000554:	e002      	b.n	800055c <LoopCopyDataInit>

08000556 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000556:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000558:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800055a:	3304      	adds	r3, #4

0800055c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800055c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800055e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000560:	d3f9      	bcc.n	8000556 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000562:	4a0a      	ldr	r2, [pc, #40]	; (800058c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000564:	4c0a      	ldr	r4, [pc, #40]	; (8000590 <LoopForever+0x16>)
  movs r3, #0
 8000566:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000568:	e001      	b.n	800056e <LoopFillZerobss>

0800056a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800056a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800056c:	3204      	adds	r2, #4

0800056e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800056e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000570:	d3fb      	bcc.n	800056a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000572:	f000 f817 	bl	80005a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000576:	f7ff feb3 	bl	80002e0 <main>

0800057a <LoopForever>:

LoopForever:
  b LoopForever
 800057a:	e7fe      	b.n	800057a <LoopForever>
  ldr   r0, =_estack
 800057c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000580:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000584:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000588:	08001708 	.word	0x08001708
  ldr r2, =_sbss
 800058c:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000590:	20000094 	.word	0x20000094

08000594 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000594:	e7fe      	b.n	8000594 <ADC_IRQHandler>
	...

08000598 <__errno>:
 8000598:	4b01      	ldr	r3, [pc, #4]	; (80005a0 <__errno+0x8>)
 800059a:	6818      	ldr	r0, [r3, #0]
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop
 80005a0:	20000000 	.word	0x20000000

080005a4 <__libc_init_array>:
 80005a4:	b570      	push	{r4, r5, r6, lr}
 80005a6:	4d0d      	ldr	r5, [pc, #52]	; (80005dc <__libc_init_array+0x38>)
 80005a8:	4c0d      	ldr	r4, [pc, #52]	; (80005e0 <__libc_init_array+0x3c>)
 80005aa:	1b64      	subs	r4, r4, r5
 80005ac:	10a4      	asrs	r4, r4, #2
 80005ae:	2600      	movs	r6, #0
 80005b0:	42a6      	cmp	r6, r4
 80005b2:	d109      	bne.n	80005c8 <__libc_init_array+0x24>
 80005b4:	4d0b      	ldr	r5, [pc, #44]	; (80005e4 <__libc_init_array+0x40>)
 80005b6:	4c0c      	ldr	r4, [pc, #48]	; (80005e8 <__libc_init_array+0x44>)
 80005b8:	f001 f824 	bl	8001604 <_init>
 80005bc:	1b64      	subs	r4, r4, r5
 80005be:	10a4      	asrs	r4, r4, #2
 80005c0:	2600      	movs	r6, #0
 80005c2:	42a6      	cmp	r6, r4
 80005c4:	d105      	bne.n	80005d2 <__libc_init_array+0x2e>
 80005c6:	bd70      	pop	{r4, r5, r6, pc}
 80005c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005cc:	4798      	blx	r3
 80005ce:	3601      	adds	r6, #1
 80005d0:	e7ee      	b.n	80005b0 <__libc_init_array+0xc>
 80005d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005d6:	4798      	blx	r3
 80005d8:	3601      	adds	r6, #1
 80005da:	e7f2      	b.n	80005c2 <__libc_init_array+0x1e>
 80005dc:	08001700 	.word	0x08001700
 80005e0:	08001700 	.word	0x08001700
 80005e4:	08001700 	.word	0x08001700
 80005e8:	08001704 	.word	0x08001704

080005ec <memset>:
 80005ec:	4402      	add	r2, r0
 80005ee:	4603      	mov	r3, r0
 80005f0:	4293      	cmp	r3, r2
 80005f2:	d100      	bne.n	80005f6 <memset+0xa>
 80005f4:	4770      	bx	lr
 80005f6:	f803 1b01 	strb.w	r1, [r3], #1
 80005fa:	e7f9      	b.n	80005f0 <memset+0x4>

080005fc <iprintf>:
 80005fc:	b40f      	push	{r0, r1, r2, r3}
 80005fe:	4b0a      	ldr	r3, [pc, #40]	; (8000628 <iprintf+0x2c>)
 8000600:	b513      	push	{r0, r1, r4, lr}
 8000602:	681c      	ldr	r4, [r3, #0]
 8000604:	b124      	cbz	r4, 8000610 <iprintf+0x14>
 8000606:	69a3      	ldr	r3, [r4, #24]
 8000608:	b913      	cbnz	r3, 8000610 <iprintf+0x14>
 800060a:	4620      	mov	r0, r4
 800060c:	f000 fa5e 	bl	8000acc <__sinit>
 8000610:	ab05      	add	r3, sp, #20
 8000612:	9a04      	ldr	r2, [sp, #16]
 8000614:	68a1      	ldr	r1, [r4, #8]
 8000616:	9301      	str	r3, [sp, #4]
 8000618:	4620      	mov	r0, r4
 800061a:	f000 fc67 	bl	8000eec <_vfiprintf_r>
 800061e:	b002      	add	sp, #8
 8000620:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000624:	b004      	add	sp, #16
 8000626:	4770      	bx	lr
 8000628:	20000000 	.word	0x20000000

0800062c <_puts_r>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	460e      	mov	r6, r1
 8000630:	4605      	mov	r5, r0
 8000632:	b118      	cbz	r0, 800063c <_puts_r+0x10>
 8000634:	6983      	ldr	r3, [r0, #24]
 8000636:	b90b      	cbnz	r3, 800063c <_puts_r+0x10>
 8000638:	f000 fa48 	bl	8000acc <__sinit>
 800063c:	69ab      	ldr	r3, [r5, #24]
 800063e:	68ac      	ldr	r4, [r5, #8]
 8000640:	b913      	cbnz	r3, 8000648 <_puts_r+0x1c>
 8000642:	4628      	mov	r0, r5
 8000644:	f000 fa42 	bl	8000acc <__sinit>
 8000648:	4b2c      	ldr	r3, [pc, #176]	; (80006fc <_puts_r+0xd0>)
 800064a:	429c      	cmp	r4, r3
 800064c:	d120      	bne.n	8000690 <_puts_r+0x64>
 800064e:	686c      	ldr	r4, [r5, #4]
 8000650:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000652:	07db      	lsls	r3, r3, #31
 8000654:	d405      	bmi.n	8000662 <_puts_r+0x36>
 8000656:	89a3      	ldrh	r3, [r4, #12]
 8000658:	0598      	lsls	r0, r3, #22
 800065a:	d402      	bmi.n	8000662 <_puts_r+0x36>
 800065c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800065e:	f000 fad3 	bl	8000c08 <__retarget_lock_acquire_recursive>
 8000662:	89a3      	ldrh	r3, [r4, #12]
 8000664:	0719      	lsls	r1, r3, #28
 8000666:	d51d      	bpl.n	80006a4 <_puts_r+0x78>
 8000668:	6923      	ldr	r3, [r4, #16]
 800066a:	b1db      	cbz	r3, 80006a4 <_puts_r+0x78>
 800066c:	3e01      	subs	r6, #1
 800066e:	68a3      	ldr	r3, [r4, #8]
 8000670:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000674:	3b01      	subs	r3, #1
 8000676:	60a3      	str	r3, [r4, #8]
 8000678:	bb39      	cbnz	r1, 80006ca <_puts_r+0x9e>
 800067a:	2b00      	cmp	r3, #0
 800067c:	da38      	bge.n	80006f0 <_puts_r+0xc4>
 800067e:	4622      	mov	r2, r4
 8000680:	210a      	movs	r1, #10
 8000682:	4628      	mov	r0, r5
 8000684:	f000 f848 	bl	8000718 <__swbuf_r>
 8000688:	3001      	adds	r0, #1
 800068a:	d011      	beq.n	80006b0 <_puts_r+0x84>
 800068c:	250a      	movs	r5, #10
 800068e:	e011      	b.n	80006b4 <_puts_r+0x88>
 8000690:	4b1b      	ldr	r3, [pc, #108]	; (8000700 <_puts_r+0xd4>)
 8000692:	429c      	cmp	r4, r3
 8000694:	d101      	bne.n	800069a <_puts_r+0x6e>
 8000696:	68ac      	ldr	r4, [r5, #8]
 8000698:	e7da      	b.n	8000650 <_puts_r+0x24>
 800069a:	4b1a      	ldr	r3, [pc, #104]	; (8000704 <_puts_r+0xd8>)
 800069c:	429c      	cmp	r4, r3
 800069e:	bf08      	it	eq
 80006a0:	68ec      	ldreq	r4, [r5, #12]
 80006a2:	e7d5      	b.n	8000650 <_puts_r+0x24>
 80006a4:	4621      	mov	r1, r4
 80006a6:	4628      	mov	r0, r5
 80006a8:	f000 f888 	bl	80007bc <__swsetup_r>
 80006ac:	2800      	cmp	r0, #0
 80006ae:	d0dd      	beq.n	800066c <_puts_r+0x40>
 80006b0:	f04f 35ff 	mov.w	r5, #4294967295
 80006b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006b6:	07da      	lsls	r2, r3, #31
 80006b8:	d405      	bmi.n	80006c6 <_puts_r+0x9a>
 80006ba:	89a3      	ldrh	r3, [r4, #12]
 80006bc:	059b      	lsls	r3, r3, #22
 80006be:	d402      	bmi.n	80006c6 <_puts_r+0x9a>
 80006c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006c2:	f000 faa2 	bl	8000c0a <__retarget_lock_release_recursive>
 80006c6:	4628      	mov	r0, r5
 80006c8:	bd70      	pop	{r4, r5, r6, pc}
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	da04      	bge.n	80006d8 <_puts_r+0xac>
 80006ce:	69a2      	ldr	r2, [r4, #24]
 80006d0:	429a      	cmp	r2, r3
 80006d2:	dc06      	bgt.n	80006e2 <_puts_r+0xb6>
 80006d4:	290a      	cmp	r1, #10
 80006d6:	d004      	beq.n	80006e2 <_puts_r+0xb6>
 80006d8:	6823      	ldr	r3, [r4, #0]
 80006da:	1c5a      	adds	r2, r3, #1
 80006dc:	6022      	str	r2, [r4, #0]
 80006de:	7019      	strb	r1, [r3, #0]
 80006e0:	e7c5      	b.n	800066e <_puts_r+0x42>
 80006e2:	4622      	mov	r2, r4
 80006e4:	4628      	mov	r0, r5
 80006e6:	f000 f817 	bl	8000718 <__swbuf_r>
 80006ea:	3001      	adds	r0, #1
 80006ec:	d1bf      	bne.n	800066e <_puts_r+0x42>
 80006ee:	e7df      	b.n	80006b0 <_puts_r+0x84>
 80006f0:	6823      	ldr	r3, [r4, #0]
 80006f2:	250a      	movs	r5, #10
 80006f4:	1c5a      	adds	r2, r3, #1
 80006f6:	6022      	str	r2, [r4, #0]
 80006f8:	701d      	strb	r5, [r3, #0]
 80006fa:	e7db      	b.n	80006b4 <_puts_r+0x88>
 80006fc:	0800168c 	.word	0x0800168c
 8000700:	080016ac 	.word	0x080016ac
 8000704:	0800166c 	.word	0x0800166c

08000708 <puts>:
 8000708:	4b02      	ldr	r3, [pc, #8]	; (8000714 <puts+0xc>)
 800070a:	4601      	mov	r1, r0
 800070c:	6818      	ldr	r0, [r3, #0]
 800070e:	f7ff bf8d 	b.w	800062c <_puts_r>
 8000712:	bf00      	nop
 8000714:	20000000 	.word	0x20000000

08000718 <__swbuf_r>:
 8000718:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800071a:	460e      	mov	r6, r1
 800071c:	4614      	mov	r4, r2
 800071e:	4605      	mov	r5, r0
 8000720:	b118      	cbz	r0, 800072a <__swbuf_r+0x12>
 8000722:	6983      	ldr	r3, [r0, #24]
 8000724:	b90b      	cbnz	r3, 800072a <__swbuf_r+0x12>
 8000726:	f000 f9d1 	bl	8000acc <__sinit>
 800072a:	4b21      	ldr	r3, [pc, #132]	; (80007b0 <__swbuf_r+0x98>)
 800072c:	429c      	cmp	r4, r3
 800072e:	d12b      	bne.n	8000788 <__swbuf_r+0x70>
 8000730:	686c      	ldr	r4, [r5, #4]
 8000732:	69a3      	ldr	r3, [r4, #24]
 8000734:	60a3      	str	r3, [r4, #8]
 8000736:	89a3      	ldrh	r3, [r4, #12]
 8000738:	071a      	lsls	r2, r3, #28
 800073a:	d52f      	bpl.n	800079c <__swbuf_r+0x84>
 800073c:	6923      	ldr	r3, [r4, #16]
 800073e:	b36b      	cbz	r3, 800079c <__swbuf_r+0x84>
 8000740:	6923      	ldr	r3, [r4, #16]
 8000742:	6820      	ldr	r0, [r4, #0]
 8000744:	1ac0      	subs	r0, r0, r3
 8000746:	6963      	ldr	r3, [r4, #20]
 8000748:	b2f6      	uxtb	r6, r6
 800074a:	4283      	cmp	r3, r0
 800074c:	4637      	mov	r7, r6
 800074e:	dc04      	bgt.n	800075a <__swbuf_r+0x42>
 8000750:	4621      	mov	r1, r4
 8000752:	4628      	mov	r0, r5
 8000754:	f000 f926 	bl	80009a4 <_fflush_r>
 8000758:	bb30      	cbnz	r0, 80007a8 <__swbuf_r+0x90>
 800075a:	68a3      	ldr	r3, [r4, #8]
 800075c:	3b01      	subs	r3, #1
 800075e:	60a3      	str	r3, [r4, #8]
 8000760:	6823      	ldr	r3, [r4, #0]
 8000762:	1c5a      	adds	r2, r3, #1
 8000764:	6022      	str	r2, [r4, #0]
 8000766:	701e      	strb	r6, [r3, #0]
 8000768:	6963      	ldr	r3, [r4, #20]
 800076a:	3001      	adds	r0, #1
 800076c:	4283      	cmp	r3, r0
 800076e:	d004      	beq.n	800077a <__swbuf_r+0x62>
 8000770:	89a3      	ldrh	r3, [r4, #12]
 8000772:	07db      	lsls	r3, r3, #31
 8000774:	d506      	bpl.n	8000784 <__swbuf_r+0x6c>
 8000776:	2e0a      	cmp	r6, #10
 8000778:	d104      	bne.n	8000784 <__swbuf_r+0x6c>
 800077a:	4621      	mov	r1, r4
 800077c:	4628      	mov	r0, r5
 800077e:	f000 f911 	bl	80009a4 <_fflush_r>
 8000782:	b988      	cbnz	r0, 80007a8 <__swbuf_r+0x90>
 8000784:	4638      	mov	r0, r7
 8000786:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000788:	4b0a      	ldr	r3, [pc, #40]	; (80007b4 <__swbuf_r+0x9c>)
 800078a:	429c      	cmp	r4, r3
 800078c:	d101      	bne.n	8000792 <__swbuf_r+0x7a>
 800078e:	68ac      	ldr	r4, [r5, #8]
 8000790:	e7cf      	b.n	8000732 <__swbuf_r+0x1a>
 8000792:	4b09      	ldr	r3, [pc, #36]	; (80007b8 <__swbuf_r+0xa0>)
 8000794:	429c      	cmp	r4, r3
 8000796:	bf08      	it	eq
 8000798:	68ec      	ldreq	r4, [r5, #12]
 800079a:	e7ca      	b.n	8000732 <__swbuf_r+0x1a>
 800079c:	4621      	mov	r1, r4
 800079e:	4628      	mov	r0, r5
 80007a0:	f000 f80c 	bl	80007bc <__swsetup_r>
 80007a4:	2800      	cmp	r0, #0
 80007a6:	d0cb      	beq.n	8000740 <__swbuf_r+0x28>
 80007a8:	f04f 37ff 	mov.w	r7, #4294967295
 80007ac:	e7ea      	b.n	8000784 <__swbuf_r+0x6c>
 80007ae:	bf00      	nop
 80007b0:	0800168c 	.word	0x0800168c
 80007b4:	080016ac 	.word	0x080016ac
 80007b8:	0800166c 	.word	0x0800166c

080007bc <__swsetup_r>:
 80007bc:	4b32      	ldr	r3, [pc, #200]	; (8000888 <__swsetup_r+0xcc>)
 80007be:	b570      	push	{r4, r5, r6, lr}
 80007c0:	681d      	ldr	r5, [r3, #0]
 80007c2:	4606      	mov	r6, r0
 80007c4:	460c      	mov	r4, r1
 80007c6:	b125      	cbz	r5, 80007d2 <__swsetup_r+0x16>
 80007c8:	69ab      	ldr	r3, [r5, #24]
 80007ca:	b913      	cbnz	r3, 80007d2 <__swsetup_r+0x16>
 80007cc:	4628      	mov	r0, r5
 80007ce:	f000 f97d 	bl	8000acc <__sinit>
 80007d2:	4b2e      	ldr	r3, [pc, #184]	; (800088c <__swsetup_r+0xd0>)
 80007d4:	429c      	cmp	r4, r3
 80007d6:	d10f      	bne.n	80007f8 <__swsetup_r+0x3c>
 80007d8:	686c      	ldr	r4, [r5, #4]
 80007da:	89a3      	ldrh	r3, [r4, #12]
 80007dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007e0:	0719      	lsls	r1, r3, #28
 80007e2:	d42c      	bmi.n	800083e <__swsetup_r+0x82>
 80007e4:	06dd      	lsls	r5, r3, #27
 80007e6:	d411      	bmi.n	800080c <__swsetup_r+0x50>
 80007e8:	2309      	movs	r3, #9
 80007ea:	6033      	str	r3, [r6, #0]
 80007ec:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80007f0:	81a3      	strh	r3, [r4, #12]
 80007f2:	f04f 30ff 	mov.w	r0, #4294967295
 80007f6:	e03e      	b.n	8000876 <__swsetup_r+0xba>
 80007f8:	4b25      	ldr	r3, [pc, #148]	; (8000890 <__swsetup_r+0xd4>)
 80007fa:	429c      	cmp	r4, r3
 80007fc:	d101      	bne.n	8000802 <__swsetup_r+0x46>
 80007fe:	68ac      	ldr	r4, [r5, #8]
 8000800:	e7eb      	b.n	80007da <__swsetup_r+0x1e>
 8000802:	4b24      	ldr	r3, [pc, #144]	; (8000894 <__swsetup_r+0xd8>)
 8000804:	429c      	cmp	r4, r3
 8000806:	bf08      	it	eq
 8000808:	68ec      	ldreq	r4, [r5, #12]
 800080a:	e7e6      	b.n	80007da <__swsetup_r+0x1e>
 800080c:	0758      	lsls	r0, r3, #29
 800080e:	d512      	bpl.n	8000836 <__swsetup_r+0x7a>
 8000810:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000812:	b141      	cbz	r1, 8000826 <__swsetup_r+0x6a>
 8000814:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000818:	4299      	cmp	r1, r3
 800081a:	d002      	beq.n	8000822 <__swsetup_r+0x66>
 800081c:	4630      	mov	r0, r6
 800081e:	f000 fa5b 	bl	8000cd8 <_free_r>
 8000822:	2300      	movs	r3, #0
 8000824:	6363      	str	r3, [r4, #52]	; 0x34
 8000826:	89a3      	ldrh	r3, [r4, #12]
 8000828:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800082c:	81a3      	strh	r3, [r4, #12]
 800082e:	2300      	movs	r3, #0
 8000830:	6063      	str	r3, [r4, #4]
 8000832:	6923      	ldr	r3, [r4, #16]
 8000834:	6023      	str	r3, [r4, #0]
 8000836:	89a3      	ldrh	r3, [r4, #12]
 8000838:	f043 0308 	orr.w	r3, r3, #8
 800083c:	81a3      	strh	r3, [r4, #12]
 800083e:	6923      	ldr	r3, [r4, #16]
 8000840:	b94b      	cbnz	r3, 8000856 <__swsetup_r+0x9a>
 8000842:	89a3      	ldrh	r3, [r4, #12]
 8000844:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000848:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800084c:	d003      	beq.n	8000856 <__swsetup_r+0x9a>
 800084e:	4621      	mov	r1, r4
 8000850:	4630      	mov	r0, r6
 8000852:	f000 fa01 	bl	8000c58 <__smakebuf_r>
 8000856:	89a0      	ldrh	r0, [r4, #12]
 8000858:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800085c:	f010 0301 	ands.w	r3, r0, #1
 8000860:	d00a      	beq.n	8000878 <__swsetup_r+0xbc>
 8000862:	2300      	movs	r3, #0
 8000864:	60a3      	str	r3, [r4, #8]
 8000866:	6963      	ldr	r3, [r4, #20]
 8000868:	425b      	negs	r3, r3
 800086a:	61a3      	str	r3, [r4, #24]
 800086c:	6923      	ldr	r3, [r4, #16]
 800086e:	b943      	cbnz	r3, 8000882 <__swsetup_r+0xc6>
 8000870:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000874:	d1ba      	bne.n	80007ec <__swsetup_r+0x30>
 8000876:	bd70      	pop	{r4, r5, r6, pc}
 8000878:	0781      	lsls	r1, r0, #30
 800087a:	bf58      	it	pl
 800087c:	6963      	ldrpl	r3, [r4, #20]
 800087e:	60a3      	str	r3, [r4, #8]
 8000880:	e7f4      	b.n	800086c <__swsetup_r+0xb0>
 8000882:	2000      	movs	r0, #0
 8000884:	e7f7      	b.n	8000876 <__swsetup_r+0xba>
 8000886:	bf00      	nop
 8000888:	20000000 	.word	0x20000000
 800088c:	0800168c 	.word	0x0800168c
 8000890:	080016ac 	.word	0x080016ac
 8000894:	0800166c 	.word	0x0800166c

08000898 <__sflush_r>:
 8000898:	898a      	ldrh	r2, [r1, #12]
 800089a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800089e:	4605      	mov	r5, r0
 80008a0:	0710      	lsls	r0, r2, #28
 80008a2:	460c      	mov	r4, r1
 80008a4:	d458      	bmi.n	8000958 <__sflush_r+0xc0>
 80008a6:	684b      	ldr	r3, [r1, #4]
 80008a8:	2b00      	cmp	r3, #0
 80008aa:	dc05      	bgt.n	80008b8 <__sflush_r+0x20>
 80008ac:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008ae:	2b00      	cmp	r3, #0
 80008b0:	dc02      	bgt.n	80008b8 <__sflush_r+0x20>
 80008b2:	2000      	movs	r0, #0
 80008b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008b8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008ba:	2e00      	cmp	r6, #0
 80008bc:	d0f9      	beq.n	80008b2 <__sflush_r+0x1a>
 80008be:	2300      	movs	r3, #0
 80008c0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008c4:	682f      	ldr	r7, [r5, #0]
 80008c6:	602b      	str	r3, [r5, #0]
 80008c8:	d032      	beq.n	8000930 <__sflush_r+0x98>
 80008ca:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008cc:	89a3      	ldrh	r3, [r4, #12]
 80008ce:	075a      	lsls	r2, r3, #29
 80008d0:	d505      	bpl.n	80008de <__sflush_r+0x46>
 80008d2:	6863      	ldr	r3, [r4, #4]
 80008d4:	1ac0      	subs	r0, r0, r3
 80008d6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008d8:	b10b      	cbz	r3, 80008de <__sflush_r+0x46>
 80008da:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008dc:	1ac0      	subs	r0, r0, r3
 80008de:	2300      	movs	r3, #0
 80008e0:	4602      	mov	r2, r0
 80008e2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008e4:	6a21      	ldr	r1, [r4, #32]
 80008e6:	4628      	mov	r0, r5
 80008e8:	47b0      	blx	r6
 80008ea:	1c43      	adds	r3, r0, #1
 80008ec:	89a3      	ldrh	r3, [r4, #12]
 80008ee:	d106      	bne.n	80008fe <__sflush_r+0x66>
 80008f0:	6829      	ldr	r1, [r5, #0]
 80008f2:	291d      	cmp	r1, #29
 80008f4:	d82c      	bhi.n	8000950 <__sflush_r+0xb8>
 80008f6:	4a2a      	ldr	r2, [pc, #168]	; (80009a0 <__sflush_r+0x108>)
 80008f8:	40ca      	lsrs	r2, r1
 80008fa:	07d6      	lsls	r6, r2, #31
 80008fc:	d528      	bpl.n	8000950 <__sflush_r+0xb8>
 80008fe:	2200      	movs	r2, #0
 8000900:	6062      	str	r2, [r4, #4]
 8000902:	04d9      	lsls	r1, r3, #19
 8000904:	6922      	ldr	r2, [r4, #16]
 8000906:	6022      	str	r2, [r4, #0]
 8000908:	d504      	bpl.n	8000914 <__sflush_r+0x7c>
 800090a:	1c42      	adds	r2, r0, #1
 800090c:	d101      	bne.n	8000912 <__sflush_r+0x7a>
 800090e:	682b      	ldr	r3, [r5, #0]
 8000910:	b903      	cbnz	r3, 8000914 <__sflush_r+0x7c>
 8000912:	6560      	str	r0, [r4, #84]	; 0x54
 8000914:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000916:	602f      	str	r7, [r5, #0]
 8000918:	2900      	cmp	r1, #0
 800091a:	d0ca      	beq.n	80008b2 <__sflush_r+0x1a>
 800091c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000920:	4299      	cmp	r1, r3
 8000922:	d002      	beq.n	800092a <__sflush_r+0x92>
 8000924:	4628      	mov	r0, r5
 8000926:	f000 f9d7 	bl	8000cd8 <_free_r>
 800092a:	2000      	movs	r0, #0
 800092c:	6360      	str	r0, [r4, #52]	; 0x34
 800092e:	e7c1      	b.n	80008b4 <__sflush_r+0x1c>
 8000930:	6a21      	ldr	r1, [r4, #32]
 8000932:	2301      	movs	r3, #1
 8000934:	4628      	mov	r0, r5
 8000936:	47b0      	blx	r6
 8000938:	1c41      	adds	r1, r0, #1
 800093a:	d1c7      	bne.n	80008cc <__sflush_r+0x34>
 800093c:	682b      	ldr	r3, [r5, #0]
 800093e:	2b00      	cmp	r3, #0
 8000940:	d0c4      	beq.n	80008cc <__sflush_r+0x34>
 8000942:	2b1d      	cmp	r3, #29
 8000944:	d001      	beq.n	800094a <__sflush_r+0xb2>
 8000946:	2b16      	cmp	r3, #22
 8000948:	d101      	bne.n	800094e <__sflush_r+0xb6>
 800094a:	602f      	str	r7, [r5, #0]
 800094c:	e7b1      	b.n	80008b2 <__sflush_r+0x1a>
 800094e:	89a3      	ldrh	r3, [r4, #12]
 8000950:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000954:	81a3      	strh	r3, [r4, #12]
 8000956:	e7ad      	b.n	80008b4 <__sflush_r+0x1c>
 8000958:	690f      	ldr	r7, [r1, #16]
 800095a:	2f00      	cmp	r7, #0
 800095c:	d0a9      	beq.n	80008b2 <__sflush_r+0x1a>
 800095e:	0793      	lsls	r3, r2, #30
 8000960:	680e      	ldr	r6, [r1, #0]
 8000962:	bf08      	it	eq
 8000964:	694b      	ldreq	r3, [r1, #20]
 8000966:	600f      	str	r7, [r1, #0]
 8000968:	bf18      	it	ne
 800096a:	2300      	movne	r3, #0
 800096c:	eba6 0807 	sub.w	r8, r6, r7
 8000970:	608b      	str	r3, [r1, #8]
 8000972:	f1b8 0f00 	cmp.w	r8, #0
 8000976:	dd9c      	ble.n	80008b2 <__sflush_r+0x1a>
 8000978:	6a21      	ldr	r1, [r4, #32]
 800097a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800097c:	4643      	mov	r3, r8
 800097e:	463a      	mov	r2, r7
 8000980:	4628      	mov	r0, r5
 8000982:	47b0      	blx	r6
 8000984:	2800      	cmp	r0, #0
 8000986:	dc06      	bgt.n	8000996 <__sflush_r+0xfe>
 8000988:	89a3      	ldrh	r3, [r4, #12]
 800098a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800098e:	81a3      	strh	r3, [r4, #12]
 8000990:	f04f 30ff 	mov.w	r0, #4294967295
 8000994:	e78e      	b.n	80008b4 <__sflush_r+0x1c>
 8000996:	4407      	add	r7, r0
 8000998:	eba8 0800 	sub.w	r8, r8, r0
 800099c:	e7e9      	b.n	8000972 <__sflush_r+0xda>
 800099e:	bf00      	nop
 80009a0:	20400001 	.word	0x20400001

080009a4 <_fflush_r>:
 80009a4:	b538      	push	{r3, r4, r5, lr}
 80009a6:	690b      	ldr	r3, [r1, #16]
 80009a8:	4605      	mov	r5, r0
 80009aa:	460c      	mov	r4, r1
 80009ac:	b913      	cbnz	r3, 80009b4 <_fflush_r+0x10>
 80009ae:	2500      	movs	r5, #0
 80009b0:	4628      	mov	r0, r5
 80009b2:	bd38      	pop	{r3, r4, r5, pc}
 80009b4:	b118      	cbz	r0, 80009be <_fflush_r+0x1a>
 80009b6:	6983      	ldr	r3, [r0, #24]
 80009b8:	b90b      	cbnz	r3, 80009be <_fflush_r+0x1a>
 80009ba:	f000 f887 	bl	8000acc <__sinit>
 80009be:	4b14      	ldr	r3, [pc, #80]	; (8000a10 <_fflush_r+0x6c>)
 80009c0:	429c      	cmp	r4, r3
 80009c2:	d11b      	bne.n	80009fc <_fflush_r+0x58>
 80009c4:	686c      	ldr	r4, [r5, #4]
 80009c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009ca:	2b00      	cmp	r3, #0
 80009cc:	d0ef      	beq.n	80009ae <_fflush_r+0xa>
 80009ce:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80009d0:	07d0      	lsls	r0, r2, #31
 80009d2:	d404      	bmi.n	80009de <_fflush_r+0x3a>
 80009d4:	0599      	lsls	r1, r3, #22
 80009d6:	d402      	bmi.n	80009de <_fflush_r+0x3a>
 80009d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009da:	f000 f915 	bl	8000c08 <__retarget_lock_acquire_recursive>
 80009de:	4628      	mov	r0, r5
 80009e0:	4621      	mov	r1, r4
 80009e2:	f7ff ff59 	bl	8000898 <__sflush_r>
 80009e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009e8:	07da      	lsls	r2, r3, #31
 80009ea:	4605      	mov	r5, r0
 80009ec:	d4e0      	bmi.n	80009b0 <_fflush_r+0xc>
 80009ee:	89a3      	ldrh	r3, [r4, #12]
 80009f0:	059b      	lsls	r3, r3, #22
 80009f2:	d4dd      	bmi.n	80009b0 <_fflush_r+0xc>
 80009f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009f6:	f000 f908 	bl	8000c0a <__retarget_lock_release_recursive>
 80009fa:	e7d9      	b.n	80009b0 <_fflush_r+0xc>
 80009fc:	4b05      	ldr	r3, [pc, #20]	; (8000a14 <_fflush_r+0x70>)
 80009fe:	429c      	cmp	r4, r3
 8000a00:	d101      	bne.n	8000a06 <_fflush_r+0x62>
 8000a02:	68ac      	ldr	r4, [r5, #8]
 8000a04:	e7df      	b.n	80009c6 <_fflush_r+0x22>
 8000a06:	4b04      	ldr	r3, [pc, #16]	; (8000a18 <_fflush_r+0x74>)
 8000a08:	429c      	cmp	r4, r3
 8000a0a:	bf08      	it	eq
 8000a0c:	68ec      	ldreq	r4, [r5, #12]
 8000a0e:	e7da      	b.n	80009c6 <_fflush_r+0x22>
 8000a10:	0800168c 	.word	0x0800168c
 8000a14:	080016ac 	.word	0x080016ac
 8000a18:	0800166c 	.word	0x0800166c

08000a1c <std>:
 8000a1c:	2300      	movs	r3, #0
 8000a1e:	b510      	push	{r4, lr}
 8000a20:	4604      	mov	r4, r0
 8000a22:	e9c0 3300 	strd	r3, r3, [r0]
 8000a26:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a2a:	6083      	str	r3, [r0, #8]
 8000a2c:	8181      	strh	r1, [r0, #12]
 8000a2e:	6643      	str	r3, [r0, #100]	; 0x64
 8000a30:	81c2      	strh	r2, [r0, #14]
 8000a32:	6183      	str	r3, [r0, #24]
 8000a34:	4619      	mov	r1, r3
 8000a36:	2208      	movs	r2, #8
 8000a38:	305c      	adds	r0, #92	; 0x5c
 8000a3a:	f7ff fdd7 	bl	80005ec <memset>
 8000a3e:	4b05      	ldr	r3, [pc, #20]	; (8000a54 <std+0x38>)
 8000a40:	6263      	str	r3, [r4, #36]	; 0x24
 8000a42:	4b05      	ldr	r3, [pc, #20]	; (8000a58 <std+0x3c>)
 8000a44:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a46:	4b05      	ldr	r3, [pc, #20]	; (8000a5c <std+0x40>)
 8000a48:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a4a:	4b05      	ldr	r3, [pc, #20]	; (8000a60 <std+0x44>)
 8000a4c:	6224      	str	r4, [r4, #32]
 8000a4e:	6323      	str	r3, [r4, #48]	; 0x30
 8000a50:	bd10      	pop	{r4, pc}
 8000a52:	bf00      	nop
 8000a54:	08001495 	.word	0x08001495
 8000a58:	080014b7 	.word	0x080014b7
 8000a5c:	080014ef 	.word	0x080014ef
 8000a60:	08001513 	.word	0x08001513

08000a64 <_cleanup_r>:
 8000a64:	4901      	ldr	r1, [pc, #4]	; (8000a6c <_cleanup_r+0x8>)
 8000a66:	f000 b8af 	b.w	8000bc8 <_fwalk_reent>
 8000a6a:	bf00      	nop
 8000a6c:	080009a5 	.word	0x080009a5

08000a70 <__sfmoreglue>:
 8000a70:	b570      	push	{r4, r5, r6, lr}
 8000a72:	2268      	movs	r2, #104	; 0x68
 8000a74:	1e4d      	subs	r5, r1, #1
 8000a76:	4355      	muls	r5, r2
 8000a78:	460e      	mov	r6, r1
 8000a7a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a7e:	f000 f997 	bl	8000db0 <_malloc_r>
 8000a82:	4604      	mov	r4, r0
 8000a84:	b140      	cbz	r0, 8000a98 <__sfmoreglue+0x28>
 8000a86:	2100      	movs	r1, #0
 8000a88:	e9c0 1600 	strd	r1, r6, [r0]
 8000a8c:	300c      	adds	r0, #12
 8000a8e:	60a0      	str	r0, [r4, #8]
 8000a90:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a94:	f7ff fdaa 	bl	80005ec <memset>
 8000a98:	4620      	mov	r0, r4
 8000a9a:	bd70      	pop	{r4, r5, r6, pc}

08000a9c <__sfp_lock_acquire>:
 8000a9c:	4801      	ldr	r0, [pc, #4]	; (8000aa4 <__sfp_lock_acquire+0x8>)
 8000a9e:	f000 b8b3 	b.w	8000c08 <__retarget_lock_acquire_recursive>
 8000aa2:	bf00      	nop
 8000aa4:	20000085 	.word	0x20000085

08000aa8 <__sfp_lock_release>:
 8000aa8:	4801      	ldr	r0, [pc, #4]	; (8000ab0 <__sfp_lock_release+0x8>)
 8000aaa:	f000 b8ae 	b.w	8000c0a <__retarget_lock_release_recursive>
 8000aae:	bf00      	nop
 8000ab0:	20000085 	.word	0x20000085

08000ab4 <__sinit_lock_acquire>:
 8000ab4:	4801      	ldr	r0, [pc, #4]	; (8000abc <__sinit_lock_acquire+0x8>)
 8000ab6:	f000 b8a7 	b.w	8000c08 <__retarget_lock_acquire_recursive>
 8000aba:	bf00      	nop
 8000abc:	20000086 	.word	0x20000086

08000ac0 <__sinit_lock_release>:
 8000ac0:	4801      	ldr	r0, [pc, #4]	; (8000ac8 <__sinit_lock_release+0x8>)
 8000ac2:	f000 b8a2 	b.w	8000c0a <__retarget_lock_release_recursive>
 8000ac6:	bf00      	nop
 8000ac8:	20000086 	.word	0x20000086

08000acc <__sinit>:
 8000acc:	b510      	push	{r4, lr}
 8000ace:	4604      	mov	r4, r0
 8000ad0:	f7ff fff0 	bl	8000ab4 <__sinit_lock_acquire>
 8000ad4:	69a3      	ldr	r3, [r4, #24]
 8000ad6:	b11b      	cbz	r3, 8000ae0 <__sinit+0x14>
 8000ad8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000adc:	f7ff bff0 	b.w	8000ac0 <__sinit_lock_release>
 8000ae0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000ae4:	6523      	str	r3, [r4, #80]	; 0x50
 8000ae6:	4b13      	ldr	r3, [pc, #76]	; (8000b34 <__sinit+0x68>)
 8000ae8:	4a13      	ldr	r2, [pc, #76]	; (8000b38 <__sinit+0x6c>)
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	62a2      	str	r2, [r4, #40]	; 0x28
 8000aee:	42a3      	cmp	r3, r4
 8000af0:	bf04      	itt	eq
 8000af2:	2301      	moveq	r3, #1
 8000af4:	61a3      	streq	r3, [r4, #24]
 8000af6:	4620      	mov	r0, r4
 8000af8:	f000 f820 	bl	8000b3c <__sfp>
 8000afc:	6060      	str	r0, [r4, #4]
 8000afe:	4620      	mov	r0, r4
 8000b00:	f000 f81c 	bl	8000b3c <__sfp>
 8000b04:	60a0      	str	r0, [r4, #8]
 8000b06:	4620      	mov	r0, r4
 8000b08:	f000 f818 	bl	8000b3c <__sfp>
 8000b0c:	2200      	movs	r2, #0
 8000b0e:	60e0      	str	r0, [r4, #12]
 8000b10:	2104      	movs	r1, #4
 8000b12:	6860      	ldr	r0, [r4, #4]
 8000b14:	f7ff ff82 	bl	8000a1c <std>
 8000b18:	68a0      	ldr	r0, [r4, #8]
 8000b1a:	2201      	movs	r2, #1
 8000b1c:	2109      	movs	r1, #9
 8000b1e:	f7ff ff7d 	bl	8000a1c <std>
 8000b22:	68e0      	ldr	r0, [r4, #12]
 8000b24:	2202      	movs	r2, #2
 8000b26:	2112      	movs	r1, #18
 8000b28:	f7ff ff78 	bl	8000a1c <std>
 8000b2c:	2301      	movs	r3, #1
 8000b2e:	61a3      	str	r3, [r4, #24]
 8000b30:	e7d2      	b.n	8000ad8 <__sinit+0xc>
 8000b32:	bf00      	nop
 8000b34:	08001668 	.word	0x08001668
 8000b38:	08000a65 	.word	0x08000a65

08000b3c <__sfp>:
 8000b3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b3e:	4607      	mov	r7, r0
 8000b40:	f7ff ffac 	bl	8000a9c <__sfp_lock_acquire>
 8000b44:	4b1e      	ldr	r3, [pc, #120]	; (8000bc0 <__sfp+0x84>)
 8000b46:	681e      	ldr	r6, [r3, #0]
 8000b48:	69b3      	ldr	r3, [r6, #24]
 8000b4a:	b913      	cbnz	r3, 8000b52 <__sfp+0x16>
 8000b4c:	4630      	mov	r0, r6
 8000b4e:	f7ff ffbd 	bl	8000acc <__sinit>
 8000b52:	3648      	adds	r6, #72	; 0x48
 8000b54:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b58:	3b01      	subs	r3, #1
 8000b5a:	d503      	bpl.n	8000b64 <__sfp+0x28>
 8000b5c:	6833      	ldr	r3, [r6, #0]
 8000b5e:	b30b      	cbz	r3, 8000ba4 <__sfp+0x68>
 8000b60:	6836      	ldr	r6, [r6, #0]
 8000b62:	e7f7      	b.n	8000b54 <__sfp+0x18>
 8000b64:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b68:	b9d5      	cbnz	r5, 8000ba0 <__sfp+0x64>
 8000b6a:	4b16      	ldr	r3, [pc, #88]	; (8000bc4 <__sfp+0x88>)
 8000b6c:	60e3      	str	r3, [r4, #12]
 8000b6e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b72:	6665      	str	r5, [r4, #100]	; 0x64
 8000b74:	f000 f847 	bl	8000c06 <__retarget_lock_init_recursive>
 8000b78:	f7ff ff96 	bl	8000aa8 <__sfp_lock_release>
 8000b7c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b80:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b84:	6025      	str	r5, [r4, #0]
 8000b86:	61a5      	str	r5, [r4, #24]
 8000b88:	2208      	movs	r2, #8
 8000b8a:	4629      	mov	r1, r5
 8000b8c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b90:	f7ff fd2c 	bl	80005ec <memset>
 8000b94:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b98:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b9c:	4620      	mov	r0, r4
 8000b9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ba0:	3468      	adds	r4, #104	; 0x68
 8000ba2:	e7d9      	b.n	8000b58 <__sfp+0x1c>
 8000ba4:	2104      	movs	r1, #4
 8000ba6:	4638      	mov	r0, r7
 8000ba8:	f7ff ff62 	bl	8000a70 <__sfmoreglue>
 8000bac:	4604      	mov	r4, r0
 8000bae:	6030      	str	r0, [r6, #0]
 8000bb0:	2800      	cmp	r0, #0
 8000bb2:	d1d5      	bne.n	8000b60 <__sfp+0x24>
 8000bb4:	f7ff ff78 	bl	8000aa8 <__sfp_lock_release>
 8000bb8:	230c      	movs	r3, #12
 8000bba:	603b      	str	r3, [r7, #0]
 8000bbc:	e7ee      	b.n	8000b9c <__sfp+0x60>
 8000bbe:	bf00      	nop
 8000bc0:	08001668 	.word	0x08001668
 8000bc4:	ffff0001 	.word	0xffff0001

08000bc8 <_fwalk_reent>:
 8000bc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bcc:	4606      	mov	r6, r0
 8000bce:	4688      	mov	r8, r1
 8000bd0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000bd4:	2700      	movs	r7, #0
 8000bd6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000bda:	f1b9 0901 	subs.w	r9, r9, #1
 8000bde:	d505      	bpl.n	8000bec <_fwalk_reent+0x24>
 8000be0:	6824      	ldr	r4, [r4, #0]
 8000be2:	2c00      	cmp	r4, #0
 8000be4:	d1f7      	bne.n	8000bd6 <_fwalk_reent+0xe>
 8000be6:	4638      	mov	r0, r7
 8000be8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bec:	89ab      	ldrh	r3, [r5, #12]
 8000bee:	2b01      	cmp	r3, #1
 8000bf0:	d907      	bls.n	8000c02 <_fwalk_reent+0x3a>
 8000bf2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000bf6:	3301      	adds	r3, #1
 8000bf8:	d003      	beq.n	8000c02 <_fwalk_reent+0x3a>
 8000bfa:	4629      	mov	r1, r5
 8000bfc:	4630      	mov	r0, r6
 8000bfe:	47c0      	blx	r8
 8000c00:	4307      	orrs	r7, r0
 8000c02:	3568      	adds	r5, #104	; 0x68
 8000c04:	e7e9      	b.n	8000bda <_fwalk_reent+0x12>

08000c06 <__retarget_lock_init_recursive>:
 8000c06:	4770      	bx	lr

08000c08 <__retarget_lock_acquire_recursive>:
 8000c08:	4770      	bx	lr

08000c0a <__retarget_lock_release_recursive>:
 8000c0a:	4770      	bx	lr

08000c0c <__swhatbuf_r>:
 8000c0c:	b570      	push	{r4, r5, r6, lr}
 8000c0e:	460e      	mov	r6, r1
 8000c10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c14:	2900      	cmp	r1, #0
 8000c16:	b096      	sub	sp, #88	; 0x58
 8000c18:	4614      	mov	r4, r2
 8000c1a:	461d      	mov	r5, r3
 8000c1c:	da08      	bge.n	8000c30 <__swhatbuf_r+0x24>
 8000c1e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000c22:	2200      	movs	r2, #0
 8000c24:	602a      	str	r2, [r5, #0]
 8000c26:	061a      	lsls	r2, r3, #24
 8000c28:	d410      	bmi.n	8000c4c <__swhatbuf_r+0x40>
 8000c2a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c2e:	e00e      	b.n	8000c4e <__swhatbuf_r+0x42>
 8000c30:	466a      	mov	r2, sp
 8000c32:	f000 fc95 	bl	8001560 <_fstat_r>
 8000c36:	2800      	cmp	r0, #0
 8000c38:	dbf1      	blt.n	8000c1e <__swhatbuf_r+0x12>
 8000c3a:	9a01      	ldr	r2, [sp, #4]
 8000c3c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c40:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c44:	425a      	negs	r2, r3
 8000c46:	415a      	adcs	r2, r3
 8000c48:	602a      	str	r2, [r5, #0]
 8000c4a:	e7ee      	b.n	8000c2a <__swhatbuf_r+0x1e>
 8000c4c:	2340      	movs	r3, #64	; 0x40
 8000c4e:	2000      	movs	r0, #0
 8000c50:	6023      	str	r3, [r4, #0]
 8000c52:	b016      	add	sp, #88	; 0x58
 8000c54:	bd70      	pop	{r4, r5, r6, pc}
	...

08000c58 <__smakebuf_r>:
 8000c58:	898b      	ldrh	r3, [r1, #12]
 8000c5a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c5c:	079d      	lsls	r5, r3, #30
 8000c5e:	4606      	mov	r6, r0
 8000c60:	460c      	mov	r4, r1
 8000c62:	d507      	bpl.n	8000c74 <__smakebuf_r+0x1c>
 8000c64:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c68:	6023      	str	r3, [r4, #0]
 8000c6a:	6123      	str	r3, [r4, #16]
 8000c6c:	2301      	movs	r3, #1
 8000c6e:	6163      	str	r3, [r4, #20]
 8000c70:	b002      	add	sp, #8
 8000c72:	bd70      	pop	{r4, r5, r6, pc}
 8000c74:	ab01      	add	r3, sp, #4
 8000c76:	466a      	mov	r2, sp
 8000c78:	f7ff ffc8 	bl	8000c0c <__swhatbuf_r>
 8000c7c:	9900      	ldr	r1, [sp, #0]
 8000c7e:	4605      	mov	r5, r0
 8000c80:	4630      	mov	r0, r6
 8000c82:	f000 f895 	bl	8000db0 <_malloc_r>
 8000c86:	b948      	cbnz	r0, 8000c9c <__smakebuf_r+0x44>
 8000c88:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c8c:	059a      	lsls	r2, r3, #22
 8000c8e:	d4ef      	bmi.n	8000c70 <__smakebuf_r+0x18>
 8000c90:	f023 0303 	bic.w	r3, r3, #3
 8000c94:	f043 0302 	orr.w	r3, r3, #2
 8000c98:	81a3      	strh	r3, [r4, #12]
 8000c9a:	e7e3      	b.n	8000c64 <__smakebuf_r+0xc>
 8000c9c:	4b0d      	ldr	r3, [pc, #52]	; (8000cd4 <__smakebuf_r+0x7c>)
 8000c9e:	62b3      	str	r3, [r6, #40]	; 0x28
 8000ca0:	89a3      	ldrh	r3, [r4, #12]
 8000ca2:	6020      	str	r0, [r4, #0]
 8000ca4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ca8:	81a3      	strh	r3, [r4, #12]
 8000caa:	9b00      	ldr	r3, [sp, #0]
 8000cac:	6163      	str	r3, [r4, #20]
 8000cae:	9b01      	ldr	r3, [sp, #4]
 8000cb0:	6120      	str	r0, [r4, #16]
 8000cb2:	b15b      	cbz	r3, 8000ccc <__smakebuf_r+0x74>
 8000cb4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cb8:	4630      	mov	r0, r6
 8000cba:	f000 fc63 	bl	8001584 <_isatty_r>
 8000cbe:	b128      	cbz	r0, 8000ccc <__smakebuf_r+0x74>
 8000cc0:	89a3      	ldrh	r3, [r4, #12]
 8000cc2:	f023 0303 	bic.w	r3, r3, #3
 8000cc6:	f043 0301 	orr.w	r3, r3, #1
 8000cca:	81a3      	strh	r3, [r4, #12]
 8000ccc:	89a0      	ldrh	r0, [r4, #12]
 8000cce:	4305      	orrs	r5, r0
 8000cd0:	81a5      	strh	r5, [r4, #12]
 8000cd2:	e7cd      	b.n	8000c70 <__smakebuf_r+0x18>
 8000cd4:	08000a65 	.word	0x08000a65

08000cd8 <_free_r>:
 8000cd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000cda:	2900      	cmp	r1, #0
 8000cdc:	d044      	beq.n	8000d68 <_free_r+0x90>
 8000cde:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ce2:	9001      	str	r0, [sp, #4]
 8000ce4:	2b00      	cmp	r3, #0
 8000ce6:	f1a1 0404 	sub.w	r4, r1, #4
 8000cea:	bfb8      	it	lt
 8000cec:	18e4      	addlt	r4, r4, r3
 8000cee:	f000 fc6b 	bl	80015c8 <__malloc_lock>
 8000cf2:	4a1e      	ldr	r2, [pc, #120]	; (8000d6c <_free_r+0x94>)
 8000cf4:	9801      	ldr	r0, [sp, #4]
 8000cf6:	6813      	ldr	r3, [r2, #0]
 8000cf8:	b933      	cbnz	r3, 8000d08 <_free_r+0x30>
 8000cfa:	6063      	str	r3, [r4, #4]
 8000cfc:	6014      	str	r4, [r2, #0]
 8000cfe:	b003      	add	sp, #12
 8000d00:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000d04:	f000 bc66 	b.w	80015d4 <__malloc_unlock>
 8000d08:	42a3      	cmp	r3, r4
 8000d0a:	d908      	bls.n	8000d1e <_free_r+0x46>
 8000d0c:	6825      	ldr	r5, [r4, #0]
 8000d0e:	1961      	adds	r1, r4, r5
 8000d10:	428b      	cmp	r3, r1
 8000d12:	bf01      	itttt	eq
 8000d14:	6819      	ldreq	r1, [r3, #0]
 8000d16:	685b      	ldreq	r3, [r3, #4]
 8000d18:	1949      	addeq	r1, r1, r5
 8000d1a:	6021      	streq	r1, [r4, #0]
 8000d1c:	e7ed      	b.n	8000cfa <_free_r+0x22>
 8000d1e:	461a      	mov	r2, r3
 8000d20:	685b      	ldr	r3, [r3, #4]
 8000d22:	b10b      	cbz	r3, 8000d28 <_free_r+0x50>
 8000d24:	42a3      	cmp	r3, r4
 8000d26:	d9fa      	bls.n	8000d1e <_free_r+0x46>
 8000d28:	6811      	ldr	r1, [r2, #0]
 8000d2a:	1855      	adds	r5, r2, r1
 8000d2c:	42a5      	cmp	r5, r4
 8000d2e:	d10b      	bne.n	8000d48 <_free_r+0x70>
 8000d30:	6824      	ldr	r4, [r4, #0]
 8000d32:	4421      	add	r1, r4
 8000d34:	1854      	adds	r4, r2, r1
 8000d36:	42a3      	cmp	r3, r4
 8000d38:	6011      	str	r1, [r2, #0]
 8000d3a:	d1e0      	bne.n	8000cfe <_free_r+0x26>
 8000d3c:	681c      	ldr	r4, [r3, #0]
 8000d3e:	685b      	ldr	r3, [r3, #4]
 8000d40:	6053      	str	r3, [r2, #4]
 8000d42:	4421      	add	r1, r4
 8000d44:	6011      	str	r1, [r2, #0]
 8000d46:	e7da      	b.n	8000cfe <_free_r+0x26>
 8000d48:	d902      	bls.n	8000d50 <_free_r+0x78>
 8000d4a:	230c      	movs	r3, #12
 8000d4c:	6003      	str	r3, [r0, #0]
 8000d4e:	e7d6      	b.n	8000cfe <_free_r+0x26>
 8000d50:	6825      	ldr	r5, [r4, #0]
 8000d52:	1961      	adds	r1, r4, r5
 8000d54:	428b      	cmp	r3, r1
 8000d56:	bf04      	itt	eq
 8000d58:	6819      	ldreq	r1, [r3, #0]
 8000d5a:	685b      	ldreq	r3, [r3, #4]
 8000d5c:	6063      	str	r3, [r4, #4]
 8000d5e:	bf04      	itt	eq
 8000d60:	1949      	addeq	r1, r1, r5
 8000d62:	6021      	streq	r1, [r4, #0]
 8000d64:	6054      	str	r4, [r2, #4]
 8000d66:	e7ca      	b.n	8000cfe <_free_r+0x26>
 8000d68:	b003      	add	sp, #12
 8000d6a:	bd30      	pop	{r4, r5, pc}
 8000d6c:	20000088 	.word	0x20000088

08000d70 <sbrk_aligned>:
 8000d70:	b570      	push	{r4, r5, r6, lr}
 8000d72:	4e0e      	ldr	r6, [pc, #56]	; (8000dac <sbrk_aligned+0x3c>)
 8000d74:	460c      	mov	r4, r1
 8000d76:	6831      	ldr	r1, [r6, #0]
 8000d78:	4605      	mov	r5, r0
 8000d7a:	b911      	cbnz	r1, 8000d82 <sbrk_aligned+0x12>
 8000d7c:	f000 fb7a 	bl	8001474 <_sbrk_r>
 8000d80:	6030      	str	r0, [r6, #0]
 8000d82:	4621      	mov	r1, r4
 8000d84:	4628      	mov	r0, r5
 8000d86:	f000 fb75 	bl	8001474 <_sbrk_r>
 8000d8a:	1c43      	adds	r3, r0, #1
 8000d8c:	d00a      	beq.n	8000da4 <sbrk_aligned+0x34>
 8000d8e:	1cc4      	adds	r4, r0, #3
 8000d90:	f024 0403 	bic.w	r4, r4, #3
 8000d94:	42a0      	cmp	r0, r4
 8000d96:	d007      	beq.n	8000da8 <sbrk_aligned+0x38>
 8000d98:	1a21      	subs	r1, r4, r0
 8000d9a:	4628      	mov	r0, r5
 8000d9c:	f000 fb6a 	bl	8001474 <_sbrk_r>
 8000da0:	3001      	adds	r0, #1
 8000da2:	d101      	bne.n	8000da8 <sbrk_aligned+0x38>
 8000da4:	f04f 34ff 	mov.w	r4, #4294967295
 8000da8:	4620      	mov	r0, r4
 8000daa:	bd70      	pop	{r4, r5, r6, pc}
 8000dac:	2000008c 	.word	0x2000008c

08000db0 <_malloc_r>:
 8000db0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000db4:	1ccd      	adds	r5, r1, #3
 8000db6:	f025 0503 	bic.w	r5, r5, #3
 8000dba:	3508      	adds	r5, #8
 8000dbc:	2d0c      	cmp	r5, #12
 8000dbe:	bf38      	it	cc
 8000dc0:	250c      	movcc	r5, #12
 8000dc2:	2d00      	cmp	r5, #0
 8000dc4:	4607      	mov	r7, r0
 8000dc6:	db01      	blt.n	8000dcc <_malloc_r+0x1c>
 8000dc8:	42a9      	cmp	r1, r5
 8000dca:	d905      	bls.n	8000dd8 <_malloc_r+0x28>
 8000dcc:	230c      	movs	r3, #12
 8000dce:	603b      	str	r3, [r7, #0]
 8000dd0:	2600      	movs	r6, #0
 8000dd2:	4630      	mov	r0, r6
 8000dd4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000dd8:	4e2e      	ldr	r6, [pc, #184]	; (8000e94 <_malloc_r+0xe4>)
 8000dda:	f000 fbf5 	bl	80015c8 <__malloc_lock>
 8000dde:	6833      	ldr	r3, [r6, #0]
 8000de0:	461c      	mov	r4, r3
 8000de2:	bb34      	cbnz	r4, 8000e32 <_malloc_r+0x82>
 8000de4:	4629      	mov	r1, r5
 8000de6:	4638      	mov	r0, r7
 8000de8:	f7ff ffc2 	bl	8000d70 <sbrk_aligned>
 8000dec:	1c43      	adds	r3, r0, #1
 8000dee:	4604      	mov	r4, r0
 8000df0:	d14d      	bne.n	8000e8e <_malloc_r+0xde>
 8000df2:	6834      	ldr	r4, [r6, #0]
 8000df4:	4626      	mov	r6, r4
 8000df6:	2e00      	cmp	r6, #0
 8000df8:	d140      	bne.n	8000e7c <_malloc_r+0xcc>
 8000dfa:	6823      	ldr	r3, [r4, #0]
 8000dfc:	4631      	mov	r1, r6
 8000dfe:	4638      	mov	r0, r7
 8000e00:	eb04 0803 	add.w	r8, r4, r3
 8000e04:	f000 fb36 	bl	8001474 <_sbrk_r>
 8000e08:	4580      	cmp	r8, r0
 8000e0a:	d13a      	bne.n	8000e82 <_malloc_r+0xd2>
 8000e0c:	6821      	ldr	r1, [r4, #0]
 8000e0e:	3503      	adds	r5, #3
 8000e10:	1a6d      	subs	r5, r5, r1
 8000e12:	f025 0503 	bic.w	r5, r5, #3
 8000e16:	3508      	adds	r5, #8
 8000e18:	2d0c      	cmp	r5, #12
 8000e1a:	bf38      	it	cc
 8000e1c:	250c      	movcc	r5, #12
 8000e1e:	4629      	mov	r1, r5
 8000e20:	4638      	mov	r0, r7
 8000e22:	f7ff ffa5 	bl	8000d70 <sbrk_aligned>
 8000e26:	3001      	adds	r0, #1
 8000e28:	d02b      	beq.n	8000e82 <_malloc_r+0xd2>
 8000e2a:	6823      	ldr	r3, [r4, #0]
 8000e2c:	442b      	add	r3, r5
 8000e2e:	6023      	str	r3, [r4, #0]
 8000e30:	e00e      	b.n	8000e50 <_malloc_r+0xa0>
 8000e32:	6822      	ldr	r2, [r4, #0]
 8000e34:	1b52      	subs	r2, r2, r5
 8000e36:	d41e      	bmi.n	8000e76 <_malloc_r+0xc6>
 8000e38:	2a0b      	cmp	r2, #11
 8000e3a:	d916      	bls.n	8000e6a <_malloc_r+0xba>
 8000e3c:	1961      	adds	r1, r4, r5
 8000e3e:	42a3      	cmp	r3, r4
 8000e40:	6025      	str	r5, [r4, #0]
 8000e42:	bf18      	it	ne
 8000e44:	6059      	strne	r1, [r3, #4]
 8000e46:	6863      	ldr	r3, [r4, #4]
 8000e48:	bf08      	it	eq
 8000e4a:	6031      	streq	r1, [r6, #0]
 8000e4c:	5162      	str	r2, [r4, r5]
 8000e4e:	604b      	str	r3, [r1, #4]
 8000e50:	4638      	mov	r0, r7
 8000e52:	f104 060b 	add.w	r6, r4, #11
 8000e56:	f000 fbbd 	bl	80015d4 <__malloc_unlock>
 8000e5a:	f026 0607 	bic.w	r6, r6, #7
 8000e5e:	1d23      	adds	r3, r4, #4
 8000e60:	1af2      	subs	r2, r6, r3
 8000e62:	d0b6      	beq.n	8000dd2 <_malloc_r+0x22>
 8000e64:	1b9b      	subs	r3, r3, r6
 8000e66:	50a3      	str	r3, [r4, r2]
 8000e68:	e7b3      	b.n	8000dd2 <_malloc_r+0x22>
 8000e6a:	6862      	ldr	r2, [r4, #4]
 8000e6c:	42a3      	cmp	r3, r4
 8000e6e:	bf0c      	ite	eq
 8000e70:	6032      	streq	r2, [r6, #0]
 8000e72:	605a      	strne	r2, [r3, #4]
 8000e74:	e7ec      	b.n	8000e50 <_malloc_r+0xa0>
 8000e76:	4623      	mov	r3, r4
 8000e78:	6864      	ldr	r4, [r4, #4]
 8000e7a:	e7b2      	b.n	8000de2 <_malloc_r+0x32>
 8000e7c:	4634      	mov	r4, r6
 8000e7e:	6876      	ldr	r6, [r6, #4]
 8000e80:	e7b9      	b.n	8000df6 <_malloc_r+0x46>
 8000e82:	230c      	movs	r3, #12
 8000e84:	603b      	str	r3, [r7, #0]
 8000e86:	4638      	mov	r0, r7
 8000e88:	f000 fba4 	bl	80015d4 <__malloc_unlock>
 8000e8c:	e7a1      	b.n	8000dd2 <_malloc_r+0x22>
 8000e8e:	6025      	str	r5, [r4, #0]
 8000e90:	e7de      	b.n	8000e50 <_malloc_r+0xa0>
 8000e92:	bf00      	nop
 8000e94:	20000088 	.word	0x20000088

08000e98 <__sfputc_r>:
 8000e98:	6893      	ldr	r3, [r2, #8]
 8000e9a:	3b01      	subs	r3, #1
 8000e9c:	2b00      	cmp	r3, #0
 8000e9e:	b410      	push	{r4}
 8000ea0:	6093      	str	r3, [r2, #8]
 8000ea2:	da08      	bge.n	8000eb6 <__sfputc_r+0x1e>
 8000ea4:	6994      	ldr	r4, [r2, #24]
 8000ea6:	42a3      	cmp	r3, r4
 8000ea8:	db01      	blt.n	8000eae <__sfputc_r+0x16>
 8000eaa:	290a      	cmp	r1, #10
 8000eac:	d103      	bne.n	8000eb6 <__sfputc_r+0x1e>
 8000eae:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000eb2:	f7ff bc31 	b.w	8000718 <__swbuf_r>
 8000eb6:	6813      	ldr	r3, [r2, #0]
 8000eb8:	1c58      	adds	r0, r3, #1
 8000eba:	6010      	str	r0, [r2, #0]
 8000ebc:	7019      	strb	r1, [r3, #0]
 8000ebe:	4608      	mov	r0, r1
 8000ec0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000ec4:	4770      	bx	lr

08000ec6 <__sfputs_r>:
 8000ec6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ec8:	4606      	mov	r6, r0
 8000eca:	460f      	mov	r7, r1
 8000ecc:	4614      	mov	r4, r2
 8000ece:	18d5      	adds	r5, r2, r3
 8000ed0:	42ac      	cmp	r4, r5
 8000ed2:	d101      	bne.n	8000ed8 <__sfputs_r+0x12>
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	e007      	b.n	8000ee8 <__sfputs_r+0x22>
 8000ed8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000edc:	463a      	mov	r2, r7
 8000ede:	4630      	mov	r0, r6
 8000ee0:	f7ff ffda 	bl	8000e98 <__sfputc_r>
 8000ee4:	1c43      	adds	r3, r0, #1
 8000ee6:	d1f3      	bne.n	8000ed0 <__sfputs_r+0xa>
 8000ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000eec <_vfiprintf_r>:
 8000eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ef0:	460d      	mov	r5, r1
 8000ef2:	b09d      	sub	sp, #116	; 0x74
 8000ef4:	4614      	mov	r4, r2
 8000ef6:	4698      	mov	r8, r3
 8000ef8:	4606      	mov	r6, r0
 8000efa:	b118      	cbz	r0, 8000f04 <_vfiprintf_r+0x18>
 8000efc:	6983      	ldr	r3, [r0, #24]
 8000efe:	b90b      	cbnz	r3, 8000f04 <_vfiprintf_r+0x18>
 8000f00:	f7ff fde4 	bl	8000acc <__sinit>
 8000f04:	4b89      	ldr	r3, [pc, #548]	; (800112c <_vfiprintf_r+0x240>)
 8000f06:	429d      	cmp	r5, r3
 8000f08:	d11b      	bne.n	8000f42 <_vfiprintf_r+0x56>
 8000f0a:	6875      	ldr	r5, [r6, #4]
 8000f0c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f0e:	07d9      	lsls	r1, r3, #31
 8000f10:	d405      	bmi.n	8000f1e <_vfiprintf_r+0x32>
 8000f12:	89ab      	ldrh	r3, [r5, #12]
 8000f14:	059a      	lsls	r2, r3, #22
 8000f16:	d402      	bmi.n	8000f1e <_vfiprintf_r+0x32>
 8000f18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f1a:	f7ff fe75 	bl	8000c08 <__retarget_lock_acquire_recursive>
 8000f1e:	89ab      	ldrh	r3, [r5, #12]
 8000f20:	071b      	lsls	r3, r3, #28
 8000f22:	d501      	bpl.n	8000f28 <_vfiprintf_r+0x3c>
 8000f24:	692b      	ldr	r3, [r5, #16]
 8000f26:	b9eb      	cbnz	r3, 8000f64 <_vfiprintf_r+0x78>
 8000f28:	4629      	mov	r1, r5
 8000f2a:	4630      	mov	r0, r6
 8000f2c:	f7ff fc46 	bl	80007bc <__swsetup_r>
 8000f30:	b1c0      	cbz	r0, 8000f64 <_vfiprintf_r+0x78>
 8000f32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f34:	07dc      	lsls	r4, r3, #31
 8000f36:	d50e      	bpl.n	8000f56 <_vfiprintf_r+0x6a>
 8000f38:	f04f 30ff 	mov.w	r0, #4294967295
 8000f3c:	b01d      	add	sp, #116	; 0x74
 8000f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f42:	4b7b      	ldr	r3, [pc, #492]	; (8001130 <_vfiprintf_r+0x244>)
 8000f44:	429d      	cmp	r5, r3
 8000f46:	d101      	bne.n	8000f4c <_vfiprintf_r+0x60>
 8000f48:	68b5      	ldr	r5, [r6, #8]
 8000f4a:	e7df      	b.n	8000f0c <_vfiprintf_r+0x20>
 8000f4c:	4b79      	ldr	r3, [pc, #484]	; (8001134 <_vfiprintf_r+0x248>)
 8000f4e:	429d      	cmp	r5, r3
 8000f50:	bf08      	it	eq
 8000f52:	68f5      	ldreq	r5, [r6, #12]
 8000f54:	e7da      	b.n	8000f0c <_vfiprintf_r+0x20>
 8000f56:	89ab      	ldrh	r3, [r5, #12]
 8000f58:	0598      	lsls	r0, r3, #22
 8000f5a:	d4ed      	bmi.n	8000f38 <_vfiprintf_r+0x4c>
 8000f5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f5e:	f7ff fe54 	bl	8000c0a <__retarget_lock_release_recursive>
 8000f62:	e7e9      	b.n	8000f38 <_vfiprintf_r+0x4c>
 8000f64:	2300      	movs	r3, #0
 8000f66:	9309      	str	r3, [sp, #36]	; 0x24
 8000f68:	2320      	movs	r3, #32
 8000f6a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000f6e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000f72:	2330      	movs	r3, #48	; 0x30
 8000f74:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001138 <_vfiprintf_r+0x24c>
 8000f78:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f7c:	f04f 0901 	mov.w	r9, #1
 8000f80:	4623      	mov	r3, r4
 8000f82:	469a      	mov	sl, r3
 8000f84:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f88:	b10a      	cbz	r2, 8000f8e <_vfiprintf_r+0xa2>
 8000f8a:	2a25      	cmp	r2, #37	; 0x25
 8000f8c:	d1f9      	bne.n	8000f82 <_vfiprintf_r+0x96>
 8000f8e:	ebba 0b04 	subs.w	fp, sl, r4
 8000f92:	d00b      	beq.n	8000fac <_vfiprintf_r+0xc0>
 8000f94:	465b      	mov	r3, fp
 8000f96:	4622      	mov	r2, r4
 8000f98:	4629      	mov	r1, r5
 8000f9a:	4630      	mov	r0, r6
 8000f9c:	f7ff ff93 	bl	8000ec6 <__sfputs_r>
 8000fa0:	3001      	adds	r0, #1
 8000fa2:	f000 80aa 	beq.w	80010fa <_vfiprintf_r+0x20e>
 8000fa6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000fa8:	445a      	add	r2, fp
 8000faa:	9209      	str	r2, [sp, #36]	; 0x24
 8000fac:	f89a 3000 	ldrb.w	r3, [sl]
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	f000 80a2 	beq.w	80010fa <_vfiprintf_r+0x20e>
 8000fb6:	2300      	movs	r3, #0
 8000fb8:	f04f 32ff 	mov.w	r2, #4294967295
 8000fbc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000fc0:	f10a 0a01 	add.w	sl, sl, #1
 8000fc4:	9304      	str	r3, [sp, #16]
 8000fc6:	9307      	str	r3, [sp, #28]
 8000fc8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000fcc:	931a      	str	r3, [sp, #104]	; 0x68
 8000fce:	4654      	mov	r4, sl
 8000fd0:	2205      	movs	r2, #5
 8000fd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000fd6:	4858      	ldr	r0, [pc, #352]	; (8001138 <_vfiprintf_r+0x24c>)
 8000fd8:	f7ff f90a 	bl	80001f0 <memchr>
 8000fdc:	9a04      	ldr	r2, [sp, #16]
 8000fde:	b9d8      	cbnz	r0, 8001018 <_vfiprintf_r+0x12c>
 8000fe0:	06d1      	lsls	r1, r2, #27
 8000fe2:	bf44      	itt	mi
 8000fe4:	2320      	movmi	r3, #32
 8000fe6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fea:	0713      	lsls	r3, r2, #28
 8000fec:	bf44      	itt	mi
 8000fee:	232b      	movmi	r3, #43	; 0x2b
 8000ff0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ff4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ff8:	2b2a      	cmp	r3, #42	; 0x2a
 8000ffa:	d015      	beq.n	8001028 <_vfiprintf_r+0x13c>
 8000ffc:	9a07      	ldr	r2, [sp, #28]
 8000ffe:	4654      	mov	r4, sl
 8001000:	2000      	movs	r0, #0
 8001002:	f04f 0c0a 	mov.w	ip, #10
 8001006:	4621      	mov	r1, r4
 8001008:	f811 3b01 	ldrb.w	r3, [r1], #1
 800100c:	3b30      	subs	r3, #48	; 0x30
 800100e:	2b09      	cmp	r3, #9
 8001010:	d94e      	bls.n	80010b0 <_vfiprintf_r+0x1c4>
 8001012:	b1b0      	cbz	r0, 8001042 <_vfiprintf_r+0x156>
 8001014:	9207      	str	r2, [sp, #28]
 8001016:	e014      	b.n	8001042 <_vfiprintf_r+0x156>
 8001018:	eba0 0308 	sub.w	r3, r0, r8
 800101c:	fa09 f303 	lsl.w	r3, r9, r3
 8001020:	4313      	orrs	r3, r2
 8001022:	9304      	str	r3, [sp, #16]
 8001024:	46a2      	mov	sl, r4
 8001026:	e7d2      	b.n	8000fce <_vfiprintf_r+0xe2>
 8001028:	9b03      	ldr	r3, [sp, #12]
 800102a:	1d19      	adds	r1, r3, #4
 800102c:	681b      	ldr	r3, [r3, #0]
 800102e:	9103      	str	r1, [sp, #12]
 8001030:	2b00      	cmp	r3, #0
 8001032:	bfbb      	ittet	lt
 8001034:	425b      	neglt	r3, r3
 8001036:	f042 0202 	orrlt.w	r2, r2, #2
 800103a:	9307      	strge	r3, [sp, #28]
 800103c:	9307      	strlt	r3, [sp, #28]
 800103e:	bfb8      	it	lt
 8001040:	9204      	strlt	r2, [sp, #16]
 8001042:	7823      	ldrb	r3, [r4, #0]
 8001044:	2b2e      	cmp	r3, #46	; 0x2e
 8001046:	d10c      	bne.n	8001062 <_vfiprintf_r+0x176>
 8001048:	7863      	ldrb	r3, [r4, #1]
 800104a:	2b2a      	cmp	r3, #42	; 0x2a
 800104c:	d135      	bne.n	80010ba <_vfiprintf_r+0x1ce>
 800104e:	9b03      	ldr	r3, [sp, #12]
 8001050:	1d1a      	adds	r2, r3, #4
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	9203      	str	r2, [sp, #12]
 8001056:	2b00      	cmp	r3, #0
 8001058:	bfb8      	it	lt
 800105a:	f04f 33ff 	movlt.w	r3, #4294967295
 800105e:	3402      	adds	r4, #2
 8001060:	9305      	str	r3, [sp, #20]
 8001062:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001148 <_vfiprintf_r+0x25c>
 8001066:	7821      	ldrb	r1, [r4, #0]
 8001068:	2203      	movs	r2, #3
 800106a:	4650      	mov	r0, sl
 800106c:	f7ff f8c0 	bl	80001f0 <memchr>
 8001070:	b140      	cbz	r0, 8001084 <_vfiprintf_r+0x198>
 8001072:	2340      	movs	r3, #64	; 0x40
 8001074:	eba0 000a 	sub.w	r0, r0, sl
 8001078:	fa03 f000 	lsl.w	r0, r3, r0
 800107c:	9b04      	ldr	r3, [sp, #16]
 800107e:	4303      	orrs	r3, r0
 8001080:	3401      	adds	r4, #1
 8001082:	9304      	str	r3, [sp, #16]
 8001084:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001088:	482c      	ldr	r0, [pc, #176]	; (800113c <_vfiprintf_r+0x250>)
 800108a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800108e:	2206      	movs	r2, #6
 8001090:	f7ff f8ae 	bl	80001f0 <memchr>
 8001094:	2800      	cmp	r0, #0
 8001096:	d03f      	beq.n	8001118 <_vfiprintf_r+0x22c>
 8001098:	4b29      	ldr	r3, [pc, #164]	; (8001140 <_vfiprintf_r+0x254>)
 800109a:	bb1b      	cbnz	r3, 80010e4 <_vfiprintf_r+0x1f8>
 800109c:	9b03      	ldr	r3, [sp, #12]
 800109e:	3307      	adds	r3, #7
 80010a0:	f023 0307 	bic.w	r3, r3, #7
 80010a4:	3308      	adds	r3, #8
 80010a6:	9303      	str	r3, [sp, #12]
 80010a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80010aa:	443b      	add	r3, r7
 80010ac:	9309      	str	r3, [sp, #36]	; 0x24
 80010ae:	e767      	b.n	8000f80 <_vfiprintf_r+0x94>
 80010b0:	fb0c 3202 	mla	r2, ip, r2, r3
 80010b4:	460c      	mov	r4, r1
 80010b6:	2001      	movs	r0, #1
 80010b8:	e7a5      	b.n	8001006 <_vfiprintf_r+0x11a>
 80010ba:	2300      	movs	r3, #0
 80010bc:	3401      	adds	r4, #1
 80010be:	9305      	str	r3, [sp, #20]
 80010c0:	4619      	mov	r1, r3
 80010c2:	f04f 0c0a 	mov.w	ip, #10
 80010c6:	4620      	mov	r0, r4
 80010c8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80010cc:	3a30      	subs	r2, #48	; 0x30
 80010ce:	2a09      	cmp	r2, #9
 80010d0:	d903      	bls.n	80010da <_vfiprintf_r+0x1ee>
 80010d2:	2b00      	cmp	r3, #0
 80010d4:	d0c5      	beq.n	8001062 <_vfiprintf_r+0x176>
 80010d6:	9105      	str	r1, [sp, #20]
 80010d8:	e7c3      	b.n	8001062 <_vfiprintf_r+0x176>
 80010da:	fb0c 2101 	mla	r1, ip, r1, r2
 80010de:	4604      	mov	r4, r0
 80010e0:	2301      	movs	r3, #1
 80010e2:	e7f0      	b.n	80010c6 <_vfiprintf_r+0x1da>
 80010e4:	ab03      	add	r3, sp, #12
 80010e6:	9300      	str	r3, [sp, #0]
 80010e8:	462a      	mov	r2, r5
 80010ea:	4b16      	ldr	r3, [pc, #88]	; (8001144 <_vfiprintf_r+0x258>)
 80010ec:	a904      	add	r1, sp, #16
 80010ee:	4630      	mov	r0, r6
 80010f0:	f3af 8000 	nop.w
 80010f4:	4607      	mov	r7, r0
 80010f6:	1c78      	adds	r0, r7, #1
 80010f8:	d1d6      	bne.n	80010a8 <_vfiprintf_r+0x1bc>
 80010fa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80010fc:	07d9      	lsls	r1, r3, #31
 80010fe:	d405      	bmi.n	800110c <_vfiprintf_r+0x220>
 8001100:	89ab      	ldrh	r3, [r5, #12]
 8001102:	059a      	lsls	r2, r3, #22
 8001104:	d402      	bmi.n	800110c <_vfiprintf_r+0x220>
 8001106:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001108:	f7ff fd7f 	bl	8000c0a <__retarget_lock_release_recursive>
 800110c:	89ab      	ldrh	r3, [r5, #12]
 800110e:	065b      	lsls	r3, r3, #25
 8001110:	f53f af12 	bmi.w	8000f38 <_vfiprintf_r+0x4c>
 8001114:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001116:	e711      	b.n	8000f3c <_vfiprintf_r+0x50>
 8001118:	ab03      	add	r3, sp, #12
 800111a:	9300      	str	r3, [sp, #0]
 800111c:	462a      	mov	r2, r5
 800111e:	4b09      	ldr	r3, [pc, #36]	; (8001144 <_vfiprintf_r+0x258>)
 8001120:	a904      	add	r1, sp, #16
 8001122:	4630      	mov	r0, r6
 8001124:	f000 f880 	bl	8001228 <_printf_i>
 8001128:	e7e4      	b.n	80010f4 <_vfiprintf_r+0x208>
 800112a:	bf00      	nop
 800112c:	0800168c 	.word	0x0800168c
 8001130:	080016ac 	.word	0x080016ac
 8001134:	0800166c 	.word	0x0800166c
 8001138:	080016cc 	.word	0x080016cc
 800113c:	080016d6 	.word	0x080016d6
 8001140:	00000000 	.word	0x00000000
 8001144:	08000ec7 	.word	0x08000ec7
 8001148:	080016d2 	.word	0x080016d2

0800114c <_printf_common>:
 800114c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001150:	4616      	mov	r6, r2
 8001152:	4699      	mov	r9, r3
 8001154:	688a      	ldr	r2, [r1, #8]
 8001156:	690b      	ldr	r3, [r1, #16]
 8001158:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800115c:	4293      	cmp	r3, r2
 800115e:	bfb8      	it	lt
 8001160:	4613      	movlt	r3, r2
 8001162:	6033      	str	r3, [r6, #0]
 8001164:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001168:	4607      	mov	r7, r0
 800116a:	460c      	mov	r4, r1
 800116c:	b10a      	cbz	r2, 8001172 <_printf_common+0x26>
 800116e:	3301      	adds	r3, #1
 8001170:	6033      	str	r3, [r6, #0]
 8001172:	6823      	ldr	r3, [r4, #0]
 8001174:	0699      	lsls	r1, r3, #26
 8001176:	bf42      	ittt	mi
 8001178:	6833      	ldrmi	r3, [r6, #0]
 800117a:	3302      	addmi	r3, #2
 800117c:	6033      	strmi	r3, [r6, #0]
 800117e:	6825      	ldr	r5, [r4, #0]
 8001180:	f015 0506 	ands.w	r5, r5, #6
 8001184:	d106      	bne.n	8001194 <_printf_common+0x48>
 8001186:	f104 0a19 	add.w	sl, r4, #25
 800118a:	68e3      	ldr	r3, [r4, #12]
 800118c:	6832      	ldr	r2, [r6, #0]
 800118e:	1a9b      	subs	r3, r3, r2
 8001190:	42ab      	cmp	r3, r5
 8001192:	dc26      	bgt.n	80011e2 <_printf_common+0x96>
 8001194:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001198:	1e13      	subs	r3, r2, #0
 800119a:	6822      	ldr	r2, [r4, #0]
 800119c:	bf18      	it	ne
 800119e:	2301      	movne	r3, #1
 80011a0:	0692      	lsls	r2, r2, #26
 80011a2:	d42b      	bmi.n	80011fc <_printf_common+0xb0>
 80011a4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80011a8:	4649      	mov	r1, r9
 80011aa:	4638      	mov	r0, r7
 80011ac:	47c0      	blx	r8
 80011ae:	3001      	adds	r0, #1
 80011b0:	d01e      	beq.n	80011f0 <_printf_common+0xa4>
 80011b2:	6823      	ldr	r3, [r4, #0]
 80011b4:	68e5      	ldr	r5, [r4, #12]
 80011b6:	6832      	ldr	r2, [r6, #0]
 80011b8:	f003 0306 	and.w	r3, r3, #6
 80011bc:	2b04      	cmp	r3, #4
 80011be:	bf08      	it	eq
 80011c0:	1aad      	subeq	r5, r5, r2
 80011c2:	68a3      	ldr	r3, [r4, #8]
 80011c4:	6922      	ldr	r2, [r4, #16]
 80011c6:	bf0c      	ite	eq
 80011c8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80011cc:	2500      	movne	r5, #0
 80011ce:	4293      	cmp	r3, r2
 80011d0:	bfc4      	itt	gt
 80011d2:	1a9b      	subgt	r3, r3, r2
 80011d4:	18ed      	addgt	r5, r5, r3
 80011d6:	2600      	movs	r6, #0
 80011d8:	341a      	adds	r4, #26
 80011da:	42b5      	cmp	r5, r6
 80011dc:	d11a      	bne.n	8001214 <_printf_common+0xc8>
 80011de:	2000      	movs	r0, #0
 80011e0:	e008      	b.n	80011f4 <_printf_common+0xa8>
 80011e2:	2301      	movs	r3, #1
 80011e4:	4652      	mov	r2, sl
 80011e6:	4649      	mov	r1, r9
 80011e8:	4638      	mov	r0, r7
 80011ea:	47c0      	blx	r8
 80011ec:	3001      	adds	r0, #1
 80011ee:	d103      	bne.n	80011f8 <_printf_common+0xac>
 80011f0:	f04f 30ff 	mov.w	r0, #4294967295
 80011f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011f8:	3501      	adds	r5, #1
 80011fa:	e7c6      	b.n	800118a <_printf_common+0x3e>
 80011fc:	18e1      	adds	r1, r4, r3
 80011fe:	1c5a      	adds	r2, r3, #1
 8001200:	2030      	movs	r0, #48	; 0x30
 8001202:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001206:	4422      	add	r2, r4
 8001208:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800120c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001210:	3302      	adds	r3, #2
 8001212:	e7c7      	b.n	80011a4 <_printf_common+0x58>
 8001214:	2301      	movs	r3, #1
 8001216:	4622      	mov	r2, r4
 8001218:	4649      	mov	r1, r9
 800121a:	4638      	mov	r0, r7
 800121c:	47c0      	blx	r8
 800121e:	3001      	adds	r0, #1
 8001220:	d0e6      	beq.n	80011f0 <_printf_common+0xa4>
 8001222:	3601      	adds	r6, #1
 8001224:	e7d9      	b.n	80011da <_printf_common+0x8e>
	...

08001228 <_printf_i>:
 8001228:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800122c:	7e0f      	ldrb	r7, [r1, #24]
 800122e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001230:	2f78      	cmp	r7, #120	; 0x78
 8001232:	4691      	mov	r9, r2
 8001234:	4680      	mov	r8, r0
 8001236:	460c      	mov	r4, r1
 8001238:	469a      	mov	sl, r3
 800123a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800123e:	d807      	bhi.n	8001250 <_printf_i+0x28>
 8001240:	2f62      	cmp	r7, #98	; 0x62
 8001242:	d80a      	bhi.n	800125a <_printf_i+0x32>
 8001244:	2f00      	cmp	r7, #0
 8001246:	f000 80d8 	beq.w	80013fa <_printf_i+0x1d2>
 800124a:	2f58      	cmp	r7, #88	; 0x58
 800124c:	f000 80a3 	beq.w	8001396 <_printf_i+0x16e>
 8001250:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001254:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001258:	e03a      	b.n	80012d0 <_printf_i+0xa8>
 800125a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800125e:	2b15      	cmp	r3, #21
 8001260:	d8f6      	bhi.n	8001250 <_printf_i+0x28>
 8001262:	a101      	add	r1, pc, #4	; (adr r1, 8001268 <_printf_i+0x40>)
 8001264:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001268:	080012c1 	.word	0x080012c1
 800126c:	080012d5 	.word	0x080012d5
 8001270:	08001251 	.word	0x08001251
 8001274:	08001251 	.word	0x08001251
 8001278:	08001251 	.word	0x08001251
 800127c:	08001251 	.word	0x08001251
 8001280:	080012d5 	.word	0x080012d5
 8001284:	08001251 	.word	0x08001251
 8001288:	08001251 	.word	0x08001251
 800128c:	08001251 	.word	0x08001251
 8001290:	08001251 	.word	0x08001251
 8001294:	080013e1 	.word	0x080013e1
 8001298:	08001305 	.word	0x08001305
 800129c:	080013c3 	.word	0x080013c3
 80012a0:	08001251 	.word	0x08001251
 80012a4:	08001251 	.word	0x08001251
 80012a8:	08001403 	.word	0x08001403
 80012ac:	08001251 	.word	0x08001251
 80012b0:	08001305 	.word	0x08001305
 80012b4:	08001251 	.word	0x08001251
 80012b8:	08001251 	.word	0x08001251
 80012bc:	080013cb 	.word	0x080013cb
 80012c0:	682b      	ldr	r3, [r5, #0]
 80012c2:	1d1a      	adds	r2, r3, #4
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	602a      	str	r2, [r5, #0]
 80012c8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80012cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80012d0:	2301      	movs	r3, #1
 80012d2:	e0a3      	b.n	800141c <_printf_i+0x1f4>
 80012d4:	6820      	ldr	r0, [r4, #0]
 80012d6:	6829      	ldr	r1, [r5, #0]
 80012d8:	0606      	lsls	r6, r0, #24
 80012da:	f101 0304 	add.w	r3, r1, #4
 80012de:	d50a      	bpl.n	80012f6 <_printf_i+0xce>
 80012e0:	680e      	ldr	r6, [r1, #0]
 80012e2:	602b      	str	r3, [r5, #0]
 80012e4:	2e00      	cmp	r6, #0
 80012e6:	da03      	bge.n	80012f0 <_printf_i+0xc8>
 80012e8:	232d      	movs	r3, #45	; 0x2d
 80012ea:	4276      	negs	r6, r6
 80012ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012f0:	485e      	ldr	r0, [pc, #376]	; (800146c <_printf_i+0x244>)
 80012f2:	230a      	movs	r3, #10
 80012f4:	e019      	b.n	800132a <_printf_i+0x102>
 80012f6:	680e      	ldr	r6, [r1, #0]
 80012f8:	602b      	str	r3, [r5, #0]
 80012fa:	f010 0f40 	tst.w	r0, #64	; 0x40
 80012fe:	bf18      	it	ne
 8001300:	b236      	sxthne	r6, r6
 8001302:	e7ef      	b.n	80012e4 <_printf_i+0xbc>
 8001304:	682b      	ldr	r3, [r5, #0]
 8001306:	6820      	ldr	r0, [r4, #0]
 8001308:	1d19      	adds	r1, r3, #4
 800130a:	6029      	str	r1, [r5, #0]
 800130c:	0601      	lsls	r1, r0, #24
 800130e:	d501      	bpl.n	8001314 <_printf_i+0xec>
 8001310:	681e      	ldr	r6, [r3, #0]
 8001312:	e002      	b.n	800131a <_printf_i+0xf2>
 8001314:	0646      	lsls	r6, r0, #25
 8001316:	d5fb      	bpl.n	8001310 <_printf_i+0xe8>
 8001318:	881e      	ldrh	r6, [r3, #0]
 800131a:	4854      	ldr	r0, [pc, #336]	; (800146c <_printf_i+0x244>)
 800131c:	2f6f      	cmp	r7, #111	; 0x6f
 800131e:	bf0c      	ite	eq
 8001320:	2308      	moveq	r3, #8
 8001322:	230a      	movne	r3, #10
 8001324:	2100      	movs	r1, #0
 8001326:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800132a:	6865      	ldr	r5, [r4, #4]
 800132c:	60a5      	str	r5, [r4, #8]
 800132e:	2d00      	cmp	r5, #0
 8001330:	bfa2      	ittt	ge
 8001332:	6821      	ldrge	r1, [r4, #0]
 8001334:	f021 0104 	bicge.w	r1, r1, #4
 8001338:	6021      	strge	r1, [r4, #0]
 800133a:	b90e      	cbnz	r6, 8001340 <_printf_i+0x118>
 800133c:	2d00      	cmp	r5, #0
 800133e:	d04d      	beq.n	80013dc <_printf_i+0x1b4>
 8001340:	4615      	mov	r5, r2
 8001342:	fbb6 f1f3 	udiv	r1, r6, r3
 8001346:	fb03 6711 	mls	r7, r3, r1, r6
 800134a:	5dc7      	ldrb	r7, [r0, r7]
 800134c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001350:	4637      	mov	r7, r6
 8001352:	42bb      	cmp	r3, r7
 8001354:	460e      	mov	r6, r1
 8001356:	d9f4      	bls.n	8001342 <_printf_i+0x11a>
 8001358:	2b08      	cmp	r3, #8
 800135a:	d10b      	bne.n	8001374 <_printf_i+0x14c>
 800135c:	6823      	ldr	r3, [r4, #0]
 800135e:	07de      	lsls	r6, r3, #31
 8001360:	d508      	bpl.n	8001374 <_printf_i+0x14c>
 8001362:	6923      	ldr	r3, [r4, #16]
 8001364:	6861      	ldr	r1, [r4, #4]
 8001366:	4299      	cmp	r1, r3
 8001368:	bfde      	ittt	le
 800136a:	2330      	movle	r3, #48	; 0x30
 800136c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001370:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001374:	1b52      	subs	r2, r2, r5
 8001376:	6122      	str	r2, [r4, #16]
 8001378:	f8cd a000 	str.w	sl, [sp]
 800137c:	464b      	mov	r3, r9
 800137e:	aa03      	add	r2, sp, #12
 8001380:	4621      	mov	r1, r4
 8001382:	4640      	mov	r0, r8
 8001384:	f7ff fee2 	bl	800114c <_printf_common>
 8001388:	3001      	adds	r0, #1
 800138a:	d14c      	bne.n	8001426 <_printf_i+0x1fe>
 800138c:	f04f 30ff 	mov.w	r0, #4294967295
 8001390:	b004      	add	sp, #16
 8001392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001396:	4835      	ldr	r0, [pc, #212]	; (800146c <_printf_i+0x244>)
 8001398:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800139c:	6829      	ldr	r1, [r5, #0]
 800139e:	6823      	ldr	r3, [r4, #0]
 80013a0:	f851 6b04 	ldr.w	r6, [r1], #4
 80013a4:	6029      	str	r1, [r5, #0]
 80013a6:	061d      	lsls	r5, r3, #24
 80013a8:	d514      	bpl.n	80013d4 <_printf_i+0x1ac>
 80013aa:	07df      	lsls	r7, r3, #31
 80013ac:	bf44      	itt	mi
 80013ae:	f043 0320 	orrmi.w	r3, r3, #32
 80013b2:	6023      	strmi	r3, [r4, #0]
 80013b4:	b91e      	cbnz	r6, 80013be <_printf_i+0x196>
 80013b6:	6823      	ldr	r3, [r4, #0]
 80013b8:	f023 0320 	bic.w	r3, r3, #32
 80013bc:	6023      	str	r3, [r4, #0]
 80013be:	2310      	movs	r3, #16
 80013c0:	e7b0      	b.n	8001324 <_printf_i+0xfc>
 80013c2:	6823      	ldr	r3, [r4, #0]
 80013c4:	f043 0320 	orr.w	r3, r3, #32
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	2378      	movs	r3, #120	; 0x78
 80013cc:	4828      	ldr	r0, [pc, #160]	; (8001470 <_printf_i+0x248>)
 80013ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80013d2:	e7e3      	b.n	800139c <_printf_i+0x174>
 80013d4:	0659      	lsls	r1, r3, #25
 80013d6:	bf48      	it	mi
 80013d8:	b2b6      	uxthmi	r6, r6
 80013da:	e7e6      	b.n	80013aa <_printf_i+0x182>
 80013dc:	4615      	mov	r5, r2
 80013de:	e7bb      	b.n	8001358 <_printf_i+0x130>
 80013e0:	682b      	ldr	r3, [r5, #0]
 80013e2:	6826      	ldr	r6, [r4, #0]
 80013e4:	6961      	ldr	r1, [r4, #20]
 80013e6:	1d18      	adds	r0, r3, #4
 80013e8:	6028      	str	r0, [r5, #0]
 80013ea:	0635      	lsls	r5, r6, #24
 80013ec:	681b      	ldr	r3, [r3, #0]
 80013ee:	d501      	bpl.n	80013f4 <_printf_i+0x1cc>
 80013f0:	6019      	str	r1, [r3, #0]
 80013f2:	e002      	b.n	80013fa <_printf_i+0x1d2>
 80013f4:	0670      	lsls	r0, r6, #25
 80013f6:	d5fb      	bpl.n	80013f0 <_printf_i+0x1c8>
 80013f8:	8019      	strh	r1, [r3, #0]
 80013fa:	2300      	movs	r3, #0
 80013fc:	6123      	str	r3, [r4, #16]
 80013fe:	4615      	mov	r5, r2
 8001400:	e7ba      	b.n	8001378 <_printf_i+0x150>
 8001402:	682b      	ldr	r3, [r5, #0]
 8001404:	1d1a      	adds	r2, r3, #4
 8001406:	602a      	str	r2, [r5, #0]
 8001408:	681d      	ldr	r5, [r3, #0]
 800140a:	6862      	ldr	r2, [r4, #4]
 800140c:	2100      	movs	r1, #0
 800140e:	4628      	mov	r0, r5
 8001410:	f7fe feee 	bl	80001f0 <memchr>
 8001414:	b108      	cbz	r0, 800141a <_printf_i+0x1f2>
 8001416:	1b40      	subs	r0, r0, r5
 8001418:	6060      	str	r0, [r4, #4]
 800141a:	6863      	ldr	r3, [r4, #4]
 800141c:	6123      	str	r3, [r4, #16]
 800141e:	2300      	movs	r3, #0
 8001420:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001424:	e7a8      	b.n	8001378 <_printf_i+0x150>
 8001426:	6923      	ldr	r3, [r4, #16]
 8001428:	462a      	mov	r2, r5
 800142a:	4649      	mov	r1, r9
 800142c:	4640      	mov	r0, r8
 800142e:	47d0      	blx	sl
 8001430:	3001      	adds	r0, #1
 8001432:	d0ab      	beq.n	800138c <_printf_i+0x164>
 8001434:	6823      	ldr	r3, [r4, #0]
 8001436:	079b      	lsls	r3, r3, #30
 8001438:	d413      	bmi.n	8001462 <_printf_i+0x23a>
 800143a:	68e0      	ldr	r0, [r4, #12]
 800143c:	9b03      	ldr	r3, [sp, #12]
 800143e:	4298      	cmp	r0, r3
 8001440:	bfb8      	it	lt
 8001442:	4618      	movlt	r0, r3
 8001444:	e7a4      	b.n	8001390 <_printf_i+0x168>
 8001446:	2301      	movs	r3, #1
 8001448:	4632      	mov	r2, r6
 800144a:	4649      	mov	r1, r9
 800144c:	4640      	mov	r0, r8
 800144e:	47d0      	blx	sl
 8001450:	3001      	adds	r0, #1
 8001452:	d09b      	beq.n	800138c <_printf_i+0x164>
 8001454:	3501      	adds	r5, #1
 8001456:	68e3      	ldr	r3, [r4, #12]
 8001458:	9903      	ldr	r1, [sp, #12]
 800145a:	1a5b      	subs	r3, r3, r1
 800145c:	42ab      	cmp	r3, r5
 800145e:	dcf2      	bgt.n	8001446 <_printf_i+0x21e>
 8001460:	e7eb      	b.n	800143a <_printf_i+0x212>
 8001462:	2500      	movs	r5, #0
 8001464:	f104 0619 	add.w	r6, r4, #25
 8001468:	e7f5      	b.n	8001456 <_printf_i+0x22e>
 800146a:	bf00      	nop
 800146c:	080016dd 	.word	0x080016dd
 8001470:	080016ee 	.word	0x080016ee

08001474 <_sbrk_r>:
 8001474:	b538      	push	{r3, r4, r5, lr}
 8001476:	4d06      	ldr	r5, [pc, #24]	; (8001490 <_sbrk_r+0x1c>)
 8001478:	2300      	movs	r3, #0
 800147a:	4604      	mov	r4, r0
 800147c:	4608      	mov	r0, r1
 800147e:	602b      	str	r3, [r5, #0]
 8001480:	f7ff f818 	bl	80004b4 <_sbrk>
 8001484:	1c43      	adds	r3, r0, #1
 8001486:	d102      	bne.n	800148e <_sbrk_r+0x1a>
 8001488:	682b      	ldr	r3, [r5, #0]
 800148a:	b103      	cbz	r3, 800148e <_sbrk_r+0x1a>
 800148c:	6023      	str	r3, [r4, #0]
 800148e:	bd38      	pop	{r3, r4, r5, pc}
 8001490:	20000090 	.word	0x20000090

08001494 <__sread>:
 8001494:	b510      	push	{r4, lr}
 8001496:	460c      	mov	r4, r1
 8001498:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800149c:	f000 f8a0 	bl	80015e0 <_read_r>
 80014a0:	2800      	cmp	r0, #0
 80014a2:	bfab      	itete	ge
 80014a4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80014a6:	89a3      	ldrhlt	r3, [r4, #12]
 80014a8:	181b      	addge	r3, r3, r0
 80014aa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80014ae:	bfac      	ite	ge
 80014b0:	6563      	strge	r3, [r4, #84]	; 0x54
 80014b2:	81a3      	strhlt	r3, [r4, #12]
 80014b4:	bd10      	pop	{r4, pc}

080014b6 <__swrite>:
 80014b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80014ba:	461f      	mov	r7, r3
 80014bc:	898b      	ldrh	r3, [r1, #12]
 80014be:	05db      	lsls	r3, r3, #23
 80014c0:	4605      	mov	r5, r0
 80014c2:	460c      	mov	r4, r1
 80014c4:	4616      	mov	r6, r2
 80014c6:	d505      	bpl.n	80014d4 <__swrite+0x1e>
 80014c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014cc:	2302      	movs	r3, #2
 80014ce:	2200      	movs	r2, #0
 80014d0:	f000 f868 	bl	80015a4 <_lseek_r>
 80014d4:	89a3      	ldrh	r3, [r4, #12]
 80014d6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80014da:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80014de:	81a3      	strh	r3, [r4, #12]
 80014e0:	4632      	mov	r2, r6
 80014e2:	463b      	mov	r3, r7
 80014e4:	4628      	mov	r0, r5
 80014e6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014ea:	f000 b817 	b.w	800151c <_write_r>

080014ee <__sseek>:
 80014ee:	b510      	push	{r4, lr}
 80014f0:	460c      	mov	r4, r1
 80014f2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014f6:	f000 f855 	bl	80015a4 <_lseek_r>
 80014fa:	1c43      	adds	r3, r0, #1
 80014fc:	89a3      	ldrh	r3, [r4, #12]
 80014fe:	bf15      	itete	ne
 8001500:	6560      	strne	r0, [r4, #84]	; 0x54
 8001502:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001506:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800150a:	81a3      	strheq	r3, [r4, #12]
 800150c:	bf18      	it	ne
 800150e:	81a3      	strhne	r3, [r4, #12]
 8001510:	bd10      	pop	{r4, pc}

08001512 <__sclose>:
 8001512:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001516:	f000 b813 	b.w	8001540 <_close_r>
	...

0800151c <_write_r>:
 800151c:	b538      	push	{r3, r4, r5, lr}
 800151e:	4d07      	ldr	r5, [pc, #28]	; (800153c <_write_r+0x20>)
 8001520:	4604      	mov	r4, r0
 8001522:	4608      	mov	r0, r1
 8001524:	4611      	mov	r1, r2
 8001526:	2200      	movs	r2, #0
 8001528:	602a      	str	r2, [r5, #0]
 800152a:	461a      	mov	r2, r3
 800152c:	f7fe ff72 	bl	8000414 <_write>
 8001530:	1c43      	adds	r3, r0, #1
 8001532:	d102      	bne.n	800153a <_write_r+0x1e>
 8001534:	682b      	ldr	r3, [r5, #0]
 8001536:	b103      	cbz	r3, 800153a <_write_r+0x1e>
 8001538:	6023      	str	r3, [r4, #0]
 800153a:	bd38      	pop	{r3, r4, r5, pc}
 800153c:	20000090 	.word	0x20000090

08001540 <_close_r>:
 8001540:	b538      	push	{r3, r4, r5, lr}
 8001542:	4d06      	ldr	r5, [pc, #24]	; (800155c <_close_r+0x1c>)
 8001544:	2300      	movs	r3, #0
 8001546:	4604      	mov	r4, r0
 8001548:	4608      	mov	r0, r1
 800154a:	602b      	str	r3, [r5, #0]
 800154c:	f7fe ff7e 	bl	800044c <_close>
 8001550:	1c43      	adds	r3, r0, #1
 8001552:	d102      	bne.n	800155a <_close_r+0x1a>
 8001554:	682b      	ldr	r3, [r5, #0]
 8001556:	b103      	cbz	r3, 800155a <_close_r+0x1a>
 8001558:	6023      	str	r3, [r4, #0]
 800155a:	bd38      	pop	{r3, r4, r5, pc}
 800155c:	20000090 	.word	0x20000090

08001560 <_fstat_r>:
 8001560:	b538      	push	{r3, r4, r5, lr}
 8001562:	4d07      	ldr	r5, [pc, #28]	; (8001580 <_fstat_r+0x20>)
 8001564:	2300      	movs	r3, #0
 8001566:	4604      	mov	r4, r0
 8001568:	4608      	mov	r0, r1
 800156a:	4611      	mov	r1, r2
 800156c:	602b      	str	r3, [r5, #0]
 800156e:	f7fe ff79 	bl	8000464 <_fstat>
 8001572:	1c43      	adds	r3, r0, #1
 8001574:	d102      	bne.n	800157c <_fstat_r+0x1c>
 8001576:	682b      	ldr	r3, [r5, #0]
 8001578:	b103      	cbz	r3, 800157c <_fstat_r+0x1c>
 800157a:	6023      	str	r3, [r4, #0]
 800157c:	bd38      	pop	{r3, r4, r5, pc}
 800157e:	bf00      	nop
 8001580:	20000090 	.word	0x20000090

08001584 <_isatty_r>:
 8001584:	b538      	push	{r3, r4, r5, lr}
 8001586:	4d06      	ldr	r5, [pc, #24]	; (80015a0 <_isatty_r+0x1c>)
 8001588:	2300      	movs	r3, #0
 800158a:	4604      	mov	r4, r0
 800158c:	4608      	mov	r0, r1
 800158e:	602b      	str	r3, [r5, #0]
 8001590:	f7fe ff78 	bl	8000484 <_isatty>
 8001594:	1c43      	adds	r3, r0, #1
 8001596:	d102      	bne.n	800159e <_isatty_r+0x1a>
 8001598:	682b      	ldr	r3, [r5, #0]
 800159a:	b103      	cbz	r3, 800159e <_isatty_r+0x1a>
 800159c:	6023      	str	r3, [r4, #0]
 800159e:	bd38      	pop	{r3, r4, r5, pc}
 80015a0:	20000090 	.word	0x20000090

080015a4 <_lseek_r>:
 80015a4:	b538      	push	{r3, r4, r5, lr}
 80015a6:	4d07      	ldr	r5, [pc, #28]	; (80015c4 <_lseek_r+0x20>)
 80015a8:	4604      	mov	r4, r0
 80015aa:	4608      	mov	r0, r1
 80015ac:	4611      	mov	r1, r2
 80015ae:	2200      	movs	r2, #0
 80015b0:	602a      	str	r2, [r5, #0]
 80015b2:	461a      	mov	r2, r3
 80015b4:	f7fe ff71 	bl	800049a <_lseek>
 80015b8:	1c43      	adds	r3, r0, #1
 80015ba:	d102      	bne.n	80015c2 <_lseek_r+0x1e>
 80015bc:	682b      	ldr	r3, [r5, #0]
 80015be:	b103      	cbz	r3, 80015c2 <_lseek_r+0x1e>
 80015c0:	6023      	str	r3, [r4, #0]
 80015c2:	bd38      	pop	{r3, r4, r5, pc}
 80015c4:	20000090 	.word	0x20000090

080015c8 <__malloc_lock>:
 80015c8:	4801      	ldr	r0, [pc, #4]	; (80015d0 <__malloc_lock+0x8>)
 80015ca:	f7ff bb1d 	b.w	8000c08 <__retarget_lock_acquire_recursive>
 80015ce:	bf00      	nop
 80015d0:	20000084 	.word	0x20000084

080015d4 <__malloc_unlock>:
 80015d4:	4801      	ldr	r0, [pc, #4]	; (80015dc <__malloc_unlock+0x8>)
 80015d6:	f7ff bb18 	b.w	8000c0a <__retarget_lock_release_recursive>
 80015da:	bf00      	nop
 80015dc:	20000084 	.word	0x20000084

080015e0 <_read_r>:
 80015e0:	b538      	push	{r3, r4, r5, lr}
 80015e2:	4d07      	ldr	r5, [pc, #28]	; (8001600 <_read_r+0x20>)
 80015e4:	4604      	mov	r4, r0
 80015e6:	4608      	mov	r0, r1
 80015e8:	4611      	mov	r1, r2
 80015ea:	2200      	movs	r2, #0
 80015ec:	602a      	str	r2, [r5, #0]
 80015ee:	461a      	mov	r2, r3
 80015f0:	f7fe fef3 	bl	80003da <_read>
 80015f4:	1c43      	adds	r3, r0, #1
 80015f6:	d102      	bne.n	80015fe <_read_r+0x1e>
 80015f8:	682b      	ldr	r3, [r5, #0]
 80015fa:	b103      	cbz	r3, 80015fe <_read_r+0x1e>
 80015fc:	6023      	str	r3, [r4, #0]
 80015fe:	bd38      	pop	{r3, r4, r5, pc}
 8001600:	20000090 	.word	0x20000090

08001604 <_init>:
 8001604:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001606:	bf00      	nop
 8001608:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800160a:	bc08      	pop	{r3}
 800160c:	469e      	mov	lr, r3
 800160e:	4770      	bx	lr

08001610 <_fini>:
 8001610:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001612:	bf00      	nop
 8001614:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001616:	bc08      	pop	{r3}
 8001618:	469e      	mov	lr, r3
 800161a:	4770      	bx	lr
