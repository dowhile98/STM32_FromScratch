
ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004c3c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000434  08004df0  08004df0  00014df0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005224  08005224  00020318  2**0
                  CONTENTS
  4 .ARM          00000000  08005224  08005224  00020318  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005224  08005224  00020318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005224  08005224  00015224  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005228  08005228  00015228  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000318  20000000  0800522c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020318  2**0
                  CONTENTS
 10 .bss          000001a4  20000318  20000318  00020318  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200004bc  200004bc  00020318  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020318  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002d46  00000000  00000000  00020348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000bff  00000000  00000000  0002308e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000230  00000000  00000000  00023c90  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000198  00000000  00000000  00023ec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001ac05  00000000  00000000  00024058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003e44  00000000  00000000  0003ec5d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008f7f8  00000000  00000000  00042aa1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000d2299  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001748  00000000  00000000  000d22ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000318 	.word	0x20000318
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08004dd4 	.word	0x08004dd4

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000031c 	.word	0x2000031c
 80001ec:	08004dd4 	.word	0x08004dd4

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <ButtonInit>:
 * @param [BT]: Puntero a una estructura que representa el pulsador
 * @param [GPIO]: Puerto donde esta conectado el pulsador
 * @param [pin]: numbero de pin donde esta conectado el pulsador
 * @param [callback]: puntero a la funcion callback
 */
void ButtonInit(Button_t *BT, GPIO_TypeDef *GPIO, uint32_t pin, void (*callback)(void)){
 8000bc8:	b480      	push	{r7}
 8000bca:	b085      	sub	sp, #20
 8000bcc:	af00      	add	r7, sp, #0
 8000bce:	60f8      	str	r0, [r7, #12]
 8000bd0:	60b9      	str	r1, [r7, #8]
 8000bd2:	607a      	str	r2, [r7, #4]
 8000bd4:	603b      	str	r3, [r7, #0]
	BT->GPIO = GPIO;
 8000bd6:	68fb      	ldr	r3, [r7, #12]
 8000bd8:	68ba      	ldr	r2, [r7, #8]
 8000bda:	605a      	str	r2, [r3, #4]
	BT->pin = pin;
 8000bdc:	687b      	ldr	r3, [r7, #4]
 8000bde:	b2da      	uxtb	r2, r3
 8000be0:	68fb      	ldr	r3, [r7, #12]
 8000be2:	721a      	strb	r2, [r3, #8]
	BT->callback = callback;
 8000be4:	68fb      	ldr	r3, [r7, #12]
 8000be6:	683a      	ldr	r2, [r7, #0]
 8000be8:	60da      	str	r2, [r3, #12]
	BT->state = PIN_INIT;
 8000bea:	68fb      	ldr	r3, [r7, #12]
 8000bec:	2200      	movs	r2, #0
 8000bee:	701a      	strb	r2, [r3, #0]
	return;
 8000bf0:	bf00      	nop
}
 8000bf2:	3714      	adds	r7, #20
 8000bf4:	46bd      	mov	sp, r7
 8000bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bfa:	4770      	bx	lr

08000bfc <ButtonRead>:
/**
 * @brief funcion para verificar el estado del pulsador
 * @param [BT]: Puntero que representa el pulsador fisico
 * @param [level]: el estado logico a verificar
 */
bool ButtonRead(Button_t *BT, Button_state_t level){
 8000bfc:	b580      	push	{r7, lr}
 8000bfe:	b082      	sub	sp, #8
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	6078      	str	r0, [r7, #4]
 8000c04:	460b      	mov	r3, r1
 8000c06:	70fb      	strb	r3, [r7, #3]
	switch(BT->state){
 8000c08:	687b      	ldr	r3, [r7, #4]
 8000c0a:	781b      	ldrb	r3, [r3, #0]
 8000c0c:	2b03      	cmp	r3, #3
 8000c0e:	f200 808a 	bhi.w	8000d26 <ButtonRead+0x12a>
 8000c12:	a201      	add	r2, pc, #4	; (adr r2, 8000c18 <ButtonRead+0x1c>)
 8000c14:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c18:	08000c29 	.word	0x08000c29
 8000c1c:	08000c93 	.word	0x08000c93
 8000c20:	08000c6b 	.word	0x08000c6b
 8000c24:	08000cbb 	.word	0x08000cbb
	case PIN_INIT:
		BT->GPIO->MODER &=~ (0x3U<< 2 *BT->pin);		//input floating
 8000c28:	687b      	ldr	r3, [r7, #4]
 8000c2a:	685b      	ldr	r3, [r3, #4]
 8000c2c:	6819      	ldr	r1, [r3, #0]
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	7a1b      	ldrb	r3, [r3, #8]
 8000c32:	005b      	lsls	r3, r3, #1
 8000c34:	2203      	movs	r2, #3
 8000c36:	fa02 f303 	lsl.w	r3, r2, r3
 8000c3a:	43da      	mvns	r2, r3
 8000c3c:	687b      	ldr	r3, [r7, #4]
 8000c3e:	685b      	ldr	r3, [r3, #4]
 8000c40:	400a      	ands	r2, r1
 8000c42:	601a      	str	r2, [r3, #0]
		if(BT->GPIO->IDR & 0x1<<BT->pin){			//pin en estado alto
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	685b      	ldr	r3, [r3, #4]
 8000c48:	691b      	ldr	r3, [r3, #16]
 8000c4a:	687a      	ldr	r2, [r7, #4]
 8000c4c:	7a12      	ldrb	r2, [r2, #8]
 8000c4e:	4611      	mov	r1, r2
 8000c50:	2201      	movs	r2, #1
 8000c52:	408a      	lsls	r2, r1
 8000c54:	4013      	ands	r3, r2
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d003      	beq.n	8000c62 <ButtonRead+0x66>
			BT->state = PIN_HIGH;
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	2201      	movs	r2, #1
 8000c5e:	701a      	strb	r2, [r3, #0]
		}else{
			BT->state = PIN_LOW;
		}
		break;
 8000c60:	e061      	b.n	8000d26 <ButtonRead+0x12a>
			BT->state = PIN_LOW;
 8000c62:	687b      	ldr	r3, [r7, #4]
 8000c64:	2202      	movs	r2, #2
 8000c66:	701a      	strb	r2, [r3, #0]
		break;
 8000c68:	e05d      	b.n	8000d26 <ButtonRead+0x12a>
	case PIN_LOW:
		if(BT->GPIO->IDR & 0x1<<BT->pin){		//de bajo a alto
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	685b      	ldr	r3, [r3, #4]
 8000c6e:	691b      	ldr	r3, [r3, #16]
 8000c70:	687a      	ldr	r2, [r7, #4]
 8000c72:	7a12      	ldrb	r2, [r2, #8]
 8000c74:	4611      	mov	r1, r2
 8000c76:	2201      	movs	r2, #1
 8000c78:	408a      	lsls	r2, r1
 8000c7a:	4013      	ands	r3, r2
 8000c7c:	2b00      	cmp	r3, #0
 8000c7e:	d04d      	beq.n	8000d1c <ButtonRead+0x120>
			BT->state = PIN_DEBOUNCE;
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	2203      	movs	r2, #3
 8000c84:	701a      	strb	r2, [r3, #0]
			BT->tickstart = GetTicks();
 8000c86:	f000 f8b5 	bl	8000df4 <GetTicks>
 8000c8a:	4602      	mov	r2, r0
 8000c8c:	687b      	ldr	r3, [r7, #4]
 8000c8e:	611a      	str	r2, [r3, #16]
		}
		break;
 8000c90:	e044      	b.n	8000d1c <ButtonRead+0x120>
	case PIN_HIGH:
		if(!(BT->GPIO->IDR & 0x1<<BT->pin)){	//alto a bajo
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	685b      	ldr	r3, [r3, #4]
 8000c96:	691b      	ldr	r3, [r3, #16]
 8000c98:	687a      	ldr	r2, [r7, #4]
 8000c9a:	7a12      	ldrb	r2, [r2, #8]
 8000c9c:	4611      	mov	r1, r2
 8000c9e:	2201      	movs	r2, #1
 8000ca0:	408a      	lsls	r2, r1
 8000ca2:	4013      	ands	r3, r2
 8000ca4:	2b00      	cmp	r3, #0
 8000ca6:	d13b      	bne.n	8000d20 <ButtonRead+0x124>
			BT->state = PIN_DEBOUNCE;
 8000ca8:	687b      	ldr	r3, [r7, #4]
 8000caa:	2203      	movs	r2, #3
 8000cac:	701a      	strb	r2, [r3, #0]
			BT->tickstart = GetTicks();
 8000cae:	f000 f8a1 	bl	8000df4 <GetTicks>
 8000cb2:	4602      	mov	r2, r0
 8000cb4:	687b      	ldr	r3, [r7, #4]
 8000cb6:	611a      	str	r2, [r3, #16]
		}
		break;
 8000cb8:	e032      	b.n	8000d20 <ButtonRead+0x124>
	case PIN_DEBOUNCE:
		if((GetTicks() - BT->tickstart) >= 16){
 8000cba:	f000 f89b 	bl	8000df4 <GetTicks>
 8000cbe:	4602      	mov	r2, r0
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	691b      	ldr	r3, [r3, #16]
 8000cc4:	1ad3      	subs	r3, r2, r3
 8000cc6:	2b0f      	cmp	r3, #15
 8000cc8:	d92c      	bls.n	8000d24 <ButtonRead+0x128>
			if(BT->GPIO->IDR & 0x1<<BT->pin){	//HIGH
 8000cca:	687b      	ldr	r3, [r7, #4]
 8000ccc:	685b      	ldr	r3, [r3, #4]
 8000cce:	691b      	ldr	r3, [r3, #16]
 8000cd0:	687a      	ldr	r2, [r7, #4]
 8000cd2:	7a12      	ldrb	r2, [r2, #8]
 8000cd4:	4611      	mov	r1, r2
 8000cd6:	2201      	movs	r2, #1
 8000cd8:	408a      	lsls	r2, r1
 8000cda:	4013      	ands	r3, r2
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d00e      	beq.n	8000cfe <ButtonRead+0x102>
				BT->state = PIN_HIGH;
 8000ce0:	687b      	ldr	r3, [r7, #4]
 8000ce2:	2201      	movs	r2, #1
 8000ce4:	701a      	strb	r2, [r3, #0]
				if(level == PIN_TO_HIGH){
 8000ce6:	78fb      	ldrb	r3, [r7, #3]
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	d11b      	bne.n	8000d24 <ButtonRead+0x128>
					//ejecutar el callback
					if(BT->callback != NULL){
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	68db      	ldr	r3, [r3, #12]
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	d002      	beq.n	8000cfa <ButtonRead+0xfe>
						BT->callback();
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	68db      	ldr	r3, [r3, #12]
 8000cf8:	4798      	blx	r3
					}
					return true;
 8000cfa:	2301      	movs	r3, #1
 8000cfc:	e014      	b.n	8000d28 <ButtonRead+0x12c>
				}

			}else{								//LOW
				BT->state = PIN_LOW;
 8000cfe:	687b      	ldr	r3, [r7, #4]
 8000d00:	2202      	movs	r2, #2
 8000d02:	701a      	strb	r2, [r3, #0]
				if(level == PIN_TO_LOW){
 8000d04:	78fb      	ldrb	r3, [r7, #3]
 8000d06:	2b01      	cmp	r3, #1
 8000d08:	d10c      	bne.n	8000d24 <ButtonRead+0x128>
					//ejecutar el callback
					if(BT->callback != NULL){
 8000d0a:	687b      	ldr	r3, [r7, #4]
 8000d0c:	68db      	ldr	r3, [r3, #12]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d002      	beq.n	8000d18 <ButtonRead+0x11c>
						BT->callback();
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	68db      	ldr	r3, [r3, #12]
 8000d16:	4798      	blx	r3
					}
					return true;
 8000d18:	2301      	movs	r3, #1
 8000d1a:	e005      	b.n	8000d28 <ButtonRead+0x12c>
		break;
 8000d1c:	bf00      	nop
 8000d1e:	e002      	b.n	8000d26 <ButtonRead+0x12a>
		break;
 8000d20:	bf00      	nop
 8000d22:	e000      	b.n	8000d26 <ButtonRead+0x12a>
				}
			}
		}
		break;
 8000d24:	bf00      	nop
	}
	return false;
 8000d26:	2300      	movs	r3, #0
}
 8000d28:	4618      	mov	r0, r3
 8000d2a:	3708      	adds	r7, #8
 8000d2c:	46bd      	mov	sp, r7
 8000d2e:	bd80      	pop	{r7, pc}

08000d30 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000d30:	b480      	push	{r7}
 8000d32:	b083      	sub	sp, #12
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	4603      	mov	r3, r0
 8000d38:	6039      	str	r1, [r7, #0]
 8000d3a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000d3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	db0a      	blt.n	8000d5a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d44:	683b      	ldr	r3, [r7, #0]
 8000d46:	b2da      	uxtb	r2, r3
 8000d48:	490c      	ldr	r1, [pc, #48]	; (8000d7c <__NVIC_SetPriority+0x4c>)
 8000d4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d4e:	0112      	lsls	r2, r2, #4
 8000d50:	b2d2      	uxtb	r2, r2
 8000d52:	440b      	add	r3, r1
 8000d54:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000d58:	e00a      	b.n	8000d70 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d5a:	683b      	ldr	r3, [r7, #0]
 8000d5c:	b2da      	uxtb	r2, r3
 8000d5e:	4908      	ldr	r1, [pc, #32]	; (8000d80 <__NVIC_SetPriority+0x50>)
 8000d60:	79fb      	ldrb	r3, [r7, #7]
 8000d62:	f003 030f 	and.w	r3, r3, #15
 8000d66:	3b04      	subs	r3, #4
 8000d68:	0112      	lsls	r2, r2, #4
 8000d6a:	b2d2      	uxtb	r2, r2
 8000d6c:	440b      	add	r3, r1
 8000d6e:	761a      	strb	r2, [r3, #24]
}
 8000d70:	bf00      	nop
 8000d72:	370c      	adds	r7, #12
 8000d74:	46bd      	mov	sp, r7
 8000d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7a:	4770      	bx	lr
 8000d7c:	e000e100 	.word	0xe000e100
 8000d80:	e000ed00 	.word	0xe000ed00

08000d84 <SysTickInit>:

/*Global variables -------------------------------------------------*/
volatile uint32_t uwTick = 0;


void SysTickInit(void){
 8000d84:	b580      	push	{r7, lr}
 8000d86:	b082      	sub	sp, #8
 8000d88:	af00      	add	r7, sp, #0
	uint32_t temp;
	//1. deshabilitar el conteo de la systick
	SysTick->CTRL &=~ SysTick_CTRL_ENABLE_Msk;
 8000d8a:	4b17      	ldr	r3, [pc, #92]	; (8000de8 <SysTickInit+0x64>)
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	4a16      	ldr	r2, [pc, #88]	; (8000de8 <SysTickInit+0x64>)
 8000d90:	f023 0301 	bic.w	r3, r3, #1
 8000d94:	6013      	str	r3, [r2, #0]
	//2. configurar el valor del registro reload
	SystemCoreClockUpdate();
 8000d96:	f000 fabd 	bl	8001314 <SystemCoreClockUpdate>
	temp = SystemCoreClock / 1000 - 1;
 8000d9a:	4b14      	ldr	r3, [pc, #80]	; (8000dec <SysTickInit+0x68>)
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	4a14      	ldr	r2, [pc, #80]	; (8000df0 <SysTickInit+0x6c>)
 8000da0:	fba2 2303 	umull	r2, r3, r2, r3
 8000da4:	099b      	lsrs	r3, r3, #6
 8000da6:	3b01      	subs	r3, #1
 8000da8:	607b      	str	r3, [r7, #4]
	SysTick->LOAD = temp;
 8000daa:	4a0f      	ldr	r2, [pc, #60]	; (8000de8 <SysTickInit+0x64>)
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	6053      	str	r3, [r2, #4]
	//3. Configuras el registro de control y habilitas el conteo
	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk; 			//system core clock
 8000db0:	4b0d      	ldr	r3, [pc, #52]	; (8000de8 <SysTickInit+0x64>)
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	4a0c      	ldr	r2, [pc, #48]	; (8000de8 <SysTickInit+0x64>)
 8000db6:	f043 0304 	orr.w	r3, r3, #4
 8000dba:	6013      	str	r3, [r2, #0]

	//configurar la IT
	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;				//habilita la IT
 8000dbc:	4b0a      	ldr	r3, [pc, #40]	; (8000de8 <SysTickInit+0x64>)
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	4a09      	ldr	r2, [pc, #36]	; (8000de8 <SysTickInit+0x64>)
 8000dc2:	f043 0302 	orr.w	r3, r3, #2
 8000dc6:	6013      	str	r3, [r2, #0]
	NVIC_SetPriority(SysTick_IRQn, 15);
 8000dc8:	210f      	movs	r1, #15
 8000dca:	f04f 30ff 	mov.w	r0, #4294967295
 8000dce:	f7ff ffaf 	bl	8000d30 <__NVIC_SetPriority>

	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;				//habilita el conteo
 8000dd2:	4b05      	ldr	r3, [pc, #20]	; (8000de8 <SysTickInit+0x64>)
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	4a04      	ldr	r2, [pc, #16]	; (8000de8 <SysTickInit+0x64>)
 8000dd8:	f043 0301 	orr.w	r3, r3, #1
 8000ddc:	6013      	str	r3, [r2, #0]

	return;
 8000dde:	bf00      	nop
}
 8000de0:	3708      	adds	r7, #8
 8000de2:	46bd      	mov	sp, r7
 8000de4:	bd80      	pop	{r7, pc}
 8000de6:	bf00      	nop
 8000de8:	e000e010 	.word	0xe000e010
 8000dec:	20000144 	.word	0x20000144
 8000df0:	10624dd3 	.word	0x10624dd3

08000df4 <GetTicks>:
}
/**
 * @brief retorna el ticks generado por la SysTick
 * @return uint32_t
 */
uint32_t GetTicks(void){
 8000df4:	b480      	push	{r7}
 8000df6:	af00      	add	r7, sp, #0
	return (uint32_t)uwTick;
 8000df8:	4b03      	ldr	r3, [pc, #12]	; (8000e08 <GetTicks+0x14>)
 8000dfa:	681b      	ldr	r3, [r3, #0]
}
 8000dfc:	4618      	mov	r0, r3
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e04:	4770      	bx	lr
 8000e06:	bf00      	nop
 8000e08:	20000334 	.word	0x20000334

08000e0c <TickInc_Callback>:


void TickInc_Callback(void){
 8000e0c:	b480      	push	{r7}
 8000e0e:	af00      	add	r7, sp, #0
	uwTick += 1;
 8000e10:	4b04      	ldr	r3, [pc, #16]	; (8000e24 <TickInc_Callback+0x18>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	3301      	adds	r3, #1
 8000e16:	4a03      	ldr	r2, [pc, #12]	; (8000e24 <TickInc_Callback+0x18>)
 8000e18:	6013      	str	r3, [r2, #0]
	return;
 8000e1a:	bf00      	nop
}
 8000e1c:	46bd      	mov	sp, r7
 8000e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e22:	4770      	bx	lr
 8000e24:	20000334 	.word	0x20000334

08000e28 <__NVIC_EnableIRQ>:
{
 8000e28:	b480      	push	{r7}
 8000e2a:	b083      	sub	sp, #12
 8000e2c:	af00      	add	r7, sp, #0
 8000e2e:	4603      	mov	r3, r0
 8000e30:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000e32:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e36:	2b00      	cmp	r3, #0
 8000e38:	db0b      	blt.n	8000e52 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e3a:	79fb      	ldrb	r3, [r7, #7]
 8000e3c:	f003 021f 	and.w	r2, r3, #31
 8000e40:	4907      	ldr	r1, [pc, #28]	; (8000e60 <__NVIC_EnableIRQ+0x38>)
 8000e42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e46:	095b      	lsrs	r3, r3, #5
 8000e48:	2001      	movs	r0, #1
 8000e4a:	fa00 f202 	lsl.w	r2, r0, r2
 8000e4e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000e52:	bf00      	nop
 8000e54:	370c      	adds	r7, #12
 8000e56:	46bd      	mov	sp, r7
 8000e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e5c:	4770      	bx	lr
 8000e5e:	bf00      	nop
 8000e60:	e000e100 	.word	0xe000e100

08000e64 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000e64:	b480      	push	{r7}
 8000e66:	b083      	sub	sp, #12
 8000e68:	af00      	add	r7, sp, #0
 8000e6a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e6c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e70:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000e74:	f003 0301 	and.w	r3, r3, #1
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d013      	beq.n	8000ea4 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000e7c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e80:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000e84:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	d00b      	beq.n	8000ea4 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000e8c:	e000      	b.n	8000e90 <ITM_SendChar+0x2c>
    {
      __NOP();
 8000e8e:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000e90:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d0f9      	beq.n	8000e8e <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000e9a:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e9e:	687a      	ldr	r2, [r7, #4]
 8000ea0:	b2d2      	uxtb	r2, r2
 8000ea2:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000ea4:	687b      	ldr	r3, [r7, #4]
}
 8000ea6:	4618      	mov	r0, r3
 8000ea8:	370c      	adds	r7, #12
 8000eaa:	46bd      	mov	sp, r7
 8000eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb0:	4770      	bx	lr
	...

08000eb4 <main>:
/*function prototype ---------------------------------------------------------*/
void ADC1_Init(void);
/*main function --------------------------------------------------------------*/

int main(void)
{
 8000eb4:	b5b0      	push	{r4, r5, r7, lr}
 8000eb6:	b082      	sub	sp, #8
 8000eb8:	af02      	add	r7, sp, #8

	printf("EJEMPLO GPIO1\r\n");
 8000eba:	4859      	ldr	r0, [pc, #356]	; (8001020 <main+0x16c>)
 8000ebc:	f001 fed8 	bl	8002c70 <puts>
	printf("%s, %s\r\n", __DATE__, __TIME__);
 8000ec0:	4a58      	ldr	r2, [pc, #352]	; (8001024 <main+0x170>)
 8000ec2:	4959      	ldr	r1, [pc, #356]	; (8001028 <main+0x174>)
 8000ec4:	4859      	ldr	r0, [pc, #356]	; (800102c <main+0x178>)
 8000ec6:	f001 fe4d 	bl	8002b64 <iprintf>


	//init filter
	arm_fir_init_f32(&filtro, K, h, FirState, BLOCKSIZE);
 8000eca:	2301      	movs	r3, #1
 8000ecc:	9300      	str	r3, [sp, #0]
 8000ece:	4b58      	ldr	r3, [pc, #352]	; (8001030 <main+0x17c>)
 8000ed0:	4a58      	ldr	r2, [pc, #352]	; (8001034 <main+0x180>)
 8000ed2:	2151      	movs	r1, #81	; 0x51
 8000ed4:	4858      	ldr	r0, [pc, #352]	; (8001038 <main+0x184>)
 8000ed6:	f001 f989 	bl	80021ec <arm_fir_init_f32>
	//PD12 (LED1)
	RCC->AHB1ENR |= GPIOX_CLOCK(LED) | GPIOX_CLOCK(SW);
 8000eda:	4b58      	ldr	r3, [pc, #352]	; (800103c <main+0x188>)
 8000edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ede:	4a57      	ldr	r2, [pc, #348]	; (800103c <main+0x188>)
 8000ee0:	f043 0309 	orr.w	r3, r3, #9
 8000ee4:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOX_MODER(MODE_OUT, LED);
 8000ee6:	4b56      	ldr	r3, [pc, #344]	; (8001040 <main+0x18c>)
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000eee:	4a54      	ldr	r2, [pc, #336]	; (8001040 <main+0x18c>)
 8000ef0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000ef4:	6013      	str	r3, [r2, #0]
	GPIOX_OTYPER(MODE_OT_PP, LED);
 8000ef6:	4b52      	ldr	r3, [pc, #328]	; (8001040 <main+0x18c>)
 8000ef8:	685b      	ldr	r3, [r3, #4]
 8000efa:	4a51      	ldr	r2, [pc, #324]	; (8001040 <main+0x18c>)
 8000efc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f00:	6053      	str	r3, [r2, #4]
	GPIOX_OSPEEDR(MODE_SPD_VHIGH, LED);
 8000f02:	4b4f      	ldr	r3, [pc, #316]	; (8001040 <main+0x18c>)
 8000f04:	689b      	ldr	r3, [r3, #8]
 8000f06:	4a4e      	ldr	r2, [pc, #312]	; (8001040 <main+0x18c>)
 8000f08:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
 8000f0c:	6093      	str	r3, [r2, #8]
	GPIOX_PUPDR(MODE_PU_NONE, LED);
 8000f0e:	4b4c      	ldr	r3, [pc, #304]	; (8001040 <main+0x18c>)
 8000f10:	68db      	ldr	r3, [r3, #12]
 8000f12:	4a4b      	ldr	r2, [pc, #300]	; (8001040 <main+0x18c>)
 8000f14:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000f18:	60d3      	str	r3, [r2, #12]

	//PA0
	GPIOX_MODER(MODE_DIGITAL_INPUT, SW);
 8000f1a:	4b4a      	ldr	r3, [pc, #296]	; (8001044 <main+0x190>)
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	4a49      	ldr	r2, [pc, #292]	; (8001044 <main+0x190>)
 8000f20:	f023 0303 	bic.w	r3, r3, #3
 8000f24:	6013      	str	r3, [r2, #0]
	GPIOX_PUPDR(MODE_PU_NONE, SW);
 8000f26:	4b47      	ldr	r3, [pc, #284]	; (8001044 <main+0x190>)
 8000f28:	68db      	ldr	r3, [r3, #12]
 8000f2a:	4a46      	ldr	r2, [pc, #280]	; (8001044 <main+0x190>)
 8000f2c:	f023 0303 	bic.w	r3, r3, #3
 8000f30:	60d3      	str	r3, [r2, #12]
	//systick
	SysTickInit();
 8000f32:	f7ff ff27 	bl	8000d84 <SysTickInit>

	//inicializar
	ButtonInit(&button1, GPIOA, 0, NULL);
 8000f36:	2300      	movs	r3, #0
 8000f38:	2200      	movs	r2, #0
 8000f3a:	4942      	ldr	r1, [pc, #264]	; (8001044 <main+0x190>)
 8000f3c:	4842      	ldr	r0, [pc, #264]	; (8001048 <main+0x194>)
 8000f3e:	f7ff fe43 	bl	8000bc8 <ButtonInit>
	//adc init
	ADC1_Init();
 8000f42:	f000 f88d 	bl	8001060 <ADC1_Init>
	//configurar los canales
	RCC->AHB1ENR |= GPIOX_CLOCK(IN1);
 8000f46:	4b3d      	ldr	r3, [pc, #244]	; (800103c <main+0x188>)
 8000f48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f4a:	4a3c      	ldr	r2, [pc, #240]	; (800103c <main+0x188>)
 8000f4c:	f043 0301 	orr.w	r3, r3, #1
 8000f50:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOX_MODER(MODE_ANALOG_INPUT, IN1);
 8000f52:	4b3c      	ldr	r3, [pc, #240]	; (8001044 <main+0x190>)
 8000f54:	681b      	ldr	r3, [r3, #0]
 8000f56:	4a3b      	ldr	r2, [pc, #236]	; (8001044 <main+0x190>)
 8000f58:	f043 030c 	orr.w	r3, r3, #12
 8000f5c:	6013      	str	r3, [r2, #0]
	GPIOX_PUPDR(MODE_PU_NONE, IN1);
 8000f5e:	4b39      	ldr	r3, [pc, #228]	; (8001044 <main+0x190>)
 8000f60:	68db      	ldr	r3, [r3, #12]
 8000f62:	4a38      	ldr	r2, [pc, #224]	; (8001044 <main+0x190>)
 8000f64:	f023 030c 	bic.w	r3, r3, #12
 8000f68:	60d3      	str	r3, [r2, #12]
	//Sequencer
	ADC1->SQR1 &=~ (ADC_SQR1_L);		//una sola conversion
 8000f6a:	4b38      	ldr	r3, [pc, #224]	; (800104c <main+0x198>)
 8000f6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000f6e:	4a37      	ldr	r2, [pc, #220]	; (800104c <main+0x198>)
 8000f70:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000f74:	62d3      	str	r3, [r2, #44]	; 0x2c
	ADC1->SQR3 = 1;						//IN1
 8000f76:	4b35      	ldr	r3, [pc, #212]	; (800104c <main+0x198>)
 8000f78:	2201      	movs	r2, #1
 8000f7a:	635a      	str	r2, [r3, #52]	; 0x34
	//Habilita el ADC
	ADC1->CR2 |= ADC_CR2_ADON;
 8000f7c:	4b33      	ldr	r3, [pc, #204]	; (800104c <main+0x198>)
 8000f7e:	689b      	ldr	r3, [r3, #8]
 8000f80:	4a32      	ldr	r2, [pc, #200]	; (800104c <main+0x198>)
 8000f82:	f043 0301 	orr.w	r3, r3, #1
 8000f86:	6093      	str	r3, [r2, #8]
	/*timer 2 init -------------------------------------*/
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000f88:	4b2c      	ldr	r3, [pc, #176]	; (800103c <main+0x188>)
 8000f8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f8c:	4a2b      	ldr	r2, [pc, #172]	; (800103c <main+0x188>)
 8000f8e:	f043 0301 	orr.w	r3, r3, #1
 8000f92:	6413      	str	r3, [r2, #64]	; 0x40
	 * Update envent  = Ftim / (PSC + 1) (ARR + 1)
	 * PSC = 15
	 * ARR = 16E+6 / (16 * 500) - 1
	 * ARR = 2000 - 1 = 1999
	 */
	TIM2->PSC = 15;
 8000f94:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000f98:	220f      	movs	r2, #15
 8000f9a:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = 1999;
 8000f9c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fa0:	f240 72cf 	movw	r2, #1999	; 0x7cf
 8000fa4:	62da      	str	r2, [r3, #44]	; 0x2c
	//Habilitar la salida TRGO
	TIM2->CR2 &=~ TIM_CR2_MMS;
 8000fa6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000faa:	685b      	ldr	r3, [r3, #4]
 8000fac:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fb0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000fb4:	6053      	str	r3, [r2, #4]
	TIM2->CR2 |= TIM_CR2_MMS_1;		//habilita el TGRO para el disparo del adc
 8000fb6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fba:	685b      	ldr	r3, [r3, #4]
 8000fbc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fc0:	f043 0320 	orr.w	r3, r3, #32
 8000fc4:	6053      	str	r3, [r2, #4]
    //Habilitar el conteo
	TIM2->CR1 |= TIM_CR1_CEN;
 8000fc6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fca:	681b      	ldr	r3, [r3, #0]
 8000fcc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fd0:	f043 0301 	orr.w	r3, r3, #1
 8000fd4:	6013      	str	r3, [r2, #0]
	/* Loop forever */
	for(;;){
		if(ButtonRead(&button1, PIN_TO_LOW)){
 8000fd6:	2101      	movs	r1, #1
 8000fd8:	481b      	ldr	r0, [pc, #108]	; (8001048 <main+0x194>)
 8000fda:	f7ff fe0f 	bl	8000bfc <ButtonRead>
			//todo
		}
		if(adcComplet == true){
 8000fde:	4b1c      	ldr	r3, [pc, #112]	; (8001050 <main+0x19c>)
 8000fe0:	781b      	ldrb	r3, [r3, #0]
 8000fe2:	2b00      	cmp	r3, #0
 8000fe4:	d0f7      	beq.n	8000fd6 <main+0x122>
			//procesado
			arm_fir_f32(&filtro, &in, &out, 1);
 8000fe6:	2301      	movs	r3, #1
 8000fe8:	4a1a      	ldr	r2, [pc, #104]	; (8001054 <main+0x1a0>)
 8000fea:	491b      	ldr	r1, [pc, #108]	; (8001058 <main+0x1a4>)
 8000fec:	4812      	ldr	r0, [pc, #72]	; (8001038 <main+0x184>)
 8000fee:	f000 fa3a 	bl	8001466 <arm_fir_f32>
			printf("in: %.3f out: %.3f\r\n", in, out);
 8000ff2:	4b19      	ldr	r3, [pc, #100]	; (8001058 <main+0x1a4>)
 8000ff4:	681b      	ldr	r3, [r3, #0]
 8000ff6:	4618      	mov	r0, r3
 8000ff8:	f7ff fab6 	bl	8000568 <__aeabi_f2d>
 8000ffc:	4604      	mov	r4, r0
 8000ffe:	460d      	mov	r5, r1
 8001000:	4b14      	ldr	r3, [pc, #80]	; (8001054 <main+0x1a0>)
 8001002:	681b      	ldr	r3, [r3, #0]
 8001004:	4618      	mov	r0, r3
 8001006:	f7ff faaf 	bl	8000568 <__aeabi_f2d>
 800100a:	4602      	mov	r2, r0
 800100c:	460b      	mov	r3, r1
 800100e:	e9cd 2300 	strd	r2, r3, [sp]
 8001012:	4622      	mov	r2, r4
 8001014:	462b      	mov	r3, r5
 8001016:	4811      	ldr	r0, [pc, #68]	; (800105c <main+0x1a8>)
 8001018:	f001 fda4 	bl	8002b64 <iprintf>
		if(ButtonRead(&button1, PIN_TO_LOW)){
 800101c:	e7db      	b.n	8000fd6 <main+0x122>
 800101e:	bf00      	nop
 8001020:	08004df0 	.word	0x08004df0
 8001024:	08004e00 	.word	0x08004e00
 8001028:	08004e0c 	.word	0x08004e0c
 800102c:	08004e18 	.word	0x08004e18
 8001030:	20000358 	.word	0x20000358
 8001034:	20000000 	.word	0x20000000
 8001038:	2000049c 	.word	0x2000049c
 800103c:	40023800 	.word	0x40023800
 8001040:	40020c00 	.word	0x40020c00
 8001044:	40020000 	.word	0x40020000
 8001048:	20000338 	.word	0x20000338
 800104c:	40012000 	.word	0x40012000
 8001050:	2000034c 	.word	0x2000034c
 8001054:	20000354 	.word	0x20000354
 8001058:	20000350 	.word	0x20000350
 800105c:	08004e24 	.word	0x08004e24

08001060 <ADC1_Init>:
	}
}

/*Function definition ---------------------------------------------------------*/

void ADC1_Init(void){
 8001060:	b580      	push	{r7, lr}
 8001062:	af00      	add	r7, sp, #0
	//HABILITAR EL RELOJ
	RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8001064:	4b15      	ldr	r3, [pc, #84]	; (80010bc <ADC1_Init+0x5c>)
 8001066:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001068:	4a14      	ldr	r2, [pc, #80]	; (80010bc <ADC1_Init+0x5c>)
 800106a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800106e:	6453      	str	r3, [r2, #68]	; 0x44
	//Configurar los rigistros comunes entre ADC1, ADC2, ADC3
	ADC123_COMMON->CCR &=~ ADC_CCR_ADCPRE;				//PCLK2 / 2
 8001070:	4b13      	ldr	r3, [pc, #76]	; (80010c0 <ADC1_Init+0x60>)
 8001072:	685b      	ldr	r3, [r3, #4]
 8001074:	4a12      	ldr	r2, [pc, #72]	; (80010c0 <ADC1_Init+0x60>)
 8001076:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800107a:	6053      	str	r3, [r2, #4]
	//Configurar los registros del ADC1
	ADC1->CR1 = 0;
 800107c:	4b11      	ldr	r3, [pc, #68]	; (80010c4 <ADC1_Init+0x64>)
 800107e:	2200      	movs	r2, #0
 8001080:	605a      	str	r2, [r3, #4]
	ADC1->CR1 |= ADC_CR1_OVRIE;				//Generar IT cuando se sobrescribe el dato convertido
 8001082:	4b10      	ldr	r3, [pc, #64]	; (80010c4 <ADC1_Init+0x64>)
 8001084:	685b      	ldr	r3, [r3, #4]
 8001086:	4a0f      	ldr	r2, [pc, #60]	; (80010c4 <ADC1_Init+0x64>)
 8001088:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800108c:	6053      	str	r3, [r2, #4]
	ADC1->CR1 |= ADC_CR1_EOCIE;				//generar IT cuando se termine de realizar la conversion
 800108e:	4b0d      	ldr	r3, [pc, #52]	; (80010c4 <ADC1_Init+0x64>)
 8001090:	685b      	ldr	r3, [r3, #4]
 8001092:	4a0c      	ldr	r2, [pc, #48]	; (80010c4 <ADC1_Init+0x64>)
 8001094:	f043 0320 	orr.w	r3, r3, #32
 8001098:	6053      	str	r3, [r2, #4]

	ADC1->CR2 |= ADC_CR2_EXTEN_0;			//disparo con flanco acendente
 800109a:	4b0a      	ldr	r3, [pc, #40]	; (80010c4 <ADC1_Init+0x64>)
 800109c:	689b      	ldr	r3, [r3, #8]
 800109e:	4a09      	ldr	r2, [pc, #36]	; (80010c4 <ADC1_Init+0x64>)
 80010a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80010a4:	6093      	str	r3, [r2, #8]
	ADC1->CR2 |= ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_2; //disparo por timer2 out event
 80010a6:	4b07      	ldr	r3, [pc, #28]	; (80010c4 <ADC1_Init+0x64>)
 80010a8:	689b      	ldr	r3, [r3, #8]
 80010aa:	4a06      	ldr	r2, [pc, #24]	; (80010c4 <ADC1_Init+0x64>)
 80010ac:	f043 63c0 	orr.w	r3, r3, #100663296	; 0x6000000
 80010b0:	6093      	str	r3, [r2, #8]
	//AWDG
	NVIC_EnableIRQ(ADC_IRQn);
 80010b2:	2012      	movs	r0, #18
 80010b4:	f7ff feb8 	bl	8000e28 <__NVIC_EnableIRQ>

	return;
 80010b8:	bf00      	nop
}
 80010ba:	bd80      	pop	{r7, pc}
 80010bc:	40023800 	.word	0x40023800
 80010c0:	40012300 	.word	0x40012300
 80010c4:	40012000 	.word	0x40012000

080010c8 <ADC1_CpltConvCallback>:
/**
 * @adc callback
 */
void ADC1_CpltConvCallback(uint16_t data){
 80010c8:	b480      	push	{r7}
 80010ca:	b083      	sub	sp, #12
 80010cc:	af00      	add	r7, sp, #0
 80010ce:	4603      	mov	r3, r0
 80010d0:	80fb      	strh	r3, [r7, #6]
	//todo
	//printf("data->%u\r\n", data);
	adcComplet = true;
 80010d2:	4b08      	ldr	r3, [pc, #32]	; (80010f4 <ADC1_CpltConvCallback+0x2c>)
 80010d4:	2201      	movs	r2, #1
 80010d6:	701a      	strb	r2, [r3, #0]
	in = data;
 80010d8:	88fb      	ldrh	r3, [r7, #6]
 80010da:	ee07 3a90 	vmov	s15, r3
 80010de:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80010e2:	4b05      	ldr	r3, [pc, #20]	; (80010f8 <ADC1_CpltConvCallback+0x30>)
 80010e4:	edc3 7a00 	vstr	s15, [r3]
}
 80010e8:	bf00      	nop
 80010ea:	370c      	adds	r7, #12
 80010ec:	46bd      	mov	sp, r7
 80010ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f2:	4770      	bx	lr
 80010f4:	2000034c 	.word	0x2000034c
 80010f8:	20000350 	.word	0x20000350

080010fc <__io_putchar>:

int __io_putchar(int ch){
 80010fc:	b580      	push	{r7, lr}
 80010fe:	b082      	sub	sp, #8
 8001100:	af00      	add	r7, sp, #0
 8001102:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	4618      	mov	r0, r3
 8001108:	f7ff feac 	bl	8000e64 <ITM_SendChar>
	return ch;
 800110c:	687b      	ldr	r3, [r7, #4]
}
 800110e:	4618      	mov	r0, r3
 8001110:	3708      	adds	r7, #8
 8001112:	46bd      	mov	sp, r7
 8001114:	bd80      	pop	{r7, pc}

08001116 <SysTick_Handler>:

extern void ADC1_CpltConvCallback(uint16_t data);
/**
 * @brief ISR -> SYSTICK
 */
void SysTick_Handler(void){
 8001116:	b580      	push	{r7, lr}
 8001118:	af00      	add	r7, sp, #0
	TickInc_Callback();
 800111a:	f7ff fe77 	bl	8000e0c <TickInc_Callback>
}
 800111e:	bf00      	nop
 8001120:	bd80      	pop	{r7, pc}
	...

08001124 <ADC_IRQHandler>:

void ADC_IRQHandler(void){
 8001124:	b580      	push	{r7, lr}
 8001126:	af00      	add	r7, sp, #0
	if(ADC1->SR & ADC_SR_EOC){		//TERMINA LA CONVERSION
 8001128:	4b0d      	ldr	r3, [pc, #52]	; (8001160 <ADC_IRQHandler+0x3c>)
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	f003 0302 	and.w	r3, r3, #2
 8001130:	2b00      	cmp	r3, #0
 8001132:	d006      	beq.n	8001142 <ADC_IRQHandler+0x1e>
		ADC1_CpltConvCallback(ADC1->DR);
 8001134:	4b0a      	ldr	r3, [pc, #40]	; (8001160 <ADC_IRQHandler+0x3c>)
 8001136:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001138:	b29b      	uxth	r3, r3
 800113a:	4618      	mov	r0, r3
 800113c:	f7ff ffc4 	bl	80010c8 <ADC1_CpltConvCallback>
	}else if(ADC1->SR & ADC_SR_OVR){//SOBREESCRITURA DEL DATO CONVERTIDO
		ADC1->SR &=~ ADC_SR_OVR;
		//TODO

	}
}
 8001140:	e00b      	b.n	800115a <ADC_IRQHandler+0x36>
	}else if(ADC1->SR & ADC_SR_OVR){//SOBREESCRITURA DEL DATO CONVERTIDO
 8001142:	4b07      	ldr	r3, [pc, #28]	; (8001160 <ADC_IRQHandler+0x3c>)
 8001144:	681b      	ldr	r3, [r3, #0]
 8001146:	f003 0320 	and.w	r3, r3, #32
 800114a:	2b00      	cmp	r3, #0
 800114c:	d005      	beq.n	800115a <ADC_IRQHandler+0x36>
		ADC1->SR &=~ ADC_SR_OVR;
 800114e:	4b04      	ldr	r3, [pc, #16]	; (8001160 <ADC_IRQHandler+0x3c>)
 8001150:	681b      	ldr	r3, [r3, #0]
 8001152:	4a03      	ldr	r2, [pc, #12]	; (8001160 <ADC_IRQHandler+0x3c>)
 8001154:	f023 0320 	bic.w	r3, r3, #32
 8001158:	6013      	str	r3, [r2, #0]
}
 800115a:	bf00      	nop
 800115c:	bd80      	pop	{r7, pc}
 800115e:	bf00      	nop
 8001160:	40012000 	.word	0x40012000

08001164 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001164:	b480      	push	{r7}
 8001166:	af00      	add	r7, sp, #0
  return 1;
 8001168:	2301      	movs	r3, #1
}
 800116a:	4618      	mov	r0, r3
 800116c:	46bd      	mov	sp, r7
 800116e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001172:	4770      	bx	lr

08001174 <_kill>:

int _kill(int pid, int sig)
{
 8001174:	b580      	push	{r7, lr}
 8001176:	b082      	sub	sp, #8
 8001178:	af00      	add	r7, sp, #0
 800117a:	6078      	str	r0, [r7, #4]
 800117c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800117e:	f001 f855 	bl	800222c <__errno>
 8001182:	4603      	mov	r3, r0
 8001184:	2216      	movs	r2, #22
 8001186:	601a      	str	r2, [r3, #0]
  return -1;
 8001188:	f04f 33ff 	mov.w	r3, #4294967295
}
 800118c:	4618      	mov	r0, r3
 800118e:	3708      	adds	r7, #8
 8001190:	46bd      	mov	sp, r7
 8001192:	bd80      	pop	{r7, pc}

08001194 <_exit>:

void _exit (int status)
{
 8001194:	b580      	push	{r7, lr}
 8001196:	b082      	sub	sp, #8
 8001198:	af00      	add	r7, sp, #0
 800119a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800119c:	f04f 31ff 	mov.w	r1, #4294967295
 80011a0:	6878      	ldr	r0, [r7, #4]
 80011a2:	f7ff ffe7 	bl	8001174 <_kill>
  while (1) {}    /* Make sure we hang here */
 80011a6:	e7fe      	b.n	80011a6 <_exit+0x12>

080011a8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80011a8:	b580      	push	{r7, lr}
 80011aa:	b086      	sub	sp, #24
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	60f8      	str	r0, [r7, #12]
 80011b0:	60b9      	str	r1, [r7, #8]
 80011b2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011b4:	2300      	movs	r3, #0
 80011b6:	617b      	str	r3, [r7, #20]
 80011b8:	e00a      	b.n	80011d0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80011ba:	f3af 8000 	nop.w
 80011be:	4601      	mov	r1, r0
 80011c0:	68bb      	ldr	r3, [r7, #8]
 80011c2:	1c5a      	adds	r2, r3, #1
 80011c4:	60ba      	str	r2, [r7, #8]
 80011c6:	b2ca      	uxtb	r2, r1
 80011c8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011ca:	697b      	ldr	r3, [r7, #20]
 80011cc:	3301      	adds	r3, #1
 80011ce:	617b      	str	r3, [r7, #20]
 80011d0:	697a      	ldr	r2, [r7, #20]
 80011d2:	687b      	ldr	r3, [r7, #4]
 80011d4:	429a      	cmp	r2, r3
 80011d6:	dbf0      	blt.n	80011ba <_read+0x12>
  }

  return len;
 80011d8:	687b      	ldr	r3, [r7, #4]
}
 80011da:	4618      	mov	r0, r3
 80011dc:	3718      	adds	r7, #24
 80011de:	46bd      	mov	sp, r7
 80011e0:	bd80      	pop	{r7, pc}

080011e2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80011e2:	b580      	push	{r7, lr}
 80011e4:	b086      	sub	sp, #24
 80011e6:	af00      	add	r7, sp, #0
 80011e8:	60f8      	str	r0, [r7, #12]
 80011ea:	60b9      	str	r1, [r7, #8]
 80011ec:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80011ee:	2300      	movs	r3, #0
 80011f0:	617b      	str	r3, [r7, #20]
 80011f2:	e009      	b.n	8001208 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80011f4:	68bb      	ldr	r3, [r7, #8]
 80011f6:	1c5a      	adds	r2, r3, #1
 80011f8:	60ba      	str	r2, [r7, #8]
 80011fa:	781b      	ldrb	r3, [r3, #0]
 80011fc:	4618      	mov	r0, r3
 80011fe:	f7ff ff7d 	bl	80010fc <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001202:	697b      	ldr	r3, [r7, #20]
 8001204:	3301      	adds	r3, #1
 8001206:	617b      	str	r3, [r7, #20]
 8001208:	697a      	ldr	r2, [r7, #20]
 800120a:	687b      	ldr	r3, [r7, #4]
 800120c:	429a      	cmp	r2, r3
 800120e:	dbf1      	blt.n	80011f4 <_write+0x12>
  }
  return len;
 8001210:	687b      	ldr	r3, [r7, #4]
}
 8001212:	4618      	mov	r0, r3
 8001214:	3718      	adds	r7, #24
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}

0800121a <_close>:

int _close(int file)
{
 800121a:	b480      	push	{r7}
 800121c:	b083      	sub	sp, #12
 800121e:	af00      	add	r7, sp, #0
 8001220:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001222:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001226:	4618      	mov	r0, r3
 8001228:	370c      	adds	r7, #12
 800122a:	46bd      	mov	sp, r7
 800122c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001230:	4770      	bx	lr

08001232 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001232:	b480      	push	{r7}
 8001234:	b083      	sub	sp, #12
 8001236:	af00      	add	r7, sp, #0
 8001238:	6078      	str	r0, [r7, #4]
 800123a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800123c:	683b      	ldr	r3, [r7, #0]
 800123e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001242:	605a      	str	r2, [r3, #4]
  return 0;
 8001244:	2300      	movs	r3, #0
}
 8001246:	4618      	mov	r0, r3
 8001248:	370c      	adds	r7, #12
 800124a:	46bd      	mov	sp, r7
 800124c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001250:	4770      	bx	lr

08001252 <_isatty>:

int _isatty(int file)
{
 8001252:	b480      	push	{r7}
 8001254:	b083      	sub	sp, #12
 8001256:	af00      	add	r7, sp, #0
 8001258:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800125a:	2301      	movs	r3, #1
}
 800125c:	4618      	mov	r0, r3
 800125e:	370c      	adds	r7, #12
 8001260:	46bd      	mov	sp, r7
 8001262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001266:	4770      	bx	lr

08001268 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001268:	b480      	push	{r7}
 800126a:	b085      	sub	sp, #20
 800126c:	af00      	add	r7, sp, #0
 800126e:	60f8      	str	r0, [r7, #12]
 8001270:	60b9      	str	r1, [r7, #8]
 8001272:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001274:	2300      	movs	r3, #0
}
 8001276:	4618      	mov	r0, r3
 8001278:	3714      	adds	r7, #20
 800127a:	46bd      	mov	sp, r7
 800127c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001280:	4770      	bx	lr
	...

08001284 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001284:	b580      	push	{r7, lr}
 8001286:	b086      	sub	sp, #24
 8001288:	af00      	add	r7, sp, #0
 800128a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800128c:	4a14      	ldr	r2, [pc, #80]	; (80012e0 <_sbrk+0x5c>)
 800128e:	4b15      	ldr	r3, [pc, #84]	; (80012e4 <_sbrk+0x60>)
 8001290:	1ad3      	subs	r3, r2, r3
 8001292:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001294:	697b      	ldr	r3, [r7, #20]
 8001296:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001298:	4b13      	ldr	r3, [pc, #76]	; (80012e8 <_sbrk+0x64>)
 800129a:	681b      	ldr	r3, [r3, #0]
 800129c:	2b00      	cmp	r3, #0
 800129e:	d102      	bne.n	80012a6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80012a0:	4b11      	ldr	r3, [pc, #68]	; (80012e8 <_sbrk+0x64>)
 80012a2:	4a12      	ldr	r2, [pc, #72]	; (80012ec <_sbrk+0x68>)
 80012a4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80012a6:	4b10      	ldr	r3, [pc, #64]	; (80012e8 <_sbrk+0x64>)
 80012a8:	681a      	ldr	r2, [r3, #0]
 80012aa:	687b      	ldr	r3, [r7, #4]
 80012ac:	4413      	add	r3, r2
 80012ae:	693a      	ldr	r2, [r7, #16]
 80012b0:	429a      	cmp	r2, r3
 80012b2:	d207      	bcs.n	80012c4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80012b4:	f000 ffba 	bl	800222c <__errno>
 80012b8:	4603      	mov	r3, r0
 80012ba:	220c      	movs	r2, #12
 80012bc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80012be:	f04f 33ff 	mov.w	r3, #4294967295
 80012c2:	e009      	b.n	80012d8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80012c4:	4b08      	ldr	r3, [pc, #32]	; (80012e8 <_sbrk+0x64>)
 80012c6:	681b      	ldr	r3, [r3, #0]
 80012c8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80012ca:	4b07      	ldr	r3, [pc, #28]	; (80012e8 <_sbrk+0x64>)
 80012cc:	681a      	ldr	r2, [r3, #0]
 80012ce:	687b      	ldr	r3, [r7, #4]
 80012d0:	4413      	add	r3, r2
 80012d2:	4a05      	ldr	r2, [pc, #20]	; (80012e8 <_sbrk+0x64>)
 80012d4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80012d6:	68fb      	ldr	r3, [r7, #12]
}
 80012d8:	4618      	mov	r0, r3
 80012da:	3718      	adds	r7, #24
 80012dc:	46bd      	mov	sp, r7
 80012de:	bd80      	pop	{r7, pc}
 80012e0:	20020000 	.word	0x20020000
 80012e4:	00000400 	.word	0x00000400
 80012e8:	200004a8 	.word	0x200004a8
 80012ec:	200004c0 	.word	0x200004c0

080012f0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80012f0:	b480      	push	{r7}
 80012f2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80012f4:	4b06      	ldr	r3, [pc, #24]	; (8001310 <SystemInit+0x20>)
 80012f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80012fa:	4a05      	ldr	r2, [pc, #20]	; (8001310 <SystemInit+0x20>)
 80012fc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001300:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001304:	bf00      	nop
 8001306:	46bd      	mov	sp, r7
 8001308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800130c:	4770      	bx	lr
 800130e:	bf00      	nop
 8001310:	e000ed00 	.word	0xe000ed00

08001314 <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8001314:	b480      	push	{r7}
 8001316:	b087      	sub	sp, #28
 8001318:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 800131a:	2300      	movs	r3, #0
 800131c:	613b      	str	r3, [r7, #16]
 800131e:	2300      	movs	r3, #0
 8001320:	617b      	str	r3, [r7, #20]
 8001322:	2302      	movs	r3, #2
 8001324:	60fb      	str	r3, [r7, #12]
 8001326:	2300      	movs	r3, #0
 8001328:	60bb      	str	r3, [r7, #8]
 800132a:	2302      	movs	r3, #2
 800132c:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800132e:	4b34      	ldr	r3, [pc, #208]	; (8001400 <SystemCoreClockUpdate+0xec>)
 8001330:	689b      	ldr	r3, [r3, #8]
 8001332:	f003 030c 	and.w	r3, r3, #12
 8001336:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8001338:	693b      	ldr	r3, [r7, #16]
 800133a:	2b08      	cmp	r3, #8
 800133c:	d011      	beq.n	8001362 <SystemCoreClockUpdate+0x4e>
 800133e:	693b      	ldr	r3, [r7, #16]
 8001340:	2b08      	cmp	r3, #8
 8001342:	d844      	bhi.n	80013ce <SystemCoreClockUpdate+0xba>
 8001344:	693b      	ldr	r3, [r7, #16]
 8001346:	2b00      	cmp	r3, #0
 8001348:	d003      	beq.n	8001352 <SystemCoreClockUpdate+0x3e>
 800134a:	693b      	ldr	r3, [r7, #16]
 800134c:	2b04      	cmp	r3, #4
 800134e:	d004      	beq.n	800135a <SystemCoreClockUpdate+0x46>
 8001350:	e03d      	b.n	80013ce <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 8001352:	4b2c      	ldr	r3, [pc, #176]	; (8001404 <SystemCoreClockUpdate+0xf0>)
 8001354:	4a2c      	ldr	r2, [pc, #176]	; (8001408 <SystemCoreClockUpdate+0xf4>)
 8001356:	601a      	str	r2, [r3, #0]
      break;
 8001358:	e03d      	b.n	80013d6 <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 800135a:	4b2a      	ldr	r3, [pc, #168]	; (8001404 <SystemCoreClockUpdate+0xf0>)
 800135c:	4a2b      	ldr	r2, [pc, #172]	; (800140c <SystemCoreClockUpdate+0xf8>)
 800135e:	601a      	str	r2, [r3, #0]
      break;
 8001360:	e039      	b.n	80013d6 <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 8001362:	4b27      	ldr	r3, [pc, #156]	; (8001400 <SystemCoreClockUpdate+0xec>)
 8001364:	685b      	ldr	r3, [r3, #4]
 8001366:	0d9b      	lsrs	r3, r3, #22
 8001368:	f003 0301 	and.w	r3, r3, #1
 800136c:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800136e:	4b24      	ldr	r3, [pc, #144]	; (8001400 <SystemCoreClockUpdate+0xec>)
 8001370:	685b      	ldr	r3, [r3, #4]
 8001372:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001376:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8001378:	68bb      	ldr	r3, [r7, #8]
 800137a:	2b00      	cmp	r3, #0
 800137c:	d00c      	beq.n	8001398 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 800137e:	4a23      	ldr	r2, [pc, #140]	; (800140c <SystemCoreClockUpdate+0xf8>)
 8001380:	687b      	ldr	r3, [r7, #4]
 8001382:	fbb2 f3f3 	udiv	r3, r2, r3
 8001386:	4a1e      	ldr	r2, [pc, #120]	; (8001400 <SystemCoreClockUpdate+0xec>)
 8001388:	6852      	ldr	r2, [r2, #4]
 800138a:	0992      	lsrs	r2, r2, #6
 800138c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001390:	fb02 f303 	mul.w	r3, r2, r3
 8001394:	617b      	str	r3, [r7, #20]
 8001396:	e00b      	b.n	80013b0 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001398:	4a1b      	ldr	r2, [pc, #108]	; (8001408 <SystemCoreClockUpdate+0xf4>)
 800139a:	687b      	ldr	r3, [r7, #4]
 800139c:	fbb2 f3f3 	udiv	r3, r2, r3
 80013a0:	4a17      	ldr	r2, [pc, #92]	; (8001400 <SystemCoreClockUpdate+0xec>)
 80013a2:	6852      	ldr	r2, [r2, #4]
 80013a4:	0992      	lsrs	r2, r2, #6
 80013a6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80013aa:	fb02 f303 	mul.w	r3, r2, r3
 80013ae:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80013b0:	4b13      	ldr	r3, [pc, #76]	; (8001400 <SystemCoreClockUpdate+0xec>)
 80013b2:	685b      	ldr	r3, [r3, #4]
 80013b4:	0c1b      	lsrs	r3, r3, #16
 80013b6:	f003 0303 	and.w	r3, r3, #3
 80013ba:	3301      	adds	r3, #1
 80013bc:	005b      	lsls	r3, r3, #1
 80013be:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 80013c0:	697a      	ldr	r2, [r7, #20]
 80013c2:	68fb      	ldr	r3, [r7, #12]
 80013c4:	fbb2 f3f3 	udiv	r3, r2, r3
 80013c8:	4a0e      	ldr	r2, [pc, #56]	; (8001404 <SystemCoreClockUpdate+0xf0>)
 80013ca:	6013      	str	r3, [r2, #0]
      break;
 80013cc:	e003      	b.n	80013d6 <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 80013ce:	4b0d      	ldr	r3, [pc, #52]	; (8001404 <SystemCoreClockUpdate+0xf0>)
 80013d0:	4a0d      	ldr	r2, [pc, #52]	; (8001408 <SystemCoreClockUpdate+0xf4>)
 80013d2:	601a      	str	r2, [r3, #0]
      break;
 80013d4:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80013d6:	4b0a      	ldr	r3, [pc, #40]	; (8001400 <SystemCoreClockUpdate+0xec>)
 80013d8:	689b      	ldr	r3, [r3, #8]
 80013da:	091b      	lsrs	r3, r3, #4
 80013dc:	f003 030f 	and.w	r3, r3, #15
 80013e0:	4a0b      	ldr	r2, [pc, #44]	; (8001410 <SystemCoreClockUpdate+0xfc>)
 80013e2:	5cd3      	ldrb	r3, [r2, r3]
 80013e4:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80013e6:	4b07      	ldr	r3, [pc, #28]	; (8001404 <SystemCoreClockUpdate+0xf0>)
 80013e8:	681a      	ldr	r2, [r3, #0]
 80013ea:	693b      	ldr	r3, [r7, #16]
 80013ec:	fa22 f303 	lsr.w	r3, r2, r3
 80013f0:	4a04      	ldr	r2, [pc, #16]	; (8001404 <SystemCoreClockUpdate+0xf0>)
 80013f2:	6013      	str	r3, [r2, #0]
}
 80013f4:	bf00      	nop
 80013f6:	371c      	adds	r7, #28
 80013f8:	46bd      	mov	sp, r7
 80013fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013fe:	4770      	bx	lr
 8001400:	40023800 	.word	0x40023800
 8001404:	20000144 	.word	0x20000144
 8001408:	00f42400 	.word	0x00f42400
 800140c:	017d7840 	.word	0x017d7840
 8001410:	08004e3c 	.word	0x08004e3c

08001414 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001414:	480d      	ldr	r0, [pc, #52]	; (800144c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001416:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001418:	f7ff ff6a 	bl	80012f0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800141c:	480c      	ldr	r0, [pc, #48]	; (8001450 <LoopForever+0x6>)
  ldr r1, =_edata
 800141e:	490d      	ldr	r1, [pc, #52]	; (8001454 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001420:	4a0d      	ldr	r2, [pc, #52]	; (8001458 <LoopForever+0xe>)
  movs r3, #0
 8001422:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001424:	e002      	b.n	800142c <LoopCopyDataInit>

08001426 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001426:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001428:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800142a:	3304      	adds	r3, #4

0800142c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800142c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800142e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001430:	d3f9      	bcc.n	8001426 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001432:	4a0a      	ldr	r2, [pc, #40]	; (800145c <LoopForever+0x12>)
  ldr r4, =_ebss
 8001434:	4c0a      	ldr	r4, [pc, #40]	; (8001460 <LoopForever+0x16>)
  movs r3, #0
 8001436:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001438:	e001      	b.n	800143e <LoopFillZerobss>

0800143a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800143a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800143c:	3204      	adds	r2, #4

0800143e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800143e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001440:	d3fb      	bcc.n	800143a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001442:	f000 fef9 	bl	8002238 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001446:	f7ff fd35 	bl	8000eb4 <main>

0800144a <LoopForever>:

LoopForever:
  b LoopForever
 800144a:	e7fe      	b.n	800144a <LoopForever>
  ldr   r0, =_estack
 800144c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001450:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001454:	20000318 	.word	0x20000318
  ldr r2, =_sidata
 8001458:	0800522c 	.word	0x0800522c
  ldr r2, =_sbss
 800145c:	20000318 	.word	0x20000318
  ldr r4, =_ebss
 8001460:	200004bc 	.word	0x200004bc

08001464 <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001464:	e7fe      	b.n	8001464 <BusFault_Handler>

08001466 <arm_fir_f32>:
void arm_fir_f32(
const arm_fir_instance_f32 * S,
float32_t * pSrc,
float32_t * pDst,
uint32_t blockSize)
{
 8001466:	b480      	push	{r7}
 8001468:	b0a7      	sub	sp, #156	; 0x9c
 800146a:	af00      	add	r7, sp, #0
 800146c:	60f8      	str	r0, [r7, #12]
 800146e:	60b9      	str	r1, [r7, #8]
 8001470:	607a      	str	r2, [r7, #4]
 8001472:	603b      	str	r3, [r7, #0]
   float32_t *pState = S->pState;                 /* State pointer */
 8001474:	68fb      	ldr	r3, [r7, #12]
 8001476:	685b      	ldr	r3, [r3, #4]
 8001478:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
   float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
 800147c:	68fb      	ldr	r3, [r7, #12]
 800147e:	689b      	ldr	r3, [r3, #8]
 8001480:	63fb      	str	r3, [r7, #60]	; 0x3c
   float32_t *pStateCurnt;                        /* Points to the current sample of the state */
   float32_t *px, *pb;                            /* Temporary pointers for state and coefficient buffers */
   float32_t acc0, acc1, acc2, acc3, acc4, acc5, acc6, acc7;     /* Accumulators */
   float32_t x0, x1, x2, x3, x4, x5, x6, x7, c0;  /* Temporary variables to hold state and coefficient values */
   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
 8001482:	68fb      	ldr	r3, [r7, #12]
 8001484:	881b      	ldrh	r3, [r3, #0]
 8001486:	63bb      	str	r3, [r7, #56]	; 0x38
   uint32_t i, tapCnt, blkCnt;                    /* Loop counters */
   float32_t p0,p1,p2,p3,p4,p5,p6,p7;             /* Temporary product values */

   /* S->pState points to state array which contains previous frame (numTaps - 1) samples */
   /* pStateCurnt points to the location where the new input data should be written */
   pStateCurnt = &(S->pState[(numTaps - 1U)]);
 8001488:	68fb      	ldr	r3, [r7, #12]
 800148a:	685a      	ldr	r2, [r3, #4]
 800148c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800148e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8001492:	3b01      	subs	r3, #1
 8001494:	009b      	lsls	r3, r3, #2
 8001496:	4413      	add	r3, r2
 8001498:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
    *    acc0 =  b[numTaps-1] * x[n-numTaps-1] + b[numTaps-2] * x[n-numTaps-2] + b[numTaps-3] * x[n-numTaps-3] +...+ b[0] * x[0]
    *    acc1 =  b[numTaps-1] * x[n-numTaps] +   b[numTaps-2] * x[n-numTaps-1] + b[numTaps-3] * x[n-numTaps-2] +...+ b[0] * x[1]
    *    acc2 =  b[numTaps-1] * x[n-numTaps+1] + b[numTaps-2] * x[n-numTaps] +   b[numTaps-3] * x[n-numTaps-1] +...+ b[0] * x[2]
    *    acc3 =  b[numTaps-1] * x[n-numTaps+2] + b[numTaps-2] * x[n-numTaps+1] + b[numTaps-3] * x[n-numTaps]   +...+ b[0] * x[3]
    */
   blkCnt = blockSize >> 3;
 800149c:	683b      	ldr	r3, [r7, #0]
 800149e:	08db      	lsrs	r3, r3, #3
 80014a0:	643b      	str	r3, [r7, #64]	; 0x40

   /* First part of the processing with loop unrolling.  Compute 8 outputs at a time.
   ** a second loop below computes the remaining 1 to 7 samples. */
   while (blkCnt > 0U)
 80014a2:	f000 bdf8 	b.w	8002096 <arm_fir_f32+0xc30>
   {
      /* Copy four new input samples into the state buffer */
      *pStateCurnt++ = *pSrc++;
 80014a6:	68ba      	ldr	r2, [r7, #8]
 80014a8:	1d13      	adds	r3, r2, #4
 80014aa:	60bb      	str	r3, [r7, #8]
 80014ac:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80014b0:	1d19      	adds	r1, r3, #4
 80014b2:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80014b6:	6812      	ldr	r2, [r2, #0]
 80014b8:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 80014ba:	68ba      	ldr	r2, [r7, #8]
 80014bc:	1d13      	adds	r3, r2, #4
 80014be:	60bb      	str	r3, [r7, #8]
 80014c0:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80014c4:	1d19      	adds	r1, r3, #4
 80014c6:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80014ca:	6812      	ldr	r2, [r2, #0]
 80014cc:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 80014ce:	68ba      	ldr	r2, [r7, #8]
 80014d0:	1d13      	adds	r3, r2, #4
 80014d2:	60bb      	str	r3, [r7, #8]
 80014d4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80014d8:	1d19      	adds	r1, r3, #4
 80014da:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80014de:	6812      	ldr	r2, [r2, #0]
 80014e0:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 80014e2:	68ba      	ldr	r2, [r7, #8]
 80014e4:	1d13      	adds	r3, r2, #4
 80014e6:	60bb      	str	r3, [r7, #8]
 80014e8:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80014ec:	1d19      	adds	r1, r3, #4
 80014ee:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80014f2:	6812      	ldr	r2, [r2, #0]
 80014f4:	601a      	str	r2, [r3, #0]

      /* Set all accumulators to zero */
      acc0 = 0.0f;
 80014f6:	f04f 0300 	mov.w	r3, #0
 80014fa:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
      acc1 = 0.0f;
 80014fe:	f04f 0300 	mov.w	r3, #0
 8001502:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
      acc2 = 0.0f;
 8001506:	f04f 0300 	mov.w	r3, #0
 800150a:	67fb      	str	r3, [r7, #124]	; 0x7c
      acc3 = 0.0f;
 800150c:	f04f 0300 	mov.w	r3, #0
 8001510:	67bb      	str	r3, [r7, #120]	; 0x78
      acc4 = 0.0f;
 8001512:	f04f 0300 	mov.w	r3, #0
 8001516:	677b      	str	r3, [r7, #116]	; 0x74
      acc5 = 0.0f;
 8001518:	f04f 0300 	mov.w	r3, #0
 800151c:	673b      	str	r3, [r7, #112]	; 0x70
      acc6 = 0.0f;
 800151e:	f04f 0300 	mov.w	r3, #0
 8001522:	66fb      	str	r3, [r7, #108]	; 0x6c
      acc7 = 0.0f;
 8001524:	f04f 0300 	mov.w	r3, #0
 8001528:	66bb      	str	r3, [r7, #104]	; 0x68

      /* Initialize state pointer */
      px = pState;
 800152a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800152e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c

      /* Initialize coeff pointer */
      pb = (pCoeffs);
 8001532:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001534:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88

      /* This is separated from the others to avoid
       * a call to __aeabi_memmove which would be slower
       */
      *pStateCurnt++ = *pSrc++;
 8001538:	68ba      	ldr	r2, [r7, #8]
 800153a:	1d13      	adds	r3, r2, #4
 800153c:	60bb      	str	r3, [r7, #8]
 800153e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001542:	1d19      	adds	r1, r3, #4
 8001544:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8001548:	6812      	ldr	r2, [r2, #0]
 800154a:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 800154c:	68ba      	ldr	r2, [r7, #8]
 800154e:	1d13      	adds	r3, r2, #4
 8001550:	60bb      	str	r3, [r7, #8]
 8001552:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001556:	1d19      	adds	r1, r3, #4
 8001558:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 800155c:	6812      	ldr	r2, [r2, #0]
 800155e:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 8001560:	68ba      	ldr	r2, [r7, #8]
 8001562:	1d13      	adds	r3, r2, #4
 8001564:	60bb      	str	r3, [r7, #8]
 8001566:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800156a:	1d19      	adds	r1, r3, #4
 800156c:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8001570:	6812      	ldr	r2, [r2, #0]
 8001572:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 8001574:	68ba      	ldr	r2, [r7, #8]
 8001576:	1d13      	adds	r3, r2, #4
 8001578:	60bb      	str	r3, [r7, #8]
 800157a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800157e:	1d19      	adds	r1, r3, #4
 8001580:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8001584:	6812      	ldr	r2, [r2, #0]
 8001586:	601a      	str	r2, [r3, #0]

      /* Read the first seven samples from the state buffer:  x[n-numTaps], x[n-numTaps-1], x[n-numTaps-2] */
      x0 = *px++;
 8001588:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800158c:	1d1a      	adds	r2, r3, #4
 800158e:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001592:	681b      	ldr	r3, [r3, #0]
 8001594:	667b      	str	r3, [r7, #100]	; 0x64
      x1 = *px++;
 8001596:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800159a:	1d1a      	adds	r2, r3, #4
 800159c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	663b      	str	r3, [r7, #96]	; 0x60
      x2 = *px++;
 80015a4:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80015a8:	1d1a      	adds	r2, r3, #4
 80015aa:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80015ae:	681b      	ldr	r3, [r3, #0]
 80015b0:	65fb      	str	r3, [r7, #92]	; 0x5c
      x3 = *px++;
 80015b2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80015b6:	1d1a      	adds	r2, r3, #4
 80015b8:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	65bb      	str	r3, [r7, #88]	; 0x58
      x4 = *px++;
 80015c0:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80015c4:	1d1a      	adds	r2, r3, #4
 80015c6:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	657b      	str	r3, [r7, #84]	; 0x54
      x5 = *px++;
 80015ce:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80015d2:	1d1a      	adds	r2, r3, #4
 80015d4:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	653b      	str	r3, [r7, #80]	; 0x50
      x6 = *px++;
 80015dc:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80015e0:	1d1a      	adds	r2, r3, #4
 80015e2:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80015e6:	681b      	ldr	r3, [r3, #0]
 80015e8:	64fb      	str	r3, [r7, #76]	; 0x4c

      /* Loop unrolling.  Process 8 taps at a time. */
      tapCnt = numTaps >> 3U;
 80015ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80015ec:	08db      	lsrs	r3, r3, #3
 80015ee:	647b      	str	r3, [r7, #68]	; 0x44

      /* Loop over the number of taps.  Unroll by a factor of 8.
       ** Repeat until we've computed numTaps-8 coefficients. */
      while (tapCnt > 0U)
 80015f0:	f000 bc73 	b.w	8001eda <arm_fir_f32+0xa74>
      {
         /* Read the b[numTaps-1] coefficient */
         c0 = *(pb++);
 80015f4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80015f8:	1d1a      	adds	r2, r3, #4
 80015fa:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-3] sample */
         x7 = *(px++);
 8001602:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001606:	1d1a      	adds	r2, r3, #4
 8001608:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800160c:	681b      	ldr	r3, [r3, #0]
 800160e:	633b      	str	r3, [r7, #48]	; 0x30

         /* acc0 +=  b[numTaps-1] * x[n-numTaps] */
         p0 = x0 * c0;
 8001610:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001614:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001618:	ee67 7a27 	vmul.f32	s15, s14, s15
 800161c:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c

         /* acc1 +=  b[numTaps-1] * x[n-numTaps-1] */
         p1 = x1 * c0;
 8001620:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001624:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001628:	ee67 7a27 	vmul.f32	s15, s14, s15
 800162c:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28

         /* acc2 +=  b[numTaps-1] * x[n-numTaps-2] */
         p2 = x2 * c0;
 8001630:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001634:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001638:	ee67 7a27 	vmul.f32	s15, s14, s15
 800163c:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24

         /* acc3 +=  b[numTaps-1] * x[n-numTaps-3] */
         p3 = x3 * c0;
 8001640:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001644:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001648:	ee67 7a27 	vmul.f32	s15, s14, s15
 800164c:	edc7 7a08 	vstr	s15, [r7, #32]

         /* acc4 +=  b[numTaps-1] * x[n-numTaps-4] */
         p4 = x4 * c0;
 8001650:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001654:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001658:	ee67 7a27 	vmul.f32	s15, s14, s15
 800165c:	edc7 7a07 	vstr	s15, [r7, #28]

         /* acc1 +=  b[numTaps-1] * x[n-numTaps-5] */
         p5 = x5 * c0;
 8001660:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001664:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001668:	ee67 7a27 	vmul.f32	s15, s14, s15
 800166c:	edc7 7a06 	vstr	s15, [r7, #24]

         /* acc2 +=  b[numTaps-1] * x[n-numTaps-6] */
         p6 = x6 * c0;
 8001670:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001674:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001678:	ee67 7a27 	vmul.f32	s15, s14, s15
 800167c:	edc7 7a05 	vstr	s15, [r7, #20]

         /* acc3 +=  b[numTaps-1] * x[n-numTaps-7] */
         p7 = x7 * c0;
 8001680:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001684:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001688:	ee67 7a27 	vmul.f32	s15, s14, s15
 800168c:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-2] coefficient */
         c0 = *(pb++);
 8001690:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001694:	1d1a      	adds	r2, r3, #4
 8001696:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 800169a:	681b      	ldr	r3, [r3, #0]
 800169c:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-4] sample */
         x0 = *(px++);
 800169e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80016a2:	1d1a      	adds	r2, r3, #4
 80016a4:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80016a8:	681b      	ldr	r3, [r3, #0]
 80016aa:	667b      	str	r3, [r7, #100]	; 0x64

         acc0 += p0;
 80016ac:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80016b0:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80016b4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016b8:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 80016bc:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 80016c0:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80016c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016c8:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 80016cc:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 80016d0:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80016d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016d8:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 80016dc:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 80016e0:	edd7 7a08 	vldr	s15, [r7, #32]
 80016e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016e8:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 80016ec:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 80016f0:	edd7 7a07 	vldr	s15, [r7, #28]
 80016f4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016f8:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 80016fc:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001700:	edd7 7a06 	vldr	s15, [r7, #24]
 8001704:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001708:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 800170c:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001710:	edd7 7a05 	vldr	s15, [r7, #20]
 8001714:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001718:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 800171c:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001720:	edd7 7a04 	vldr	s15, [r7, #16]
 8001724:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001728:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68


         /* Perform the multiply-accumulate */
         p0 = x1 * c0;
 800172c:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001730:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001734:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001738:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x2 * c0;
 800173c:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001740:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001744:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001748:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x3 * c0;
 800174c:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001750:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001754:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001758:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x4 * c0;
 800175c:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001760:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001764:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001768:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x5 * c0;
 800176c:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001770:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001774:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001778:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x6 * c0;
 800177c:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001780:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001784:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001788:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x7 * c0;
 800178c:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001790:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001794:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001798:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x0 * c0;
 800179c:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 80017a0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80017a4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80017a8:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-3] coefficient */
         c0 = *(pb++);
 80017ac:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80017b0:	1d1a      	adds	r2, r3, #4
 80017b2:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-5] sample */
         x1 = *(px++);
 80017ba:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80017be:	1d1a      	adds	r2, r3, #4
 80017c0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	663b      	str	r3, [r7, #96]	; 0x60

         acc0 += p0;
 80017c8:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80017cc:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80017d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017d4:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 80017d8:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 80017dc:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80017e0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017e4:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 80017e8:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 80017ec:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80017f0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017f4:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 80017f8:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 80017fc:	edd7 7a08 	vldr	s15, [r7, #32]
 8001800:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001804:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001808:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 800180c:	edd7 7a07 	vldr	s15, [r7, #28]
 8001810:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001814:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001818:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 800181c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001820:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001824:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001828:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 800182c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001830:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001834:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001838:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 800183c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001840:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001844:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x2 * c0;
 8001848:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 800184c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001850:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001854:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x3 * c0;
 8001858:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 800185c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001860:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001864:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x4 * c0;
 8001868:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 800186c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001870:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001874:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x5 * c0;
 8001878:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 800187c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001880:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001884:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x6 * c0;
 8001888:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 800188c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001890:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001894:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x7 * c0;
 8001898:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800189c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80018a0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80018a4:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x0 * c0;
 80018a8:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 80018ac:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80018b0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80018b4:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x1 * c0;
 80018b8:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 80018bc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80018c0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80018c4:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 80018c8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80018cc:	1d1a      	adds	r2, r3, #4
 80018ce:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80018d2:	681b      	ldr	r3, [r3, #0]
 80018d4:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x2 = *(px++);
 80018d6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80018da:	1d1a      	adds	r2, r3, #4
 80018dc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80018e0:	681b      	ldr	r3, [r3, #0]
 80018e2:	65fb      	str	r3, [r7, #92]	; 0x5c

         acc0 += p0;
 80018e4:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80018e8:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80018ec:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018f0:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 80018f4:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 80018f8:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80018fc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001900:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001904:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001908:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 800190c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001910:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001914:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001918:	edd7 7a08 	vldr	s15, [r7, #32]
 800191c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001920:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001924:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001928:	edd7 7a07 	vldr	s15, [r7, #28]
 800192c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001930:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001934:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001938:	edd7 7a06 	vldr	s15, [r7, #24]
 800193c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001940:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001944:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001948:	edd7 7a05 	vldr	s15, [r7, #20]
 800194c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001950:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001954:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001958:	edd7 7a04 	vldr	s15, [r7, #16]
 800195c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001960:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x3 * c0;
 8001964:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001968:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800196c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001970:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x4 * c0;
 8001974:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001978:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800197c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001980:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x5 * c0;
 8001984:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001988:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800198c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001990:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x6 * c0;
 8001994:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001998:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800199c:	ee67 7a27 	vmul.f32	s15, s14, s15
 80019a0:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x7 * c0;
 80019a4:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 80019a8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80019ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80019b0:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x0 * c0;
 80019b4:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 80019b8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80019bc:	ee67 7a27 	vmul.f32	s15, s14, s15
 80019c0:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x1 * c0;
 80019c4:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 80019c8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80019cc:	ee67 7a27 	vmul.f32	s15, s14, s15
 80019d0:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x2 * c0;
 80019d4:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 80019d8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80019dc:	ee67 7a27 	vmul.f32	s15, s14, s15
 80019e0:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 80019e4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80019e8:	1d1a      	adds	r2, r3, #4
 80019ea:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x3 = *(px++);
 80019f2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80019f6:	1d1a      	adds	r2, r3, #4
 80019f8:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80019fc:	681b      	ldr	r3, [r3, #0]
 80019fe:	65bb      	str	r3, [r7, #88]	; 0x58

         acc0 += p0;
 8001a00:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001a04:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001a08:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a0c:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001a10:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001a14:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001a18:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a1c:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001a20:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001a24:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001a28:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a2c:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001a30:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001a34:	edd7 7a08 	vldr	s15, [r7, #32]
 8001a38:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a3c:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001a40:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001a44:	edd7 7a07 	vldr	s15, [r7, #28]
 8001a48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a4c:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001a50:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001a54:	edd7 7a06 	vldr	s15, [r7, #24]
 8001a58:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a5c:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001a60:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001a64:	edd7 7a05 	vldr	s15, [r7, #20]
 8001a68:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a6c:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001a70:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001a74:	edd7 7a04 	vldr	s15, [r7, #16]
 8001a78:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a7c:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x4 * c0;
 8001a80:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001a84:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001a88:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001a8c:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x5 * c0;
 8001a90:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001a94:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001a98:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001a9c:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x6 * c0;
 8001aa0:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001aa4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001aa8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001aac:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x7 * c0;
 8001ab0:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001ab4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ab8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001abc:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x0 * c0;
 8001ac0:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001ac4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ac8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001acc:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x1 * c0;
 8001ad0:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001ad4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ad8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001adc:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x2 * c0;
 8001ae0:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001ae4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ae8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001aec:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x3 * c0;
 8001af0:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001af4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001af8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001afc:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 8001b00:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001b04:	1d1a      	adds	r2, r3, #4
 8001b06:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001b0a:	681b      	ldr	r3, [r3, #0]
 8001b0c:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x4 = *(px++);
 8001b0e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001b12:	1d1a      	adds	r2, r3, #4
 8001b14:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	657b      	str	r3, [r7, #84]	; 0x54

         acc0 += p0;
 8001b1c:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001b20:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001b24:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b28:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001b2c:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001b30:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001b34:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b38:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001b3c:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001b40:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001b44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b48:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001b4c:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001b50:	edd7 7a08 	vldr	s15, [r7, #32]
 8001b54:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b58:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001b5c:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001b60:	edd7 7a07 	vldr	s15, [r7, #28]
 8001b64:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b68:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001b6c:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001b70:	edd7 7a06 	vldr	s15, [r7, #24]
 8001b74:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b78:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001b7c:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001b80:	edd7 7a05 	vldr	s15, [r7, #20]
 8001b84:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b88:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001b8c:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001b90:	edd7 7a04 	vldr	s15, [r7, #16]
 8001b94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b98:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x5 * c0;
 8001b9c:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001ba0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ba4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ba8:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x6 * c0;
 8001bac:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001bb0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bb4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bb8:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x7 * c0;
 8001bbc:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001bc0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bc4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bc8:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x0 * c0;
 8001bcc:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001bd0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bd4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bd8:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x1 * c0;
 8001bdc:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001be0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001be4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001be8:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x2 * c0;
 8001bec:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001bf0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bf4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bf8:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x3 * c0;
 8001bfc:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001c00:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001c04:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001c08:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x4 * c0;
 8001c0c:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001c10:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001c14:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001c18:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 8001c1c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001c20:	1d1a      	adds	r2, r3, #4
 8001c22:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x5 = *(px++);
 8001c2a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001c2e:	1d1a      	adds	r2, r3, #4
 8001c30:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	653b      	str	r3, [r7, #80]	; 0x50

         acc0 += p0;
 8001c38:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001c3c:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001c40:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c44:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001c48:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001c4c:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001c50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c54:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001c58:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001c5c:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001c60:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c64:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001c68:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001c6c:	edd7 7a08 	vldr	s15, [r7, #32]
 8001c70:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c74:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001c78:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001c7c:	edd7 7a07 	vldr	s15, [r7, #28]
 8001c80:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c84:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001c88:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001c8c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001c90:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c94:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001c98:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001c9c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001ca0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ca4:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001ca8:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001cac:	edd7 7a04 	vldr	s15, [r7, #16]
 8001cb0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001cb4:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x6 * c0;
 8001cb8:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001cbc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cc0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cc4:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x7 * c0;
 8001cc8:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001ccc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cd0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cd4:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x0 * c0;
 8001cd8:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001cdc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ce0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ce4:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x1 * c0;
 8001ce8:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001cec:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cf0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cf4:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x2 * c0;
 8001cf8:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001cfc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001d00:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d04:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x3 * c0;
 8001d08:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001d0c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001d10:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d14:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x4 * c0;
 8001d18:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001d1c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001d20:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d24:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x5 * c0;
 8001d28:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001d2c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001d30:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d34:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 8001d38:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001d3c:	1d1a      	adds	r2, r3, #4
 8001d3e:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x6 = *(px++);
 8001d46:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001d4a:	1d1a      	adds	r2, r3, #4
 8001d4c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	64fb      	str	r3, [r7, #76]	; 0x4c

         acc0 += p0;
 8001d54:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001d58:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001d5c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d60:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001d64:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001d68:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001d6c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d70:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001d74:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001d78:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001d7c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d80:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001d84:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001d88:	edd7 7a08 	vldr	s15, [r7, #32]
 8001d8c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d90:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001d94:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001d98:	edd7 7a07 	vldr	s15, [r7, #28]
 8001d9c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001da0:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001da4:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001da8:	edd7 7a06 	vldr	s15, [r7, #24]
 8001dac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001db0:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001db4:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001db8:	edd7 7a05 	vldr	s15, [r7, #20]
 8001dbc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001dc0:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001dc4:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001dc8:	edd7 7a04 	vldr	s15, [r7, #16]
 8001dcc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001dd0:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x7 * c0;
 8001dd4:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001dd8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ddc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001de0:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x0 * c0;
 8001de4:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001de8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001dec:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001df0:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x1 * c0;
 8001df4:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001df8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001dfc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e00:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x2 * c0;
 8001e04:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001e08:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e0c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e10:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x3 * c0;
 8001e14:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001e18:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e1c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e20:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x4 * c0;
 8001e24:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001e28:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e2c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e30:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x5 * c0;
 8001e34:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001e38:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e3c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e40:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x6 * c0;
 8001e44:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001e48:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e4c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e50:	edc7 7a04 	vstr	s15, [r7, #16]

         tapCnt--;
 8001e54:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001e56:	3b01      	subs	r3, #1
 8001e58:	647b      	str	r3, [r7, #68]	; 0x44

         acc0 += p0;
 8001e5a:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001e5e:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001e62:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e66:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001e6a:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001e6e:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001e72:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e76:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001e7a:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001e7e:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001e82:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e86:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001e8a:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001e8e:	edd7 7a08 	vldr	s15, [r7, #32]
 8001e92:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e96:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001e9a:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001e9e:	edd7 7a07 	vldr	s15, [r7, #28]
 8001ea2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ea6:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001eaa:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001eae:	edd7 7a06 	vldr	s15, [r7, #24]
 8001eb2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001eb6:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001eba:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001ebe:	edd7 7a05 	vldr	s15, [r7, #20]
 8001ec2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ec6:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001eca:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001ece:	edd7 7a04 	vldr	s15, [r7, #16]
 8001ed2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ed6:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68
      while (tapCnt > 0U)
 8001eda:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	f47f ab89 	bne.w	80015f4 <arm_fir_f32+0x18e>
      }

      /* If the filter length is not a multiple of 8, compute the remaining filter taps */
      tapCnt = numTaps % 0x8U;
 8001ee2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001ee4:	f003 0307 	and.w	r3, r3, #7
 8001ee8:	647b      	str	r3, [r7, #68]	; 0x44

      while (tapCnt > 0U)
 8001eea:	e09e      	b.n	800202a <arm_fir_f32+0xbc4>
      {
         /* Read coefficients */
         c0 = *(pb++);
 8001eec:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001ef0:	1d1a      	adds	r2, r3, #4
 8001ef2:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001ef6:	681b      	ldr	r3, [r3, #0]
 8001ef8:	637b      	str	r3, [r7, #52]	; 0x34

         /* Fetch 1 state variable */
         x7 = *(px++);
 8001efa:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001efe:	1d1a      	adds	r2, r3, #4
 8001f00:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001f04:	681b      	ldr	r3, [r3, #0]
 8001f06:	633b      	str	r3, [r7, #48]	; 0x30

         /* Perform the multiply-accumulates */
         p0 = x0 * c0;
 8001f08:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001f0c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f10:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f14:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x1 * c0;
 8001f18:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001f1c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f20:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f24:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x2 * c0;
 8001f28:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001f2c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f30:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f34:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x3 * c0;
 8001f38:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001f3c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f40:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f44:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x4 * c0;
 8001f48:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001f4c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f50:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f54:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x5 * c0;
 8001f58:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001f5c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f60:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f64:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x6 * c0;
 8001f68:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001f6c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f70:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f74:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x7 * c0;
 8001f78:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001f7c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f80:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f84:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Reuse the present sample states for next sample */
         x0 = x1;
 8001f88:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8001f8a:	667b      	str	r3, [r7, #100]	; 0x64
         x1 = x2;
 8001f8c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8001f8e:	663b      	str	r3, [r7, #96]	; 0x60
         x2 = x3;
 8001f90:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8001f92:	65fb      	str	r3, [r7, #92]	; 0x5c
         x3 = x4;
 8001f94:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8001f96:	65bb      	str	r3, [r7, #88]	; 0x58
         x4 = x5;
 8001f98:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001f9a:	657b      	str	r3, [r7, #84]	; 0x54
         x5 = x6;
 8001f9c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8001f9e:	653b      	str	r3, [r7, #80]	; 0x50
         x6 = x7;
 8001fa0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001fa2:	64fb      	str	r3, [r7, #76]	; 0x4c

         acc0 += p0;
 8001fa4:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001fa8:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001fac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fb0:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001fb4:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001fb8:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001fbc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fc0:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001fc4:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001fc8:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001fcc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fd0:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001fd4:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001fd8:	edd7 7a08 	vldr	s15, [r7, #32]
 8001fdc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fe0:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001fe4:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001fe8:	edd7 7a07 	vldr	s15, [r7, #28]
 8001fec:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ff0:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001ff4:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001ff8:	edd7 7a06 	vldr	s15, [r7, #24]
 8001ffc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002000:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8002004:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8002008:	edd7 7a05 	vldr	s15, [r7, #20]
 800200c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002010:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8002014:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8002018:	edd7 7a04 	vldr	s15, [r7, #16]
 800201c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002020:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Decrement the loop counter */
         tapCnt--;
 8002024:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002026:	3b01      	subs	r3, #1
 8002028:	647b      	str	r3, [r7, #68]	; 0x44
      while (tapCnt > 0U)
 800202a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800202c:	2b00      	cmp	r3, #0
 800202e:	f47f af5d 	bne.w	8001eec <arm_fir_f32+0xa86>
      }

      /* Advance the state pointer by 8 to process the next group of 8 samples */
      pState = pState + 8;
 8002032:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002036:	3320      	adds	r3, #32
 8002038:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94

      /* The results in the 8 accumulators, store in the destination buffer. */
      *pDst++ = acc0;
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	1d1a      	adds	r2, r3, #4
 8002040:	607a      	str	r2, [r7, #4]
 8002042:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8002046:	601a      	str	r2, [r3, #0]
      *pDst++ = acc1;
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	1d1a      	adds	r2, r3, #4
 800204c:	607a      	str	r2, [r7, #4]
 800204e:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8002052:	601a      	str	r2, [r3, #0]
      *pDst++ = acc2;
 8002054:	687b      	ldr	r3, [r7, #4]
 8002056:	1d1a      	adds	r2, r3, #4
 8002058:	607a      	str	r2, [r7, #4]
 800205a:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800205c:	601a      	str	r2, [r3, #0]
      *pDst++ = acc3;
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	1d1a      	adds	r2, r3, #4
 8002062:	607a      	str	r2, [r7, #4]
 8002064:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8002066:	601a      	str	r2, [r3, #0]
      *pDst++ = acc4;
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	1d1a      	adds	r2, r3, #4
 800206c:	607a      	str	r2, [r7, #4]
 800206e:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 8002070:	601a      	str	r2, [r3, #0]
      *pDst++ = acc5;
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	1d1a      	adds	r2, r3, #4
 8002076:	607a      	str	r2, [r7, #4]
 8002078:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 800207a:	601a      	str	r2, [r3, #0]
      *pDst++ = acc6;
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	1d1a      	adds	r2, r3, #4
 8002080:	607a      	str	r2, [r7, #4]
 8002082:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 8002084:	601a      	str	r2, [r3, #0]
      *pDst++ = acc7;
 8002086:	687b      	ldr	r3, [r7, #4]
 8002088:	1d1a      	adds	r2, r3, #4
 800208a:	607a      	str	r2, [r7, #4]
 800208c:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800208e:	601a      	str	r2, [r3, #0]

      blkCnt--;
 8002090:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002092:	3b01      	subs	r3, #1
 8002094:	643b      	str	r3, [r7, #64]	; 0x40
   while (blkCnt > 0U)
 8002096:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002098:	2b00      	cmp	r3, #0
 800209a:	f47f aa04 	bne.w	80014a6 <arm_fir_f32+0x40>
   }

   /* If the blockSize is not a multiple of 8, compute any remaining output samples here.
   ** No loop unrolling is used. */
   blkCnt = blockSize % 0x8U;
 800209e:	683b      	ldr	r3, [r7, #0]
 80020a0:	f003 0307 	and.w	r3, r3, #7
 80020a4:	643b      	str	r3, [r7, #64]	; 0x40

   while (blkCnt > 0U)
 80020a6:	e040      	b.n	800212a <arm_fir_f32+0xcc4>
   {
      /* Copy one sample at a time into state buffer */
      *pStateCurnt++ = *pSrc++;
 80020a8:	68ba      	ldr	r2, [r7, #8]
 80020aa:	1d13      	adds	r3, r2, #4
 80020ac:	60bb      	str	r3, [r7, #8]
 80020ae:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80020b2:	1d19      	adds	r1, r3, #4
 80020b4:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80020b8:	6812      	ldr	r2, [r2, #0]
 80020ba:	601a      	str	r2, [r3, #0]

      /* Set the accumulator to zero */
      acc0 = 0.0f;
 80020bc:	f04f 0300 	mov.w	r3, #0
 80020c0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84

      /* Initialize state pointer */
      px = pState;
 80020c4:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80020c8:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c

      /* Initialize Coefficient pointer */
      pb = (pCoeffs);
 80020cc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80020ce:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88

      i = numTaps;
 80020d2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80020d4:	64bb      	str	r3, [r7, #72]	; 0x48

      /* Perform the multiply-accumulates */
      do
      {
         acc0 += *px++ * *pb++;
 80020d6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80020da:	1d1a      	adds	r2, r3, #4
 80020dc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80020e0:	ed93 7a00 	vldr	s14, [r3]
 80020e4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80020e8:	1d1a      	adds	r2, r3, #4
 80020ea:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80020ee:	edd3 7a00 	vldr	s15, [r3]
 80020f2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80020f6:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80020fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020fe:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         i--;
 8002102:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002104:	3b01      	subs	r3, #1
 8002106:	64bb      	str	r3, [r7, #72]	; 0x48

      } while (i > 0U);
 8002108:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800210a:	2b00      	cmp	r3, #0
 800210c:	d1e3      	bne.n	80020d6 <arm_fir_f32+0xc70>

      /* The result is store in the destination buffer. */
      *pDst++ = acc0;
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	1d1a      	adds	r2, r3, #4
 8002112:	607a      	str	r2, [r7, #4]
 8002114:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8002118:	601a      	str	r2, [r3, #0]

      /* Advance state pointer by 1 for the next sample */
      pState = pState + 1;
 800211a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800211e:	3304      	adds	r3, #4
 8002120:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94

      blkCnt--;
 8002124:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002126:	3b01      	subs	r3, #1
 8002128:	643b      	str	r3, [r7, #64]	; 0x40
   while (blkCnt > 0U)
 800212a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800212c:	2b00      	cmp	r3, #0
 800212e:	d1bb      	bne.n	80020a8 <arm_fir_f32+0xc42>
   /* Processing is complete.
   ** Now copy the last numTaps - 1 samples to the start of the state buffer.
   ** This prepares the state buffer for the next function call. */

   /* Points to the start of the state buffer */
   pStateCurnt = S->pState;
 8002130:	68fb      	ldr	r3, [r7, #12]
 8002132:	685b      	ldr	r3, [r3, #4]
 8002134:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90

   tapCnt = (numTaps - 1U) >> 2U;
 8002138:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800213a:	3b01      	subs	r3, #1
 800213c:	089b      	lsrs	r3, r3, #2
 800213e:	647b      	str	r3, [r7, #68]	; 0x44

   /* copy data */
   while (tapCnt > 0U)
 8002140:	e032      	b.n	80021a8 <arm_fir_f32+0xd42>
   {
      *pStateCurnt++ = *pState++;
 8002142:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8002146:	1d13      	adds	r3, r2, #4
 8002148:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800214c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002150:	1d19      	adds	r1, r3, #4
 8002152:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8002156:	6812      	ldr	r2, [r2, #0]
 8002158:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pState++;
 800215a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800215e:	1d13      	adds	r3, r2, #4
 8002160:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8002164:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002168:	1d19      	adds	r1, r3, #4
 800216a:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 800216e:	6812      	ldr	r2, [r2, #0]
 8002170:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pState++;
 8002172:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8002176:	1d13      	adds	r3, r2, #4
 8002178:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800217c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002180:	1d19      	adds	r1, r3, #4
 8002182:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8002186:	6812      	ldr	r2, [r2, #0]
 8002188:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pState++;
 800218a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800218e:	1d13      	adds	r3, r2, #4
 8002190:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8002194:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002198:	1d19      	adds	r1, r3, #4
 800219a:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 800219e:	6812      	ldr	r2, [r2, #0]
 80021a0:	601a      	str	r2, [r3, #0]

      /* Decrement the loop counter */
      tapCnt--;
 80021a2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80021a4:	3b01      	subs	r3, #1
 80021a6:	647b      	str	r3, [r7, #68]	; 0x44
   while (tapCnt > 0U)
 80021a8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80021aa:	2b00      	cmp	r3, #0
 80021ac:	d1c9      	bne.n	8002142 <arm_fir_f32+0xcdc>
   }

   /* Calculate remaining number of copies */
   tapCnt = (numTaps - 1U) % 0x4U;
 80021ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80021b0:	3b01      	subs	r3, #1
 80021b2:	f003 0303 	and.w	r3, r3, #3
 80021b6:	647b      	str	r3, [r7, #68]	; 0x44

   /* Copy the remaining q31_t data */
   while (tapCnt > 0U)
 80021b8:	e00e      	b.n	80021d8 <arm_fir_f32+0xd72>
   {
      *pStateCurnt++ = *pState++;
 80021ba:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80021be:	1d13      	adds	r3, r2, #4
 80021c0:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80021c4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80021c8:	1d19      	adds	r1, r3, #4
 80021ca:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80021ce:	6812      	ldr	r2, [r2, #0]
 80021d0:	601a      	str	r2, [r3, #0]

      /* Decrement the loop counter */
      tapCnt--;
 80021d2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80021d4:	3b01      	subs	r3, #1
 80021d6:	647b      	str	r3, [r7, #68]	; 0x44
   while (tapCnt > 0U)
 80021d8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80021da:	2b00      	cmp	r3, #0
 80021dc:	d1ed      	bne.n	80021ba <arm_fir_f32+0xd54>
   }
}
 80021de:	bf00      	nop
 80021e0:	bf00      	nop
 80021e2:	379c      	adds	r7, #156	; 0x9c
 80021e4:	46bd      	mov	sp, r7
 80021e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ea:	4770      	bx	lr

080021ec <arm_fir_init_f32>:
  arm_fir_instance_f32 * S,
  uint16_t numTaps,
  float32_t * pCoeffs,
  float32_t * pState,
  uint32_t blockSize)
{
 80021ec:	b580      	push	{r7, lr}
 80021ee:	b084      	sub	sp, #16
 80021f0:	af00      	add	r7, sp, #0
 80021f2:	60f8      	str	r0, [r7, #12]
 80021f4:	607a      	str	r2, [r7, #4]
 80021f6:	603b      	str	r3, [r7, #0]
 80021f8:	460b      	mov	r3, r1
 80021fa:	817b      	strh	r3, [r7, #10]
  /* Assign filter taps */
  S->numTaps = numTaps;
 80021fc:	68fb      	ldr	r3, [r7, #12]
 80021fe:	897a      	ldrh	r2, [r7, #10]
 8002200:	801a      	strh	r2, [r3, #0]

  /* Assign coefficient pointer */
  S->pCoeffs = pCoeffs;
 8002202:	68fb      	ldr	r3, [r7, #12]
 8002204:	687a      	ldr	r2, [r7, #4]
 8002206:	609a      	str	r2, [r3, #8]

  /* Clear state buffer and the size of state buffer is (blockSize + numTaps - 1) */
  memset(pState, 0, (numTaps + (blockSize - 1U)) * sizeof(float32_t));
 8002208:	897a      	ldrh	r2, [r7, #10]
 800220a:	69bb      	ldr	r3, [r7, #24]
 800220c:	4413      	add	r3, r2
 800220e:	3b01      	subs	r3, #1
 8002210:	009b      	lsls	r3, r3, #2
 8002212:	461a      	mov	r2, r3
 8002214:	2100      	movs	r1, #0
 8002216:	6838      	ldr	r0, [r7, #0]
 8002218:	f000 f832 	bl	8002280 <memset>

  /* Assign state pointer */
  S->pState = pState;
 800221c:	68fb      	ldr	r3, [r7, #12]
 800221e:	683a      	ldr	r2, [r7, #0]
 8002220:	605a      	str	r2, [r3, #4]

}
 8002222:	bf00      	nop
 8002224:	3710      	adds	r7, #16
 8002226:	46bd      	mov	sp, r7
 8002228:	bd80      	pop	{r7, pc}
	...

0800222c <__errno>:
 800222c:	4b01      	ldr	r3, [pc, #4]	; (8002234 <__errno+0x8>)
 800222e:	6818      	ldr	r0, [r3, #0]
 8002230:	4770      	bx	lr
 8002232:	bf00      	nop
 8002234:	20000148 	.word	0x20000148

08002238 <__libc_init_array>:
 8002238:	b570      	push	{r4, r5, r6, lr}
 800223a:	4d0d      	ldr	r5, [pc, #52]	; (8002270 <__libc_init_array+0x38>)
 800223c:	4c0d      	ldr	r4, [pc, #52]	; (8002274 <__libc_init_array+0x3c>)
 800223e:	1b64      	subs	r4, r4, r5
 8002240:	10a4      	asrs	r4, r4, #2
 8002242:	2600      	movs	r6, #0
 8002244:	42a6      	cmp	r6, r4
 8002246:	d109      	bne.n	800225c <__libc_init_array+0x24>
 8002248:	4d0b      	ldr	r5, [pc, #44]	; (8002278 <__libc_init_array+0x40>)
 800224a:	4c0c      	ldr	r4, [pc, #48]	; (800227c <__libc_init_array+0x44>)
 800224c:	f002 fdc2 	bl	8004dd4 <_init>
 8002250:	1b64      	subs	r4, r4, r5
 8002252:	10a4      	asrs	r4, r4, #2
 8002254:	2600      	movs	r6, #0
 8002256:	42a6      	cmp	r6, r4
 8002258:	d105      	bne.n	8002266 <__libc_init_array+0x2e>
 800225a:	bd70      	pop	{r4, r5, r6, pc}
 800225c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002260:	4798      	blx	r3
 8002262:	3601      	adds	r6, #1
 8002264:	e7ee      	b.n	8002244 <__libc_init_array+0xc>
 8002266:	f855 3b04 	ldr.w	r3, [r5], #4
 800226a:	4798      	blx	r3
 800226c:	3601      	adds	r6, #1
 800226e:	e7f2      	b.n	8002256 <__libc_init_array+0x1e>
 8002270:	08005224 	.word	0x08005224
 8002274:	08005224 	.word	0x08005224
 8002278:	08005224 	.word	0x08005224
 800227c:	08005228 	.word	0x08005228

08002280 <memset>:
 8002280:	4402      	add	r2, r0
 8002282:	4603      	mov	r3, r0
 8002284:	4293      	cmp	r3, r2
 8002286:	d100      	bne.n	800228a <memset+0xa>
 8002288:	4770      	bx	lr
 800228a:	f803 1b01 	strb.w	r1, [r3], #1
 800228e:	e7f9      	b.n	8002284 <memset+0x4>

08002290 <__cvt>:
 8002290:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002294:	ec55 4b10 	vmov	r4, r5, d0
 8002298:	2d00      	cmp	r5, #0
 800229a:	460e      	mov	r6, r1
 800229c:	4619      	mov	r1, r3
 800229e:	462b      	mov	r3, r5
 80022a0:	bfbb      	ittet	lt
 80022a2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80022a6:	461d      	movlt	r5, r3
 80022a8:	2300      	movge	r3, #0
 80022aa:	232d      	movlt	r3, #45	; 0x2d
 80022ac:	700b      	strb	r3, [r1, #0]
 80022ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80022b0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80022b4:	4691      	mov	r9, r2
 80022b6:	f023 0820 	bic.w	r8, r3, #32
 80022ba:	bfbc      	itt	lt
 80022bc:	4622      	movlt	r2, r4
 80022be:	4614      	movlt	r4, r2
 80022c0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80022c4:	d005      	beq.n	80022d2 <__cvt+0x42>
 80022c6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80022ca:	d100      	bne.n	80022ce <__cvt+0x3e>
 80022cc:	3601      	adds	r6, #1
 80022ce:	2102      	movs	r1, #2
 80022d0:	e000      	b.n	80022d4 <__cvt+0x44>
 80022d2:	2103      	movs	r1, #3
 80022d4:	ab03      	add	r3, sp, #12
 80022d6:	9301      	str	r3, [sp, #4]
 80022d8:	ab02      	add	r3, sp, #8
 80022da:	9300      	str	r3, [sp, #0]
 80022dc:	ec45 4b10 	vmov	d0, r4, r5
 80022e0:	4653      	mov	r3, sl
 80022e2:	4632      	mov	r2, r6
 80022e4:	f000 fe18 	bl	8002f18 <_dtoa_r>
 80022e8:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80022ec:	4607      	mov	r7, r0
 80022ee:	d102      	bne.n	80022f6 <__cvt+0x66>
 80022f0:	f019 0f01 	tst.w	r9, #1
 80022f4:	d022      	beq.n	800233c <__cvt+0xac>
 80022f6:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80022fa:	eb07 0906 	add.w	r9, r7, r6
 80022fe:	d110      	bne.n	8002322 <__cvt+0x92>
 8002300:	783b      	ldrb	r3, [r7, #0]
 8002302:	2b30      	cmp	r3, #48	; 0x30
 8002304:	d10a      	bne.n	800231c <__cvt+0x8c>
 8002306:	2200      	movs	r2, #0
 8002308:	2300      	movs	r3, #0
 800230a:	4620      	mov	r0, r4
 800230c:	4629      	mov	r1, r5
 800230e:	f7fe fbeb 	bl	8000ae8 <__aeabi_dcmpeq>
 8002312:	b918      	cbnz	r0, 800231c <__cvt+0x8c>
 8002314:	f1c6 0601 	rsb	r6, r6, #1
 8002318:	f8ca 6000 	str.w	r6, [sl]
 800231c:	f8da 3000 	ldr.w	r3, [sl]
 8002320:	4499      	add	r9, r3
 8002322:	2200      	movs	r2, #0
 8002324:	2300      	movs	r3, #0
 8002326:	4620      	mov	r0, r4
 8002328:	4629      	mov	r1, r5
 800232a:	f7fe fbdd 	bl	8000ae8 <__aeabi_dcmpeq>
 800232e:	b108      	cbz	r0, 8002334 <__cvt+0xa4>
 8002330:	f8cd 900c 	str.w	r9, [sp, #12]
 8002334:	2230      	movs	r2, #48	; 0x30
 8002336:	9b03      	ldr	r3, [sp, #12]
 8002338:	454b      	cmp	r3, r9
 800233a:	d307      	bcc.n	800234c <__cvt+0xbc>
 800233c:	9b03      	ldr	r3, [sp, #12]
 800233e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002340:	1bdb      	subs	r3, r3, r7
 8002342:	4638      	mov	r0, r7
 8002344:	6013      	str	r3, [r2, #0]
 8002346:	b004      	add	sp, #16
 8002348:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800234c:	1c59      	adds	r1, r3, #1
 800234e:	9103      	str	r1, [sp, #12]
 8002350:	701a      	strb	r2, [r3, #0]
 8002352:	e7f0      	b.n	8002336 <__cvt+0xa6>

08002354 <__exponent>:
 8002354:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002356:	4603      	mov	r3, r0
 8002358:	2900      	cmp	r1, #0
 800235a:	bfb8      	it	lt
 800235c:	4249      	neglt	r1, r1
 800235e:	f803 2b02 	strb.w	r2, [r3], #2
 8002362:	bfb4      	ite	lt
 8002364:	222d      	movlt	r2, #45	; 0x2d
 8002366:	222b      	movge	r2, #43	; 0x2b
 8002368:	2909      	cmp	r1, #9
 800236a:	7042      	strb	r2, [r0, #1]
 800236c:	dd2a      	ble.n	80023c4 <__exponent+0x70>
 800236e:	f10d 0407 	add.w	r4, sp, #7
 8002372:	46a4      	mov	ip, r4
 8002374:	270a      	movs	r7, #10
 8002376:	46a6      	mov	lr, r4
 8002378:	460a      	mov	r2, r1
 800237a:	fb91 f6f7 	sdiv	r6, r1, r7
 800237e:	fb07 1516 	mls	r5, r7, r6, r1
 8002382:	3530      	adds	r5, #48	; 0x30
 8002384:	2a63      	cmp	r2, #99	; 0x63
 8002386:	f104 34ff 	add.w	r4, r4, #4294967295
 800238a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800238e:	4631      	mov	r1, r6
 8002390:	dcf1      	bgt.n	8002376 <__exponent+0x22>
 8002392:	3130      	adds	r1, #48	; 0x30
 8002394:	f1ae 0502 	sub.w	r5, lr, #2
 8002398:	f804 1c01 	strb.w	r1, [r4, #-1]
 800239c:	1c44      	adds	r4, r0, #1
 800239e:	4629      	mov	r1, r5
 80023a0:	4561      	cmp	r1, ip
 80023a2:	d30a      	bcc.n	80023ba <__exponent+0x66>
 80023a4:	f10d 0209 	add.w	r2, sp, #9
 80023a8:	eba2 020e 	sub.w	r2, r2, lr
 80023ac:	4565      	cmp	r5, ip
 80023ae:	bf88      	it	hi
 80023b0:	2200      	movhi	r2, #0
 80023b2:	4413      	add	r3, r2
 80023b4:	1a18      	subs	r0, r3, r0
 80023b6:	b003      	add	sp, #12
 80023b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023ba:	f811 2b01 	ldrb.w	r2, [r1], #1
 80023be:	f804 2f01 	strb.w	r2, [r4, #1]!
 80023c2:	e7ed      	b.n	80023a0 <__exponent+0x4c>
 80023c4:	2330      	movs	r3, #48	; 0x30
 80023c6:	3130      	adds	r1, #48	; 0x30
 80023c8:	7083      	strb	r3, [r0, #2]
 80023ca:	70c1      	strb	r1, [r0, #3]
 80023cc:	1d03      	adds	r3, r0, #4
 80023ce:	e7f1      	b.n	80023b4 <__exponent+0x60>

080023d0 <_printf_float>:
 80023d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023d4:	ed2d 8b02 	vpush	{d8}
 80023d8:	b08d      	sub	sp, #52	; 0x34
 80023da:	460c      	mov	r4, r1
 80023dc:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80023e0:	4616      	mov	r6, r2
 80023e2:	461f      	mov	r7, r3
 80023e4:	4605      	mov	r5, r0
 80023e6:	f001 fd3d 	bl	8003e64 <_localeconv_r>
 80023ea:	f8d0 a000 	ldr.w	sl, [r0]
 80023ee:	4650      	mov	r0, sl
 80023f0:	f7fd fefe 	bl	80001f0 <strlen>
 80023f4:	2300      	movs	r3, #0
 80023f6:	930a      	str	r3, [sp, #40]	; 0x28
 80023f8:	6823      	ldr	r3, [r4, #0]
 80023fa:	9305      	str	r3, [sp, #20]
 80023fc:	f8d8 3000 	ldr.w	r3, [r8]
 8002400:	f894 b018 	ldrb.w	fp, [r4, #24]
 8002404:	3307      	adds	r3, #7
 8002406:	f023 0307 	bic.w	r3, r3, #7
 800240a:	f103 0208 	add.w	r2, r3, #8
 800240e:	f8c8 2000 	str.w	r2, [r8]
 8002412:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002416:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800241a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800241e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8002422:	9307      	str	r3, [sp, #28]
 8002424:	f8cd 8018 	str.w	r8, [sp, #24]
 8002428:	ee08 0a10 	vmov	s16, r0
 800242c:	4b9f      	ldr	r3, [pc, #636]	; (80026ac <_printf_float+0x2dc>)
 800242e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002432:	f04f 32ff 	mov.w	r2, #4294967295
 8002436:	f7fe fb89 	bl	8000b4c <__aeabi_dcmpun>
 800243a:	bb88      	cbnz	r0, 80024a0 <_printf_float+0xd0>
 800243c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002440:	4b9a      	ldr	r3, [pc, #616]	; (80026ac <_printf_float+0x2dc>)
 8002442:	f04f 32ff 	mov.w	r2, #4294967295
 8002446:	f7fe fb63 	bl	8000b10 <__aeabi_dcmple>
 800244a:	bb48      	cbnz	r0, 80024a0 <_printf_float+0xd0>
 800244c:	2200      	movs	r2, #0
 800244e:	2300      	movs	r3, #0
 8002450:	4640      	mov	r0, r8
 8002452:	4649      	mov	r1, r9
 8002454:	f7fe fb52 	bl	8000afc <__aeabi_dcmplt>
 8002458:	b110      	cbz	r0, 8002460 <_printf_float+0x90>
 800245a:	232d      	movs	r3, #45	; 0x2d
 800245c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002460:	4b93      	ldr	r3, [pc, #588]	; (80026b0 <_printf_float+0x2e0>)
 8002462:	4894      	ldr	r0, [pc, #592]	; (80026b4 <_printf_float+0x2e4>)
 8002464:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8002468:	bf94      	ite	ls
 800246a:	4698      	movls	r8, r3
 800246c:	4680      	movhi	r8, r0
 800246e:	2303      	movs	r3, #3
 8002470:	6123      	str	r3, [r4, #16]
 8002472:	9b05      	ldr	r3, [sp, #20]
 8002474:	f023 0204 	bic.w	r2, r3, #4
 8002478:	6022      	str	r2, [r4, #0]
 800247a:	f04f 0900 	mov.w	r9, #0
 800247e:	9700      	str	r7, [sp, #0]
 8002480:	4633      	mov	r3, r6
 8002482:	aa0b      	add	r2, sp, #44	; 0x2c
 8002484:	4621      	mov	r1, r4
 8002486:	4628      	mov	r0, r5
 8002488:	f000 f9d8 	bl	800283c <_printf_common>
 800248c:	3001      	adds	r0, #1
 800248e:	f040 8090 	bne.w	80025b2 <_printf_float+0x1e2>
 8002492:	f04f 30ff 	mov.w	r0, #4294967295
 8002496:	b00d      	add	sp, #52	; 0x34
 8002498:	ecbd 8b02 	vpop	{d8}
 800249c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024a0:	4642      	mov	r2, r8
 80024a2:	464b      	mov	r3, r9
 80024a4:	4640      	mov	r0, r8
 80024a6:	4649      	mov	r1, r9
 80024a8:	f7fe fb50 	bl	8000b4c <__aeabi_dcmpun>
 80024ac:	b140      	cbz	r0, 80024c0 <_printf_float+0xf0>
 80024ae:	464b      	mov	r3, r9
 80024b0:	2b00      	cmp	r3, #0
 80024b2:	bfbc      	itt	lt
 80024b4:	232d      	movlt	r3, #45	; 0x2d
 80024b6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80024ba:	487f      	ldr	r0, [pc, #508]	; (80026b8 <_printf_float+0x2e8>)
 80024bc:	4b7f      	ldr	r3, [pc, #508]	; (80026bc <_printf_float+0x2ec>)
 80024be:	e7d1      	b.n	8002464 <_printf_float+0x94>
 80024c0:	6863      	ldr	r3, [r4, #4]
 80024c2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80024c6:	9206      	str	r2, [sp, #24]
 80024c8:	1c5a      	adds	r2, r3, #1
 80024ca:	d13f      	bne.n	800254c <_printf_float+0x17c>
 80024cc:	2306      	movs	r3, #6
 80024ce:	6063      	str	r3, [r4, #4]
 80024d0:	9b05      	ldr	r3, [sp, #20]
 80024d2:	6861      	ldr	r1, [r4, #4]
 80024d4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80024d8:	2300      	movs	r3, #0
 80024da:	9303      	str	r3, [sp, #12]
 80024dc:	ab0a      	add	r3, sp, #40	; 0x28
 80024de:	e9cd b301 	strd	fp, r3, [sp, #4]
 80024e2:	ab09      	add	r3, sp, #36	; 0x24
 80024e4:	ec49 8b10 	vmov	d0, r8, r9
 80024e8:	9300      	str	r3, [sp, #0]
 80024ea:	6022      	str	r2, [r4, #0]
 80024ec:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80024f0:	4628      	mov	r0, r5
 80024f2:	f7ff fecd 	bl	8002290 <__cvt>
 80024f6:	9b06      	ldr	r3, [sp, #24]
 80024f8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80024fa:	2b47      	cmp	r3, #71	; 0x47
 80024fc:	4680      	mov	r8, r0
 80024fe:	d108      	bne.n	8002512 <_printf_float+0x142>
 8002500:	1cc8      	adds	r0, r1, #3
 8002502:	db02      	blt.n	800250a <_printf_float+0x13a>
 8002504:	6863      	ldr	r3, [r4, #4]
 8002506:	4299      	cmp	r1, r3
 8002508:	dd41      	ble.n	800258e <_printf_float+0x1be>
 800250a:	f1ab 0b02 	sub.w	fp, fp, #2
 800250e:	fa5f fb8b 	uxtb.w	fp, fp
 8002512:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8002516:	d820      	bhi.n	800255a <_printf_float+0x18a>
 8002518:	3901      	subs	r1, #1
 800251a:	465a      	mov	r2, fp
 800251c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002520:	9109      	str	r1, [sp, #36]	; 0x24
 8002522:	f7ff ff17 	bl	8002354 <__exponent>
 8002526:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002528:	1813      	adds	r3, r2, r0
 800252a:	2a01      	cmp	r2, #1
 800252c:	4681      	mov	r9, r0
 800252e:	6123      	str	r3, [r4, #16]
 8002530:	dc02      	bgt.n	8002538 <_printf_float+0x168>
 8002532:	6822      	ldr	r2, [r4, #0]
 8002534:	07d2      	lsls	r2, r2, #31
 8002536:	d501      	bpl.n	800253c <_printf_float+0x16c>
 8002538:	3301      	adds	r3, #1
 800253a:	6123      	str	r3, [r4, #16]
 800253c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8002540:	2b00      	cmp	r3, #0
 8002542:	d09c      	beq.n	800247e <_printf_float+0xae>
 8002544:	232d      	movs	r3, #45	; 0x2d
 8002546:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800254a:	e798      	b.n	800247e <_printf_float+0xae>
 800254c:	9a06      	ldr	r2, [sp, #24]
 800254e:	2a47      	cmp	r2, #71	; 0x47
 8002550:	d1be      	bne.n	80024d0 <_printf_float+0x100>
 8002552:	2b00      	cmp	r3, #0
 8002554:	d1bc      	bne.n	80024d0 <_printf_float+0x100>
 8002556:	2301      	movs	r3, #1
 8002558:	e7b9      	b.n	80024ce <_printf_float+0xfe>
 800255a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800255e:	d118      	bne.n	8002592 <_printf_float+0x1c2>
 8002560:	2900      	cmp	r1, #0
 8002562:	6863      	ldr	r3, [r4, #4]
 8002564:	dd0b      	ble.n	800257e <_printf_float+0x1ae>
 8002566:	6121      	str	r1, [r4, #16]
 8002568:	b913      	cbnz	r3, 8002570 <_printf_float+0x1a0>
 800256a:	6822      	ldr	r2, [r4, #0]
 800256c:	07d0      	lsls	r0, r2, #31
 800256e:	d502      	bpl.n	8002576 <_printf_float+0x1a6>
 8002570:	3301      	adds	r3, #1
 8002572:	440b      	add	r3, r1
 8002574:	6123      	str	r3, [r4, #16]
 8002576:	65a1      	str	r1, [r4, #88]	; 0x58
 8002578:	f04f 0900 	mov.w	r9, #0
 800257c:	e7de      	b.n	800253c <_printf_float+0x16c>
 800257e:	b913      	cbnz	r3, 8002586 <_printf_float+0x1b6>
 8002580:	6822      	ldr	r2, [r4, #0]
 8002582:	07d2      	lsls	r2, r2, #31
 8002584:	d501      	bpl.n	800258a <_printf_float+0x1ba>
 8002586:	3302      	adds	r3, #2
 8002588:	e7f4      	b.n	8002574 <_printf_float+0x1a4>
 800258a:	2301      	movs	r3, #1
 800258c:	e7f2      	b.n	8002574 <_printf_float+0x1a4>
 800258e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8002592:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002594:	4299      	cmp	r1, r3
 8002596:	db05      	blt.n	80025a4 <_printf_float+0x1d4>
 8002598:	6823      	ldr	r3, [r4, #0]
 800259a:	6121      	str	r1, [r4, #16]
 800259c:	07d8      	lsls	r0, r3, #31
 800259e:	d5ea      	bpl.n	8002576 <_printf_float+0x1a6>
 80025a0:	1c4b      	adds	r3, r1, #1
 80025a2:	e7e7      	b.n	8002574 <_printf_float+0x1a4>
 80025a4:	2900      	cmp	r1, #0
 80025a6:	bfd4      	ite	le
 80025a8:	f1c1 0202 	rsble	r2, r1, #2
 80025ac:	2201      	movgt	r2, #1
 80025ae:	4413      	add	r3, r2
 80025b0:	e7e0      	b.n	8002574 <_printf_float+0x1a4>
 80025b2:	6823      	ldr	r3, [r4, #0]
 80025b4:	055a      	lsls	r2, r3, #21
 80025b6:	d407      	bmi.n	80025c8 <_printf_float+0x1f8>
 80025b8:	6923      	ldr	r3, [r4, #16]
 80025ba:	4642      	mov	r2, r8
 80025bc:	4631      	mov	r1, r6
 80025be:	4628      	mov	r0, r5
 80025c0:	47b8      	blx	r7
 80025c2:	3001      	adds	r0, #1
 80025c4:	d12c      	bne.n	8002620 <_printf_float+0x250>
 80025c6:	e764      	b.n	8002492 <_printf_float+0xc2>
 80025c8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80025cc:	f240 80e0 	bls.w	8002790 <_printf_float+0x3c0>
 80025d0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80025d4:	2200      	movs	r2, #0
 80025d6:	2300      	movs	r3, #0
 80025d8:	f7fe fa86 	bl	8000ae8 <__aeabi_dcmpeq>
 80025dc:	2800      	cmp	r0, #0
 80025de:	d034      	beq.n	800264a <_printf_float+0x27a>
 80025e0:	4a37      	ldr	r2, [pc, #220]	; (80026c0 <_printf_float+0x2f0>)
 80025e2:	2301      	movs	r3, #1
 80025e4:	4631      	mov	r1, r6
 80025e6:	4628      	mov	r0, r5
 80025e8:	47b8      	blx	r7
 80025ea:	3001      	adds	r0, #1
 80025ec:	f43f af51 	beq.w	8002492 <_printf_float+0xc2>
 80025f0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80025f4:	429a      	cmp	r2, r3
 80025f6:	db02      	blt.n	80025fe <_printf_float+0x22e>
 80025f8:	6823      	ldr	r3, [r4, #0]
 80025fa:	07d8      	lsls	r0, r3, #31
 80025fc:	d510      	bpl.n	8002620 <_printf_float+0x250>
 80025fe:	ee18 3a10 	vmov	r3, s16
 8002602:	4652      	mov	r2, sl
 8002604:	4631      	mov	r1, r6
 8002606:	4628      	mov	r0, r5
 8002608:	47b8      	blx	r7
 800260a:	3001      	adds	r0, #1
 800260c:	f43f af41 	beq.w	8002492 <_printf_float+0xc2>
 8002610:	f04f 0800 	mov.w	r8, #0
 8002614:	f104 091a 	add.w	r9, r4, #26
 8002618:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800261a:	3b01      	subs	r3, #1
 800261c:	4543      	cmp	r3, r8
 800261e:	dc09      	bgt.n	8002634 <_printf_float+0x264>
 8002620:	6823      	ldr	r3, [r4, #0]
 8002622:	079b      	lsls	r3, r3, #30
 8002624:	f100 8105 	bmi.w	8002832 <_printf_float+0x462>
 8002628:	68e0      	ldr	r0, [r4, #12]
 800262a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800262c:	4298      	cmp	r0, r3
 800262e:	bfb8      	it	lt
 8002630:	4618      	movlt	r0, r3
 8002632:	e730      	b.n	8002496 <_printf_float+0xc6>
 8002634:	2301      	movs	r3, #1
 8002636:	464a      	mov	r2, r9
 8002638:	4631      	mov	r1, r6
 800263a:	4628      	mov	r0, r5
 800263c:	47b8      	blx	r7
 800263e:	3001      	adds	r0, #1
 8002640:	f43f af27 	beq.w	8002492 <_printf_float+0xc2>
 8002644:	f108 0801 	add.w	r8, r8, #1
 8002648:	e7e6      	b.n	8002618 <_printf_float+0x248>
 800264a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800264c:	2b00      	cmp	r3, #0
 800264e:	dc39      	bgt.n	80026c4 <_printf_float+0x2f4>
 8002650:	4a1b      	ldr	r2, [pc, #108]	; (80026c0 <_printf_float+0x2f0>)
 8002652:	2301      	movs	r3, #1
 8002654:	4631      	mov	r1, r6
 8002656:	4628      	mov	r0, r5
 8002658:	47b8      	blx	r7
 800265a:	3001      	adds	r0, #1
 800265c:	f43f af19 	beq.w	8002492 <_printf_float+0xc2>
 8002660:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002664:	4313      	orrs	r3, r2
 8002666:	d102      	bne.n	800266e <_printf_float+0x29e>
 8002668:	6823      	ldr	r3, [r4, #0]
 800266a:	07d9      	lsls	r1, r3, #31
 800266c:	d5d8      	bpl.n	8002620 <_printf_float+0x250>
 800266e:	ee18 3a10 	vmov	r3, s16
 8002672:	4652      	mov	r2, sl
 8002674:	4631      	mov	r1, r6
 8002676:	4628      	mov	r0, r5
 8002678:	47b8      	blx	r7
 800267a:	3001      	adds	r0, #1
 800267c:	f43f af09 	beq.w	8002492 <_printf_float+0xc2>
 8002680:	f04f 0900 	mov.w	r9, #0
 8002684:	f104 0a1a 	add.w	sl, r4, #26
 8002688:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800268a:	425b      	negs	r3, r3
 800268c:	454b      	cmp	r3, r9
 800268e:	dc01      	bgt.n	8002694 <_printf_float+0x2c4>
 8002690:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002692:	e792      	b.n	80025ba <_printf_float+0x1ea>
 8002694:	2301      	movs	r3, #1
 8002696:	4652      	mov	r2, sl
 8002698:	4631      	mov	r1, r6
 800269a:	4628      	mov	r0, r5
 800269c:	47b8      	blx	r7
 800269e:	3001      	adds	r0, #1
 80026a0:	f43f aef7 	beq.w	8002492 <_printf_float+0xc2>
 80026a4:	f109 0901 	add.w	r9, r9, #1
 80026a8:	e7ee      	b.n	8002688 <_printf_float+0x2b8>
 80026aa:	bf00      	nop
 80026ac:	7fefffff 	.word	0x7fefffff
 80026b0:	08004e50 	.word	0x08004e50
 80026b4:	08004e54 	.word	0x08004e54
 80026b8:	08004e5c 	.word	0x08004e5c
 80026bc:	08004e58 	.word	0x08004e58
 80026c0:	08004e60 	.word	0x08004e60
 80026c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80026c6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80026c8:	429a      	cmp	r2, r3
 80026ca:	bfa8      	it	ge
 80026cc:	461a      	movge	r2, r3
 80026ce:	2a00      	cmp	r2, #0
 80026d0:	4691      	mov	r9, r2
 80026d2:	dc37      	bgt.n	8002744 <_printf_float+0x374>
 80026d4:	f04f 0b00 	mov.w	fp, #0
 80026d8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80026dc:	f104 021a 	add.w	r2, r4, #26
 80026e0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80026e2:	9305      	str	r3, [sp, #20]
 80026e4:	eba3 0309 	sub.w	r3, r3, r9
 80026e8:	455b      	cmp	r3, fp
 80026ea:	dc33      	bgt.n	8002754 <_printf_float+0x384>
 80026ec:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80026f0:	429a      	cmp	r2, r3
 80026f2:	db3b      	blt.n	800276c <_printf_float+0x39c>
 80026f4:	6823      	ldr	r3, [r4, #0]
 80026f6:	07da      	lsls	r2, r3, #31
 80026f8:	d438      	bmi.n	800276c <_printf_float+0x39c>
 80026fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80026fc:	9a05      	ldr	r2, [sp, #20]
 80026fe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002700:	1a9a      	subs	r2, r3, r2
 8002702:	eba3 0901 	sub.w	r9, r3, r1
 8002706:	4591      	cmp	r9, r2
 8002708:	bfa8      	it	ge
 800270a:	4691      	movge	r9, r2
 800270c:	f1b9 0f00 	cmp.w	r9, #0
 8002710:	dc35      	bgt.n	800277e <_printf_float+0x3ae>
 8002712:	f04f 0800 	mov.w	r8, #0
 8002716:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800271a:	f104 0a1a 	add.w	sl, r4, #26
 800271e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002722:	1a9b      	subs	r3, r3, r2
 8002724:	eba3 0309 	sub.w	r3, r3, r9
 8002728:	4543      	cmp	r3, r8
 800272a:	f77f af79 	ble.w	8002620 <_printf_float+0x250>
 800272e:	2301      	movs	r3, #1
 8002730:	4652      	mov	r2, sl
 8002732:	4631      	mov	r1, r6
 8002734:	4628      	mov	r0, r5
 8002736:	47b8      	blx	r7
 8002738:	3001      	adds	r0, #1
 800273a:	f43f aeaa 	beq.w	8002492 <_printf_float+0xc2>
 800273e:	f108 0801 	add.w	r8, r8, #1
 8002742:	e7ec      	b.n	800271e <_printf_float+0x34e>
 8002744:	4613      	mov	r3, r2
 8002746:	4631      	mov	r1, r6
 8002748:	4642      	mov	r2, r8
 800274a:	4628      	mov	r0, r5
 800274c:	47b8      	blx	r7
 800274e:	3001      	adds	r0, #1
 8002750:	d1c0      	bne.n	80026d4 <_printf_float+0x304>
 8002752:	e69e      	b.n	8002492 <_printf_float+0xc2>
 8002754:	2301      	movs	r3, #1
 8002756:	4631      	mov	r1, r6
 8002758:	4628      	mov	r0, r5
 800275a:	9205      	str	r2, [sp, #20]
 800275c:	47b8      	blx	r7
 800275e:	3001      	adds	r0, #1
 8002760:	f43f ae97 	beq.w	8002492 <_printf_float+0xc2>
 8002764:	9a05      	ldr	r2, [sp, #20]
 8002766:	f10b 0b01 	add.w	fp, fp, #1
 800276a:	e7b9      	b.n	80026e0 <_printf_float+0x310>
 800276c:	ee18 3a10 	vmov	r3, s16
 8002770:	4652      	mov	r2, sl
 8002772:	4631      	mov	r1, r6
 8002774:	4628      	mov	r0, r5
 8002776:	47b8      	blx	r7
 8002778:	3001      	adds	r0, #1
 800277a:	d1be      	bne.n	80026fa <_printf_float+0x32a>
 800277c:	e689      	b.n	8002492 <_printf_float+0xc2>
 800277e:	9a05      	ldr	r2, [sp, #20]
 8002780:	464b      	mov	r3, r9
 8002782:	4442      	add	r2, r8
 8002784:	4631      	mov	r1, r6
 8002786:	4628      	mov	r0, r5
 8002788:	47b8      	blx	r7
 800278a:	3001      	adds	r0, #1
 800278c:	d1c1      	bne.n	8002712 <_printf_float+0x342>
 800278e:	e680      	b.n	8002492 <_printf_float+0xc2>
 8002790:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002792:	2a01      	cmp	r2, #1
 8002794:	dc01      	bgt.n	800279a <_printf_float+0x3ca>
 8002796:	07db      	lsls	r3, r3, #31
 8002798:	d538      	bpl.n	800280c <_printf_float+0x43c>
 800279a:	2301      	movs	r3, #1
 800279c:	4642      	mov	r2, r8
 800279e:	4631      	mov	r1, r6
 80027a0:	4628      	mov	r0, r5
 80027a2:	47b8      	blx	r7
 80027a4:	3001      	adds	r0, #1
 80027a6:	f43f ae74 	beq.w	8002492 <_printf_float+0xc2>
 80027aa:	ee18 3a10 	vmov	r3, s16
 80027ae:	4652      	mov	r2, sl
 80027b0:	4631      	mov	r1, r6
 80027b2:	4628      	mov	r0, r5
 80027b4:	47b8      	blx	r7
 80027b6:	3001      	adds	r0, #1
 80027b8:	f43f ae6b 	beq.w	8002492 <_printf_float+0xc2>
 80027bc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80027c0:	2200      	movs	r2, #0
 80027c2:	2300      	movs	r3, #0
 80027c4:	f7fe f990 	bl	8000ae8 <__aeabi_dcmpeq>
 80027c8:	b9d8      	cbnz	r0, 8002802 <_printf_float+0x432>
 80027ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80027cc:	f108 0201 	add.w	r2, r8, #1
 80027d0:	3b01      	subs	r3, #1
 80027d2:	4631      	mov	r1, r6
 80027d4:	4628      	mov	r0, r5
 80027d6:	47b8      	blx	r7
 80027d8:	3001      	adds	r0, #1
 80027da:	d10e      	bne.n	80027fa <_printf_float+0x42a>
 80027dc:	e659      	b.n	8002492 <_printf_float+0xc2>
 80027de:	2301      	movs	r3, #1
 80027e0:	4652      	mov	r2, sl
 80027e2:	4631      	mov	r1, r6
 80027e4:	4628      	mov	r0, r5
 80027e6:	47b8      	blx	r7
 80027e8:	3001      	adds	r0, #1
 80027ea:	f43f ae52 	beq.w	8002492 <_printf_float+0xc2>
 80027ee:	f108 0801 	add.w	r8, r8, #1
 80027f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80027f4:	3b01      	subs	r3, #1
 80027f6:	4543      	cmp	r3, r8
 80027f8:	dcf1      	bgt.n	80027de <_printf_float+0x40e>
 80027fa:	464b      	mov	r3, r9
 80027fc:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002800:	e6dc      	b.n	80025bc <_printf_float+0x1ec>
 8002802:	f04f 0800 	mov.w	r8, #0
 8002806:	f104 0a1a 	add.w	sl, r4, #26
 800280a:	e7f2      	b.n	80027f2 <_printf_float+0x422>
 800280c:	2301      	movs	r3, #1
 800280e:	4642      	mov	r2, r8
 8002810:	e7df      	b.n	80027d2 <_printf_float+0x402>
 8002812:	2301      	movs	r3, #1
 8002814:	464a      	mov	r2, r9
 8002816:	4631      	mov	r1, r6
 8002818:	4628      	mov	r0, r5
 800281a:	47b8      	blx	r7
 800281c:	3001      	adds	r0, #1
 800281e:	f43f ae38 	beq.w	8002492 <_printf_float+0xc2>
 8002822:	f108 0801 	add.w	r8, r8, #1
 8002826:	68e3      	ldr	r3, [r4, #12]
 8002828:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800282a:	1a5b      	subs	r3, r3, r1
 800282c:	4543      	cmp	r3, r8
 800282e:	dcf0      	bgt.n	8002812 <_printf_float+0x442>
 8002830:	e6fa      	b.n	8002628 <_printf_float+0x258>
 8002832:	f04f 0800 	mov.w	r8, #0
 8002836:	f104 0919 	add.w	r9, r4, #25
 800283a:	e7f4      	b.n	8002826 <_printf_float+0x456>

0800283c <_printf_common>:
 800283c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002840:	4616      	mov	r6, r2
 8002842:	4699      	mov	r9, r3
 8002844:	688a      	ldr	r2, [r1, #8]
 8002846:	690b      	ldr	r3, [r1, #16]
 8002848:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800284c:	4293      	cmp	r3, r2
 800284e:	bfb8      	it	lt
 8002850:	4613      	movlt	r3, r2
 8002852:	6033      	str	r3, [r6, #0]
 8002854:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002858:	4607      	mov	r7, r0
 800285a:	460c      	mov	r4, r1
 800285c:	b10a      	cbz	r2, 8002862 <_printf_common+0x26>
 800285e:	3301      	adds	r3, #1
 8002860:	6033      	str	r3, [r6, #0]
 8002862:	6823      	ldr	r3, [r4, #0]
 8002864:	0699      	lsls	r1, r3, #26
 8002866:	bf42      	ittt	mi
 8002868:	6833      	ldrmi	r3, [r6, #0]
 800286a:	3302      	addmi	r3, #2
 800286c:	6033      	strmi	r3, [r6, #0]
 800286e:	6825      	ldr	r5, [r4, #0]
 8002870:	f015 0506 	ands.w	r5, r5, #6
 8002874:	d106      	bne.n	8002884 <_printf_common+0x48>
 8002876:	f104 0a19 	add.w	sl, r4, #25
 800287a:	68e3      	ldr	r3, [r4, #12]
 800287c:	6832      	ldr	r2, [r6, #0]
 800287e:	1a9b      	subs	r3, r3, r2
 8002880:	42ab      	cmp	r3, r5
 8002882:	dc26      	bgt.n	80028d2 <_printf_common+0x96>
 8002884:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002888:	1e13      	subs	r3, r2, #0
 800288a:	6822      	ldr	r2, [r4, #0]
 800288c:	bf18      	it	ne
 800288e:	2301      	movne	r3, #1
 8002890:	0692      	lsls	r2, r2, #26
 8002892:	d42b      	bmi.n	80028ec <_printf_common+0xb0>
 8002894:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002898:	4649      	mov	r1, r9
 800289a:	4638      	mov	r0, r7
 800289c:	47c0      	blx	r8
 800289e:	3001      	adds	r0, #1
 80028a0:	d01e      	beq.n	80028e0 <_printf_common+0xa4>
 80028a2:	6823      	ldr	r3, [r4, #0]
 80028a4:	68e5      	ldr	r5, [r4, #12]
 80028a6:	6832      	ldr	r2, [r6, #0]
 80028a8:	f003 0306 	and.w	r3, r3, #6
 80028ac:	2b04      	cmp	r3, #4
 80028ae:	bf08      	it	eq
 80028b0:	1aad      	subeq	r5, r5, r2
 80028b2:	68a3      	ldr	r3, [r4, #8]
 80028b4:	6922      	ldr	r2, [r4, #16]
 80028b6:	bf0c      	ite	eq
 80028b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80028bc:	2500      	movne	r5, #0
 80028be:	4293      	cmp	r3, r2
 80028c0:	bfc4      	itt	gt
 80028c2:	1a9b      	subgt	r3, r3, r2
 80028c4:	18ed      	addgt	r5, r5, r3
 80028c6:	2600      	movs	r6, #0
 80028c8:	341a      	adds	r4, #26
 80028ca:	42b5      	cmp	r5, r6
 80028cc:	d11a      	bne.n	8002904 <_printf_common+0xc8>
 80028ce:	2000      	movs	r0, #0
 80028d0:	e008      	b.n	80028e4 <_printf_common+0xa8>
 80028d2:	2301      	movs	r3, #1
 80028d4:	4652      	mov	r2, sl
 80028d6:	4649      	mov	r1, r9
 80028d8:	4638      	mov	r0, r7
 80028da:	47c0      	blx	r8
 80028dc:	3001      	adds	r0, #1
 80028de:	d103      	bne.n	80028e8 <_printf_common+0xac>
 80028e0:	f04f 30ff 	mov.w	r0, #4294967295
 80028e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80028e8:	3501      	adds	r5, #1
 80028ea:	e7c6      	b.n	800287a <_printf_common+0x3e>
 80028ec:	18e1      	adds	r1, r4, r3
 80028ee:	1c5a      	adds	r2, r3, #1
 80028f0:	2030      	movs	r0, #48	; 0x30
 80028f2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80028f6:	4422      	add	r2, r4
 80028f8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80028fc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002900:	3302      	adds	r3, #2
 8002902:	e7c7      	b.n	8002894 <_printf_common+0x58>
 8002904:	2301      	movs	r3, #1
 8002906:	4622      	mov	r2, r4
 8002908:	4649      	mov	r1, r9
 800290a:	4638      	mov	r0, r7
 800290c:	47c0      	blx	r8
 800290e:	3001      	adds	r0, #1
 8002910:	d0e6      	beq.n	80028e0 <_printf_common+0xa4>
 8002912:	3601      	adds	r6, #1
 8002914:	e7d9      	b.n	80028ca <_printf_common+0x8e>
	...

08002918 <_printf_i>:
 8002918:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800291c:	7e0f      	ldrb	r7, [r1, #24]
 800291e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002920:	2f78      	cmp	r7, #120	; 0x78
 8002922:	4691      	mov	r9, r2
 8002924:	4680      	mov	r8, r0
 8002926:	460c      	mov	r4, r1
 8002928:	469a      	mov	sl, r3
 800292a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800292e:	d807      	bhi.n	8002940 <_printf_i+0x28>
 8002930:	2f62      	cmp	r7, #98	; 0x62
 8002932:	d80a      	bhi.n	800294a <_printf_i+0x32>
 8002934:	2f00      	cmp	r7, #0
 8002936:	f000 80d8 	beq.w	8002aea <_printf_i+0x1d2>
 800293a:	2f58      	cmp	r7, #88	; 0x58
 800293c:	f000 80a3 	beq.w	8002a86 <_printf_i+0x16e>
 8002940:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002944:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002948:	e03a      	b.n	80029c0 <_printf_i+0xa8>
 800294a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800294e:	2b15      	cmp	r3, #21
 8002950:	d8f6      	bhi.n	8002940 <_printf_i+0x28>
 8002952:	a101      	add	r1, pc, #4	; (adr r1, 8002958 <_printf_i+0x40>)
 8002954:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002958:	080029b1 	.word	0x080029b1
 800295c:	080029c5 	.word	0x080029c5
 8002960:	08002941 	.word	0x08002941
 8002964:	08002941 	.word	0x08002941
 8002968:	08002941 	.word	0x08002941
 800296c:	08002941 	.word	0x08002941
 8002970:	080029c5 	.word	0x080029c5
 8002974:	08002941 	.word	0x08002941
 8002978:	08002941 	.word	0x08002941
 800297c:	08002941 	.word	0x08002941
 8002980:	08002941 	.word	0x08002941
 8002984:	08002ad1 	.word	0x08002ad1
 8002988:	080029f5 	.word	0x080029f5
 800298c:	08002ab3 	.word	0x08002ab3
 8002990:	08002941 	.word	0x08002941
 8002994:	08002941 	.word	0x08002941
 8002998:	08002af3 	.word	0x08002af3
 800299c:	08002941 	.word	0x08002941
 80029a0:	080029f5 	.word	0x080029f5
 80029a4:	08002941 	.word	0x08002941
 80029a8:	08002941 	.word	0x08002941
 80029ac:	08002abb 	.word	0x08002abb
 80029b0:	682b      	ldr	r3, [r5, #0]
 80029b2:	1d1a      	adds	r2, r3, #4
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	602a      	str	r2, [r5, #0]
 80029b8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80029bc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80029c0:	2301      	movs	r3, #1
 80029c2:	e0a3      	b.n	8002b0c <_printf_i+0x1f4>
 80029c4:	6820      	ldr	r0, [r4, #0]
 80029c6:	6829      	ldr	r1, [r5, #0]
 80029c8:	0606      	lsls	r6, r0, #24
 80029ca:	f101 0304 	add.w	r3, r1, #4
 80029ce:	d50a      	bpl.n	80029e6 <_printf_i+0xce>
 80029d0:	680e      	ldr	r6, [r1, #0]
 80029d2:	602b      	str	r3, [r5, #0]
 80029d4:	2e00      	cmp	r6, #0
 80029d6:	da03      	bge.n	80029e0 <_printf_i+0xc8>
 80029d8:	232d      	movs	r3, #45	; 0x2d
 80029da:	4276      	negs	r6, r6
 80029dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80029e0:	485e      	ldr	r0, [pc, #376]	; (8002b5c <_printf_i+0x244>)
 80029e2:	230a      	movs	r3, #10
 80029e4:	e019      	b.n	8002a1a <_printf_i+0x102>
 80029e6:	680e      	ldr	r6, [r1, #0]
 80029e8:	602b      	str	r3, [r5, #0]
 80029ea:	f010 0f40 	tst.w	r0, #64	; 0x40
 80029ee:	bf18      	it	ne
 80029f0:	b236      	sxthne	r6, r6
 80029f2:	e7ef      	b.n	80029d4 <_printf_i+0xbc>
 80029f4:	682b      	ldr	r3, [r5, #0]
 80029f6:	6820      	ldr	r0, [r4, #0]
 80029f8:	1d19      	adds	r1, r3, #4
 80029fa:	6029      	str	r1, [r5, #0]
 80029fc:	0601      	lsls	r1, r0, #24
 80029fe:	d501      	bpl.n	8002a04 <_printf_i+0xec>
 8002a00:	681e      	ldr	r6, [r3, #0]
 8002a02:	e002      	b.n	8002a0a <_printf_i+0xf2>
 8002a04:	0646      	lsls	r6, r0, #25
 8002a06:	d5fb      	bpl.n	8002a00 <_printf_i+0xe8>
 8002a08:	881e      	ldrh	r6, [r3, #0]
 8002a0a:	4854      	ldr	r0, [pc, #336]	; (8002b5c <_printf_i+0x244>)
 8002a0c:	2f6f      	cmp	r7, #111	; 0x6f
 8002a0e:	bf0c      	ite	eq
 8002a10:	2308      	moveq	r3, #8
 8002a12:	230a      	movne	r3, #10
 8002a14:	2100      	movs	r1, #0
 8002a16:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002a1a:	6865      	ldr	r5, [r4, #4]
 8002a1c:	60a5      	str	r5, [r4, #8]
 8002a1e:	2d00      	cmp	r5, #0
 8002a20:	bfa2      	ittt	ge
 8002a22:	6821      	ldrge	r1, [r4, #0]
 8002a24:	f021 0104 	bicge.w	r1, r1, #4
 8002a28:	6021      	strge	r1, [r4, #0]
 8002a2a:	b90e      	cbnz	r6, 8002a30 <_printf_i+0x118>
 8002a2c:	2d00      	cmp	r5, #0
 8002a2e:	d04d      	beq.n	8002acc <_printf_i+0x1b4>
 8002a30:	4615      	mov	r5, r2
 8002a32:	fbb6 f1f3 	udiv	r1, r6, r3
 8002a36:	fb03 6711 	mls	r7, r3, r1, r6
 8002a3a:	5dc7      	ldrb	r7, [r0, r7]
 8002a3c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002a40:	4637      	mov	r7, r6
 8002a42:	42bb      	cmp	r3, r7
 8002a44:	460e      	mov	r6, r1
 8002a46:	d9f4      	bls.n	8002a32 <_printf_i+0x11a>
 8002a48:	2b08      	cmp	r3, #8
 8002a4a:	d10b      	bne.n	8002a64 <_printf_i+0x14c>
 8002a4c:	6823      	ldr	r3, [r4, #0]
 8002a4e:	07de      	lsls	r6, r3, #31
 8002a50:	d508      	bpl.n	8002a64 <_printf_i+0x14c>
 8002a52:	6923      	ldr	r3, [r4, #16]
 8002a54:	6861      	ldr	r1, [r4, #4]
 8002a56:	4299      	cmp	r1, r3
 8002a58:	bfde      	ittt	le
 8002a5a:	2330      	movle	r3, #48	; 0x30
 8002a5c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002a60:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002a64:	1b52      	subs	r2, r2, r5
 8002a66:	6122      	str	r2, [r4, #16]
 8002a68:	f8cd a000 	str.w	sl, [sp]
 8002a6c:	464b      	mov	r3, r9
 8002a6e:	aa03      	add	r2, sp, #12
 8002a70:	4621      	mov	r1, r4
 8002a72:	4640      	mov	r0, r8
 8002a74:	f7ff fee2 	bl	800283c <_printf_common>
 8002a78:	3001      	adds	r0, #1
 8002a7a:	d14c      	bne.n	8002b16 <_printf_i+0x1fe>
 8002a7c:	f04f 30ff 	mov.w	r0, #4294967295
 8002a80:	b004      	add	sp, #16
 8002a82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a86:	4835      	ldr	r0, [pc, #212]	; (8002b5c <_printf_i+0x244>)
 8002a88:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002a8c:	6829      	ldr	r1, [r5, #0]
 8002a8e:	6823      	ldr	r3, [r4, #0]
 8002a90:	f851 6b04 	ldr.w	r6, [r1], #4
 8002a94:	6029      	str	r1, [r5, #0]
 8002a96:	061d      	lsls	r5, r3, #24
 8002a98:	d514      	bpl.n	8002ac4 <_printf_i+0x1ac>
 8002a9a:	07df      	lsls	r7, r3, #31
 8002a9c:	bf44      	itt	mi
 8002a9e:	f043 0320 	orrmi.w	r3, r3, #32
 8002aa2:	6023      	strmi	r3, [r4, #0]
 8002aa4:	b91e      	cbnz	r6, 8002aae <_printf_i+0x196>
 8002aa6:	6823      	ldr	r3, [r4, #0]
 8002aa8:	f023 0320 	bic.w	r3, r3, #32
 8002aac:	6023      	str	r3, [r4, #0]
 8002aae:	2310      	movs	r3, #16
 8002ab0:	e7b0      	b.n	8002a14 <_printf_i+0xfc>
 8002ab2:	6823      	ldr	r3, [r4, #0]
 8002ab4:	f043 0320 	orr.w	r3, r3, #32
 8002ab8:	6023      	str	r3, [r4, #0]
 8002aba:	2378      	movs	r3, #120	; 0x78
 8002abc:	4828      	ldr	r0, [pc, #160]	; (8002b60 <_printf_i+0x248>)
 8002abe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002ac2:	e7e3      	b.n	8002a8c <_printf_i+0x174>
 8002ac4:	0659      	lsls	r1, r3, #25
 8002ac6:	bf48      	it	mi
 8002ac8:	b2b6      	uxthmi	r6, r6
 8002aca:	e7e6      	b.n	8002a9a <_printf_i+0x182>
 8002acc:	4615      	mov	r5, r2
 8002ace:	e7bb      	b.n	8002a48 <_printf_i+0x130>
 8002ad0:	682b      	ldr	r3, [r5, #0]
 8002ad2:	6826      	ldr	r6, [r4, #0]
 8002ad4:	6961      	ldr	r1, [r4, #20]
 8002ad6:	1d18      	adds	r0, r3, #4
 8002ad8:	6028      	str	r0, [r5, #0]
 8002ada:	0635      	lsls	r5, r6, #24
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	d501      	bpl.n	8002ae4 <_printf_i+0x1cc>
 8002ae0:	6019      	str	r1, [r3, #0]
 8002ae2:	e002      	b.n	8002aea <_printf_i+0x1d2>
 8002ae4:	0670      	lsls	r0, r6, #25
 8002ae6:	d5fb      	bpl.n	8002ae0 <_printf_i+0x1c8>
 8002ae8:	8019      	strh	r1, [r3, #0]
 8002aea:	2300      	movs	r3, #0
 8002aec:	6123      	str	r3, [r4, #16]
 8002aee:	4615      	mov	r5, r2
 8002af0:	e7ba      	b.n	8002a68 <_printf_i+0x150>
 8002af2:	682b      	ldr	r3, [r5, #0]
 8002af4:	1d1a      	adds	r2, r3, #4
 8002af6:	602a      	str	r2, [r5, #0]
 8002af8:	681d      	ldr	r5, [r3, #0]
 8002afa:	6862      	ldr	r2, [r4, #4]
 8002afc:	2100      	movs	r1, #0
 8002afe:	4628      	mov	r0, r5
 8002b00:	f7fd fb7e 	bl	8000200 <memchr>
 8002b04:	b108      	cbz	r0, 8002b0a <_printf_i+0x1f2>
 8002b06:	1b40      	subs	r0, r0, r5
 8002b08:	6060      	str	r0, [r4, #4]
 8002b0a:	6863      	ldr	r3, [r4, #4]
 8002b0c:	6123      	str	r3, [r4, #16]
 8002b0e:	2300      	movs	r3, #0
 8002b10:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002b14:	e7a8      	b.n	8002a68 <_printf_i+0x150>
 8002b16:	6923      	ldr	r3, [r4, #16]
 8002b18:	462a      	mov	r2, r5
 8002b1a:	4649      	mov	r1, r9
 8002b1c:	4640      	mov	r0, r8
 8002b1e:	47d0      	blx	sl
 8002b20:	3001      	adds	r0, #1
 8002b22:	d0ab      	beq.n	8002a7c <_printf_i+0x164>
 8002b24:	6823      	ldr	r3, [r4, #0]
 8002b26:	079b      	lsls	r3, r3, #30
 8002b28:	d413      	bmi.n	8002b52 <_printf_i+0x23a>
 8002b2a:	68e0      	ldr	r0, [r4, #12]
 8002b2c:	9b03      	ldr	r3, [sp, #12]
 8002b2e:	4298      	cmp	r0, r3
 8002b30:	bfb8      	it	lt
 8002b32:	4618      	movlt	r0, r3
 8002b34:	e7a4      	b.n	8002a80 <_printf_i+0x168>
 8002b36:	2301      	movs	r3, #1
 8002b38:	4632      	mov	r2, r6
 8002b3a:	4649      	mov	r1, r9
 8002b3c:	4640      	mov	r0, r8
 8002b3e:	47d0      	blx	sl
 8002b40:	3001      	adds	r0, #1
 8002b42:	d09b      	beq.n	8002a7c <_printf_i+0x164>
 8002b44:	3501      	adds	r5, #1
 8002b46:	68e3      	ldr	r3, [r4, #12]
 8002b48:	9903      	ldr	r1, [sp, #12]
 8002b4a:	1a5b      	subs	r3, r3, r1
 8002b4c:	42ab      	cmp	r3, r5
 8002b4e:	dcf2      	bgt.n	8002b36 <_printf_i+0x21e>
 8002b50:	e7eb      	b.n	8002b2a <_printf_i+0x212>
 8002b52:	2500      	movs	r5, #0
 8002b54:	f104 0619 	add.w	r6, r4, #25
 8002b58:	e7f5      	b.n	8002b46 <_printf_i+0x22e>
 8002b5a:	bf00      	nop
 8002b5c:	08004e62 	.word	0x08004e62
 8002b60:	08004e73 	.word	0x08004e73

08002b64 <iprintf>:
 8002b64:	b40f      	push	{r0, r1, r2, r3}
 8002b66:	4b0a      	ldr	r3, [pc, #40]	; (8002b90 <iprintf+0x2c>)
 8002b68:	b513      	push	{r0, r1, r4, lr}
 8002b6a:	681c      	ldr	r4, [r3, #0]
 8002b6c:	b124      	cbz	r4, 8002b78 <iprintf+0x14>
 8002b6e:	69a3      	ldr	r3, [r4, #24]
 8002b70:	b913      	cbnz	r3, 8002b78 <iprintf+0x14>
 8002b72:	4620      	mov	r0, r4
 8002b74:	f001 f8d8 	bl	8003d28 <__sinit>
 8002b78:	ab05      	add	r3, sp, #20
 8002b7a:	9a04      	ldr	r2, [sp, #16]
 8002b7c:	68a1      	ldr	r1, [r4, #8]
 8002b7e:	9301      	str	r3, [sp, #4]
 8002b80:	4620      	mov	r0, r4
 8002b82:	f001 fe95 	bl	80048b0 <_vfiprintf_r>
 8002b86:	b002      	add	sp, #8
 8002b88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b8c:	b004      	add	sp, #16
 8002b8e:	4770      	bx	lr
 8002b90:	20000148 	.word	0x20000148

08002b94 <_puts_r>:
 8002b94:	b570      	push	{r4, r5, r6, lr}
 8002b96:	460e      	mov	r6, r1
 8002b98:	4605      	mov	r5, r0
 8002b9a:	b118      	cbz	r0, 8002ba4 <_puts_r+0x10>
 8002b9c:	6983      	ldr	r3, [r0, #24]
 8002b9e:	b90b      	cbnz	r3, 8002ba4 <_puts_r+0x10>
 8002ba0:	f001 f8c2 	bl	8003d28 <__sinit>
 8002ba4:	69ab      	ldr	r3, [r5, #24]
 8002ba6:	68ac      	ldr	r4, [r5, #8]
 8002ba8:	b913      	cbnz	r3, 8002bb0 <_puts_r+0x1c>
 8002baa:	4628      	mov	r0, r5
 8002bac:	f001 f8bc 	bl	8003d28 <__sinit>
 8002bb0:	4b2c      	ldr	r3, [pc, #176]	; (8002c64 <_puts_r+0xd0>)
 8002bb2:	429c      	cmp	r4, r3
 8002bb4:	d120      	bne.n	8002bf8 <_puts_r+0x64>
 8002bb6:	686c      	ldr	r4, [r5, #4]
 8002bb8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002bba:	07db      	lsls	r3, r3, #31
 8002bbc:	d405      	bmi.n	8002bca <_puts_r+0x36>
 8002bbe:	89a3      	ldrh	r3, [r4, #12]
 8002bc0:	0598      	lsls	r0, r3, #22
 8002bc2:	d402      	bmi.n	8002bca <_puts_r+0x36>
 8002bc4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002bc6:	f001 f952 	bl	8003e6e <__retarget_lock_acquire_recursive>
 8002bca:	89a3      	ldrh	r3, [r4, #12]
 8002bcc:	0719      	lsls	r1, r3, #28
 8002bce:	d51d      	bpl.n	8002c0c <_puts_r+0x78>
 8002bd0:	6923      	ldr	r3, [r4, #16]
 8002bd2:	b1db      	cbz	r3, 8002c0c <_puts_r+0x78>
 8002bd4:	3e01      	subs	r6, #1
 8002bd6:	68a3      	ldr	r3, [r4, #8]
 8002bd8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002bdc:	3b01      	subs	r3, #1
 8002bde:	60a3      	str	r3, [r4, #8]
 8002be0:	bb39      	cbnz	r1, 8002c32 <_puts_r+0x9e>
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	da38      	bge.n	8002c58 <_puts_r+0xc4>
 8002be6:	4622      	mov	r2, r4
 8002be8:	210a      	movs	r1, #10
 8002bea:	4628      	mov	r0, r5
 8002bec:	f000 f848 	bl	8002c80 <__swbuf_r>
 8002bf0:	3001      	adds	r0, #1
 8002bf2:	d011      	beq.n	8002c18 <_puts_r+0x84>
 8002bf4:	250a      	movs	r5, #10
 8002bf6:	e011      	b.n	8002c1c <_puts_r+0x88>
 8002bf8:	4b1b      	ldr	r3, [pc, #108]	; (8002c68 <_puts_r+0xd4>)
 8002bfa:	429c      	cmp	r4, r3
 8002bfc:	d101      	bne.n	8002c02 <_puts_r+0x6e>
 8002bfe:	68ac      	ldr	r4, [r5, #8]
 8002c00:	e7da      	b.n	8002bb8 <_puts_r+0x24>
 8002c02:	4b1a      	ldr	r3, [pc, #104]	; (8002c6c <_puts_r+0xd8>)
 8002c04:	429c      	cmp	r4, r3
 8002c06:	bf08      	it	eq
 8002c08:	68ec      	ldreq	r4, [r5, #12]
 8002c0a:	e7d5      	b.n	8002bb8 <_puts_r+0x24>
 8002c0c:	4621      	mov	r1, r4
 8002c0e:	4628      	mov	r0, r5
 8002c10:	f000 f888 	bl	8002d24 <__swsetup_r>
 8002c14:	2800      	cmp	r0, #0
 8002c16:	d0dd      	beq.n	8002bd4 <_puts_r+0x40>
 8002c18:	f04f 35ff 	mov.w	r5, #4294967295
 8002c1c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002c1e:	07da      	lsls	r2, r3, #31
 8002c20:	d405      	bmi.n	8002c2e <_puts_r+0x9a>
 8002c22:	89a3      	ldrh	r3, [r4, #12]
 8002c24:	059b      	lsls	r3, r3, #22
 8002c26:	d402      	bmi.n	8002c2e <_puts_r+0x9a>
 8002c28:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002c2a:	f001 f921 	bl	8003e70 <__retarget_lock_release_recursive>
 8002c2e:	4628      	mov	r0, r5
 8002c30:	bd70      	pop	{r4, r5, r6, pc}
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	da04      	bge.n	8002c40 <_puts_r+0xac>
 8002c36:	69a2      	ldr	r2, [r4, #24]
 8002c38:	429a      	cmp	r2, r3
 8002c3a:	dc06      	bgt.n	8002c4a <_puts_r+0xb6>
 8002c3c:	290a      	cmp	r1, #10
 8002c3e:	d004      	beq.n	8002c4a <_puts_r+0xb6>
 8002c40:	6823      	ldr	r3, [r4, #0]
 8002c42:	1c5a      	adds	r2, r3, #1
 8002c44:	6022      	str	r2, [r4, #0]
 8002c46:	7019      	strb	r1, [r3, #0]
 8002c48:	e7c5      	b.n	8002bd6 <_puts_r+0x42>
 8002c4a:	4622      	mov	r2, r4
 8002c4c:	4628      	mov	r0, r5
 8002c4e:	f000 f817 	bl	8002c80 <__swbuf_r>
 8002c52:	3001      	adds	r0, #1
 8002c54:	d1bf      	bne.n	8002bd6 <_puts_r+0x42>
 8002c56:	e7df      	b.n	8002c18 <_puts_r+0x84>
 8002c58:	6823      	ldr	r3, [r4, #0]
 8002c5a:	250a      	movs	r5, #10
 8002c5c:	1c5a      	adds	r2, r3, #1
 8002c5e:	6022      	str	r2, [r4, #0]
 8002c60:	701d      	strb	r5, [r3, #0]
 8002c62:	e7db      	b.n	8002c1c <_puts_r+0x88>
 8002c64:	08004f34 	.word	0x08004f34
 8002c68:	08004f54 	.word	0x08004f54
 8002c6c:	08004f14 	.word	0x08004f14

08002c70 <puts>:
 8002c70:	4b02      	ldr	r3, [pc, #8]	; (8002c7c <puts+0xc>)
 8002c72:	4601      	mov	r1, r0
 8002c74:	6818      	ldr	r0, [r3, #0]
 8002c76:	f7ff bf8d 	b.w	8002b94 <_puts_r>
 8002c7a:	bf00      	nop
 8002c7c:	20000148 	.word	0x20000148

08002c80 <__swbuf_r>:
 8002c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c82:	460e      	mov	r6, r1
 8002c84:	4614      	mov	r4, r2
 8002c86:	4605      	mov	r5, r0
 8002c88:	b118      	cbz	r0, 8002c92 <__swbuf_r+0x12>
 8002c8a:	6983      	ldr	r3, [r0, #24]
 8002c8c:	b90b      	cbnz	r3, 8002c92 <__swbuf_r+0x12>
 8002c8e:	f001 f84b 	bl	8003d28 <__sinit>
 8002c92:	4b21      	ldr	r3, [pc, #132]	; (8002d18 <__swbuf_r+0x98>)
 8002c94:	429c      	cmp	r4, r3
 8002c96:	d12b      	bne.n	8002cf0 <__swbuf_r+0x70>
 8002c98:	686c      	ldr	r4, [r5, #4]
 8002c9a:	69a3      	ldr	r3, [r4, #24]
 8002c9c:	60a3      	str	r3, [r4, #8]
 8002c9e:	89a3      	ldrh	r3, [r4, #12]
 8002ca0:	071a      	lsls	r2, r3, #28
 8002ca2:	d52f      	bpl.n	8002d04 <__swbuf_r+0x84>
 8002ca4:	6923      	ldr	r3, [r4, #16]
 8002ca6:	b36b      	cbz	r3, 8002d04 <__swbuf_r+0x84>
 8002ca8:	6923      	ldr	r3, [r4, #16]
 8002caa:	6820      	ldr	r0, [r4, #0]
 8002cac:	1ac0      	subs	r0, r0, r3
 8002cae:	6963      	ldr	r3, [r4, #20]
 8002cb0:	b2f6      	uxtb	r6, r6
 8002cb2:	4283      	cmp	r3, r0
 8002cb4:	4637      	mov	r7, r6
 8002cb6:	dc04      	bgt.n	8002cc2 <__swbuf_r+0x42>
 8002cb8:	4621      	mov	r1, r4
 8002cba:	4628      	mov	r0, r5
 8002cbc:	f000 ffa0 	bl	8003c00 <_fflush_r>
 8002cc0:	bb30      	cbnz	r0, 8002d10 <__swbuf_r+0x90>
 8002cc2:	68a3      	ldr	r3, [r4, #8]
 8002cc4:	3b01      	subs	r3, #1
 8002cc6:	60a3      	str	r3, [r4, #8]
 8002cc8:	6823      	ldr	r3, [r4, #0]
 8002cca:	1c5a      	adds	r2, r3, #1
 8002ccc:	6022      	str	r2, [r4, #0]
 8002cce:	701e      	strb	r6, [r3, #0]
 8002cd0:	6963      	ldr	r3, [r4, #20]
 8002cd2:	3001      	adds	r0, #1
 8002cd4:	4283      	cmp	r3, r0
 8002cd6:	d004      	beq.n	8002ce2 <__swbuf_r+0x62>
 8002cd8:	89a3      	ldrh	r3, [r4, #12]
 8002cda:	07db      	lsls	r3, r3, #31
 8002cdc:	d506      	bpl.n	8002cec <__swbuf_r+0x6c>
 8002cde:	2e0a      	cmp	r6, #10
 8002ce0:	d104      	bne.n	8002cec <__swbuf_r+0x6c>
 8002ce2:	4621      	mov	r1, r4
 8002ce4:	4628      	mov	r0, r5
 8002ce6:	f000 ff8b 	bl	8003c00 <_fflush_r>
 8002cea:	b988      	cbnz	r0, 8002d10 <__swbuf_r+0x90>
 8002cec:	4638      	mov	r0, r7
 8002cee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002cf0:	4b0a      	ldr	r3, [pc, #40]	; (8002d1c <__swbuf_r+0x9c>)
 8002cf2:	429c      	cmp	r4, r3
 8002cf4:	d101      	bne.n	8002cfa <__swbuf_r+0x7a>
 8002cf6:	68ac      	ldr	r4, [r5, #8]
 8002cf8:	e7cf      	b.n	8002c9a <__swbuf_r+0x1a>
 8002cfa:	4b09      	ldr	r3, [pc, #36]	; (8002d20 <__swbuf_r+0xa0>)
 8002cfc:	429c      	cmp	r4, r3
 8002cfe:	bf08      	it	eq
 8002d00:	68ec      	ldreq	r4, [r5, #12]
 8002d02:	e7ca      	b.n	8002c9a <__swbuf_r+0x1a>
 8002d04:	4621      	mov	r1, r4
 8002d06:	4628      	mov	r0, r5
 8002d08:	f000 f80c 	bl	8002d24 <__swsetup_r>
 8002d0c:	2800      	cmp	r0, #0
 8002d0e:	d0cb      	beq.n	8002ca8 <__swbuf_r+0x28>
 8002d10:	f04f 37ff 	mov.w	r7, #4294967295
 8002d14:	e7ea      	b.n	8002cec <__swbuf_r+0x6c>
 8002d16:	bf00      	nop
 8002d18:	08004f34 	.word	0x08004f34
 8002d1c:	08004f54 	.word	0x08004f54
 8002d20:	08004f14 	.word	0x08004f14

08002d24 <__swsetup_r>:
 8002d24:	4b32      	ldr	r3, [pc, #200]	; (8002df0 <__swsetup_r+0xcc>)
 8002d26:	b570      	push	{r4, r5, r6, lr}
 8002d28:	681d      	ldr	r5, [r3, #0]
 8002d2a:	4606      	mov	r6, r0
 8002d2c:	460c      	mov	r4, r1
 8002d2e:	b125      	cbz	r5, 8002d3a <__swsetup_r+0x16>
 8002d30:	69ab      	ldr	r3, [r5, #24]
 8002d32:	b913      	cbnz	r3, 8002d3a <__swsetup_r+0x16>
 8002d34:	4628      	mov	r0, r5
 8002d36:	f000 fff7 	bl	8003d28 <__sinit>
 8002d3a:	4b2e      	ldr	r3, [pc, #184]	; (8002df4 <__swsetup_r+0xd0>)
 8002d3c:	429c      	cmp	r4, r3
 8002d3e:	d10f      	bne.n	8002d60 <__swsetup_r+0x3c>
 8002d40:	686c      	ldr	r4, [r5, #4]
 8002d42:	89a3      	ldrh	r3, [r4, #12]
 8002d44:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002d48:	0719      	lsls	r1, r3, #28
 8002d4a:	d42c      	bmi.n	8002da6 <__swsetup_r+0x82>
 8002d4c:	06dd      	lsls	r5, r3, #27
 8002d4e:	d411      	bmi.n	8002d74 <__swsetup_r+0x50>
 8002d50:	2309      	movs	r3, #9
 8002d52:	6033      	str	r3, [r6, #0]
 8002d54:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8002d58:	81a3      	strh	r3, [r4, #12]
 8002d5a:	f04f 30ff 	mov.w	r0, #4294967295
 8002d5e:	e03e      	b.n	8002dde <__swsetup_r+0xba>
 8002d60:	4b25      	ldr	r3, [pc, #148]	; (8002df8 <__swsetup_r+0xd4>)
 8002d62:	429c      	cmp	r4, r3
 8002d64:	d101      	bne.n	8002d6a <__swsetup_r+0x46>
 8002d66:	68ac      	ldr	r4, [r5, #8]
 8002d68:	e7eb      	b.n	8002d42 <__swsetup_r+0x1e>
 8002d6a:	4b24      	ldr	r3, [pc, #144]	; (8002dfc <__swsetup_r+0xd8>)
 8002d6c:	429c      	cmp	r4, r3
 8002d6e:	bf08      	it	eq
 8002d70:	68ec      	ldreq	r4, [r5, #12]
 8002d72:	e7e6      	b.n	8002d42 <__swsetup_r+0x1e>
 8002d74:	0758      	lsls	r0, r3, #29
 8002d76:	d512      	bpl.n	8002d9e <__swsetup_r+0x7a>
 8002d78:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002d7a:	b141      	cbz	r1, 8002d8e <__swsetup_r+0x6a>
 8002d7c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002d80:	4299      	cmp	r1, r3
 8002d82:	d002      	beq.n	8002d8a <__swsetup_r+0x66>
 8002d84:	4630      	mov	r0, r6
 8002d86:	f001 fc89 	bl	800469c <_free_r>
 8002d8a:	2300      	movs	r3, #0
 8002d8c:	6363      	str	r3, [r4, #52]	; 0x34
 8002d8e:	89a3      	ldrh	r3, [r4, #12]
 8002d90:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8002d94:	81a3      	strh	r3, [r4, #12]
 8002d96:	2300      	movs	r3, #0
 8002d98:	6063      	str	r3, [r4, #4]
 8002d9a:	6923      	ldr	r3, [r4, #16]
 8002d9c:	6023      	str	r3, [r4, #0]
 8002d9e:	89a3      	ldrh	r3, [r4, #12]
 8002da0:	f043 0308 	orr.w	r3, r3, #8
 8002da4:	81a3      	strh	r3, [r4, #12]
 8002da6:	6923      	ldr	r3, [r4, #16]
 8002da8:	b94b      	cbnz	r3, 8002dbe <__swsetup_r+0x9a>
 8002daa:	89a3      	ldrh	r3, [r4, #12]
 8002dac:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8002db0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002db4:	d003      	beq.n	8002dbe <__swsetup_r+0x9a>
 8002db6:	4621      	mov	r1, r4
 8002db8:	4630      	mov	r0, r6
 8002dba:	f001 f87f 	bl	8003ebc <__smakebuf_r>
 8002dbe:	89a0      	ldrh	r0, [r4, #12]
 8002dc0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002dc4:	f010 0301 	ands.w	r3, r0, #1
 8002dc8:	d00a      	beq.n	8002de0 <__swsetup_r+0xbc>
 8002dca:	2300      	movs	r3, #0
 8002dcc:	60a3      	str	r3, [r4, #8]
 8002dce:	6963      	ldr	r3, [r4, #20]
 8002dd0:	425b      	negs	r3, r3
 8002dd2:	61a3      	str	r3, [r4, #24]
 8002dd4:	6923      	ldr	r3, [r4, #16]
 8002dd6:	b943      	cbnz	r3, 8002dea <__swsetup_r+0xc6>
 8002dd8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8002ddc:	d1ba      	bne.n	8002d54 <__swsetup_r+0x30>
 8002dde:	bd70      	pop	{r4, r5, r6, pc}
 8002de0:	0781      	lsls	r1, r0, #30
 8002de2:	bf58      	it	pl
 8002de4:	6963      	ldrpl	r3, [r4, #20]
 8002de6:	60a3      	str	r3, [r4, #8]
 8002de8:	e7f4      	b.n	8002dd4 <__swsetup_r+0xb0>
 8002dea:	2000      	movs	r0, #0
 8002dec:	e7f7      	b.n	8002dde <__swsetup_r+0xba>
 8002dee:	bf00      	nop
 8002df0:	20000148 	.word	0x20000148
 8002df4:	08004f34 	.word	0x08004f34
 8002df8:	08004f54 	.word	0x08004f54
 8002dfc:	08004f14 	.word	0x08004f14

08002e00 <quorem>:
 8002e00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e04:	6903      	ldr	r3, [r0, #16]
 8002e06:	690c      	ldr	r4, [r1, #16]
 8002e08:	42a3      	cmp	r3, r4
 8002e0a:	4607      	mov	r7, r0
 8002e0c:	f2c0 8081 	blt.w	8002f12 <quorem+0x112>
 8002e10:	3c01      	subs	r4, #1
 8002e12:	f101 0814 	add.w	r8, r1, #20
 8002e16:	f100 0514 	add.w	r5, r0, #20
 8002e1a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002e1e:	9301      	str	r3, [sp, #4]
 8002e20:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002e24:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002e28:	3301      	adds	r3, #1
 8002e2a:	429a      	cmp	r2, r3
 8002e2c:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002e30:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002e34:	fbb2 f6f3 	udiv	r6, r2, r3
 8002e38:	d331      	bcc.n	8002e9e <quorem+0x9e>
 8002e3a:	f04f 0e00 	mov.w	lr, #0
 8002e3e:	4640      	mov	r0, r8
 8002e40:	46ac      	mov	ip, r5
 8002e42:	46f2      	mov	sl, lr
 8002e44:	f850 2b04 	ldr.w	r2, [r0], #4
 8002e48:	b293      	uxth	r3, r2
 8002e4a:	fb06 e303 	mla	r3, r6, r3, lr
 8002e4e:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8002e52:	b29b      	uxth	r3, r3
 8002e54:	ebaa 0303 	sub.w	r3, sl, r3
 8002e58:	f8dc a000 	ldr.w	sl, [ip]
 8002e5c:	0c12      	lsrs	r2, r2, #16
 8002e5e:	fa13 f38a 	uxtah	r3, r3, sl
 8002e62:	fb06 e202 	mla	r2, r6, r2, lr
 8002e66:	9300      	str	r3, [sp, #0]
 8002e68:	9b00      	ldr	r3, [sp, #0]
 8002e6a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002e6e:	b292      	uxth	r2, r2
 8002e70:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002e74:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002e78:	f8bd 3000 	ldrh.w	r3, [sp]
 8002e7c:	4581      	cmp	r9, r0
 8002e7e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002e82:	f84c 3b04 	str.w	r3, [ip], #4
 8002e86:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002e8a:	d2db      	bcs.n	8002e44 <quorem+0x44>
 8002e8c:	f855 300b 	ldr.w	r3, [r5, fp]
 8002e90:	b92b      	cbnz	r3, 8002e9e <quorem+0x9e>
 8002e92:	9b01      	ldr	r3, [sp, #4]
 8002e94:	3b04      	subs	r3, #4
 8002e96:	429d      	cmp	r5, r3
 8002e98:	461a      	mov	r2, r3
 8002e9a:	d32e      	bcc.n	8002efa <quorem+0xfa>
 8002e9c:	613c      	str	r4, [r7, #16]
 8002e9e:	4638      	mov	r0, r7
 8002ea0:	f001 fae4 	bl	800446c <__mcmp>
 8002ea4:	2800      	cmp	r0, #0
 8002ea6:	db24      	blt.n	8002ef2 <quorem+0xf2>
 8002ea8:	3601      	adds	r6, #1
 8002eaa:	4628      	mov	r0, r5
 8002eac:	f04f 0c00 	mov.w	ip, #0
 8002eb0:	f858 2b04 	ldr.w	r2, [r8], #4
 8002eb4:	f8d0 e000 	ldr.w	lr, [r0]
 8002eb8:	b293      	uxth	r3, r2
 8002eba:	ebac 0303 	sub.w	r3, ip, r3
 8002ebe:	0c12      	lsrs	r2, r2, #16
 8002ec0:	fa13 f38e 	uxtah	r3, r3, lr
 8002ec4:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8002ec8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002ecc:	b29b      	uxth	r3, r3
 8002ece:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002ed2:	45c1      	cmp	r9, r8
 8002ed4:	f840 3b04 	str.w	r3, [r0], #4
 8002ed8:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8002edc:	d2e8      	bcs.n	8002eb0 <quorem+0xb0>
 8002ede:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002ee2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002ee6:	b922      	cbnz	r2, 8002ef2 <quorem+0xf2>
 8002ee8:	3b04      	subs	r3, #4
 8002eea:	429d      	cmp	r5, r3
 8002eec:	461a      	mov	r2, r3
 8002eee:	d30a      	bcc.n	8002f06 <quorem+0x106>
 8002ef0:	613c      	str	r4, [r7, #16]
 8002ef2:	4630      	mov	r0, r6
 8002ef4:	b003      	add	sp, #12
 8002ef6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002efa:	6812      	ldr	r2, [r2, #0]
 8002efc:	3b04      	subs	r3, #4
 8002efe:	2a00      	cmp	r2, #0
 8002f00:	d1cc      	bne.n	8002e9c <quorem+0x9c>
 8002f02:	3c01      	subs	r4, #1
 8002f04:	e7c7      	b.n	8002e96 <quorem+0x96>
 8002f06:	6812      	ldr	r2, [r2, #0]
 8002f08:	3b04      	subs	r3, #4
 8002f0a:	2a00      	cmp	r2, #0
 8002f0c:	d1f0      	bne.n	8002ef0 <quorem+0xf0>
 8002f0e:	3c01      	subs	r4, #1
 8002f10:	e7eb      	b.n	8002eea <quorem+0xea>
 8002f12:	2000      	movs	r0, #0
 8002f14:	e7ee      	b.n	8002ef4 <quorem+0xf4>
	...

08002f18 <_dtoa_r>:
 8002f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f1c:	ed2d 8b04 	vpush	{d8-d9}
 8002f20:	ec57 6b10 	vmov	r6, r7, d0
 8002f24:	b093      	sub	sp, #76	; 0x4c
 8002f26:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8002f28:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002f2c:	9106      	str	r1, [sp, #24]
 8002f2e:	ee10 aa10 	vmov	sl, s0
 8002f32:	4604      	mov	r4, r0
 8002f34:	9209      	str	r2, [sp, #36]	; 0x24
 8002f36:	930c      	str	r3, [sp, #48]	; 0x30
 8002f38:	46bb      	mov	fp, r7
 8002f3a:	b975      	cbnz	r5, 8002f5a <_dtoa_r+0x42>
 8002f3c:	2010      	movs	r0, #16
 8002f3e:	f000 fffd 	bl	8003f3c <malloc>
 8002f42:	4602      	mov	r2, r0
 8002f44:	6260      	str	r0, [r4, #36]	; 0x24
 8002f46:	b920      	cbnz	r0, 8002f52 <_dtoa_r+0x3a>
 8002f48:	4ba7      	ldr	r3, [pc, #668]	; (80031e8 <_dtoa_r+0x2d0>)
 8002f4a:	21ea      	movs	r1, #234	; 0xea
 8002f4c:	48a7      	ldr	r0, [pc, #668]	; (80031ec <_dtoa_r+0x2d4>)
 8002f4e:	f001 fe45 	bl	8004bdc <__assert_func>
 8002f52:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002f56:	6005      	str	r5, [r0, #0]
 8002f58:	60c5      	str	r5, [r0, #12]
 8002f5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002f5c:	6819      	ldr	r1, [r3, #0]
 8002f5e:	b151      	cbz	r1, 8002f76 <_dtoa_r+0x5e>
 8002f60:	685a      	ldr	r2, [r3, #4]
 8002f62:	604a      	str	r2, [r1, #4]
 8002f64:	2301      	movs	r3, #1
 8002f66:	4093      	lsls	r3, r2
 8002f68:	608b      	str	r3, [r1, #8]
 8002f6a:	4620      	mov	r0, r4
 8002f6c:	f001 f83c 	bl	8003fe8 <_Bfree>
 8002f70:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002f72:	2200      	movs	r2, #0
 8002f74:	601a      	str	r2, [r3, #0]
 8002f76:	1e3b      	subs	r3, r7, #0
 8002f78:	bfaa      	itet	ge
 8002f7a:	2300      	movge	r3, #0
 8002f7c:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8002f80:	f8c8 3000 	strge.w	r3, [r8]
 8002f84:	4b9a      	ldr	r3, [pc, #616]	; (80031f0 <_dtoa_r+0x2d8>)
 8002f86:	bfbc      	itt	lt
 8002f88:	2201      	movlt	r2, #1
 8002f8a:	f8c8 2000 	strlt.w	r2, [r8]
 8002f8e:	ea33 030b 	bics.w	r3, r3, fp
 8002f92:	d11b      	bne.n	8002fcc <_dtoa_r+0xb4>
 8002f94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002f96:	f242 730f 	movw	r3, #9999	; 0x270f
 8002f9a:	6013      	str	r3, [r2, #0]
 8002f9c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8002fa0:	4333      	orrs	r3, r6
 8002fa2:	f000 8592 	beq.w	8003aca <_dtoa_r+0xbb2>
 8002fa6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002fa8:	b963      	cbnz	r3, 8002fc4 <_dtoa_r+0xac>
 8002faa:	4b92      	ldr	r3, [pc, #584]	; (80031f4 <_dtoa_r+0x2dc>)
 8002fac:	e022      	b.n	8002ff4 <_dtoa_r+0xdc>
 8002fae:	4b92      	ldr	r3, [pc, #584]	; (80031f8 <_dtoa_r+0x2e0>)
 8002fb0:	9301      	str	r3, [sp, #4]
 8002fb2:	3308      	adds	r3, #8
 8002fb4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002fb6:	6013      	str	r3, [r2, #0]
 8002fb8:	9801      	ldr	r0, [sp, #4]
 8002fba:	b013      	add	sp, #76	; 0x4c
 8002fbc:	ecbd 8b04 	vpop	{d8-d9}
 8002fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fc4:	4b8b      	ldr	r3, [pc, #556]	; (80031f4 <_dtoa_r+0x2dc>)
 8002fc6:	9301      	str	r3, [sp, #4]
 8002fc8:	3303      	adds	r3, #3
 8002fca:	e7f3      	b.n	8002fb4 <_dtoa_r+0x9c>
 8002fcc:	2200      	movs	r2, #0
 8002fce:	2300      	movs	r3, #0
 8002fd0:	4650      	mov	r0, sl
 8002fd2:	4659      	mov	r1, fp
 8002fd4:	f7fd fd88 	bl	8000ae8 <__aeabi_dcmpeq>
 8002fd8:	ec4b ab19 	vmov	d9, sl, fp
 8002fdc:	4680      	mov	r8, r0
 8002fde:	b158      	cbz	r0, 8002ff8 <_dtoa_r+0xe0>
 8002fe0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002fe2:	2301      	movs	r3, #1
 8002fe4:	6013      	str	r3, [r2, #0]
 8002fe6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	f000 856b 	beq.w	8003ac4 <_dtoa_r+0xbac>
 8002fee:	4883      	ldr	r0, [pc, #524]	; (80031fc <_dtoa_r+0x2e4>)
 8002ff0:	6018      	str	r0, [r3, #0]
 8002ff2:	1e43      	subs	r3, r0, #1
 8002ff4:	9301      	str	r3, [sp, #4]
 8002ff6:	e7df      	b.n	8002fb8 <_dtoa_r+0xa0>
 8002ff8:	ec4b ab10 	vmov	d0, sl, fp
 8002ffc:	aa10      	add	r2, sp, #64	; 0x40
 8002ffe:	a911      	add	r1, sp, #68	; 0x44
 8003000:	4620      	mov	r0, r4
 8003002:	f001 fad9 	bl	80045b8 <__d2b>
 8003006:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800300a:	ee08 0a10 	vmov	s16, r0
 800300e:	2d00      	cmp	r5, #0
 8003010:	f000 8084 	beq.w	800311c <_dtoa_r+0x204>
 8003014:	ee19 3a90 	vmov	r3, s19
 8003018:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800301c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8003020:	4656      	mov	r6, sl
 8003022:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8003026:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800302a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800302e:	4b74      	ldr	r3, [pc, #464]	; (8003200 <_dtoa_r+0x2e8>)
 8003030:	2200      	movs	r2, #0
 8003032:	4630      	mov	r0, r6
 8003034:	4639      	mov	r1, r7
 8003036:	f7fd f937 	bl	80002a8 <__aeabi_dsub>
 800303a:	a365      	add	r3, pc, #404	; (adr r3, 80031d0 <_dtoa_r+0x2b8>)
 800303c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003040:	f7fd faea 	bl	8000618 <__aeabi_dmul>
 8003044:	a364      	add	r3, pc, #400	; (adr r3, 80031d8 <_dtoa_r+0x2c0>)
 8003046:	e9d3 2300 	ldrd	r2, r3, [r3]
 800304a:	f7fd f92f 	bl	80002ac <__adddf3>
 800304e:	4606      	mov	r6, r0
 8003050:	4628      	mov	r0, r5
 8003052:	460f      	mov	r7, r1
 8003054:	f7fd fa76 	bl	8000544 <__aeabi_i2d>
 8003058:	a361      	add	r3, pc, #388	; (adr r3, 80031e0 <_dtoa_r+0x2c8>)
 800305a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800305e:	f7fd fadb 	bl	8000618 <__aeabi_dmul>
 8003062:	4602      	mov	r2, r0
 8003064:	460b      	mov	r3, r1
 8003066:	4630      	mov	r0, r6
 8003068:	4639      	mov	r1, r7
 800306a:	f7fd f91f 	bl	80002ac <__adddf3>
 800306e:	4606      	mov	r6, r0
 8003070:	460f      	mov	r7, r1
 8003072:	f7fd fd81 	bl	8000b78 <__aeabi_d2iz>
 8003076:	2200      	movs	r2, #0
 8003078:	9000      	str	r0, [sp, #0]
 800307a:	2300      	movs	r3, #0
 800307c:	4630      	mov	r0, r6
 800307e:	4639      	mov	r1, r7
 8003080:	f7fd fd3c 	bl	8000afc <__aeabi_dcmplt>
 8003084:	b150      	cbz	r0, 800309c <_dtoa_r+0x184>
 8003086:	9800      	ldr	r0, [sp, #0]
 8003088:	f7fd fa5c 	bl	8000544 <__aeabi_i2d>
 800308c:	4632      	mov	r2, r6
 800308e:	463b      	mov	r3, r7
 8003090:	f7fd fd2a 	bl	8000ae8 <__aeabi_dcmpeq>
 8003094:	b910      	cbnz	r0, 800309c <_dtoa_r+0x184>
 8003096:	9b00      	ldr	r3, [sp, #0]
 8003098:	3b01      	subs	r3, #1
 800309a:	9300      	str	r3, [sp, #0]
 800309c:	9b00      	ldr	r3, [sp, #0]
 800309e:	2b16      	cmp	r3, #22
 80030a0:	d85a      	bhi.n	8003158 <_dtoa_r+0x240>
 80030a2:	9a00      	ldr	r2, [sp, #0]
 80030a4:	4b57      	ldr	r3, [pc, #348]	; (8003204 <_dtoa_r+0x2ec>)
 80030a6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80030aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80030ae:	ec51 0b19 	vmov	r0, r1, d9
 80030b2:	f7fd fd23 	bl	8000afc <__aeabi_dcmplt>
 80030b6:	2800      	cmp	r0, #0
 80030b8:	d050      	beq.n	800315c <_dtoa_r+0x244>
 80030ba:	9b00      	ldr	r3, [sp, #0]
 80030bc:	3b01      	subs	r3, #1
 80030be:	9300      	str	r3, [sp, #0]
 80030c0:	2300      	movs	r3, #0
 80030c2:	930b      	str	r3, [sp, #44]	; 0x2c
 80030c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80030c6:	1b5d      	subs	r5, r3, r5
 80030c8:	1e6b      	subs	r3, r5, #1
 80030ca:	9305      	str	r3, [sp, #20]
 80030cc:	bf45      	ittet	mi
 80030ce:	f1c5 0301 	rsbmi	r3, r5, #1
 80030d2:	9304      	strmi	r3, [sp, #16]
 80030d4:	2300      	movpl	r3, #0
 80030d6:	2300      	movmi	r3, #0
 80030d8:	bf4c      	ite	mi
 80030da:	9305      	strmi	r3, [sp, #20]
 80030dc:	9304      	strpl	r3, [sp, #16]
 80030de:	9b00      	ldr	r3, [sp, #0]
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	db3d      	blt.n	8003160 <_dtoa_r+0x248>
 80030e4:	9b05      	ldr	r3, [sp, #20]
 80030e6:	9a00      	ldr	r2, [sp, #0]
 80030e8:	920a      	str	r2, [sp, #40]	; 0x28
 80030ea:	4413      	add	r3, r2
 80030ec:	9305      	str	r3, [sp, #20]
 80030ee:	2300      	movs	r3, #0
 80030f0:	9307      	str	r3, [sp, #28]
 80030f2:	9b06      	ldr	r3, [sp, #24]
 80030f4:	2b09      	cmp	r3, #9
 80030f6:	f200 8089 	bhi.w	800320c <_dtoa_r+0x2f4>
 80030fa:	2b05      	cmp	r3, #5
 80030fc:	bfc4      	itt	gt
 80030fe:	3b04      	subgt	r3, #4
 8003100:	9306      	strgt	r3, [sp, #24]
 8003102:	9b06      	ldr	r3, [sp, #24]
 8003104:	f1a3 0302 	sub.w	r3, r3, #2
 8003108:	bfcc      	ite	gt
 800310a:	2500      	movgt	r5, #0
 800310c:	2501      	movle	r5, #1
 800310e:	2b03      	cmp	r3, #3
 8003110:	f200 8087 	bhi.w	8003222 <_dtoa_r+0x30a>
 8003114:	e8df f003 	tbb	[pc, r3]
 8003118:	59383a2d 	.word	0x59383a2d
 800311c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8003120:	441d      	add	r5, r3
 8003122:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8003126:	2b20      	cmp	r3, #32
 8003128:	bfc1      	itttt	gt
 800312a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800312e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8003132:	fa0b f303 	lslgt.w	r3, fp, r3
 8003136:	fa26 f000 	lsrgt.w	r0, r6, r0
 800313a:	bfda      	itte	le
 800313c:	f1c3 0320 	rsble	r3, r3, #32
 8003140:	fa06 f003 	lslle.w	r0, r6, r3
 8003144:	4318      	orrgt	r0, r3
 8003146:	f7fd f9ed 	bl	8000524 <__aeabi_ui2d>
 800314a:	2301      	movs	r3, #1
 800314c:	4606      	mov	r6, r0
 800314e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8003152:	3d01      	subs	r5, #1
 8003154:	930e      	str	r3, [sp, #56]	; 0x38
 8003156:	e76a      	b.n	800302e <_dtoa_r+0x116>
 8003158:	2301      	movs	r3, #1
 800315a:	e7b2      	b.n	80030c2 <_dtoa_r+0x1aa>
 800315c:	900b      	str	r0, [sp, #44]	; 0x2c
 800315e:	e7b1      	b.n	80030c4 <_dtoa_r+0x1ac>
 8003160:	9b04      	ldr	r3, [sp, #16]
 8003162:	9a00      	ldr	r2, [sp, #0]
 8003164:	1a9b      	subs	r3, r3, r2
 8003166:	9304      	str	r3, [sp, #16]
 8003168:	4253      	negs	r3, r2
 800316a:	9307      	str	r3, [sp, #28]
 800316c:	2300      	movs	r3, #0
 800316e:	930a      	str	r3, [sp, #40]	; 0x28
 8003170:	e7bf      	b.n	80030f2 <_dtoa_r+0x1da>
 8003172:	2300      	movs	r3, #0
 8003174:	9308      	str	r3, [sp, #32]
 8003176:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003178:	2b00      	cmp	r3, #0
 800317a:	dc55      	bgt.n	8003228 <_dtoa_r+0x310>
 800317c:	2301      	movs	r3, #1
 800317e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8003182:	461a      	mov	r2, r3
 8003184:	9209      	str	r2, [sp, #36]	; 0x24
 8003186:	e00c      	b.n	80031a2 <_dtoa_r+0x28a>
 8003188:	2301      	movs	r3, #1
 800318a:	e7f3      	b.n	8003174 <_dtoa_r+0x25c>
 800318c:	2300      	movs	r3, #0
 800318e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003190:	9308      	str	r3, [sp, #32]
 8003192:	9b00      	ldr	r3, [sp, #0]
 8003194:	4413      	add	r3, r2
 8003196:	9302      	str	r3, [sp, #8]
 8003198:	3301      	adds	r3, #1
 800319a:	2b01      	cmp	r3, #1
 800319c:	9303      	str	r3, [sp, #12]
 800319e:	bfb8      	it	lt
 80031a0:	2301      	movlt	r3, #1
 80031a2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80031a4:	2200      	movs	r2, #0
 80031a6:	6042      	str	r2, [r0, #4]
 80031a8:	2204      	movs	r2, #4
 80031aa:	f102 0614 	add.w	r6, r2, #20
 80031ae:	429e      	cmp	r6, r3
 80031b0:	6841      	ldr	r1, [r0, #4]
 80031b2:	d93d      	bls.n	8003230 <_dtoa_r+0x318>
 80031b4:	4620      	mov	r0, r4
 80031b6:	f000 fed7 	bl	8003f68 <_Balloc>
 80031ba:	9001      	str	r0, [sp, #4]
 80031bc:	2800      	cmp	r0, #0
 80031be:	d13b      	bne.n	8003238 <_dtoa_r+0x320>
 80031c0:	4b11      	ldr	r3, [pc, #68]	; (8003208 <_dtoa_r+0x2f0>)
 80031c2:	4602      	mov	r2, r0
 80031c4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80031c8:	e6c0      	b.n	8002f4c <_dtoa_r+0x34>
 80031ca:	2301      	movs	r3, #1
 80031cc:	e7df      	b.n	800318e <_dtoa_r+0x276>
 80031ce:	bf00      	nop
 80031d0:	636f4361 	.word	0x636f4361
 80031d4:	3fd287a7 	.word	0x3fd287a7
 80031d8:	8b60c8b3 	.word	0x8b60c8b3
 80031dc:	3fc68a28 	.word	0x3fc68a28
 80031e0:	509f79fb 	.word	0x509f79fb
 80031e4:	3fd34413 	.word	0x3fd34413
 80031e8:	08004e91 	.word	0x08004e91
 80031ec:	08004ea8 	.word	0x08004ea8
 80031f0:	7ff00000 	.word	0x7ff00000
 80031f4:	08004e8d 	.word	0x08004e8d
 80031f8:	08004e84 	.word	0x08004e84
 80031fc:	08004e61 	.word	0x08004e61
 8003200:	3ff80000 	.word	0x3ff80000
 8003204:	08004ff8 	.word	0x08004ff8
 8003208:	08004f03 	.word	0x08004f03
 800320c:	2501      	movs	r5, #1
 800320e:	2300      	movs	r3, #0
 8003210:	9306      	str	r3, [sp, #24]
 8003212:	9508      	str	r5, [sp, #32]
 8003214:	f04f 33ff 	mov.w	r3, #4294967295
 8003218:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800321c:	2200      	movs	r2, #0
 800321e:	2312      	movs	r3, #18
 8003220:	e7b0      	b.n	8003184 <_dtoa_r+0x26c>
 8003222:	2301      	movs	r3, #1
 8003224:	9308      	str	r3, [sp, #32]
 8003226:	e7f5      	b.n	8003214 <_dtoa_r+0x2fc>
 8003228:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800322a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800322e:	e7b8      	b.n	80031a2 <_dtoa_r+0x28a>
 8003230:	3101      	adds	r1, #1
 8003232:	6041      	str	r1, [r0, #4]
 8003234:	0052      	lsls	r2, r2, #1
 8003236:	e7b8      	b.n	80031aa <_dtoa_r+0x292>
 8003238:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800323a:	9a01      	ldr	r2, [sp, #4]
 800323c:	601a      	str	r2, [r3, #0]
 800323e:	9b03      	ldr	r3, [sp, #12]
 8003240:	2b0e      	cmp	r3, #14
 8003242:	f200 809d 	bhi.w	8003380 <_dtoa_r+0x468>
 8003246:	2d00      	cmp	r5, #0
 8003248:	f000 809a 	beq.w	8003380 <_dtoa_r+0x468>
 800324c:	9b00      	ldr	r3, [sp, #0]
 800324e:	2b00      	cmp	r3, #0
 8003250:	dd32      	ble.n	80032b8 <_dtoa_r+0x3a0>
 8003252:	4ab7      	ldr	r2, [pc, #732]	; (8003530 <_dtoa_r+0x618>)
 8003254:	f003 030f 	and.w	r3, r3, #15
 8003258:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800325c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003260:	9b00      	ldr	r3, [sp, #0]
 8003262:	05d8      	lsls	r0, r3, #23
 8003264:	ea4f 1723 	mov.w	r7, r3, asr #4
 8003268:	d516      	bpl.n	8003298 <_dtoa_r+0x380>
 800326a:	4bb2      	ldr	r3, [pc, #712]	; (8003534 <_dtoa_r+0x61c>)
 800326c:	ec51 0b19 	vmov	r0, r1, d9
 8003270:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003274:	f7fd fafa 	bl	800086c <__aeabi_ddiv>
 8003278:	f007 070f 	and.w	r7, r7, #15
 800327c:	4682      	mov	sl, r0
 800327e:	468b      	mov	fp, r1
 8003280:	2503      	movs	r5, #3
 8003282:	4eac      	ldr	r6, [pc, #688]	; (8003534 <_dtoa_r+0x61c>)
 8003284:	b957      	cbnz	r7, 800329c <_dtoa_r+0x384>
 8003286:	4642      	mov	r2, r8
 8003288:	464b      	mov	r3, r9
 800328a:	4650      	mov	r0, sl
 800328c:	4659      	mov	r1, fp
 800328e:	f7fd faed 	bl	800086c <__aeabi_ddiv>
 8003292:	4682      	mov	sl, r0
 8003294:	468b      	mov	fp, r1
 8003296:	e028      	b.n	80032ea <_dtoa_r+0x3d2>
 8003298:	2502      	movs	r5, #2
 800329a:	e7f2      	b.n	8003282 <_dtoa_r+0x36a>
 800329c:	07f9      	lsls	r1, r7, #31
 800329e:	d508      	bpl.n	80032b2 <_dtoa_r+0x39a>
 80032a0:	4640      	mov	r0, r8
 80032a2:	4649      	mov	r1, r9
 80032a4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80032a8:	f7fd f9b6 	bl	8000618 <__aeabi_dmul>
 80032ac:	3501      	adds	r5, #1
 80032ae:	4680      	mov	r8, r0
 80032b0:	4689      	mov	r9, r1
 80032b2:	107f      	asrs	r7, r7, #1
 80032b4:	3608      	adds	r6, #8
 80032b6:	e7e5      	b.n	8003284 <_dtoa_r+0x36c>
 80032b8:	f000 809b 	beq.w	80033f2 <_dtoa_r+0x4da>
 80032bc:	9b00      	ldr	r3, [sp, #0]
 80032be:	4f9d      	ldr	r7, [pc, #628]	; (8003534 <_dtoa_r+0x61c>)
 80032c0:	425e      	negs	r6, r3
 80032c2:	4b9b      	ldr	r3, [pc, #620]	; (8003530 <_dtoa_r+0x618>)
 80032c4:	f006 020f 	and.w	r2, r6, #15
 80032c8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80032cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032d0:	ec51 0b19 	vmov	r0, r1, d9
 80032d4:	f7fd f9a0 	bl	8000618 <__aeabi_dmul>
 80032d8:	1136      	asrs	r6, r6, #4
 80032da:	4682      	mov	sl, r0
 80032dc:	468b      	mov	fp, r1
 80032de:	2300      	movs	r3, #0
 80032e0:	2502      	movs	r5, #2
 80032e2:	2e00      	cmp	r6, #0
 80032e4:	d17a      	bne.n	80033dc <_dtoa_r+0x4c4>
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d1d3      	bne.n	8003292 <_dtoa_r+0x37a>
 80032ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80032ec:	2b00      	cmp	r3, #0
 80032ee:	f000 8082 	beq.w	80033f6 <_dtoa_r+0x4de>
 80032f2:	4b91      	ldr	r3, [pc, #580]	; (8003538 <_dtoa_r+0x620>)
 80032f4:	2200      	movs	r2, #0
 80032f6:	4650      	mov	r0, sl
 80032f8:	4659      	mov	r1, fp
 80032fa:	f7fd fbff 	bl	8000afc <__aeabi_dcmplt>
 80032fe:	2800      	cmp	r0, #0
 8003300:	d079      	beq.n	80033f6 <_dtoa_r+0x4de>
 8003302:	9b03      	ldr	r3, [sp, #12]
 8003304:	2b00      	cmp	r3, #0
 8003306:	d076      	beq.n	80033f6 <_dtoa_r+0x4de>
 8003308:	9b02      	ldr	r3, [sp, #8]
 800330a:	2b00      	cmp	r3, #0
 800330c:	dd36      	ble.n	800337c <_dtoa_r+0x464>
 800330e:	9b00      	ldr	r3, [sp, #0]
 8003310:	4650      	mov	r0, sl
 8003312:	4659      	mov	r1, fp
 8003314:	1e5f      	subs	r7, r3, #1
 8003316:	2200      	movs	r2, #0
 8003318:	4b88      	ldr	r3, [pc, #544]	; (800353c <_dtoa_r+0x624>)
 800331a:	f7fd f97d 	bl	8000618 <__aeabi_dmul>
 800331e:	9e02      	ldr	r6, [sp, #8]
 8003320:	4682      	mov	sl, r0
 8003322:	468b      	mov	fp, r1
 8003324:	3501      	adds	r5, #1
 8003326:	4628      	mov	r0, r5
 8003328:	f7fd f90c 	bl	8000544 <__aeabi_i2d>
 800332c:	4652      	mov	r2, sl
 800332e:	465b      	mov	r3, fp
 8003330:	f7fd f972 	bl	8000618 <__aeabi_dmul>
 8003334:	4b82      	ldr	r3, [pc, #520]	; (8003540 <_dtoa_r+0x628>)
 8003336:	2200      	movs	r2, #0
 8003338:	f7fc ffb8 	bl	80002ac <__adddf3>
 800333c:	46d0      	mov	r8, sl
 800333e:	46d9      	mov	r9, fp
 8003340:	4682      	mov	sl, r0
 8003342:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8003346:	2e00      	cmp	r6, #0
 8003348:	d158      	bne.n	80033fc <_dtoa_r+0x4e4>
 800334a:	4b7e      	ldr	r3, [pc, #504]	; (8003544 <_dtoa_r+0x62c>)
 800334c:	2200      	movs	r2, #0
 800334e:	4640      	mov	r0, r8
 8003350:	4649      	mov	r1, r9
 8003352:	f7fc ffa9 	bl	80002a8 <__aeabi_dsub>
 8003356:	4652      	mov	r2, sl
 8003358:	465b      	mov	r3, fp
 800335a:	4680      	mov	r8, r0
 800335c:	4689      	mov	r9, r1
 800335e:	f7fd fbeb 	bl	8000b38 <__aeabi_dcmpgt>
 8003362:	2800      	cmp	r0, #0
 8003364:	f040 8295 	bne.w	8003892 <_dtoa_r+0x97a>
 8003368:	4652      	mov	r2, sl
 800336a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800336e:	4640      	mov	r0, r8
 8003370:	4649      	mov	r1, r9
 8003372:	f7fd fbc3 	bl	8000afc <__aeabi_dcmplt>
 8003376:	2800      	cmp	r0, #0
 8003378:	f040 8289 	bne.w	800388e <_dtoa_r+0x976>
 800337c:	ec5b ab19 	vmov	sl, fp, d9
 8003380:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003382:	2b00      	cmp	r3, #0
 8003384:	f2c0 8148 	blt.w	8003618 <_dtoa_r+0x700>
 8003388:	9a00      	ldr	r2, [sp, #0]
 800338a:	2a0e      	cmp	r2, #14
 800338c:	f300 8144 	bgt.w	8003618 <_dtoa_r+0x700>
 8003390:	4b67      	ldr	r3, [pc, #412]	; (8003530 <_dtoa_r+0x618>)
 8003392:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003396:	e9d3 8900 	ldrd	r8, r9, [r3]
 800339a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800339c:	2b00      	cmp	r3, #0
 800339e:	f280 80d5 	bge.w	800354c <_dtoa_r+0x634>
 80033a2:	9b03      	ldr	r3, [sp, #12]
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	f300 80d1 	bgt.w	800354c <_dtoa_r+0x634>
 80033aa:	f040 826f 	bne.w	800388c <_dtoa_r+0x974>
 80033ae:	4b65      	ldr	r3, [pc, #404]	; (8003544 <_dtoa_r+0x62c>)
 80033b0:	2200      	movs	r2, #0
 80033b2:	4640      	mov	r0, r8
 80033b4:	4649      	mov	r1, r9
 80033b6:	f7fd f92f 	bl	8000618 <__aeabi_dmul>
 80033ba:	4652      	mov	r2, sl
 80033bc:	465b      	mov	r3, fp
 80033be:	f7fd fbb1 	bl	8000b24 <__aeabi_dcmpge>
 80033c2:	9e03      	ldr	r6, [sp, #12]
 80033c4:	4637      	mov	r7, r6
 80033c6:	2800      	cmp	r0, #0
 80033c8:	f040 8245 	bne.w	8003856 <_dtoa_r+0x93e>
 80033cc:	9d01      	ldr	r5, [sp, #4]
 80033ce:	2331      	movs	r3, #49	; 0x31
 80033d0:	f805 3b01 	strb.w	r3, [r5], #1
 80033d4:	9b00      	ldr	r3, [sp, #0]
 80033d6:	3301      	adds	r3, #1
 80033d8:	9300      	str	r3, [sp, #0]
 80033da:	e240      	b.n	800385e <_dtoa_r+0x946>
 80033dc:	07f2      	lsls	r2, r6, #31
 80033de:	d505      	bpl.n	80033ec <_dtoa_r+0x4d4>
 80033e0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80033e4:	f7fd f918 	bl	8000618 <__aeabi_dmul>
 80033e8:	3501      	adds	r5, #1
 80033ea:	2301      	movs	r3, #1
 80033ec:	1076      	asrs	r6, r6, #1
 80033ee:	3708      	adds	r7, #8
 80033f0:	e777      	b.n	80032e2 <_dtoa_r+0x3ca>
 80033f2:	2502      	movs	r5, #2
 80033f4:	e779      	b.n	80032ea <_dtoa_r+0x3d2>
 80033f6:	9f00      	ldr	r7, [sp, #0]
 80033f8:	9e03      	ldr	r6, [sp, #12]
 80033fa:	e794      	b.n	8003326 <_dtoa_r+0x40e>
 80033fc:	9901      	ldr	r1, [sp, #4]
 80033fe:	4b4c      	ldr	r3, [pc, #304]	; (8003530 <_dtoa_r+0x618>)
 8003400:	4431      	add	r1, r6
 8003402:	910d      	str	r1, [sp, #52]	; 0x34
 8003404:	9908      	ldr	r1, [sp, #32]
 8003406:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800340a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800340e:	2900      	cmp	r1, #0
 8003410:	d043      	beq.n	800349a <_dtoa_r+0x582>
 8003412:	494d      	ldr	r1, [pc, #308]	; (8003548 <_dtoa_r+0x630>)
 8003414:	2000      	movs	r0, #0
 8003416:	f7fd fa29 	bl	800086c <__aeabi_ddiv>
 800341a:	4652      	mov	r2, sl
 800341c:	465b      	mov	r3, fp
 800341e:	f7fc ff43 	bl	80002a8 <__aeabi_dsub>
 8003422:	9d01      	ldr	r5, [sp, #4]
 8003424:	4682      	mov	sl, r0
 8003426:	468b      	mov	fp, r1
 8003428:	4649      	mov	r1, r9
 800342a:	4640      	mov	r0, r8
 800342c:	f7fd fba4 	bl	8000b78 <__aeabi_d2iz>
 8003430:	4606      	mov	r6, r0
 8003432:	f7fd f887 	bl	8000544 <__aeabi_i2d>
 8003436:	4602      	mov	r2, r0
 8003438:	460b      	mov	r3, r1
 800343a:	4640      	mov	r0, r8
 800343c:	4649      	mov	r1, r9
 800343e:	f7fc ff33 	bl	80002a8 <__aeabi_dsub>
 8003442:	3630      	adds	r6, #48	; 0x30
 8003444:	f805 6b01 	strb.w	r6, [r5], #1
 8003448:	4652      	mov	r2, sl
 800344a:	465b      	mov	r3, fp
 800344c:	4680      	mov	r8, r0
 800344e:	4689      	mov	r9, r1
 8003450:	f7fd fb54 	bl	8000afc <__aeabi_dcmplt>
 8003454:	2800      	cmp	r0, #0
 8003456:	d163      	bne.n	8003520 <_dtoa_r+0x608>
 8003458:	4642      	mov	r2, r8
 800345a:	464b      	mov	r3, r9
 800345c:	4936      	ldr	r1, [pc, #216]	; (8003538 <_dtoa_r+0x620>)
 800345e:	2000      	movs	r0, #0
 8003460:	f7fc ff22 	bl	80002a8 <__aeabi_dsub>
 8003464:	4652      	mov	r2, sl
 8003466:	465b      	mov	r3, fp
 8003468:	f7fd fb48 	bl	8000afc <__aeabi_dcmplt>
 800346c:	2800      	cmp	r0, #0
 800346e:	f040 80b5 	bne.w	80035dc <_dtoa_r+0x6c4>
 8003472:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003474:	429d      	cmp	r5, r3
 8003476:	d081      	beq.n	800337c <_dtoa_r+0x464>
 8003478:	4b30      	ldr	r3, [pc, #192]	; (800353c <_dtoa_r+0x624>)
 800347a:	2200      	movs	r2, #0
 800347c:	4650      	mov	r0, sl
 800347e:	4659      	mov	r1, fp
 8003480:	f7fd f8ca 	bl	8000618 <__aeabi_dmul>
 8003484:	4b2d      	ldr	r3, [pc, #180]	; (800353c <_dtoa_r+0x624>)
 8003486:	4682      	mov	sl, r0
 8003488:	468b      	mov	fp, r1
 800348a:	4640      	mov	r0, r8
 800348c:	4649      	mov	r1, r9
 800348e:	2200      	movs	r2, #0
 8003490:	f7fd f8c2 	bl	8000618 <__aeabi_dmul>
 8003494:	4680      	mov	r8, r0
 8003496:	4689      	mov	r9, r1
 8003498:	e7c6      	b.n	8003428 <_dtoa_r+0x510>
 800349a:	4650      	mov	r0, sl
 800349c:	4659      	mov	r1, fp
 800349e:	f7fd f8bb 	bl	8000618 <__aeabi_dmul>
 80034a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80034a4:	9d01      	ldr	r5, [sp, #4]
 80034a6:	930f      	str	r3, [sp, #60]	; 0x3c
 80034a8:	4682      	mov	sl, r0
 80034aa:	468b      	mov	fp, r1
 80034ac:	4649      	mov	r1, r9
 80034ae:	4640      	mov	r0, r8
 80034b0:	f7fd fb62 	bl	8000b78 <__aeabi_d2iz>
 80034b4:	4606      	mov	r6, r0
 80034b6:	f7fd f845 	bl	8000544 <__aeabi_i2d>
 80034ba:	3630      	adds	r6, #48	; 0x30
 80034bc:	4602      	mov	r2, r0
 80034be:	460b      	mov	r3, r1
 80034c0:	4640      	mov	r0, r8
 80034c2:	4649      	mov	r1, r9
 80034c4:	f7fc fef0 	bl	80002a8 <__aeabi_dsub>
 80034c8:	f805 6b01 	strb.w	r6, [r5], #1
 80034cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80034ce:	429d      	cmp	r5, r3
 80034d0:	4680      	mov	r8, r0
 80034d2:	4689      	mov	r9, r1
 80034d4:	f04f 0200 	mov.w	r2, #0
 80034d8:	d124      	bne.n	8003524 <_dtoa_r+0x60c>
 80034da:	4b1b      	ldr	r3, [pc, #108]	; (8003548 <_dtoa_r+0x630>)
 80034dc:	4650      	mov	r0, sl
 80034de:	4659      	mov	r1, fp
 80034e0:	f7fc fee4 	bl	80002ac <__adddf3>
 80034e4:	4602      	mov	r2, r0
 80034e6:	460b      	mov	r3, r1
 80034e8:	4640      	mov	r0, r8
 80034ea:	4649      	mov	r1, r9
 80034ec:	f7fd fb24 	bl	8000b38 <__aeabi_dcmpgt>
 80034f0:	2800      	cmp	r0, #0
 80034f2:	d173      	bne.n	80035dc <_dtoa_r+0x6c4>
 80034f4:	4652      	mov	r2, sl
 80034f6:	465b      	mov	r3, fp
 80034f8:	4913      	ldr	r1, [pc, #76]	; (8003548 <_dtoa_r+0x630>)
 80034fa:	2000      	movs	r0, #0
 80034fc:	f7fc fed4 	bl	80002a8 <__aeabi_dsub>
 8003500:	4602      	mov	r2, r0
 8003502:	460b      	mov	r3, r1
 8003504:	4640      	mov	r0, r8
 8003506:	4649      	mov	r1, r9
 8003508:	f7fd faf8 	bl	8000afc <__aeabi_dcmplt>
 800350c:	2800      	cmp	r0, #0
 800350e:	f43f af35 	beq.w	800337c <_dtoa_r+0x464>
 8003512:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8003514:	1e6b      	subs	r3, r5, #1
 8003516:	930f      	str	r3, [sp, #60]	; 0x3c
 8003518:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800351c:	2b30      	cmp	r3, #48	; 0x30
 800351e:	d0f8      	beq.n	8003512 <_dtoa_r+0x5fa>
 8003520:	9700      	str	r7, [sp, #0]
 8003522:	e049      	b.n	80035b8 <_dtoa_r+0x6a0>
 8003524:	4b05      	ldr	r3, [pc, #20]	; (800353c <_dtoa_r+0x624>)
 8003526:	f7fd f877 	bl	8000618 <__aeabi_dmul>
 800352a:	4680      	mov	r8, r0
 800352c:	4689      	mov	r9, r1
 800352e:	e7bd      	b.n	80034ac <_dtoa_r+0x594>
 8003530:	08004ff8 	.word	0x08004ff8
 8003534:	08004fd0 	.word	0x08004fd0
 8003538:	3ff00000 	.word	0x3ff00000
 800353c:	40240000 	.word	0x40240000
 8003540:	401c0000 	.word	0x401c0000
 8003544:	40140000 	.word	0x40140000
 8003548:	3fe00000 	.word	0x3fe00000
 800354c:	9d01      	ldr	r5, [sp, #4]
 800354e:	4656      	mov	r6, sl
 8003550:	465f      	mov	r7, fp
 8003552:	4642      	mov	r2, r8
 8003554:	464b      	mov	r3, r9
 8003556:	4630      	mov	r0, r6
 8003558:	4639      	mov	r1, r7
 800355a:	f7fd f987 	bl	800086c <__aeabi_ddiv>
 800355e:	f7fd fb0b 	bl	8000b78 <__aeabi_d2iz>
 8003562:	4682      	mov	sl, r0
 8003564:	f7fc ffee 	bl	8000544 <__aeabi_i2d>
 8003568:	4642      	mov	r2, r8
 800356a:	464b      	mov	r3, r9
 800356c:	f7fd f854 	bl	8000618 <__aeabi_dmul>
 8003570:	4602      	mov	r2, r0
 8003572:	460b      	mov	r3, r1
 8003574:	4630      	mov	r0, r6
 8003576:	4639      	mov	r1, r7
 8003578:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800357c:	f7fc fe94 	bl	80002a8 <__aeabi_dsub>
 8003580:	f805 6b01 	strb.w	r6, [r5], #1
 8003584:	9e01      	ldr	r6, [sp, #4]
 8003586:	9f03      	ldr	r7, [sp, #12]
 8003588:	1bae      	subs	r6, r5, r6
 800358a:	42b7      	cmp	r7, r6
 800358c:	4602      	mov	r2, r0
 800358e:	460b      	mov	r3, r1
 8003590:	d135      	bne.n	80035fe <_dtoa_r+0x6e6>
 8003592:	f7fc fe8b 	bl	80002ac <__adddf3>
 8003596:	4642      	mov	r2, r8
 8003598:	464b      	mov	r3, r9
 800359a:	4606      	mov	r6, r0
 800359c:	460f      	mov	r7, r1
 800359e:	f7fd facb 	bl	8000b38 <__aeabi_dcmpgt>
 80035a2:	b9d0      	cbnz	r0, 80035da <_dtoa_r+0x6c2>
 80035a4:	4642      	mov	r2, r8
 80035a6:	464b      	mov	r3, r9
 80035a8:	4630      	mov	r0, r6
 80035aa:	4639      	mov	r1, r7
 80035ac:	f7fd fa9c 	bl	8000ae8 <__aeabi_dcmpeq>
 80035b0:	b110      	cbz	r0, 80035b8 <_dtoa_r+0x6a0>
 80035b2:	f01a 0f01 	tst.w	sl, #1
 80035b6:	d110      	bne.n	80035da <_dtoa_r+0x6c2>
 80035b8:	4620      	mov	r0, r4
 80035ba:	ee18 1a10 	vmov	r1, s16
 80035be:	f000 fd13 	bl	8003fe8 <_Bfree>
 80035c2:	2300      	movs	r3, #0
 80035c4:	9800      	ldr	r0, [sp, #0]
 80035c6:	702b      	strb	r3, [r5, #0]
 80035c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80035ca:	3001      	adds	r0, #1
 80035cc:	6018      	str	r0, [r3, #0]
 80035ce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	f43f acf1 	beq.w	8002fb8 <_dtoa_r+0xa0>
 80035d6:	601d      	str	r5, [r3, #0]
 80035d8:	e4ee      	b.n	8002fb8 <_dtoa_r+0xa0>
 80035da:	9f00      	ldr	r7, [sp, #0]
 80035dc:	462b      	mov	r3, r5
 80035de:	461d      	mov	r5, r3
 80035e0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80035e4:	2a39      	cmp	r2, #57	; 0x39
 80035e6:	d106      	bne.n	80035f6 <_dtoa_r+0x6de>
 80035e8:	9a01      	ldr	r2, [sp, #4]
 80035ea:	429a      	cmp	r2, r3
 80035ec:	d1f7      	bne.n	80035de <_dtoa_r+0x6c6>
 80035ee:	9901      	ldr	r1, [sp, #4]
 80035f0:	2230      	movs	r2, #48	; 0x30
 80035f2:	3701      	adds	r7, #1
 80035f4:	700a      	strb	r2, [r1, #0]
 80035f6:	781a      	ldrb	r2, [r3, #0]
 80035f8:	3201      	adds	r2, #1
 80035fa:	701a      	strb	r2, [r3, #0]
 80035fc:	e790      	b.n	8003520 <_dtoa_r+0x608>
 80035fe:	4ba6      	ldr	r3, [pc, #664]	; (8003898 <_dtoa_r+0x980>)
 8003600:	2200      	movs	r2, #0
 8003602:	f7fd f809 	bl	8000618 <__aeabi_dmul>
 8003606:	2200      	movs	r2, #0
 8003608:	2300      	movs	r3, #0
 800360a:	4606      	mov	r6, r0
 800360c:	460f      	mov	r7, r1
 800360e:	f7fd fa6b 	bl	8000ae8 <__aeabi_dcmpeq>
 8003612:	2800      	cmp	r0, #0
 8003614:	d09d      	beq.n	8003552 <_dtoa_r+0x63a>
 8003616:	e7cf      	b.n	80035b8 <_dtoa_r+0x6a0>
 8003618:	9a08      	ldr	r2, [sp, #32]
 800361a:	2a00      	cmp	r2, #0
 800361c:	f000 80d7 	beq.w	80037ce <_dtoa_r+0x8b6>
 8003620:	9a06      	ldr	r2, [sp, #24]
 8003622:	2a01      	cmp	r2, #1
 8003624:	f300 80ba 	bgt.w	800379c <_dtoa_r+0x884>
 8003628:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800362a:	2a00      	cmp	r2, #0
 800362c:	f000 80b2 	beq.w	8003794 <_dtoa_r+0x87c>
 8003630:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003634:	9e07      	ldr	r6, [sp, #28]
 8003636:	9d04      	ldr	r5, [sp, #16]
 8003638:	9a04      	ldr	r2, [sp, #16]
 800363a:	441a      	add	r2, r3
 800363c:	9204      	str	r2, [sp, #16]
 800363e:	9a05      	ldr	r2, [sp, #20]
 8003640:	2101      	movs	r1, #1
 8003642:	441a      	add	r2, r3
 8003644:	4620      	mov	r0, r4
 8003646:	9205      	str	r2, [sp, #20]
 8003648:	f000 fd86 	bl	8004158 <__i2b>
 800364c:	4607      	mov	r7, r0
 800364e:	2d00      	cmp	r5, #0
 8003650:	dd0c      	ble.n	800366c <_dtoa_r+0x754>
 8003652:	9b05      	ldr	r3, [sp, #20]
 8003654:	2b00      	cmp	r3, #0
 8003656:	dd09      	ble.n	800366c <_dtoa_r+0x754>
 8003658:	42ab      	cmp	r3, r5
 800365a:	9a04      	ldr	r2, [sp, #16]
 800365c:	bfa8      	it	ge
 800365e:	462b      	movge	r3, r5
 8003660:	1ad2      	subs	r2, r2, r3
 8003662:	9204      	str	r2, [sp, #16]
 8003664:	9a05      	ldr	r2, [sp, #20]
 8003666:	1aed      	subs	r5, r5, r3
 8003668:	1ad3      	subs	r3, r2, r3
 800366a:	9305      	str	r3, [sp, #20]
 800366c:	9b07      	ldr	r3, [sp, #28]
 800366e:	b31b      	cbz	r3, 80036b8 <_dtoa_r+0x7a0>
 8003670:	9b08      	ldr	r3, [sp, #32]
 8003672:	2b00      	cmp	r3, #0
 8003674:	f000 80af 	beq.w	80037d6 <_dtoa_r+0x8be>
 8003678:	2e00      	cmp	r6, #0
 800367a:	dd13      	ble.n	80036a4 <_dtoa_r+0x78c>
 800367c:	4639      	mov	r1, r7
 800367e:	4632      	mov	r2, r6
 8003680:	4620      	mov	r0, r4
 8003682:	f000 fe29 	bl	80042d8 <__pow5mult>
 8003686:	ee18 2a10 	vmov	r2, s16
 800368a:	4601      	mov	r1, r0
 800368c:	4607      	mov	r7, r0
 800368e:	4620      	mov	r0, r4
 8003690:	f000 fd78 	bl	8004184 <__multiply>
 8003694:	ee18 1a10 	vmov	r1, s16
 8003698:	4680      	mov	r8, r0
 800369a:	4620      	mov	r0, r4
 800369c:	f000 fca4 	bl	8003fe8 <_Bfree>
 80036a0:	ee08 8a10 	vmov	s16, r8
 80036a4:	9b07      	ldr	r3, [sp, #28]
 80036a6:	1b9a      	subs	r2, r3, r6
 80036a8:	d006      	beq.n	80036b8 <_dtoa_r+0x7a0>
 80036aa:	ee18 1a10 	vmov	r1, s16
 80036ae:	4620      	mov	r0, r4
 80036b0:	f000 fe12 	bl	80042d8 <__pow5mult>
 80036b4:	ee08 0a10 	vmov	s16, r0
 80036b8:	2101      	movs	r1, #1
 80036ba:	4620      	mov	r0, r4
 80036bc:	f000 fd4c 	bl	8004158 <__i2b>
 80036c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80036c2:	2b00      	cmp	r3, #0
 80036c4:	4606      	mov	r6, r0
 80036c6:	f340 8088 	ble.w	80037da <_dtoa_r+0x8c2>
 80036ca:	461a      	mov	r2, r3
 80036cc:	4601      	mov	r1, r0
 80036ce:	4620      	mov	r0, r4
 80036d0:	f000 fe02 	bl	80042d8 <__pow5mult>
 80036d4:	9b06      	ldr	r3, [sp, #24]
 80036d6:	2b01      	cmp	r3, #1
 80036d8:	4606      	mov	r6, r0
 80036da:	f340 8081 	ble.w	80037e0 <_dtoa_r+0x8c8>
 80036de:	f04f 0800 	mov.w	r8, #0
 80036e2:	6933      	ldr	r3, [r6, #16]
 80036e4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80036e8:	6918      	ldr	r0, [r3, #16]
 80036ea:	f000 fce5 	bl	80040b8 <__hi0bits>
 80036ee:	f1c0 0020 	rsb	r0, r0, #32
 80036f2:	9b05      	ldr	r3, [sp, #20]
 80036f4:	4418      	add	r0, r3
 80036f6:	f010 001f 	ands.w	r0, r0, #31
 80036fa:	f000 8092 	beq.w	8003822 <_dtoa_r+0x90a>
 80036fe:	f1c0 0320 	rsb	r3, r0, #32
 8003702:	2b04      	cmp	r3, #4
 8003704:	f340 808a 	ble.w	800381c <_dtoa_r+0x904>
 8003708:	f1c0 001c 	rsb	r0, r0, #28
 800370c:	9b04      	ldr	r3, [sp, #16]
 800370e:	4403      	add	r3, r0
 8003710:	9304      	str	r3, [sp, #16]
 8003712:	9b05      	ldr	r3, [sp, #20]
 8003714:	4403      	add	r3, r0
 8003716:	4405      	add	r5, r0
 8003718:	9305      	str	r3, [sp, #20]
 800371a:	9b04      	ldr	r3, [sp, #16]
 800371c:	2b00      	cmp	r3, #0
 800371e:	dd07      	ble.n	8003730 <_dtoa_r+0x818>
 8003720:	ee18 1a10 	vmov	r1, s16
 8003724:	461a      	mov	r2, r3
 8003726:	4620      	mov	r0, r4
 8003728:	f000 fe30 	bl	800438c <__lshift>
 800372c:	ee08 0a10 	vmov	s16, r0
 8003730:	9b05      	ldr	r3, [sp, #20]
 8003732:	2b00      	cmp	r3, #0
 8003734:	dd05      	ble.n	8003742 <_dtoa_r+0x82a>
 8003736:	4631      	mov	r1, r6
 8003738:	461a      	mov	r2, r3
 800373a:	4620      	mov	r0, r4
 800373c:	f000 fe26 	bl	800438c <__lshift>
 8003740:	4606      	mov	r6, r0
 8003742:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003744:	2b00      	cmp	r3, #0
 8003746:	d06e      	beq.n	8003826 <_dtoa_r+0x90e>
 8003748:	ee18 0a10 	vmov	r0, s16
 800374c:	4631      	mov	r1, r6
 800374e:	f000 fe8d 	bl	800446c <__mcmp>
 8003752:	2800      	cmp	r0, #0
 8003754:	da67      	bge.n	8003826 <_dtoa_r+0x90e>
 8003756:	9b00      	ldr	r3, [sp, #0]
 8003758:	3b01      	subs	r3, #1
 800375a:	ee18 1a10 	vmov	r1, s16
 800375e:	9300      	str	r3, [sp, #0]
 8003760:	220a      	movs	r2, #10
 8003762:	2300      	movs	r3, #0
 8003764:	4620      	mov	r0, r4
 8003766:	f000 fc61 	bl	800402c <__multadd>
 800376a:	9b08      	ldr	r3, [sp, #32]
 800376c:	ee08 0a10 	vmov	s16, r0
 8003770:	2b00      	cmp	r3, #0
 8003772:	f000 81b1 	beq.w	8003ad8 <_dtoa_r+0xbc0>
 8003776:	2300      	movs	r3, #0
 8003778:	4639      	mov	r1, r7
 800377a:	220a      	movs	r2, #10
 800377c:	4620      	mov	r0, r4
 800377e:	f000 fc55 	bl	800402c <__multadd>
 8003782:	9b02      	ldr	r3, [sp, #8]
 8003784:	2b00      	cmp	r3, #0
 8003786:	4607      	mov	r7, r0
 8003788:	f300 808e 	bgt.w	80038a8 <_dtoa_r+0x990>
 800378c:	9b06      	ldr	r3, [sp, #24]
 800378e:	2b02      	cmp	r3, #2
 8003790:	dc51      	bgt.n	8003836 <_dtoa_r+0x91e>
 8003792:	e089      	b.n	80038a8 <_dtoa_r+0x990>
 8003794:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003796:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800379a:	e74b      	b.n	8003634 <_dtoa_r+0x71c>
 800379c:	9b03      	ldr	r3, [sp, #12]
 800379e:	1e5e      	subs	r6, r3, #1
 80037a0:	9b07      	ldr	r3, [sp, #28]
 80037a2:	42b3      	cmp	r3, r6
 80037a4:	bfbf      	itttt	lt
 80037a6:	9b07      	ldrlt	r3, [sp, #28]
 80037a8:	9607      	strlt	r6, [sp, #28]
 80037aa:	1af2      	sublt	r2, r6, r3
 80037ac:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80037ae:	bfb6      	itet	lt
 80037b0:	189b      	addlt	r3, r3, r2
 80037b2:	1b9e      	subge	r6, r3, r6
 80037b4:	930a      	strlt	r3, [sp, #40]	; 0x28
 80037b6:	9b03      	ldr	r3, [sp, #12]
 80037b8:	bfb8      	it	lt
 80037ba:	2600      	movlt	r6, #0
 80037bc:	2b00      	cmp	r3, #0
 80037be:	bfb7      	itett	lt
 80037c0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 80037c4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 80037c8:	1a9d      	sublt	r5, r3, r2
 80037ca:	2300      	movlt	r3, #0
 80037cc:	e734      	b.n	8003638 <_dtoa_r+0x720>
 80037ce:	9e07      	ldr	r6, [sp, #28]
 80037d0:	9d04      	ldr	r5, [sp, #16]
 80037d2:	9f08      	ldr	r7, [sp, #32]
 80037d4:	e73b      	b.n	800364e <_dtoa_r+0x736>
 80037d6:	9a07      	ldr	r2, [sp, #28]
 80037d8:	e767      	b.n	80036aa <_dtoa_r+0x792>
 80037da:	9b06      	ldr	r3, [sp, #24]
 80037dc:	2b01      	cmp	r3, #1
 80037de:	dc18      	bgt.n	8003812 <_dtoa_r+0x8fa>
 80037e0:	f1ba 0f00 	cmp.w	sl, #0
 80037e4:	d115      	bne.n	8003812 <_dtoa_r+0x8fa>
 80037e6:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80037ea:	b993      	cbnz	r3, 8003812 <_dtoa_r+0x8fa>
 80037ec:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80037f0:	0d1b      	lsrs	r3, r3, #20
 80037f2:	051b      	lsls	r3, r3, #20
 80037f4:	b183      	cbz	r3, 8003818 <_dtoa_r+0x900>
 80037f6:	9b04      	ldr	r3, [sp, #16]
 80037f8:	3301      	adds	r3, #1
 80037fa:	9304      	str	r3, [sp, #16]
 80037fc:	9b05      	ldr	r3, [sp, #20]
 80037fe:	3301      	adds	r3, #1
 8003800:	9305      	str	r3, [sp, #20]
 8003802:	f04f 0801 	mov.w	r8, #1
 8003806:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003808:	2b00      	cmp	r3, #0
 800380a:	f47f af6a 	bne.w	80036e2 <_dtoa_r+0x7ca>
 800380e:	2001      	movs	r0, #1
 8003810:	e76f      	b.n	80036f2 <_dtoa_r+0x7da>
 8003812:	f04f 0800 	mov.w	r8, #0
 8003816:	e7f6      	b.n	8003806 <_dtoa_r+0x8ee>
 8003818:	4698      	mov	r8, r3
 800381a:	e7f4      	b.n	8003806 <_dtoa_r+0x8ee>
 800381c:	f43f af7d 	beq.w	800371a <_dtoa_r+0x802>
 8003820:	4618      	mov	r0, r3
 8003822:	301c      	adds	r0, #28
 8003824:	e772      	b.n	800370c <_dtoa_r+0x7f4>
 8003826:	9b03      	ldr	r3, [sp, #12]
 8003828:	2b00      	cmp	r3, #0
 800382a:	dc37      	bgt.n	800389c <_dtoa_r+0x984>
 800382c:	9b06      	ldr	r3, [sp, #24]
 800382e:	2b02      	cmp	r3, #2
 8003830:	dd34      	ble.n	800389c <_dtoa_r+0x984>
 8003832:	9b03      	ldr	r3, [sp, #12]
 8003834:	9302      	str	r3, [sp, #8]
 8003836:	9b02      	ldr	r3, [sp, #8]
 8003838:	b96b      	cbnz	r3, 8003856 <_dtoa_r+0x93e>
 800383a:	4631      	mov	r1, r6
 800383c:	2205      	movs	r2, #5
 800383e:	4620      	mov	r0, r4
 8003840:	f000 fbf4 	bl	800402c <__multadd>
 8003844:	4601      	mov	r1, r0
 8003846:	4606      	mov	r6, r0
 8003848:	ee18 0a10 	vmov	r0, s16
 800384c:	f000 fe0e 	bl	800446c <__mcmp>
 8003850:	2800      	cmp	r0, #0
 8003852:	f73f adbb 	bgt.w	80033cc <_dtoa_r+0x4b4>
 8003856:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003858:	9d01      	ldr	r5, [sp, #4]
 800385a:	43db      	mvns	r3, r3
 800385c:	9300      	str	r3, [sp, #0]
 800385e:	f04f 0800 	mov.w	r8, #0
 8003862:	4631      	mov	r1, r6
 8003864:	4620      	mov	r0, r4
 8003866:	f000 fbbf 	bl	8003fe8 <_Bfree>
 800386a:	2f00      	cmp	r7, #0
 800386c:	f43f aea4 	beq.w	80035b8 <_dtoa_r+0x6a0>
 8003870:	f1b8 0f00 	cmp.w	r8, #0
 8003874:	d005      	beq.n	8003882 <_dtoa_r+0x96a>
 8003876:	45b8      	cmp	r8, r7
 8003878:	d003      	beq.n	8003882 <_dtoa_r+0x96a>
 800387a:	4641      	mov	r1, r8
 800387c:	4620      	mov	r0, r4
 800387e:	f000 fbb3 	bl	8003fe8 <_Bfree>
 8003882:	4639      	mov	r1, r7
 8003884:	4620      	mov	r0, r4
 8003886:	f000 fbaf 	bl	8003fe8 <_Bfree>
 800388a:	e695      	b.n	80035b8 <_dtoa_r+0x6a0>
 800388c:	2600      	movs	r6, #0
 800388e:	4637      	mov	r7, r6
 8003890:	e7e1      	b.n	8003856 <_dtoa_r+0x93e>
 8003892:	9700      	str	r7, [sp, #0]
 8003894:	4637      	mov	r7, r6
 8003896:	e599      	b.n	80033cc <_dtoa_r+0x4b4>
 8003898:	40240000 	.word	0x40240000
 800389c:	9b08      	ldr	r3, [sp, #32]
 800389e:	2b00      	cmp	r3, #0
 80038a0:	f000 80ca 	beq.w	8003a38 <_dtoa_r+0xb20>
 80038a4:	9b03      	ldr	r3, [sp, #12]
 80038a6:	9302      	str	r3, [sp, #8]
 80038a8:	2d00      	cmp	r5, #0
 80038aa:	dd05      	ble.n	80038b8 <_dtoa_r+0x9a0>
 80038ac:	4639      	mov	r1, r7
 80038ae:	462a      	mov	r2, r5
 80038b0:	4620      	mov	r0, r4
 80038b2:	f000 fd6b 	bl	800438c <__lshift>
 80038b6:	4607      	mov	r7, r0
 80038b8:	f1b8 0f00 	cmp.w	r8, #0
 80038bc:	d05b      	beq.n	8003976 <_dtoa_r+0xa5e>
 80038be:	6879      	ldr	r1, [r7, #4]
 80038c0:	4620      	mov	r0, r4
 80038c2:	f000 fb51 	bl	8003f68 <_Balloc>
 80038c6:	4605      	mov	r5, r0
 80038c8:	b928      	cbnz	r0, 80038d6 <_dtoa_r+0x9be>
 80038ca:	4b87      	ldr	r3, [pc, #540]	; (8003ae8 <_dtoa_r+0xbd0>)
 80038cc:	4602      	mov	r2, r0
 80038ce:	f240 21ea 	movw	r1, #746	; 0x2ea
 80038d2:	f7ff bb3b 	b.w	8002f4c <_dtoa_r+0x34>
 80038d6:	693a      	ldr	r2, [r7, #16]
 80038d8:	3202      	adds	r2, #2
 80038da:	0092      	lsls	r2, r2, #2
 80038dc:	f107 010c 	add.w	r1, r7, #12
 80038e0:	300c      	adds	r0, #12
 80038e2:	f000 fb33 	bl	8003f4c <memcpy>
 80038e6:	2201      	movs	r2, #1
 80038e8:	4629      	mov	r1, r5
 80038ea:	4620      	mov	r0, r4
 80038ec:	f000 fd4e 	bl	800438c <__lshift>
 80038f0:	9b01      	ldr	r3, [sp, #4]
 80038f2:	f103 0901 	add.w	r9, r3, #1
 80038f6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80038fa:	4413      	add	r3, r2
 80038fc:	9305      	str	r3, [sp, #20]
 80038fe:	f00a 0301 	and.w	r3, sl, #1
 8003902:	46b8      	mov	r8, r7
 8003904:	9304      	str	r3, [sp, #16]
 8003906:	4607      	mov	r7, r0
 8003908:	4631      	mov	r1, r6
 800390a:	ee18 0a10 	vmov	r0, s16
 800390e:	f7ff fa77 	bl	8002e00 <quorem>
 8003912:	4641      	mov	r1, r8
 8003914:	9002      	str	r0, [sp, #8]
 8003916:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800391a:	ee18 0a10 	vmov	r0, s16
 800391e:	f000 fda5 	bl	800446c <__mcmp>
 8003922:	463a      	mov	r2, r7
 8003924:	9003      	str	r0, [sp, #12]
 8003926:	4631      	mov	r1, r6
 8003928:	4620      	mov	r0, r4
 800392a:	f000 fdbb 	bl	80044a4 <__mdiff>
 800392e:	68c2      	ldr	r2, [r0, #12]
 8003930:	f109 3bff 	add.w	fp, r9, #4294967295
 8003934:	4605      	mov	r5, r0
 8003936:	bb02      	cbnz	r2, 800397a <_dtoa_r+0xa62>
 8003938:	4601      	mov	r1, r0
 800393a:	ee18 0a10 	vmov	r0, s16
 800393e:	f000 fd95 	bl	800446c <__mcmp>
 8003942:	4602      	mov	r2, r0
 8003944:	4629      	mov	r1, r5
 8003946:	4620      	mov	r0, r4
 8003948:	9207      	str	r2, [sp, #28]
 800394a:	f000 fb4d 	bl	8003fe8 <_Bfree>
 800394e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8003952:	ea43 0102 	orr.w	r1, r3, r2
 8003956:	9b04      	ldr	r3, [sp, #16]
 8003958:	430b      	orrs	r3, r1
 800395a:	464d      	mov	r5, r9
 800395c:	d10f      	bne.n	800397e <_dtoa_r+0xa66>
 800395e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8003962:	d02a      	beq.n	80039ba <_dtoa_r+0xaa2>
 8003964:	9b03      	ldr	r3, [sp, #12]
 8003966:	2b00      	cmp	r3, #0
 8003968:	dd02      	ble.n	8003970 <_dtoa_r+0xa58>
 800396a:	9b02      	ldr	r3, [sp, #8]
 800396c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8003970:	f88b a000 	strb.w	sl, [fp]
 8003974:	e775      	b.n	8003862 <_dtoa_r+0x94a>
 8003976:	4638      	mov	r0, r7
 8003978:	e7ba      	b.n	80038f0 <_dtoa_r+0x9d8>
 800397a:	2201      	movs	r2, #1
 800397c:	e7e2      	b.n	8003944 <_dtoa_r+0xa2c>
 800397e:	9b03      	ldr	r3, [sp, #12]
 8003980:	2b00      	cmp	r3, #0
 8003982:	db04      	blt.n	800398e <_dtoa_r+0xa76>
 8003984:	9906      	ldr	r1, [sp, #24]
 8003986:	430b      	orrs	r3, r1
 8003988:	9904      	ldr	r1, [sp, #16]
 800398a:	430b      	orrs	r3, r1
 800398c:	d122      	bne.n	80039d4 <_dtoa_r+0xabc>
 800398e:	2a00      	cmp	r2, #0
 8003990:	ddee      	ble.n	8003970 <_dtoa_r+0xa58>
 8003992:	ee18 1a10 	vmov	r1, s16
 8003996:	2201      	movs	r2, #1
 8003998:	4620      	mov	r0, r4
 800399a:	f000 fcf7 	bl	800438c <__lshift>
 800399e:	4631      	mov	r1, r6
 80039a0:	ee08 0a10 	vmov	s16, r0
 80039a4:	f000 fd62 	bl	800446c <__mcmp>
 80039a8:	2800      	cmp	r0, #0
 80039aa:	dc03      	bgt.n	80039b4 <_dtoa_r+0xa9c>
 80039ac:	d1e0      	bne.n	8003970 <_dtoa_r+0xa58>
 80039ae:	f01a 0f01 	tst.w	sl, #1
 80039b2:	d0dd      	beq.n	8003970 <_dtoa_r+0xa58>
 80039b4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80039b8:	d1d7      	bne.n	800396a <_dtoa_r+0xa52>
 80039ba:	2339      	movs	r3, #57	; 0x39
 80039bc:	f88b 3000 	strb.w	r3, [fp]
 80039c0:	462b      	mov	r3, r5
 80039c2:	461d      	mov	r5, r3
 80039c4:	3b01      	subs	r3, #1
 80039c6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80039ca:	2a39      	cmp	r2, #57	; 0x39
 80039cc:	d071      	beq.n	8003ab2 <_dtoa_r+0xb9a>
 80039ce:	3201      	adds	r2, #1
 80039d0:	701a      	strb	r2, [r3, #0]
 80039d2:	e746      	b.n	8003862 <_dtoa_r+0x94a>
 80039d4:	2a00      	cmp	r2, #0
 80039d6:	dd07      	ble.n	80039e8 <_dtoa_r+0xad0>
 80039d8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80039dc:	d0ed      	beq.n	80039ba <_dtoa_r+0xaa2>
 80039de:	f10a 0301 	add.w	r3, sl, #1
 80039e2:	f88b 3000 	strb.w	r3, [fp]
 80039e6:	e73c      	b.n	8003862 <_dtoa_r+0x94a>
 80039e8:	9b05      	ldr	r3, [sp, #20]
 80039ea:	f809 ac01 	strb.w	sl, [r9, #-1]
 80039ee:	4599      	cmp	r9, r3
 80039f0:	d047      	beq.n	8003a82 <_dtoa_r+0xb6a>
 80039f2:	ee18 1a10 	vmov	r1, s16
 80039f6:	2300      	movs	r3, #0
 80039f8:	220a      	movs	r2, #10
 80039fa:	4620      	mov	r0, r4
 80039fc:	f000 fb16 	bl	800402c <__multadd>
 8003a00:	45b8      	cmp	r8, r7
 8003a02:	ee08 0a10 	vmov	s16, r0
 8003a06:	f04f 0300 	mov.w	r3, #0
 8003a0a:	f04f 020a 	mov.w	r2, #10
 8003a0e:	4641      	mov	r1, r8
 8003a10:	4620      	mov	r0, r4
 8003a12:	d106      	bne.n	8003a22 <_dtoa_r+0xb0a>
 8003a14:	f000 fb0a 	bl	800402c <__multadd>
 8003a18:	4680      	mov	r8, r0
 8003a1a:	4607      	mov	r7, r0
 8003a1c:	f109 0901 	add.w	r9, r9, #1
 8003a20:	e772      	b.n	8003908 <_dtoa_r+0x9f0>
 8003a22:	f000 fb03 	bl	800402c <__multadd>
 8003a26:	4639      	mov	r1, r7
 8003a28:	4680      	mov	r8, r0
 8003a2a:	2300      	movs	r3, #0
 8003a2c:	220a      	movs	r2, #10
 8003a2e:	4620      	mov	r0, r4
 8003a30:	f000 fafc 	bl	800402c <__multadd>
 8003a34:	4607      	mov	r7, r0
 8003a36:	e7f1      	b.n	8003a1c <_dtoa_r+0xb04>
 8003a38:	9b03      	ldr	r3, [sp, #12]
 8003a3a:	9302      	str	r3, [sp, #8]
 8003a3c:	9d01      	ldr	r5, [sp, #4]
 8003a3e:	ee18 0a10 	vmov	r0, s16
 8003a42:	4631      	mov	r1, r6
 8003a44:	f7ff f9dc 	bl	8002e00 <quorem>
 8003a48:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8003a4c:	9b01      	ldr	r3, [sp, #4]
 8003a4e:	f805 ab01 	strb.w	sl, [r5], #1
 8003a52:	1aea      	subs	r2, r5, r3
 8003a54:	9b02      	ldr	r3, [sp, #8]
 8003a56:	4293      	cmp	r3, r2
 8003a58:	dd09      	ble.n	8003a6e <_dtoa_r+0xb56>
 8003a5a:	ee18 1a10 	vmov	r1, s16
 8003a5e:	2300      	movs	r3, #0
 8003a60:	220a      	movs	r2, #10
 8003a62:	4620      	mov	r0, r4
 8003a64:	f000 fae2 	bl	800402c <__multadd>
 8003a68:	ee08 0a10 	vmov	s16, r0
 8003a6c:	e7e7      	b.n	8003a3e <_dtoa_r+0xb26>
 8003a6e:	9b02      	ldr	r3, [sp, #8]
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	bfc8      	it	gt
 8003a74:	461d      	movgt	r5, r3
 8003a76:	9b01      	ldr	r3, [sp, #4]
 8003a78:	bfd8      	it	le
 8003a7a:	2501      	movle	r5, #1
 8003a7c:	441d      	add	r5, r3
 8003a7e:	f04f 0800 	mov.w	r8, #0
 8003a82:	ee18 1a10 	vmov	r1, s16
 8003a86:	2201      	movs	r2, #1
 8003a88:	4620      	mov	r0, r4
 8003a8a:	f000 fc7f 	bl	800438c <__lshift>
 8003a8e:	4631      	mov	r1, r6
 8003a90:	ee08 0a10 	vmov	s16, r0
 8003a94:	f000 fcea 	bl	800446c <__mcmp>
 8003a98:	2800      	cmp	r0, #0
 8003a9a:	dc91      	bgt.n	80039c0 <_dtoa_r+0xaa8>
 8003a9c:	d102      	bne.n	8003aa4 <_dtoa_r+0xb8c>
 8003a9e:	f01a 0f01 	tst.w	sl, #1
 8003aa2:	d18d      	bne.n	80039c0 <_dtoa_r+0xaa8>
 8003aa4:	462b      	mov	r3, r5
 8003aa6:	461d      	mov	r5, r3
 8003aa8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003aac:	2a30      	cmp	r2, #48	; 0x30
 8003aae:	d0fa      	beq.n	8003aa6 <_dtoa_r+0xb8e>
 8003ab0:	e6d7      	b.n	8003862 <_dtoa_r+0x94a>
 8003ab2:	9a01      	ldr	r2, [sp, #4]
 8003ab4:	429a      	cmp	r2, r3
 8003ab6:	d184      	bne.n	80039c2 <_dtoa_r+0xaaa>
 8003ab8:	9b00      	ldr	r3, [sp, #0]
 8003aba:	3301      	adds	r3, #1
 8003abc:	9300      	str	r3, [sp, #0]
 8003abe:	2331      	movs	r3, #49	; 0x31
 8003ac0:	7013      	strb	r3, [r2, #0]
 8003ac2:	e6ce      	b.n	8003862 <_dtoa_r+0x94a>
 8003ac4:	4b09      	ldr	r3, [pc, #36]	; (8003aec <_dtoa_r+0xbd4>)
 8003ac6:	f7ff ba95 	b.w	8002ff4 <_dtoa_r+0xdc>
 8003aca:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003acc:	2b00      	cmp	r3, #0
 8003ace:	f47f aa6e 	bne.w	8002fae <_dtoa_r+0x96>
 8003ad2:	4b07      	ldr	r3, [pc, #28]	; (8003af0 <_dtoa_r+0xbd8>)
 8003ad4:	f7ff ba8e 	b.w	8002ff4 <_dtoa_r+0xdc>
 8003ad8:	9b02      	ldr	r3, [sp, #8]
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	dcae      	bgt.n	8003a3c <_dtoa_r+0xb24>
 8003ade:	9b06      	ldr	r3, [sp, #24]
 8003ae0:	2b02      	cmp	r3, #2
 8003ae2:	f73f aea8 	bgt.w	8003836 <_dtoa_r+0x91e>
 8003ae6:	e7a9      	b.n	8003a3c <_dtoa_r+0xb24>
 8003ae8:	08004f03 	.word	0x08004f03
 8003aec:	08004e60 	.word	0x08004e60
 8003af0:	08004e84 	.word	0x08004e84

08003af4 <__sflush_r>:
 8003af4:	898a      	ldrh	r2, [r1, #12]
 8003af6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003afa:	4605      	mov	r5, r0
 8003afc:	0710      	lsls	r0, r2, #28
 8003afe:	460c      	mov	r4, r1
 8003b00:	d458      	bmi.n	8003bb4 <__sflush_r+0xc0>
 8003b02:	684b      	ldr	r3, [r1, #4]
 8003b04:	2b00      	cmp	r3, #0
 8003b06:	dc05      	bgt.n	8003b14 <__sflush_r+0x20>
 8003b08:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	dc02      	bgt.n	8003b14 <__sflush_r+0x20>
 8003b0e:	2000      	movs	r0, #0
 8003b10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b14:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003b16:	2e00      	cmp	r6, #0
 8003b18:	d0f9      	beq.n	8003b0e <__sflush_r+0x1a>
 8003b1a:	2300      	movs	r3, #0
 8003b1c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003b20:	682f      	ldr	r7, [r5, #0]
 8003b22:	602b      	str	r3, [r5, #0]
 8003b24:	d032      	beq.n	8003b8c <__sflush_r+0x98>
 8003b26:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003b28:	89a3      	ldrh	r3, [r4, #12]
 8003b2a:	075a      	lsls	r2, r3, #29
 8003b2c:	d505      	bpl.n	8003b3a <__sflush_r+0x46>
 8003b2e:	6863      	ldr	r3, [r4, #4]
 8003b30:	1ac0      	subs	r0, r0, r3
 8003b32:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003b34:	b10b      	cbz	r3, 8003b3a <__sflush_r+0x46>
 8003b36:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003b38:	1ac0      	subs	r0, r0, r3
 8003b3a:	2300      	movs	r3, #0
 8003b3c:	4602      	mov	r2, r0
 8003b3e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003b40:	6a21      	ldr	r1, [r4, #32]
 8003b42:	4628      	mov	r0, r5
 8003b44:	47b0      	blx	r6
 8003b46:	1c43      	adds	r3, r0, #1
 8003b48:	89a3      	ldrh	r3, [r4, #12]
 8003b4a:	d106      	bne.n	8003b5a <__sflush_r+0x66>
 8003b4c:	6829      	ldr	r1, [r5, #0]
 8003b4e:	291d      	cmp	r1, #29
 8003b50:	d82c      	bhi.n	8003bac <__sflush_r+0xb8>
 8003b52:	4a2a      	ldr	r2, [pc, #168]	; (8003bfc <__sflush_r+0x108>)
 8003b54:	40ca      	lsrs	r2, r1
 8003b56:	07d6      	lsls	r6, r2, #31
 8003b58:	d528      	bpl.n	8003bac <__sflush_r+0xb8>
 8003b5a:	2200      	movs	r2, #0
 8003b5c:	6062      	str	r2, [r4, #4]
 8003b5e:	04d9      	lsls	r1, r3, #19
 8003b60:	6922      	ldr	r2, [r4, #16]
 8003b62:	6022      	str	r2, [r4, #0]
 8003b64:	d504      	bpl.n	8003b70 <__sflush_r+0x7c>
 8003b66:	1c42      	adds	r2, r0, #1
 8003b68:	d101      	bne.n	8003b6e <__sflush_r+0x7a>
 8003b6a:	682b      	ldr	r3, [r5, #0]
 8003b6c:	b903      	cbnz	r3, 8003b70 <__sflush_r+0x7c>
 8003b6e:	6560      	str	r0, [r4, #84]	; 0x54
 8003b70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003b72:	602f      	str	r7, [r5, #0]
 8003b74:	2900      	cmp	r1, #0
 8003b76:	d0ca      	beq.n	8003b0e <__sflush_r+0x1a>
 8003b78:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003b7c:	4299      	cmp	r1, r3
 8003b7e:	d002      	beq.n	8003b86 <__sflush_r+0x92>
 8003b80:	4628      	mov	r0, r5
 8003b82:	f000 fd8b 	bl	800469c <_free_r>
 8003b86:	2000      	movs	r0, #0
 8003b88:	6360      	str	r0, [r4, #52]	; 0x34
 8003b8a:	e7c1      	b.n	8003b10 <__sflush_r+0x1c>
 8003b8c:	6a21      	ldr	r1, [r4, #32]
 8003b8e:	2301      	movs	r3, #1
 8003b90:	4628      	mov	r0, r5
 8003b92:	47b0      	blx	r6
 8003b94:	1c41      	adds	r1, r0, #1
 8003b96:	d1c7      	bne.n	8003b28 <__sflush_r+0x34>
 8003b98:	682b      	ldr	r3, [r5, #0]
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d0c4      	beq.n	8003b28 <__sflush_r+0x34>
 8003b9e:	2b1d      	cmp	r3, #29
 8003ba0:	d001      	beq.n	8003ba6 <__sflush_r+0xb2>
 8003ba2:	2b16      	cmp	r3, #22
 8003ba4:	d101      	bne.n	8003baa <__sflush_r+0xb6>
 8003ba6:	602f      	str	r7, [r5, #0]
 8003ba8:	e7b1      	b.n	8003b0e <__sflush_r+0x1a>
 8003baa:	89a3      	ldrh	r3, [r4, #12]
 8003bac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003bb0:	81a3      	strh	r3, [r4, #12]
 8003bb2:	e7ad      	b.n	8003b10 <__sflush_r+0x1c>
 8003bb4:	690f      	ldr	r7, [r1, #16]
 8003bb6:	2f00      	cmp	r7, #0
 8003bb8:	d0a9      	beq.n	8003b0e <__sflush_r+0x1a>
 8003bba:	0793      	lsls	r3, r2, #30
 8003bbc:	680e      	ldr	r6, [r1, #0]
 8003bbe:	bf08      	it	eq
 8003bc0:	694b      	ldreq	r3, [r1, #20]
 8003bc2:	600f      	str	r7, [r1, #0]
 8003bc4:	bf18      	it	ne
 8003bc6:	2300      	movne	r3, #0
 8003bc8:	eba6 0807 	sub.w	r8, r6, r7
 8003bcc:	608b      	str	r3, [r1, #8]
 8003bce:	f1b8 0f00 	cmp.w	r8, #0
 8003bd2:	dd9c      	ble.n	8003b0e <__sflush_r+0x1a>
 8003bd4:	6a21      	ldr	r1, [r4, #32]
 8003bd6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003bd8:	4643      	mov	r3, r8
 8003bda:	463a      	mov	r2, r7
 8003bdc:	4628      	mov	r0, r5
 8003bde:	47b0      	blx	r6
 8003be0:	2800      	cmp	r0, #0
 8003be2:	dc06      	bgt.n	8003bf2 <__sflush_r+0xfe>
 8003be4:	89a3      	ldrh	r3, [r4, #12]
 8003be6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003bea:	81a3      	strh	r3, [r4, #12]
 8003bec:	f04f 30ff 	mov.w	r0, #4294967295
 8003bf0:	e78e      	b.n	8003b10 <__sflush_r+0x1c>
 8003bf2:	4407      	add	r7, r0
 8003bf4:	eba8 0800 	sub.w	r8, r8, r0
 8003bf8:	e7e9      	b.n	8003bce <__sflush_r+0xda>
 8003bfa:	bf00      	nop
 8003bfc:	20400001 	.word	0x20400001

08003c00 <_fflush_r>:
 8003c00:	b538      	push	{r3, r4, r5, lr}
 8003c02:	690b      	ldr	r3, [r1, #16]
 8003c04:	4605      	mov	r5, r0
 8003c06:	460c      	mov	r4, r1
 8003c08:	b913      	cbnz	r3, 8003c10 <_fflush_r+0x10>
 8003c0a:	2500      	movs	r5, #0
 8003c0c:	4628      	mov	r0, r5
 8003c0e:	bd38      	pop	{r3, r4, r5, pc}
 8003c10:	b118      	cbz	r0, 8003c1a <_fflush_r+0x1a>
 8003c12:	6983      	ldr	r3, [r0, #24]
 8003c14:	b90b      	cbnz	r3, 8003c1a <_fflush_r+0x1a>
 8003c16:	f000 f887 	bl	8003d28 <__sinit>
 8003c1a:	4b14      	ldr	r3, [pc, #80]	; (8003c6c <_fflush_r+0x6c>)
 8003c1c:	429c      	cmp	r4, r3
 8003c1e:	d11b      	bne.n	8003c58 <_fflush_r+0x58>
 8003c20:	686c      	ldr	r4, [r5, #4]
 8003c22:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003c26:	2b00      	cmp	r3, #0
 8003c28:	d0ef      	beq.n	8003c0a <_fflush_r+0xa>
 8003c2a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003c2c:	07d0      	lsls	r0, r2, #31
 8003c2e:	d404      	bmi.n	8003c3a <_fflush_r+0x3a>
 8003c30:	0599      	lsls	r1, r3, #22
 8003c32:	d402      	bmi.n	8003c3a <_fflush_r+0x3a>
 8003c34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003c36:	f000 f91a 	bl	8003e6e <__retarget_lock_acquire_recursive>
 8003c3a:	4628      	mov	r0, r5
 8003c3c:	4621      	mov	r1, r4
 8003c3e:	f7ff ff59 	bl	8003af4 <__sflush_r>
 8003c42:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003c44:	07da      	lsls	r2, r3, #31
 8003c46:	4605      	mov	r5, r0
 8003c48:	d4e0      	bmi.n	8003c0c <_fflush_r+0xc>
 8003c4a:	89a3      	ldrh	r3, [r4, #12]
 8003c4c:	059b      	lsls	r3, r3, #22
 8003c4e:	d4dd      	bmi.n	8003c0c <_fflush_r+0xc>
 8003c50:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003c52:	f000 f90d 	bl	8003e70 <__retarget_lock_release_recursive>
 8003c56:	e7d9      	b.n	8003c0c <_fflush_r+0xc>
 8003c58:	4b05      	ldr	r3, [pc, #20]	; (8003c70 <_fflush_r+0x70>)
 8003c5a:	429c      	cmp	r4, r3
 8003c5c:	d101      	bne.n	8003c62 <_fflush_r+0x62>
 8003c5e:	68ac      	ldr	r4, [r5, #8]
 8003c60:	e7df      	b.n	8003c22 <_fflush_r+0x22>
 8003c62:	4b04      	ldr	r3, [pc, #16]	; (8003c74 <_fflush_r+0x74>)
 8003c64:	429c      	cmp	r4, r3
 8003c66:	bf08      	it	eq
 8003c68:	68ec      	ldreq	r4, [r5, #12]
 8003c6a:	e7da      	b.n	8003c22 <_fflush_r+0x22>
 8003c6c:	08004f34 	.word	0x08004f34
 8003c70:	08004f54 	.word	0x08004f54
 8003c74:	08004f14 	.word	0x08004f14

08003c78 <std>:
 8003c78:	2300      	movs	r3, #0
 8003c7a:	b510      	push	{r4, lr}
 8003c7c:	4604      	mov	r4, r0
 8003c7e:	e9c0 3300 	strd	r3, r3, [r0]
 8003c82:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003c86:	6083      	str	r3, [r0, #8]
 8003c88:	8181      	strh	r1, [r0, #12]
 8003c8a:	6643      	str	r3, [r0, #100]	; 0x64
 8003c8c:	81c2      	strh	r2, [r0, #14]
 8003c8e:	6183      	str	r3, [r0, #24]
 8003c90:	4619      	mov	r1, r3
 8003c92:	2208      	movs	r2, #8
 8003c94:	305c      	adds	r0, #92	; 0x5c
 8003c96:	f7fe faf3 	bl	8002280 <memset>
 8003c9a:	4b05      	ldr	r3, [pc, #20]	; (8003cb0 <std+0x38>)
 8003c9c:	6263      	str	r3, [r4, #36]	; 0x24
 8003c9e:	4b05      	ldr	r3, [pc, #20]	; (8003cb4 <std+0x3c>)
 8003ca0:	62a3      	str	r3, [r4, #40]	; 0x28
 8003ca2:	4b05      	ldr	r3, [pc, #20]	; (8003cb8 <std+0x40>)
 8003ca4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003ca6:	4b05      	ldr	r3, [pc, #20]	; (8003cbc <std+0x44>)
 8003ca8:	6224      	str	r4, [r4, #32]
 8003caa:	6323      	str	r3, [r4, #48]	; 0x30
 8003cac:	bd10      	pop	{r4, pc}
 8003cae:	bf00      	nop
 8003cb0:	08004b31 	.word	0x08004b31
 8003cb4:	08004b53 	.word	0x08004b53
 8003cb8:	08004b8b 	.word	0x08004b8b
 8003cbc:	08004baf 	.word	0x08004baf

08003cc0 <_cleanup_r>:
 8003cc0:	4901      	ldr	r1, [pc, #4]	; (8003cc8 <_cleanup_r+0x8>)
 8003cc2:	f000 b8af 	b.w	8003e24 <_fwalk_reent>
 8003cc6:	bf00      	nop
 8003cc8:	08003c01 	.word	0x08003c01

08003ccc <__sfmoreglue>:
 8003ccc:	b570      	push	{r4, r5, r6, lr}
 8003cce:	2268      	movs	r2, #104	; 0x68
 8003cd0:	1e4d      	subs	r5, r1, #1
 8003cd2:	4355      	muls	r5, r2
 8003cd4:	460e      	mov	r6, r1
 8003cd6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003cda:	f000 fd4b 	bl	8004774 <_malloc_r>
 8003cde:	4604      	mov	r4, r0
 8003ce0:	b140      	cbz	r0, 8003cf4 <__sfmoreglue+0x28>
 8003ce2:	2100      	movs	r1, #0
 8003ce4:	e9c0 1600 	strd	r1, r6, [r0]
 8003ce8:	300c      	adds	r0, #12
 8003cea:	60a0      	str	r0, [r4, #8]
 8003cec:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003cf0:	f7fe fac6 	bl	8002280 <memset>
 8003cf4:	4620      	mov	r0, r4
 8003cf6:	bd70      	pop	{r4, r5, r6, pc}

08003cf8 <__sfp_lock_acquire>:
 8003cf8:	4801      	ldr	r0, [pc, #4]	; (8003d00 <__sfp_lock_acquire+0x8>)
 8003cfa:	f000 b8b8 	b.w	8003e6e <__retarget_lock_acquire_recursive>
 8003cfe:	bf00      	nop
 8003d00:	200004ad 	.word	0x200004ad

08003d04 <__sfp_lock_release>:
 8003d04:	4801      	ldr	r0, [pc, #4]	; (8003d0c <__sfp_lock_release+0x8>)
 8003d06:	f000 b8b3 	b.w	8003e70 <__retarget_lock_release_recursive>
 8003d0a:	bf00      	nop
 8003d0c:	200004ad 	.word	0x200004ad

08003d10 <__sinit_lock_acquire>:
 8003d10:	4801      	ldr	r0, [pc, #4]	; (8003d18 <__sinit_lock_acquire+0x8>)
 8003d12:	f000 b8ac 	b.w	8003e6e <__retarget_lock_acquire_recursive>
 8003d16:	bf00      	nop
 8003d18:	200004ae 	.word	0x200004ae

08003d1c <__sinit_lock_release>:
 8003d1c:	4801      	ldr	r0, [pc, #4]	; (8003d24 <__sinit_lock_release+0x8>)
 8003d1e:	f000 b8a7 	b.w	8003e70 <__retarget_lock_release_recursive>
 8003d22:	bf00      	nop
 8003d24:	200004ae 	.word	0x200004ae

08003d28 <__sinit>:
 8003d28:	b510      	push	{r4, lr}
 8003d2a:	4604      	mov	r4, r0
 8003d2c:	f7ff fff0 	bl	8003d10 <__sinit_lock_acquire>
 8003d30:	69a3      	ldr	r3, [r4, #24]
 8003d32:	b11b      	cbz	r3, 8003d3c <__sinit+0x14>
 8003d34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003d38:	f7ff bff0 	b.w	8003d1c <__sinit_lock_release>
 8003d3c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003d40:	6523      	str	r3, [r4, #80]	; 0x50
 8003d42:	4b13      	ldr	r3, [pc, #76]	; (8003d90 <__sinit+0x68>)
 8003d44:	4a13      	ldr	r2, [pc, #76]	; (8003d94 <__sinit+0x6c>)
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	62a2      	str	r2, [r4, #40]	; 0x28
 8003d4a:	42a3      	cmp	r3, r4
 8003d4c:	bf04      	itt	eq
 8003d4e:	2301      	moveq	r3, #1
 8003d50:	61a3      	streq	r3, [r4, #24]
 8003d52:	4620      	mov	r0, r4
 8003d54:	f000 f820 	bl	8003d98 <__sfp>
 8003d58:	6060      	str	r0, [r4, #4]
 8003d5a:	4620      	mov	r0, r4
 8003d5c:	f000 f81c 	bl	8003d98 <__sfp>
 8003d60:	60a0      	str	r0, [r4, #8]
 8003d62:	4620      	mov	r0, r4
 8003d64:	f000 f818 	bl	8003d98 <__sfp>
 8003d68:	2200      	movs	r2, #0
 8003d6a:	60e0      	str	r0, [r4, #12]
 8003d6c:	2104      	movs	r1, #4
 8003d6e:	6860      	ldr	r0, [r4, #4]
 8003d70:	f7ff ff82 	bl	8003c78 <std>
 8003d74:	68a0      	ldr	r0, [r4, #8]
 8003d76:	2201      	movs	r2, #1
 8003d78:	2109      	movs	r1, #9
 8003d7a:	f7ff ff7d 	bl	8003c78 <std>
 8003d7e:	68e0      	ldr	r0, [r4, #12]
 8003d80:	2202      	movs	r2, #2
 8003d82:	2112      	movs	r1, #18
 8003d84:	f7ff ff78 	bl	8003c78 <std>
 8003d88:	2301      	movs	r3, #1
 8003d8a:	61a3      	str	r3, [r4, #24]
 8003d8c:	e7d2      	b.n	8003d34 <__sinit+0xc>
 8003d8e:	bf00      	nop
 8003d90:	08004e4c 	.word	0x08004e4c
 8003d94:	08003cc1 	.word	0x08003cc1

08003d98 <__sfp>:
 8003d98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d9a:	4607      	mov	r7, r0
 8003d9c:	f7ff ffac 	bl	8003cf8 <__sfp_lock_acquire>
 8003da0:	4b1e      	ldr	r3, [pc, #120]	; (8003e1c <__sfp+0x84>)
 8003da2:	681e      	ldr	r6, [r3, #0]
 8003da4:	69b3      	ldr	r3, [r6, #24]
 8003da6:	b913      	cbnz	r3, 8003dae <__sfp+0x16>
 8003da8:	4630      	mov	r0, r6
 8003daa:	f7ff ffbd 	bl	8003d28 <__sinit>
 8003dae:	3648      	adds	r6, #72	; 0x48
 8003db0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003db4:	3b01      	subs	r3, #1
 8003db6:	d503      	bpl.n	8003dc0 <__sfp+0x28>
 8003db8:	6833      	ldr	r3, [r6, #0]
 8003dba:	b30b      	cbz	r3, 8003e00 <__sfp+0x68>
 8003dbc:	6836      	ldr	r6, [r6, #0]
 8003dbe:	e7f7      	b.n	8003db0 <__sfp+0x18>
 8003dc0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003dc4:	b9d5      	cbnz	r5, 8003dfc <__sfp+0x64>
 8003dc6:	4b16      	ldr	r3, [pc, #88]	; (8003e20 <__sfp+0x88>)
 8003dc8:	60e3      	str	r3, [r4, #12]
 8003dca:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003dce:	6665      	str	r5, [r4, #100]	; 0x64
 8003dd0:	f000 f84c 	bl	8003e6c <__retarget_lock_init_recursive>
 8003dd4:	f7ff ff96 	bl	8003d04 <__sfp_lock_release>
 8003dd8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003ddc:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003de0:	6025      	str	r5, [r4, #0]
 8003de2:	61a5      	str	r5, [r4, #24]
 8003de4:	2208      	movs	r2, #8
 8003de6:	4629      	mov	r1, r5
 8003de8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003dec:	f7fe fa48 	bl	8002280 <memset>
 8003df0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003df4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003df8:	4620      	mov	r0, r4
 8003dfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003dfc:	3468      	adds	r4, #104	; 0x68
 8003dfe:	e7d9      	b.n	8003db4 <__sfp+0x1c>
 8003e00:	2104      	movs	r1, #4
 8003e02:	4638      	mov	r0, r7
 8003e04:	f7ff ff62 	bl	8003ccc <__sfmoreglue>
 8003e08:	4604      	mov	r4, r0
 8003e0a:	6030      	str	r0, [r6, #0]
 8003e0c:	2800      	cmp	r0, #0
 8003e0e:	d1d5      	bne.n	8003dbc <__sfp+0x24>
 8003e10:	f7ff ff78 	bl	8003d04 <__sfp_lock_release>
 8003e14:	230c      	movs	r3, #12
 8003e16:	603b      	str	r3, [r7, #0]
 8003e18:	e7ee      	b.n	8003df8 <__sfp+0x60>
 8003e1a:	bf00      	nop
 8003e1c:	08004e4c 	.word	0x08004e4c
 8003e20:	ffff0001 	.word	0xffff0001

08003e24 <_fwalk_reent>:
 8003e24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003e28:	4606      	mov	r6, r0
 8003e2a:	4688      	mov	r8, r1
 8003e2c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003e30:	2700      	movs	r7, #0
 8003e32:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003e36:	f1b9 0901 	subs.w	r9, r9, #1
 8003e3a:	d505      	bpl.n	8003e48 <_fwalk_reent+0x24>
 8003e3c:	6824      	ldr	r4, [r4, #0]
 8003e3e:	2c00      	cmp	r4, #0
 8003e40:	d1f7      	bne.n	8003e32 <_fwalk_reent+0xe>
 8003e42:	4638      	mov	r0, r7
 8003e44:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003e48:	89ab      	ldrh	r3, [r5, #12]
 8003e4a:	2b01      	cmp	r3, #1
 8003e4c:	d907      	bls.n	8003e5e <_fwalk_reent+0x3a>
 8003e4e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003e52:	3301      	adds	r3, #1
 8003e54:	d003      	beq.n	8003e5e <_fwalk_reent+0x3a>
 8003e56:	4629      	mov	r1, r5
 8003e58:	4630      	mov	r0, r6
 8003e5a:	47c0      	blx	r8
 8003e5c:	4307      	orrs	r7, r0
 8003e5e:	3568      	adds	r5, #104	; 0x68
 8003e60:	e7e9      	b.n	8003e36 <_fwalk_reent+0x12>
	...

08003e64 <_localeconv_r>:
 8003e64:	4800      	ldr	r0, [pc, #0]	; (8003e68 <_localeconv_r+0x4>)
 8003e66:	4770      	bx	lr
 8003e68:	2000029c 	.word	0x2000029c

08003e6c <__retarget_lock_init_recursive>:
 8003e6c:	4770      	bx	lr

08003e6e <__retarget_lock_acquire_recursive>:
 8003e6e:	4770      	bx	lr

08003e70 <__retarget_lock_release_recursive>:
 8003e70:	4770      	bx	lr

08003e72 <__swhatbuf_r>:
 8003e72:	b570      	push	{r4, r5, r6, lr}
 8003e74:	460e      	mov	r6, r1
 8003e76:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003e7a:	2900      	cmp	r1, #0
 8003e7c:	b096      	sub	sp, #88	; 0x58
 8003e7e:	4614      	mov	r4, r2
 8003e80:	461d      	mov	r5, r3
 8003e82:	da08      	bge.n	8003e96 <__swhatbuf_r+0x24>
 8003e84:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003e88:	2200      	movs	r2, #0
 8003e8a:	602a      	str	r2, [r5, #0]
 8003e8c:	061a      	lsls	r2, r3, #24
 8003e8e:	d410      	bmi.n	8003eb2 <__swhatbuf_r+0x40>
 8003e90:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003e94:	e00e      	b.n	8003eb4 <__swhatbuf_r+0x42>
 8003e96:	466a      	mov	r2, sp
 8003e98:	f000 fee0 	bl	8004c5c <_fstat_r>
 8003e9c:	2800      	cmp	r0, #0
 8003e9e:	dbf1      	blt.n	8003e84 <__swhatbuf_r+0x12>
 8003ea0:	9a01      	ldr	r2, [sp, #4]
 8003ea2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003ea6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003eaa:	425a      	negs	r2, r3
 8003eac:	415a      	adcs	r2, r3
 8003eae:	602a      	str	r2, [r5, #0]
 8003eb0:	e7ee      	b.n	8003e90 <__swhatbuf_r+0x1e>
 8003eb2:	2340      	movs	r3, #64	; 0x40
 8003eb4:	2000      	movs	r0, #0
 8003eb6:	6023      	str	r3, [r4, #0]
 8003eb8:	b016      	add	sp, #88	; 0x58
 8003eba:	bd70      	pop	{r4, r5, r6, pc}

08003ebc <__smakebuf_r>:
 8003ebc:	898b      	ldrh	r3, [r1, #12]
 8003ebe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003ec0:	079d      	lsls	r5, r3, #30
 8003ec2:	4606      	mov	r6, r0
 8003ec4:	460c      	mov	r4, r1
 8003ec6:	d507      	bpl.n	8003ed8 <__smakebuf_r+0x1c>
 8003ec8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003ecc:	6023      	str	r3, [r4, #0]
 8003ece:	6123      	str	r3, [r4, #16]
 8003ed0:	2301      	movs	r3, #1
 8003ed2:	6163      	str	r3, [r4, #20]
 8003ed4:	b002      	add	sp, #8
 8003ed6:	bd70      	pop	{r4, r5, r6, pc}
 8003ed8:	ab01      	add	r3, sp, #4
 8003eda:	466a      	mov	r2, sp
 8003edc:	f7ff ffc9 	bl	8003e72 <__swhatbuf_r>
 8003ee0:	9900      	ldr	r1, [sp, #0]
 8003ee2:	4605      	mov	r5, r0
 8003ee4:	4630      	mov	r0, r6
 8003ee6:	f000 fc45 	bl	8004774 <_malloc_r>
 8003eea:	b948      	cbnz	r0, 8003f00 <__smakebuf_r+0x44>
 8003eec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003ef0:	059a      	lsls	r2, r3, #22
 8003ef2:	d4ef      	bmi.n	8003ed4 <__smakebuf_r+0x18>
 8003ef4:	f023 0303 	bic.w	r3, r3, #3
 8003ef8:	f043 0302 	orr.w	r3, r3, #2
 8003efc:	81a3      	strh	r3, [r4, #12]
 8003efe:	e7e3      	b.n	8003ec8 <__smakebuf_r+0xc>
 8003f00:	4b0d      	ldr	r3, [pc, #52]	; (8003f38 <__smakebuf_r+0x7c>)
 8003f02:	62b3      	str	r3, [r6, #40]	; 0x28
 8003f04:	89a3      	ldrh	r3, [r4, #12]
 8003f06:	6020      	str	r0, [r4, #0]
 8003f08:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003f0c:	81a3      	strh	r3, [r4, #12]
 8003f0e:	9b00      	ldr	r3, [sp, #0]
 8003f10:	6163      	str	r3, [r4, #20]
 8003f12:	9b01      	ldr	r3, [sp, #4]
 8003f14:	6120      	str	r0, [r4, #16]
 8003f16:	b15b      	cbz	r3, 8003f30 <__smakebuf_r+0x74>
 8003f18:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003f1c:	4630      	mov	r0, r6
 8003f1e:	f000 feaf 	bl	8004c80 <_isatty_r>
 8003f22:	b128      	cbz	r0, 8003f30 <__smakebuf_r+0x74>
 8003f24:	89a3      	ldrh	r3, [r4, #12]
 8003f26:	f023 0303 	bic.w	r3, r3, #3
 8003f2a:	f043 0301 	orr.w	r3, r3, #1
 8003f2e:	81a3      	strh	r3, [r4, #12]
 8003f30:	89a0      	ldrh	r0, [r4, #12]
 8003f32:	4305      	orrs	r5, r0
 8003f34:	81a5      	strh	r5, [r4, #12]
 8003f36:	e7cd      	b.n	8003ed4 <__smakebuf_r+0x18>
 8003f38:	08003cc1 	.word	0x08003cc1

08003f3c <malloc>:
 8003f3c:	4b02      	ldr	r3, [pc, #8]	; (8003f48 <malloc+0xc>)
 8003f3e:	4601      	mov	r1, r0
 8003f40:	6818      	ldr	r0, [r3, #0]
 8003f42:	f000 bc17 	b.w	8004774 <_malloc_r>
 8003f46:	bf00      	nop
 8003f48:	20000148 	.word	0x20000148

08003f4c <memcpy>:
 8003f4c:	440a      	add	r2, r1
 8003f4e:	4291      	cmp	r1, r2
 8003f50:	f100 33ff 	add.w	r3, r0, #4294967295
 8003f54:	d100      	bne.n	8003f58 <memcpy+0xc>
 8003f56:	4770      	bx	lr
 8003f58:	b510      	push	{r4, lr}
 8003f5a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003f5e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003f62:	4291      	cmp	r1, r2
 8003f64:	d1f9      	bne.n	8003f5a <memcpy+0xe>
 8003f66:	bd10      	pop	{r4, pc}

08003f68 <_Balloc>:
 8003f68:	b570      	push	{r4, r5, r6, lr}
 8003f6a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003f6c:	4604      	mov	r4, r0
 8003f6e:	460d      	mov	r5, r1
 8003f70:	b976      	cbnz	r6, 8003f90 <_Balloc+0x28>
 8003f72:	2010      	movs	r0, #16
 8003f74:	f7ff ffe2 	bl	8003f3c <malloc>
 8003f78:	4602      	mov	r2, r0
 8003f7a:	6260      	str	r0, [r4, #36]	; 0x24
 8003f7c:	b920      	cbnz	r0, 8003f88 <_Balloc+0x20>
 8003f7e:	4b18      	ldr	r3, [pc, #96]	; (8003fe0 <_Balloc+0x78>)
 8003f80:	4818      	ldr	r0, [pc, #96]	; (8003fe4 <_Balloc+0x7c>)
 8003f82:	2166      	movs	r1, #102	; 0x66
 8003f84:	f000 fe2a 	bl	8004bdc <__assert_func>
 8003f88:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003f8c:	6006      	str	r6, [r0, #0]
 8003f8e:	60c6      	str	r6, [r0, #12]
 8003f90:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8003f92:	68f3      	ldr	r3, [r6, #12]
 8003f94:	b183      	cbz	r3, 8003fb8 <_Balloc+0x50>
 8003f96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003f98:	68db      	ldr	r3, [r3, #12]
 8003f9a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003f9e:	b9b8      	cbnz	r0, 8003fd0 <_Balloc+0x68>
 8003fa0:	2101      	movs	r1, #1
 8003fa2:	fa01 f605 	lsl.w	r6, r1, r5
 8003fa6:	1d72      	adds	r2, r6, #5
 8003fa8:	0092      	lsls	r2, r2, #2
 8003faa:	4620      	mov	r0, r4
 8003fac:	f000 fb60 	bl	8004670 <_calloc_r>
 8003fb0:	b160      	cbz	r0, 8003fcc <_Balloc+0x64>
 8003fb2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003fb6:	e00e      	b.n	8003fd6 <_Balloc+0x6e>
 8003fb8:	2221      	movs	r2, #33	; 0x21
 8003fba:	2104      	movs	r1, #4
 8003fbc:	4620      	mov	r0, r4
 8003fbe:	f000 fb57 	bl	8004670 <_calloc_r>
 8003fc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003fc4:	60f0      	str	r0, [r6, #12]
 8003fc6:	68db      	ldr	r3, [r3, #12]
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	d1e4      	bne.n	8003f96 <_Balloc+0x2e>
 8003fcc:	2000      	movs	r0, #0
 8003fce:	bd70      	pop	{r4, r5, r6, pc}
 8003fd0:	6802      	ldr	r2, [r0, #0]
 8003fd2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003fd6:	2300      	movs	r3, #0
 8003fd8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003fdc:	e7f7      	b.n	8003fce <_Balloc+0x66>
 8003fde:	bf00      	nop
 8003fe0:	08004e91 	.word	0x08004e91
 8003fe4:	08004f74 	.word	0x08004f74

08003fe8 <_Bfree>:
 8003fe8:	b570      	push	{r4, r5, r6, lr}
 8003fea:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8003fec:	4605      	mov	r5, r0
 8003fee:	460c      	mov	r4, r1
 8003ff0:	b976      	cbnz	r6, 8004010 <_Bfree+0x28>
 8003ff2:	2010      	movs	r0, #16
 8003ff4:	f7ff ffa2 	bl	8003f3c <malloc>
 8003ff8:	4602      	mov	r2, r0
 8003ffa:	6268      	str	r0, [r5, #36]	; 0x24
 8003ffc:	b920      	cbnz	r0, 8004008 <_Bfree+0x20>
 8003ffe:	4b09      	ldr	r3, [pc, #36]	; (8004024 <_Bfree+0x3c>)
 8004000:	4809      	ldr	r0, [pc, #36]	; (8004028 <_Bfree+0x40>)
 8004002:	218a      	movs	r1, #138	; 0x8a
 8004004:	f000 fdea 	bl	8004bdc <__assert_func>
 8004008:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800400c:	6006      	str	r6, [r0, #0]
 800400e:	60c6      	str	r6, [r0, #12]
 8004010:	b13c      	cbz	r4, 8004022 <_Bfree+0x3a>
 8004012:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004014:	6862      	ldr	r2, [r4, #4]
 8004016:	68db      	ldr	r3, [r3, #12]
 8004018:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800401c:	6021      	str	r1, [r4, #0]
 800401e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004022:	bd70      	pop	{r4, r5, r6, pc}
 8004024:	08004e91 	.word	0x08004e91
 8004028:	08004f74 	.word	0x08004f74

0800402c <__multadd>:
 800402c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004030:	690d      	ldr	r5, [r1, #16]
 8004032:	4607      	mov	r7, r0
 8004034:	460c      	mov	r4, r1
 8004036:	461e      	mov	r6, r3
 8004038:	f101 0c14 	add.w	ip, r1, #20
 800403c:	2000      	movs	r0, #0
 800403e:	f8dc 3000 	ldr.w	r3, [ip]
 8004042:	b299      	uxth	r1, r3
 8004044:	fb02 6101 	mla	r1, r2, r1, r6
 8004048:	0c1e      	lsrs	r6, r3, #16
 800404a:	0c0b      	lsrs	r3, r1, #16
 800404c:	fb02 3306 	mla	r3, r2, r6, r3
 8004050:	b289      	uxth	r1, r1
 8004052:	3001      	adds	r0, #1
 8004054:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004058:	4285      	cmp	r5, r0
 800405a:	f84c 1b04 	str.w	r1, [ip], #4
 800405e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8004062:	dcec      	bgt.n	800403e <__multadd+0x12>
 8004064:	b30e      	cbz	r6, 80040aa <__multadd+0x7e>
 8004066:	68a3      	ldr	r3, [r4, #8]
 8004068:	42ab      	cmp	r3, r5
 800406a:	dc19      	bgt.n	80040a0 <__multadd+0x74>
 800406c:	6861      	ldr	r1, [r4, #4]
 800406e:	4638      	mov	r0, r7
 8004070:	3101      	adds	r1, #1
 8004072:	f7ff ff79 	bl	8003f68 <_Balloc>
 8004076:	4680      	mov	r8, r0
 8004078:	b928      	cbnz	r0, 8004086 <__multadd+0x5a>
 800407a:	4602      	mov	r2, r0
 800407c:	4b0c      	ldr	r3, [pc, #48]	; (80040b0 <__multadd+0x84>)
 800407e:	480d      	ldr	r0, [pc, #52]	; (80040b4 <__multadd+0x88>)
 8004080:	21b5      	movs	r1, #181	; 0xb5
 8004082:	f000 fdab 	bl	8004bdc <__assert_func>
 8004086:	6922      	ldr	r2, [r4, #16]
 8004088:	3202      	adds	r2, #2
 800408a:	f104 010c 	add.w	r1, r4, #12
 800408e:	0092      	lsls	r2, r2, #2
 8004090:	300c      	adds	r0, #12
 8004092:	f7ff ff5b 	bl	8003f4c <memcpy>
 8004096:	4621      	mov	r1, r4
 8004098:	4638      	mov	r0, r7
 800409a:	f7ff ffa5 	bl	8003fe8 <_Bfree>
 800409e:	4644      	mov	r4, r8
 80040a0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80040a4:	3501      	adds	r5, #1
 80040a6:	615e      	str	r6, [r3, #20]
 80040a8:	6125      	str	r5, [r4, #16]
 80040aa:	4620      	mov	r0, r4
 80040ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80040b0:	08004f03 	.word	0x08004f03
 80040b4:	08004f74 	.word	0x08004f74

080040b8 <__hi0bits>:
 80040b8:	0c03      	lsrs	r3, r0, #16
 80040ba:	041b      	lsls	r3, r3, #16
 80040bc:	b9d3      	cbnz	r3, 80040f4 <__hi0bits+0x3c>
 80040be:	0400      	lsls	r0, r0, #16
 80040c0:	2310      	movs	r3, #16
 80040c2:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80040c6:	bf04      	itt	eq
 80040c8:	0200      	lsleq	r0, r0, #8
 80040ca:	3308      	addeq	r3, #8
 80040cc:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80040d0:	bf04      	itt	eq
 80040d2:	0100      	lsleq	r0, r0, #4
 80040d4:	3304      	addeq	r3, #4
 80040d6:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80040da:	bf04      	itt	eq
 80040dc:	0080      	lsleq	r0, r0, #2
 80040de:	3302      	addeq	r3, #2
 80040e0:	2800      	cmp	r0, #0
 80040e2:	db05      	blt.n	80040f0 <__hi0bits+0x38>
 80040e4:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80040e8:	f103 0301 	add.w	r3, r3, #1
 80040ec:	bf08      	it	eq
 80040ee:	2320      	moveq	r3, #32
 80040f0:	4618      	mov	r0, r3
 80040f2:	4770      	bx	lr
 80040f4:	2300      	movs	r3, #0
 80040f6:	e7e4      	b.n	80040c2 <__hi0bits+0xa>

080040f8 <__lo0bits>:
 80040f8:	6803      	ldr	r3, [r0, #0]
 80040fa:	f013 0207 	ands.w	r2, r3, #7
 80040fe:	4601      	mov	r1, r0
 8004100:	d00b      	beq.n	800411a <__lo0bits+0x22>
 8004102:	07da      	lsls	r2, r3, #31
 8004104:	d423      	bmi.n	800414e <__lo0bits+0x56>
 8004106:	0798      	lsls	r0, r3, #30
 8004108:	bf49      	itett	mi
 800410a:	085b      	lsrmi	r3, r3, #1
 800410c:	089b      	lsrpl	r3, r3, #2
 800410e:	2001      	movmi	r0, #1
 8004110:	600b      	strmi	r3, [r1, #0]
 8004112:	bf5c      	itt	pl
 8004114:	600b      	strpl	r3, [r1, #0]
 8004116:	2002      	movpl	r0, #2
 8004118:	4770      	bx	lr
 800411a:	b298      	uxth	r0, r3
 800411c:	b9a8      	cbnz	r0, 800414a <__lo0bits+0x52>
 800411e:	0c1b      	lsrs	r3, r3, #16
 8004120:	2010      	movs	r0, #16
 8004122:	b2da      	uxtb	r2, r3
 8004124:	b90a      	cbnz	r2, 800412a <__lo0bits+0x32>
 8004126:	3008      	adds	r0, #8
 8004128:	0a1b      	lsrs	r3, r3, #8
 800412a:	071a      	lsls	r2, r3, #28
 800412c:	bf04      	itt	eq
 800412e:	091b      	lsreq	r3, r3, #4
 8004130:	3004      	addeq	r0, #4
 8004132:	079a      	lsls	r2, r3, #30
 8004134:	bf04      	itt	eq
 8004136:	089b      	lsreq	r3, r3, #2
 8004138:	3002      	addeq	r0, #2
 800413a:	07da      	lsls	r2, r3, #31
 800413c:	d403      	bmi.n	8004146 <__lo0bits+0x4e>
 800413e:	085b      	lsrs	r3, r3, #1
 8004140:	f100 0001 	add.w	r0, r0, #1
 8004144:	d005      	beq.n	8004152 <__lo0bits+0x5a>
 8004146:	600b      	str	r3, [r1, #0]
 8004148:	4770      	bx	lr
 800414a:	4610      	mov	r0, r2
 800414c:	e7e9      	b.n	8004122 <__lo0bits+0x2a>
 800414e:	2000      	movs	r0, #0
 8004150:	4770      	bx	lr
 8004152:	2020      	movs	r0, #32
 8004154:	4770      	bx	lr
	...

08004158 <__i2b>:
 8004158:	b510      	push	{r4, lr}
 800415a:	460c      	mov	r4, r1
 800415c:	2101      	movs	r1, #1
 800415e:	f7ff ff03 	bl	8003f68 <_Balloc>
 8004162:	4602      	mov	r2, r0
 8004164:	b928      	cbnz	r0, 8004172 <__i2b+0x1a>
 8004166:	4b05      	ldr	r3, [pc, #20]	; (800417c <__i2b+0x24>)
 8004168:	4805      	ldr	r0, [pc, #20]	; (8004180 <__i2b+0x28>)
 800416a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800416e:	f000 fd35 	bl	8004bdc <__assert_func>
 8004172:	2301      	movs	r3, #1
 8004174:	6144      	str	r4, [r0, #20]
 8004176:	6103      	str	r3, [r0, #16]
 8004178:	bd10      	pop	{r4, pc}
 800417a:	bf00      	nop
 800417c:	08004f03 	.word	0x08004f03
 8004180:	08004f74 	.word	0x08004f74

08004184 <__multiply>:
 8004184:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004188:	4691      	mov	r9, r2
 800418a:	690a      	ldr	r2, [r1, #16]
 800418c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004190:	429a      	cmp	r2, r3
 8004192:	bfb8      	it	lt
 8004194:	460b      	movlt	r3, r1
 8004196:	460c      	mov	r4, r1
 8004198:	bfbc      	itt	lt
 800419a:	464c      	movlt	r4, r9
 800419c:	4699      	movlt	r9, r3
 800419e:	6927      	ldr	r7, [r4, #16]
 80041a0:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80041a4:	68a3      	ldr	r3, [r4, #8]
 80041a6:	6861      	ldr	r1, [r4, #4]
 80041a8:	eb07 060a 	add.w	r6, r7, sl
 80041ac:	42b3      	cmp	r3, r6
 80041ae:	b085      	sub	sp, #20
 80041b0:	bfb8      	it	lt
 80041b2:	3101      	addlt	r1, #1
 80041b4:	f7ff fed8 	bl	8003f68 <_Balloc>
 80041b8:	b930      	cbnz	r0, 80041c8 <__multiply+0x44>
 80041ba:	4602      	mov	r2, r0
 80041bc:	4b44      	ldr	r3, [pc, #272]	; (80042d0 <__multiply+0x14c>)
 80041be:	4845      	ldr	r0, [pc, #276]	; (80042d4 <__multiply+0x150>)
 80041c0:	f240 115d 	movw	r1, #349	; 0x15d
 80041c4:	f000 fd0a 	bl	8004bdc <__assert_func>
 80041c8:	f100 0514 	add.w	r5, r0, #20
 80041cc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80041d0:	462b      	mov	r3, r5
 80041d2:	2200      	movs	r2, #0
 80041d4:	4543      	cmp	r3, r8
 80041d6:	d321      	bcc.n	800421c <__multiply+0x98>
 80041d8:	f104 0314 	add.w	r3, r4, #20
 80041dc:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80041e0:	f109 0314 	add.w	r3, r9, #20
 80041e4:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80041e8:	9202      	str	r2, [sp, #8]
 80041ea:	1b3a      	subs	r2, r7, r4
 80041ec:	3a15      	subs	r2, #21
 80041ee:	f022 0203 	bic.w	r2, r2, #3
 80041f2:	3204      	adds	r2, #4
 80041f4:	f104 0115 	add.w	r1, r4, #21
 80041f8:	428f      	cmp	r7, r1
 80041fa:	bf38      	it	cc
 80041fc:	2204      	movcc	r2, #4
 80041fe:	9201      	str	r2, [sp, #4]
 8004200:	9a02      	ldr	r2, [sp, #8]
 8004202:	9303      	str	r3, [sp, #12]
 8004204:	429a      	cmp	r2, r3
 8004206:	d80c      	bhi.n	8004222 <__multiply+0x9e>
 8004208:	2e00      	cmp	r6, #0
 800420a:	dd03      	ble.n	8004214 <__multiply+0x90>
 800420c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004210:	2b00      	cmp	r3, #0
 8004212:	d05a      	beq.n	80042ca <__multiply+0x146>
 8004214:	6106      	str	r6, [r0, #16]
 8004216:	b005      	add	sp, #20
 8004218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800421c:	f843 2b04 	str.w	r2, [r3], #4
 8004220:	e7d8      	b.n	80041d4 <__multiply+0x50>
 8004222:	f8b3 a000 	ldrh.w	sl, [r3]
 8004226:	f1ba 0f00 	cmp.w	sl, #0
 800422a:	d024      	beq.n	8004276 <__multiply+0xf2>
 800422c:	f104 0e14 	add.w	lr, r4, #20
 8004230:	46a9      	mov	r9, r5
 8004232:	f04f 0c00 	mov.w	ip, #0
 8004236:	f85e 2b04 	ldr.w	r2, [lr], #4
 800423a:	f8d9 1000 	ldr.w	r1, [r9]
 800423e:	fa1f fb82 	uxth.w	fp, r2
 8004242:	b289      	uxth	r1, r1
 8004244:	fb0a 110b 	mla	r1, sl, fp, r1
 8004248:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800424c:	f8d9 2000 	ldr.w	r2, [r9]
 8004250:	4461      	add	r1, ip
 8004252:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8004256:	fb0a c20b 	mla	r2, sl, fp, ip
 800425a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800425e:	b289      	uxth	r1, r1
 8004260:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004264:	4577      	cmp	r7, lr
 8004266:	f849 1b04 	str.w	r1, [r9], #4
 800426a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800426e:	d8e2      	bhi.n	8004236 <__multiply+0xb2>
 8004270:	9a01      	ldr	r2, [sp, #4]
 8004272:	f845 c002 	str.w	ip, [r5, r2]
 8004276:	9a03      	ldr	r2, [sp, #12]
 8004278:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800427c:	3304      	adds	r3, #4
 800427e:	f1b9 0f00 	cmp.w	r9, #0
 8004282:	d020      	beq.n	80042c6 <__multiply+0x142>
 8004284:	6829      	ldr	r1, [r5, #0]
 8004286:	f104 0c14 	add.w	ip, r4, #20
 800428a:	46ae      	mov	lr, r5
 800428c:	f04f 0a00 	mov.w	sl, #0
 8004290:	f8bc b000 	ldrh.w	fp, [ip]
 8004294:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8004298:	fb09 220b 	mla	r2, r9, fp, r2
 800429c:	4492      	add	sl, r2
 800429e:	b289      	uxth	r1, r1
 80042a0:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 80042a4:	f84e 1b04 	str.w	r1, [lr], #4
 80042a8:	f85c 2b04 	ldr.w	r2, [ip], #4
 80042ac:	f8be 1000 	ldrh.w	r1, [lr]
 80042b0:	0c12      	lsrs	r2, r2, #16
 80042b2:	fb09 1102 	mla	r1, r9, r2, r1
 80042b6:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 80042ba:	4567      	cmp	r7, ip
 80042bc:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80042c0:	d8e6      	bhi.n	8004290 <__multiply+0x10c>
 80042c2:	9a01      	ldr	r2, [sp, #4]
 80042c4:	50a9      	str	r1, [r5, r2]
 80042c6:	3504      	adds	r5, #4
 80042c8:	e79a      	b.n	8004200 <__multiply+0x7c>
 80042ca:	3e01      	subs	r6, #1
 80042cc:	e79c      	b.n	8004208 <__multiply+0x84>
 80042ce:	bf00      	nop
 80042d0:	08004f03 	.word	0x08004f03
 80042d4:	08004f74 	.word	0x08004f74

080042d8 <__pow5mult>:
 80042d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80042dc:	4615      	mov	r5, r2
 80042de:	f012 0203 	ands.w	r2, r2, #3
 80042e2:	4606      	mov	r6, r0
 80042e4:	460f      	mov	r7, r1
 80042e6:	d007      	beq.n	80042f8 <__pow5mult+0x20>
 80042e8:	4c25      	ldr	r4, [pc, #148]	; (8004380 <__pow5mult+0xa8>)
 80042ea:	3a01      	subs	r2, #1
 80042ec:	2300      	movs	r3, #0
 80042ee:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80042f2:	f7ff fe9b 	bl	800402c <__multadd>
 80042f6:	4607      	mov	r7, r0
 80042f8:	10ad      	asrs	r5, r5, #2
 80042fa:	d03d      	beq.n	8004378 <__pow5mult+0xa0>
 80042fc:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80042fe:	b97c      	cbnz	r4, 8004320 <__pow5mult+0x48>
 8004300:	2010      	movs	r0, #16
 8004302:	f7ff fe1b 	bl	8003f3c <malloc>
 8004306:	4602      	mov	r2, r0
 8004308:	6270      	str	r0, [r6, #36]	; 0x24
 800430a:	b928      	cbnz	r0, 8004318 <__pow5mult+0x40>
 800430c:	4b1d      	ldr	r3, [pc, #116]	; (8004384 <__pow5mult+0xac>)
 800430e:	481e      	ldr	r0, [pc, #120]	; (8004388 <__pow5mult+0xb0>)
 8004310:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8004314:	f000 fc62 	bl	8004bdc <__assert_func>
 8004318:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800431c:	6004      	str	r4, [r0, #0]
 800431e:	60c4      	str	r4, [r0, #12]
 8004320:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004324:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004328:	b94c      	cbnz	r4, 800433e <__pow5mult+0x66>
 800432a:	f240 2171 	movw	r1, #625	; 0x271
 800432e:	4630      	mov	r0, r6
 8004330:	f7ff ff12 	bl	8004158 <__i2b>
 8004334:	2300      	movs	r3, #0
 8004336:	f8c8 0008 	str.w	r0, [r8, #8]
 800433a:	4604      	mov	r4, r0
 800433c:	6003      	str	r3, [r0, #0]
 800433e:	f04f 0900 	mov.w	r9, #0
 8004342:	07eb      	lsls	r3, r5, #31
 8004344:	d50a      	bpl.n	800435c <__pow5mult+0x84>
 8004346:	4639      	mov	r1, r7
 8004348:	4622      	mov	r2, r4
 800434a:	4630      	mov	r0, r6
 800434c:	f7ff ff1a 	bl	8004184 <__multiply>
 8004350:	4639      	mov	r1, r7
 8004352:	4680      	mov	r8, r0
 8004354:	4630      	mov	r0, r6
 8004356:	f7ff fe47 	bl	8003fe8 <_Bfree>
 800435a:	4647      	mov	r7, r8
 800435c:	106d      	asrs	r5, r5, #1
 800435e:	d00b      	beq.n	8004378 <__pow5mult+0xa0>
 8004360:	6820      	ldr	r0, [r4, #0]
 8004362:	b938      	cbnz	r0, 8004374 <__pow5mult+0x9c>
 8004364:	4622      	mov	r2, r4
 8004366:	4621      	mov	r1, r4
 8004368:	4630      	mov	r0, r6
 800436a:	f7ff ff0b 	bl	8004184 <__multiply>
 800436e:	6020      	str	r0, [r4, #0]
 8004370:	f8c0 9000 	str.w	r9, [r0]
 8004374:	4604      	mov	r4, r0
 8004376:	e7e4      	b.n	8004342 <__pow5mult+0x6a>
 8004378:	4638      	mov	r0, r7
 800437a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800437e:	bf00      	nop
 8004380:	080050c0 	.word	0x080050c0
 8004384:	08004e91 	.word	0x08004e91
 8004388:	08004f74 	.word	0x08004f74

0800438c <__lshift>:
 800438c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004390:	460c      	mov	r4, r1
 8004392:	6849      	ldr	r1, [r1, #4]
 8004394:	6923      	ldr	r3, [r4, #16]
 8004396:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800439a:	68a3      	ldr	r3, [r4, #8]
 800439c:	4607      	mov	r7, r0
 800439e:	4691      	mov	r9, r2
 80043a0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80043a4:	f108 0601 	add.w	r6, r8, #1
 80043a8:	42b3      	cmp	r3, r6
 80043aa:	db0b      	blt.n	80043c4 <__lshift+0x38>
 80043ac:	4638      	mov	r0, r7
 80043ae:	f7ff fddb 	bl	8003f68 <_Balloc>
 80043b2:	4605      	mov	r5, r0
 80043b4:	b948      	cbnz	r0, 80043ca <__lshift+0x3e>
 80043b6:	4602      	mov	r2, r0
 80043b8:	4b2a      	ldr	r3, [pc, #168]	; (8004464 <__lshift+0xd8>)
 80043ba:	482b      	ldr	r0, [pc, #172]	; (8004468 <__lshift+0xdc>)
 80043bc:	f240 11d9 	movw	r1, #473	; 0x1d9
 80043c0:	f000 fc0c 	bl	8004bdc <__assert_func>
 80043c4:	3101      	adds	r1, #1
 80043c6:	005b      	lsls	r3, r3, #1
 80043c8:	e7ee      	b.n	80043a8 <__lshift+0x1c>
 80043ca:	2300      	movs	r3, #0
 80043cc:	f100 0114 	add.w	r1, r0, #20
 80043d0:	f100 0210 	add.w	r2, r0, #16
 80043d4:	4618      	mov	r0, r3
 80043d6:	4553      	cmp	r3, sl
 80043d8:	db37      	blt.n	800444a <__lshift+0xbe>
 80043da:	6920      	ldr	r0, [r4, #16]
 80043dc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80043e0:	f104 0314 	add.w	r3, r4, #20
 80043e4:	f019 091f 	ands.w	r9, r9, #31
 80043e8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80043ec:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80043f0:	d02f      	beq.n	8004452 <__lshift+0xc6>
 80043f2:	f1c9 0e20 	rsb	lr, r9, #32
 80043f6:	468a      	mov	sl, r1
 80043f8:	f04f 0c00 	mov.w	ip, #0
 80043fc:	681a      	ldr	r2, [r3, #0]
 80043fe:	fa02 f209 	lsl.w	r2, r2, r9
 8004402:	ea42 020c 	orr.w	r2, r2, ip
 8004406:	f84a 2b04 	str.w	r2, [sl], #4
 800440a:	f853 2b04 	ldr.w	r2, [r3], #4
 800440e:	4298      	cmp	r0, r3
 8004410:	fa22 fc0e 	lsr.w	ip, r2, lr
 8004414:	d8f2      	bhi.n	80043fc <__lshift+0x70>
 8004416:	1b03      	subs	r3, r0, r4
 8004418:	3b15      	subs	r3, #21
 800441a:	f023 0303 	bic.w	r3, r3, #3
 800441e:	3304      	adds	r3, #4
 8004420:	f104 0215 	add.w	r2, r4, #21
 8004424:	4290      	cmp	r0, r2
 8004426:	bf38      	it	cc
 8004428:	2304      	movcc	r3, #4
 800442a:	f841 c003 	str.w	ip, [r1, r3]
 800442e:	f1bc 0f00 	cmp.w	ip, #0
 8004432:	d001      	beq.n	8004438 <__lshift+0xac>
 8004434:	f108 0602 	add.w	r6, r8, #2
 8004438:	3e01      	subs	r6, #1
 800443a:	4638      	mov	r0, r7
 800443c:	612e      	str	r6, [r5, #16]
 800443e:	4621      	mov	r1, r4
 8004440:	f7ff fdd2 	bl	8003fe8 <_Bfree>
 8004444:	4628      	mov	r0, r5
 8004446:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800444a:	f842 0f04 	str.w	r0, [r2, #4]!
 800444e:	3301      	adds	r3, #1
 8004450:	e7c1      	b.n	80043d6 <__lshift+0x4a>
 8004452:	3904      	subs	r1, #4
 8004454:	f853 2b04 	ldr.w	r2, [r3], #4
 8004458:	f841 2f04 	str.w	r2, [r1, #4]!
 800445c:	4298      	cmp	r0, r3
 800445e:	d8f9      	bhi.n	8004454 <__lshift+0xc8>
 8004460:	e7ea      	b.n	8004438 <__lshift+0xac>
 8004462:	bf00      	nop
 8004464:	08004f03 	.word	0x08004f03
 8004468:	08004f74 	.word	0x08004f74

0800446c <__mcmp>:
 800446c:	b530      	push	{r4, r5, lr}
 800446e:	6902      	ldr	r2, [r0, #16]
 8004470:	690c      	ldr	r4, [r1, #16]
 8004472:	1b12      	subs	r2, r2, r4
 8004474:	d10e      	bne.n	8004494 <__mcmp+0x28>
 8004476:	f100 0314 	add.w	r3, r0, #20
 800447a:	3114      	adds	r1, #20
 800447c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8004480:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8004484:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8004488:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800448c:	42a5      	cmp	r5, r4
 800448e:	d003      	beq.n	8004498 <__mcmp+0x2c>
 8004490:	d305      	bcc.n	800449e <__mcmp+0x32>
 8004492:	2201      	movs	r2, #1
 8004494:	4610      	mov	r0, r2
 8004496:	bd30      	pop	{r4, r5, pc}
 8004498:	4283      	cmp	r3, r0
 800449a:	d3f3      	bcc.n	8004484 <__mcmp+0x18>
 800449c:	e7fa      	b.n	8004494 <__mcmp+0x28>
 800449e:	f04f 32ff 	mov.w	r2, #4294967295
 80044a2:	e7f7      	b.n	8004494 <__mcmp+0x28>

080044a4 <__mdiff>:
 80044a4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80044a8:	460c      	mov	r4, r1
 80044aa:	4606      	mov	r6, r0
 80044ac:	4611      	mov	r1, r2
 80044ae:	4620      	mov	r0, r4
 80044b0:	4690      	mov	r8, r2
 80044b2:	f7ff ffdb 	bl	800446c <__mcmp>
 80044b6:	1e05      	subs	r5, r0, #0
 80044b8:	d110      	bne.n	80044dc <__mdiff+0x38>
 80044ba:	4629      	mov	r1, r5
 80044bc:	4630      	mov	r0, r6
 80044be:	f7ff fd53 	bl	8003f68 <_Balloc>
 80044c2:	b930      	cbnz	r0, 80044d2 <__mdiff+0x2e>
 80044c4:	4b3a      	ldr	r3, [pc, #232]	; (80045b0 <__mdiff+0x10c>)
 80044c6:	4602      	mov	r2, r0
 80044c8:	f240 2132 	movw	r1, #562	; 0x232
 80044cc:	4839      	ldr	r0, [pc, #228]	; (80045b4 <__mdiff+0x110>)
 80044ce:	f000 fb85 	bl	8004bdc <__assert_func>
 80044d2:	2301      	movs	r3, #1
 80044d4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80044d8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80044dc:	bfa4      	itt	ge
 80044de:	4643      	movge	r3, r8
 80044e0:	46a0      	movge	r8, r4
 80044e2:	4630      	mov	r0, r6
 80044e4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80044e8:	bfa6      	itte	ge
 80044ea:	461c      	movge	r4, r3
 80044ec:	2500      	movge	r5, #0
 80044ee:	2501      	movlt	r5, #1
 80044f0:	f7ff fd3a 	bl	8003f68 <_Balloc>
 80044f4:	b920      	cbnz	r0, 8004500 <__mdiff+0x5c>
 80044f6:	4b2e      	ldr	r3, [pc, #184]	; (80045b0 <__mdiff+0x10c>)
 80044f8:	4602      	mov	r2, r0
 80044fa:	f44f 7110 	mov.w	r1, #576	; 0x240
 80044fe:	e7e5      	b.n	80044cc <__mdiff+0x28>
 8004500:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8004504:	6926      	ldr	r6, [r4, #16]
 8004506:	60c5      	str	r5, [r0, #12]
 8004508:	f104 0914 	add.w	r9, r4, #20
 800450c:	f108 0514 	add.w	r5, r8, #20
 8004510:	f100 0e14 	add.w	lr, r0, #20
 8004514:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8004518:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800451c:	f108 0210 	add.w	r2, r8, #16
 8004520:	46f2      	mov	sl, lr
 8004522:	2100      	movs	r1, #0
 8004524:	f859 3b04 	ldr.w	r3, [r9], #4
 8004528:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800452c:	fa1f f883 	uxth.w	r8, r3
 8004530:	fa11 f18b 	uxtah	r1, r1, fp
 8004534:	0c1b      	lsrs	r3, r3, #16
 8004536:	eba1 0808 	sub.w	r8, r1, r8
 800453a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800453e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8004542:	fa1f f888 	uxth.w	r8, r8
 8004546:	1419      	asrs	r1, r3, #16
 8004548:	454e      	cmp	r6, r9
 800454a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800454e:	f84a 3b04 	str.w	r3, [sl], #4
 8004552:	d8e7      	bhi.n	8004524 <__mdiff+0x80>
 8004554:	1b33      	subs	r3, r6, r4
 8004556:	3b15      	subs	r3, #21
 8004558:	f023 0303 	bic.w	r3, r3, #3
 800455c:	3304      	adds	r3, #4
 800455e:	3415      	adds	r4, #21
 8004560:	42a6      	cmp	r6, r4
 8004562:	bf38      	it	cc
 8004564:	2304      	movcc	r3, #4
 8004566:	441d      	add	r5, r3
 8004568:	4473      	add	r3, lr
 800456a:	469e      	mov	lr, r3
 800456c:	462e      	mov	r6, r5
 800456e:	4566      	cmp	r6, ip
 8004570:	d30e      	bcc.n	8004590 <__mdiff+0xec>
 8004572:	f10c 0203 	add.w	r2, ip, #3
 8004576:	1b52      	subs	r2, r2, r5
 8004578:	f022 0203 	bic.w	r2, r2, #3
 800457c:	3d03      	subs	r5, #3
 800457e:	45ac      	cmp	ip, r5
 8004580:	bf38      	it	cc
 8004582:	2200      	movcc	r2, #0
 8004584:	441a      	add	r2, r3
 8004586:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800458a:	b17b      	cbz	r3, 80045ac <__mdiff+0x108>
 800458c:	6107      	str	r7, [r0, #16]
 800458e:	e7a3      	b.n	80044d8 <__mdiff+0x34>
 8004590:	f856 8b04 	ldr.w	r8, [r6], #4
 8004594:	fa11 f288 	uxtah	r2, r1, r8
 8004598:	1414      	asrs	r4, r2, #16
 800459a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800459e:	b292      	uxth	r2, r2
 80045a0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80045a4:	f84e 2b04 	str.w	r2, [lr], #4
 80045a8:	1421      	asrs	r1, r4, #16
 80045aa:	e7e0      	b.n	800456e <__mdiff+0xca>
 80045ac:	3f01      	subs	r7, #1
 80045ae:	e7ea      	b.n	8004586 <__mdiff+0xe2>
 80045b0:	08004f03 	.word	0x08004f03
 80045b4:	08004f74 	.word	0x08004f74

080045b8 <__d2b>:
 80045b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80045bc:	4689      	mov	r9, r1
 80045be:	2101      	movs	r1, #1
 80045c0:	ec57 6b10 	vmov	r6, r7, d0
 80045c4:	4690      	mov	r8, r2
 80045c6:	f7ff fccf 	bl	8003f68 <_Balloc>
 80045ca:	4604      	mov	r4, r0
 80045cc:	b930      	cbnz	r0, 80045dc <__d2b+0x24>
 80045ce:	4602      	mov	r2, r0
 80045d0:	4b25      	ldr	r3, [pc, #148]	; (8004668 <__d2b+0xb0>)
 80045d2:	4826      	ldr	r0, [pc, #152]	; (800466c <__d2b+0xb4>)
 80045d4:	f240 310a 	movw	r1, #778	; 0x30a
 80045d8:	f000 fb00 	bl	8004bdc <__assert_func>
 80045dc:	f3c7 550a 	ubfx	r5, r7, #20, #11
 80045e0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80045e4:	bb35      	cbnz	r5, 8004634 <__d2b+0x7c>
 80045e6:	2e00      	cmp	r6, #0
 80045e8:	9301      	str	r3, [sp, #4]
 80045ea:	d028      	beq.n	800463e <__d2b+0x86>
 80045ec:	4668      	mov	r0, sp
 80045ee:	9600      	str	r6, [sp, #0]
 80045f0:	f7ff fd82 	bl	80040f8 <__lo0bits>
 80045f4:	9900      	ldr	r1, [sp, #0]
 80045f6:	b300      	cbz	r0, 800463a <__d2b+0x82>
 80045f8:	9a01      	ldr	r2, [sp, #4]
 80045fa:	f1c0 0320 	rsb	r3, r0, #32
 80045fe:	fa02 f303 	lsl.w	r3, r2, r3
 8004602:	430b      	orrs	r3, r1
 8004604:	40c2      	lsrs	r2, r0
 8004606:	6163      	str	r3, [r4, #20]
 8004608:	9201      	str	r2, [sp, #4]
 800460a:	9b01      	ldr	r3, [sp, #4]
 800460c:	61a3      	str	r3, [r4, #24]
 800460e:	2b00      	cmp	r3, #0
 8004610:	bf14      	ite	ne
 8004612:	2202      	movne	r2, #2
 8004614:	2201      	moveq	r2, #1
 8004616:	6122      	str	r2, [r4, #16]
 8004618:	b1d5      	cbz	r5, 8004650 <__d2b+0x98>
 800461a:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800461e:	4405      	add	r5, r0
 8004620:	f8c9 5000 	str.w	r5, [r9]
 8004624:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004628:	f8c8 0000 	str.w	r0, [r8]
 800462c:	4620      	mov	r0, r4
 800462e:	b003      	add	sp, #12
 8004630:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004638:	e7d5      	b.n	80045e6 <__d2b+0x2e>
 800463a:	6161      	str	r1, [r4, #20]
 800463c:	e7e5      	b.n	800460a <__d2b+0x52>
 800463e:	a801      	add	r0, sp, #4
 8004640:	f7ff fd5a 	bl	80040f8 <__lo0bits>
 8004644:	9b01      	ldr	r3, [sp, #4]
 8004646:	6163      	str	r3, [r4, #20]
 8004648:	2201      	movs	r2, #1
 800464a:	6122      	str	r2, [r4, #16]
 800464c:	3020      	adds	r0, #32
 800464e:	e7e3      	b.n	8004618 <__d2b+0x60>
 8004650:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004654:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004658:	f8c9 0000 	str.w	r0, [r9]
 800465c:	6918      	ldr	r0, [r3, #16]
 800465e:	f7ff fd2b 	bl	80040b8 <__hi0bits>
 8004662:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8004666:	e7df      	b.n	8004628 <__d2b+0x70>
 8004668:	08004f03 	.word	0x08004f03
 800466c:	08004f74 	.word	0x08004f74

08004670 <_calloc_r>:
 8004670:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004672:	fba1 2402 	umull	r2, r4, r1, r2
 8004676:	b94c      	cbnz	r4, 800468c <_calloc_r+0x1c>
 8004678:	4611      	mov	r1, r2
 800467a:	9201      	str	r2, [sp, #4]
 800467c:	f000 f87a 	bl	8004774 <_malloc_r>
 8004680:	9a01      	ldr	r2, [sp, #4]
 8004682:	4605      	mov	r5, r0
 8004684:	b930      	cbnz	r0, 8004694 <_calloc_r+0x24>
 8004686:	4628      	mov	r0, r5
 8004688:	b003      	add	sp, #12
 800468a:	bd30      	pop	{r4, r5, pc}
 800468c:	220c      	movs	r2, #12
 800468e:	6002      	str	r2, [r0, #0]
 8004690:	2500      	movs	r5, #0
 8004692:	e7f8      	b.n	8004686 <_calloc_r+0x16>
 8004694:	4621      	mov	r1, r4
 8004696:	f7fd fdf3 	bl	8002280 <memset>
 800469a:	e7f4      	b.n	8004686 <_calloc_r+0x16>

0800469c <_free_r>:
 800469c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800469e:	2900      	cmp	r1, #0
 80046a0:	d044      	beq.n	800472c <_free_r+0x90>
 80046a2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80046a6:	9001      	str	r0, [sp, #4]
 80046a8:	2b00      	cmp	r3, #0
 80046aa:	f1a1 0404 	sub.w	r4, r1, #4
 80046ae:	bfb8      	it	lt
 80046b0:	18e4      	addlt	r4, r4, r3
 80046b2:	f000 fb19 	bl	8004ce8 <__malloc_lock>
 80046b6:	4a1e      	ldr	r2, [pc, #120]	; (8004730 <_free_r+0x94>)
 80046b8:	9801      	ldr	r0, [sp, #4]
 80046ba:	6813      	ldr	r3, [r2, #0]
 80046bc:	b933      	cbnz	r3, 80046cc <_free_r+0x30>
 80046be:	6063      	str	r3, [r4, #4]
 80046c0:	6014      	str	r4, [r2, #0]
 80046c2:	b003      	add	sp, #12
 80046c4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80046c8:	f000 bb14 	b.w	8004cf4 <__malloc_unlock>
 80046cc:	42a3      	cmp	r3, r4
 80046ce:	d908      	bls.n	80046e2 <_free_r+0x46>
 80046d0:	6825      	ldr	r5, [r4, #0]
 80046d2:	1961      	adds	r1, r4, r5
 80046d4:	428b      	cmp	r3, r1
 80046d6:	bf01      	itttt	eq
 80046d8:	6819      	ldreq	r1, [r3, #0]
 80046da:	685b      	ldreq	r3, [r3, #4]
 80046dc:	1949      	addeq	r1, r1, r5
 80046de:	6021      	streq	r1, [r4, #0]
 80046e0:	e7ed      	b.n	80046be <_free_r+0x22>
 80046e2:	461a      	mov	r2, r3
 80046e4:	685b      	ldr	r3, [r3, #4]
 80046e6:	b10b      	cbz	r3, 80046ec <_free_r+0x50>
 80046e8:	42a3      	cmp	r3, r4
 80046ea:	d9fa      	bls.n	80046e2 <_free_r+0x46>
 80046ec:	6811      	ldr	r1, [r2, #0]
 80046ee:	1855      	adds	r5, r2, r1
 80046f0:	42a5      	cmp	r5, r4
 80046f2:	d10b      	bne.n	800470c <_free_r+0x70>
 80046f4:	6824      	ldr	r4, [r4, #0]
 80046f6:	4421      	add	r1, r4
 80046f8:	1854      	adds	r4, r2, r1
 80046fa:	42a3      	cmp	r3, r4
 80046fc:	6011      	str	r1, [r2, #0]
 80046fe:	d1e0      	bne.n	80046c2 <_free_r+0x26>
 8004700:	681c      	ldr	r4, [r3, #0]
 8004702:	685b      	ldr	r3, [r3, #4]
 8004704:	6053      	str	r3, [r2, #4]
 8004706:	4421      	add	r1, r4
 8004708:	6011      	str	r1, [r2, #0]
 800470a:	e7da      	b.n	80046c2 <_free_r+0x26>
 800470c:	d902      	bls.n	8004714 <_free_r+0x78>
 800470e:	230c      	movs	r3, #12
 8004710:	6003      	str	r3, [r0, #0]
 8004712:	e7d6      	b.n	80046c2 <_free_r+0x26>
 8004714:	6825      	ldr	r5, [r4, #0]
 8004716:	1961      	adds	r1, r4, r5
 8004718:	428b      	cmp	r3, r1
 800471a:	bf04      	itt	eq
 800471c:	6819      	ldreq	r1, [r3, #0]
 800471e:	685b      	ldreq	r3, [r3, #4]
 8004720:	6063      	str	r3, [r4, #4]
 8004722:	bf04      	itt	eq
 8004724:	1949      	addeq	r1, r1, r5
 8004726:	6021      	streq	r1, [r4, #0]
 8004728:	6054      	str	r4, [r2, #4]
 800472a:	e7ca      	b.n	80046c2 <_free_r+0x26>
 800472c:	b003      	add	sp, #12
 800472e:	bd30      	pop	{r4, r5, pc}
 8004730:	200004b0 	.word	0x200004b0

08004734 <sbrk_aligned>:
 8004734:	b570      	push	{r4, r5, r6, lr}
 8004736:	4e0e      	ldr	r6, [pc, #56]	; (8004770 <sbrk_aligned+0x3c>)
 8004738:	460c      	mov	r4, r1
 800473a:	6831      	ldr	r1, [r6, #0]
 800473c:	4605      	mov	r5, r0
 800473e:	b911      	cbnz	r1, 8004746 <sbrk_aligned+0x12>
 8004740:	f000 f9e6 	bl	8004b10 <_sbrk_r>
 8004744:	6030      	str	r0, [r6, #0]
 8004746:	4621      	mov	r1, r4
 8004748:	4628      	mov	r0, r5
 800474a:	f000 f9e1 	bl	8004b10 <_sbrk_r>
 800474e:	1c43      	adds	r3, r0, #1
 8004750:	d00a      	beq.n	8004768 <sbrk_aligned+0x34>
 8004752:	1cc4      	adds	r4, r0, #3
 8004754:	f024 0403 	bic.w	r4, r4, #3
 8004758:	42a0      	cmp	r0, r4
 800475a:	d007      	beq.n	800476c <sbrk_aligned+0x38>
 800475c:	1a21      	subs	r1, r4, r0
 800475e:	4628      	mov	r0, r5
 8004760:	f000 f9d6 	bl	8004b10 <_sbrk_r>
 8004764:	3001      	adds	r0, #1
 8004766:	d101      	bne.n	800476c <sbrk_aligned+0x38>
 8004768:	f04f 34ff 	mov.w	r4, #4294967295
 800476c:	4620      	mov	r0, r4
 800476e:	bd70      	pop	{r4, r5, r6, pc}
 8004770:	200004b4 	.word	0x200004b4

08004774 <_malloc_r>:
 8004774:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004778:	1ccd      	adds	r5, r1, #3
 800477a:	f025 0503 	bic.w	r5, r5, #3
 800477e:	3508      	adds	r5, #8
 8004780:	2d0c      	cmp	r5, #12
 8004782:	bf38      	it	cc
 8004784:	250c      	movcc	r5, #12
 8004786:	2d00      	cmp	r5, #0
 8004788:	4607      	mov	r7, r0
 800478a:	db01      	blt.n	8004790 <_malloc_r+0x1c>
 800478c:	42a9      	cmp	r1, r5
 800478e:	d905      	bls.n	800479c <_malloc_r+0x28>
 8004790:	230c      	movs	r3, #12
 8004792:	603b      	str	r3, [r7, #0]
 8004794:	2600      	movs	r6, #0
 8004796:	4630      	mov	r0, r6
 8004798:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800479c:	4e2e      	ldr	r6, [pc, #184]	; (8004858 <_malloc_r+0xe4>)
 800479e:	f000 faa3 	bl	8004ce8 <__malloc_lock>
 80047a2:	6833      	ldr	r3, [r6, #0]
 80047a4:	461c      	mov	r4, r3
 80047a6:	bb34      	cbnz	r4, 80047f6 <_malloc_r+0x82>
 80047a8:	4629      	mov	r1, r5
 80047aa:	4638      	mov	r0, r7
 80047ac:	f7ff ffc2 	bl	8004734 <sbrk_aligned>
 80047b0:	1c43      	adds	r3, r0, #1
 80047b2:	4604      	mov	r4, r0
 80047b4:	d14d      	bne.n	8004852 <_malloc_r+0xde>
 80047b6:	6834      	ldr	r4, [r6, #0]
 80047b8:	4626      	mov	r6, r4
 80047ba:	2e00      	cmp	r6, #0
 80047bc:	d140      	bne.n	8004840 <_malloc_r+0xcc>
 80047be:	6823      	ldr	r3, [r4, #0]
 80047c0:	4631      	mov	r1, r6
 80047c2:	4638      	mov	r0, r7
 80047c4:	eb04 0803 	add.w	r8, r4, r3
 80047c8:	f000 f9a2 	bl	8004b10 <_sbrk_r>
 80047cc:	4580      	cmp	r8, r0
 80047ce:	d13a      	bne.n	8004846 <_malloc_r+0xd2>
 80047d0:	6821      	ldr	r1, [r4, #0]
 80047d2:	3503      	adds	r5, #3
 80047d4:	1a6d      	subs	r5, r5, r1
 80047d6:	f025 0503 	bic.w	r5, r5, #3
 80047da:	3508      	adds	r5, #8
 80047dc:	2d0c      	cmp	r5, #12
 80047de:	bf38      	it	cc
 80047e0:	250c      	movcc	r5, #12
 80047e2:	4629      	mov	r1, r5
 80047e4:	4638      	mov	r0, r7
 80047e6:	f7ff ffa5 	bl	8004734 <sbrk_aligned>
 80047ea:	3001      	adds	r0, #1
 80047ec:	d02b      	beq.n	8004846 <_malloc_r+0xd2>
 80047ee:	6823      	ldr	r3, [r4, #0]
 80047f0:	442b      	add	r3, r5
 80047f2:	6023      	str	r3, [r4, #0]
 80047f4:	e00e      	b.n	8004814 <_malloc_r+0xa0>
 80047f6:	6822      	ldr	r2, [r4, #0]
 80047f8:	1b52      	subs	r2, r2, r5
 80047fa:	d41e      	bmi.n	800483a <_malloc_r+0xc6>
 80047fc:	2a0b      	cmp	r2, #11
 80047fe:	d916      	bls.n	800482e <_malloc_r+0xba>
 8004800:	1961      	adds	r1, r4, r5
 8004802:	42a3      	cmp	r3, r4
 8004804:	6025      	str	r5, [r4, #0]
 8004806:	bf18      	it	ne
 8004808:	6059      	strne	r1, [r3, #4]
 800480a:	6863      	ldr	r3, [r4, #4]
 800480c:	bf08      	it	eq
 800480e:	6031      	streq	r1, [r6, #0]
 8004810:	5162      	str	r2, [r4, r5]
 8004812:	604b      	str	r3, [r1, #4]
 8004814:	4638      	mov	r0, r7
 8004816:	f104 060b 	add.w	r6, r4, #11
 800481a:	f000 fa6b 	bl	8004cf4 <__malloc_unlock>
 800481e:	f026 0607 	bic.w	r6, r6, #7
 8004822:	1d23      	adds	r3, r4, #4
 8004824:	1af2      	subs	r2, r6, r3
 8004826:	d0b6      	beq.n	8004796 <_malloc_r+0x22>
 8004828:	1b9b      	subs	r3, r3, r6
 800482a:	50a3      	str	r3, [r4, r2]
 800482c:	e7b3      	b.n	8004796 <_malloc_r+0x22>
 800482e:	6862      	ldr	r2, [r4, #4]
 8004830:	42a3      	cmp	r3, r4
 8004832:	bf0c      	ite	eq
 8004834:	6032      	streq	r2, [r6, #0]
 8004836:	605a      	strne	r2, [r3, #4]
 8004838:	e7ec      	b.n	8004814 <_malloc_r+0xa0>
 800483a:	4623      	mov	r3, r4
 800483c:	6864      	ldr	r4, [r4, #4]
 800483e:	e7b2      	b.n	80047a6 <_malloc_r+0x32>
 8004840:	4634      	mov	r4, r6
 8004842:	6876      	ldr	r6, [r6, #4]
 8004844:	e7b9      	b.n	80047ba <_malloc_r+0x46>
 8004846:	230c      	movs	r3, #12
 8004848:	603b      	str	r3, [r7, #0]
 800484a:	4638      	mov	r0, r7
 800484c:	f000 fa52 	bl	8004cf4 <__malloc_unlock>
 8004850:	e7a1      	b.n	8004796 <_malloc_r+0x22>
 8004852:	6025      	str	r5, [r4, #0]
 8004854:	e7de      	b.n	8004814 <_malloc_r+0xa0>
 8004856:	bf00      	nop
 8004858:	200004b0 	.word	0x200004b0

0800485c <__sfputc_r>:
 800485c:	6893      	ldr	r3, [r2, #8]
 800485e:	3b01      	subs	r3, #1
 8004860:	2b00      	cmp	r3, #0
 8004862:	b410      	push	{r4}
 8004864:	6093      	str	r3, [r2, #8]
 8004866:	da08      	bge.n	800487a <__sfputc_r+0x1e>
 8004868:	6994      	ldr	r4, [r2, #24]
 800486a:	42a3      	cmp	r3, r4
 800486c:	db01      	blt.n	8004872 <__sfputc_r+0x16>
 800486e:	290a      	cmp	r1, #10
 8004870:	d103      	bne.n	800487a <__sfputc_r+0x1e>
 8004872:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004876:	f7fe ba03 	b.w	8002c80 <__swbuf_r>
 800487a:	6813      	ldr	r3, [r2, #0]
 800487c:	1c58      	adds	r0, r3, #1
 800487e:	6010      	str	r0, [r2, #0]
 8004880:	7019      	strb	r1, [r3, #0]
 8004882:	4608      	mov	r0, r1
 8004884:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004888:	4770      	bx	lr

0800488a <__sfputs_r>:
 800488a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800488c:	4606      	mov	r6, r0
 800488e:	460f      	mov	r7, r1
 8004890:	4614      	mov	r4, r2
 8004892:	18d5      	adds	r5, r2, r3
 8004894:	42ac      	cmp	r4, r5
 8004896:	d101      	bne.n	800489c <__sfputs_r+0x12>
 8004898:	2000      	movs	r0, #0
 800489a:	e007      	b.n	80048ac <__sfputs_r+0x22>
 800489c:	f814 1b01 	ldrb.w	r1, [r4], #1
 80048a0:	463a      	mov	r2, r7
 80048a2:	4630      	mov	r0, r6
 80048a4:	f7ff ffda 	bl	800485c <__sfputc_r>
 80048a8:	1c43      	adds	r3, r0, #1
 80048aa:	d1f3      	bne.n	8004894 <__sfputs_r+0xa>
 80048ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080048b0 <_vfiprintf_r>:
 80048b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048b4:	460d      	mov	r5, r1
 80048b6:	b09d      	sub	sp, #116	; 0x74
 80048b8:	4614      	mov	r4, r2
 80048ba:	4698      	mov	r8, r3
 80048bc:	4606      	mov	r6, r0
 80048be:	b118      	cbz	r0, 80048c8 <_vfiprintf_r+0x18>
 80048c0:	6983      	ldr	r3, [r0, #24]
 80048c2:	b90b      	cbnz	r3, 80048c8 <_vfiprintf_r+0x18>
 80048c4:	f7ff fa30 	bl	8003d28 <__sinit>
 80048c8:	4b89      	ldr	r3, [pc, #548]	; (8004af0 <_vfiprintf_r+0x240>)
 80048ca:	429d      	cmp	r5, r3
 80048cc:	d11b      	bne.n	8004906 <_vfiprintf_r+0x56>
 80048ce:	6875      	ldr	r5, [r6, #4]
 80048d0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80048d2:	07d9      	lsls	r1, r3, #31
 80048d4:	d405      	bmi.n	80048e2 <_vfiprintf_r+0x32>
 80048d6:	89ab      	ldrh	r3, [r5, #12]
 80048d8:	059a      	lsls	r2, r3, #22
 80048da:	d402      	bmi.n	80048e2 <_vfiprintf_r+0x32>
 80048dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80048de:	f7ff fac6 	bl	8003e6e <__retarget_lock_acquire_recursive>
 80048e2:	89ab      	ldrh	r3, [r5, #12]
 80048e4:	071b      	lsls	r3, r3, #28
 80048e6:	d501      	bpl.n	80048ec <_vfiprintf_r+0x3c>
 80048e8:	692b      	ldr	r3, [r5, #16]
 80048ea:	b9eb      	cbnz	r3, 8004928 <_vfiprintf_r+0x78>
 80048ec:	4629      	mov	r1, r5
 80048ee:	4630      	mov	r0, r6
 80048f0:	f7fe fa18 	bl	8002d24 <__swsetup_r>
 80048f4:	b1c0      	cbz	r0, 8004928 <_vfiprintf_r+0x78>
 80048f6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80048f8:	07dc      	lsls	r4, r3, #31
 80048fa:	d50e      	bpl.n	800491a <_vfiprintf_r+0x6a>
 80048fc:	f04f 30ff 	mov.w	r0, #4294967295
 8004900:	b01d      	add	sp, #116	; 0x74
 8004902:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004906:	4b7b      	ldr	r3, [pc, #492]	; (8004af4 <_vfiprintf_r+0x244>)
 8004908:	429d      	cmp	r5, r3
 800490a:	d101      	bne.n	8004910 <_vfiprintf_r+0x60>
 800490c:	68b5      	ldr	r5, [r6, #8]
 800490e:	e7df      	b.n	80048d0 <_vfiprintf_r+0x20>
 8004910:	4b79      	ldr	r3, [pc, #484]	; (8004af8 <_vfiprintf_r+0x248>)
 8004912:	429d      	cmp	r5, r3
 8004914:	bf08      	it	eq
 8004916:	68f5      	ldreq	r5, [r6, #12]
 8004918:	e7da      	b.n	80048d0 <_vfiprintf_r+0x20>
 800491a:	89ab      	ldrh	r3, [r5, #12]
 800491c:	0598      	lsls	r0, r3, #22
 800491e:	d4ed      	bmi.n	80048fc <_vfiprintf_r+0x4c>
 8004920:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004922:	f7ff faa5 	bl	8003e70 <__retarget_lock_release_recursive>
 8004926:	e7e9      	b.n	80048fc <_vfiprintf_r+0x4c>
 8004928:	2300      	movs	r3, #0
 800492a:	9309      	str	r3, [sp, #36]	; 0x24
 800492c:	2320      	movs	r3, #32
 800492e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004932:	f8cd 800c 	str.w	r8, [sp, #12]
 8004936:	2330      	movs	r3, #48	; 0x30
 8004938:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8004afc <_vfiprintf_r+0x24c>
 800493c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004940:	f04f 0901 	mov.w	r9, #1
 8004944:	4623      	mov	r3, r4
 8004946:	469a      	mov	sl, r3
 8004948:	f813 2b01 	ldrb.w	r2, [r3], #1
 800494c:	b10a      	cbz	r2, 8004952 <_vfiprintf_r+0xa2>
 800494e:	2a25      	cmp	r2, #37	; 0x25
 8004950:	d1f9      	bne.n	8004946 <_vfiprintf_r+0x96>
 8004952:	ebba 0b04 	subs.w	fp, sl, r4
 8004956:	d00b      	beq.n	8004970 <_vfiprintf_r+0xc0>
 8004958:	465b      	mov	r3, fp
 800495a:	4622      	mov	r2, r4
 800495c:	4629      	mov	r1, r5
 800495e:	4630      	mov	r0, r6
 8004960:	f7ff ff93 	bl	800488a <__sfputs_r>
 8004964:	3001      	adds	r0, #1
 8004966:	f000 80aa 	beq.w	8004abe <_vfiprintf_r+0x20e>
 800496a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800496c:	445a      	add	r2, fp
 800496e:	9209      	str	r2, [sp, #36]	; 0x24
 8004970:	f89a 3000 	ldrb.w	r3, [sl]
 8004974:	2b00      	cmp	r3, #0
 8004976:	f000 80a2 	beq.w	8004abe <_vfiprintf_r+0x20e>
 800497a:	2300      	movs	r3, #0
 800497c:	f04f 32ff 	mov.w	r2, #4294967295
 8004980:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004984:	f10a 0a01 	add.w	sl, sl, #1
 8004988:	9304      	str	r3, [sp, #16]
 800498a:	9307      	str	r3, [sp, #28]
 800498c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004990:	931a      	str	r3, [sp, #104]	; 0x68
 8004992:	4654      	mov	r4, sl
 8004994:	2205      	movs	r2, #5
 8004996:	f814 1b01 	ldrb.w	r1, [r4], #1
 800499a:	4858      	ldr	r0, [pc, #352]	; (8004afc <_vfiprintf_r+0x24c>)
 800499c:	f7fb fc30 	bl	8000200 <memchr>
 80049a0:	9a04      	ldr	r2, [sp, #16]
 80049a2:	b9d8      	cbnz	r0, 80049dc <_vfiprintf_r+0x12c>
 80049a4:	06d1      	lsls	r1, r2, #27
 80049a6:	bf44      	itt	mi
 80049a8:	2320      	movmi	r3, #32
 80049aa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80049ae:	0713      	lsls	r3, r2, #28
 80049b0:	bf44      	itt	mi
 80049b2:	232b      	movmi	r3, #43	; 0x2b
 80049b4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80049b8:	f89a 3000 	ldrb.w	r3, [sl]
 80049bc:	2b2a      	cmp	r3, #42	; 0x2a
 80049be:	d015      	beq.n	80049ec <_vfiprintf_r+0x13c>
 80049c0:	9a07      	ldr	r2, [sp, #28]
 80049c2:	4654      	mov	r4, sl
 80049c4:	2000      	movs	r0, #0
 80049c6:	f04f 0c0a 	mov.w	ip, #10
 80049ca:	4621      	mov	r1, r4
 80049cc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80049d0:	3b30      	subs	r3, #48	; 0x30
 80049d2:	2b09      	cmp	r3, #9
 80049d4:	d94e      	bls.n	8004a74 <_vfiprintf_r+0x1c4>
 80049d6:	b1b0      	cbz	r0, 8004a06 <_vfiprintf_r+0x156>
 80049d8:	9207      	str	r2, [sp, #28]
 80049da:	e014      	b.n	8004a06 <_vfiprintf_r+0x156>
 80049dc:	eba0 0308 	sub.w	r3, r0, r8
 80049e0:	fa09 f303 	lsl.w	r3, r9, r3
 80049e4:	4313      	orrs	r3, r2
 80049e6:	9304      	str	r3, [sp, #16]
 80049e8:	46a2      	mov	sl, r4
 80049ea:	e7d2      	b.n	8004992 <_vfiprintf_r+0xe2>
 80049ec:	9b03      	ldr	r3, [sp, #12]
 80049ee:	1d19      	adds	r1, r3, #4
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	9103      	str	r1, [sp, #12]
 80049f4:	2b00      	cmp	r3, #0
 80049f6:	bfbb      	ittet	lt
 80049f8:	425b      	neglt	r3, r3
 80049fa:	f042 0202 	orrlt.w	r2, r2, #2
 80049fe:	9307      	strge	r3, [sp, #28]
 8004a00:	9307      	strlt	r3, [sp, #28]
 8004a02:	bfb8      	it	lt
 8004a04:	9204      	strlt	r2, [sp, #16]
 8004a06:	7823      	ldrb	r3, [r4, #0]
 8004a08:	2b2e      	cmp	r3, #46	; 0x2e
 8004a0a:	d10c      	bne.n	8004a26 <_vfiprintf_r+0x176>
 8004a0c:	7863      	ldrb	r3, [r4, #1]
 8004a0e:	2b2a      	cmp	r3, #42	; 0x2a
 8004a10:	d135      	bne.n	8004a7e <_vfiprintf_r+0x1ce>
 8004a12:	9b03      	ldr	r3, [sp, #12]
 8004a14:	1d1a      	adds	r2, r3, #4
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	9203      	str	r2, [sp, #12]
 8004a1a:	2b00      	cmp	r3, #0
 8004a1c:	bfb8      	it	lt
 8004a1e:	f04f 33ff 	movlt.w	r3, #4294967295
 8004a22:	3402      	adds	r4, #2
 8004a24:	9305      	str	r3, [sp, #20]
 8004a26:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004b0c <_vfiprintf_r+0x25c>
 8004a2a:	7821      	ldrb	r1, [r4, #0]
 8004a2c:	2203      	movs	r2, #3
 8004a2e:	4650      	mov	r0, sl
 8004a30:	f7fb fbe6 	bl	8000200 <memchr>
 8004a34:	b140      	cbz	r0, 8004a48 <_vfiprintf_r+0x198>
 8004a36:	2340      	movs	r3, #64	; 0x40
 8004a38:	eba0 000a 	sub.w	r0, r0, sl
 8004a3c:	fa03 f000 	lsl.w	r0, r3, r0
 8004a40:	9b04      	ldr	r3, [sp, #16]
 8004a42:	4303      	orrs	r3, r0
 8004a44:	3401      	adds	r4, #1
 8004a46:	9304      	str	r3, [sp, #16]
 8004a48:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004a4c:	482c      	ldr	r0, [pc, #176]	; (8004b00 <_vfiprintf_r+0x250>)
 8004a4e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004a52:	2206      	movs	r2, #6
 8004a54:	f7fb fbd4 	bl	8000200 <memchr>
 8004a58:	2800      	cmp	r0, #0
 8004a5a:	d03f      	beq.n	8004adc <_vfiprintf_r+0x22c>
 8004a5c:	4b29      	ldr	r3, [pc, #164]	; (8004b04 <_vfiprintf_r+0x254>)
 8004a5e:	bb1b      	cbnz	r3, 8004aa8 <_vfiprintf_r+0x1f8>
 8004a60:	9b03      	ldr	r3, [sp, #12]
 8004a62:	3307      	adds	r3, #7
 8004a64:	f023 0307 	bic.w	r3, r3, #7
 8004a68:	3308      	adds	r3, #8
 8004a6a:	9303      	str	r3, [sp, #12]
 8004a6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a6e:	443b      	add	r3, r7
 8004a70:	9309      	str	r3, [sp, #36]	; 0x24
 8004a72:	e767      	b.n	8004944 <_vfiprintf_r+0x94>
 8004a74:	fb0c 3202 	mla	r2, ip, r2, r3
 8004a78:	460c      	mov	r4, r1
 8004a7a:	2001      	movs	r0, #1
 8004a7c:	e7a5      	b.n	80049ca <_vfiprintf_r+0x11a>
 8004a7e:	2300      	movs	r3, #0
 8004a80:	3401      	adds	r4, #1
 8004a82:	9305      	str	r3, [sp, #20]
 8004a84:	4619      	mov	r1, r3
 8004a86:	f04f 0c0a 	mov.w	ip, #10
 8004a8a:	4620      	mov	r0, r4
 8004a8c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004a90:	3a30      	subs	r2, #48	; 0x30
 8004a92:	2a09      	cmp	r2, #9
 8004a94:	d903      	bls.n	8004a9e <_vfiprintf_r+0x1ee>
 8004a96:	2b00      	cmp	r3, #0
 8004a98:	d0c5      	beq.n	8004a26 <_vfiprintf_r+0x176>
 8004a9a:	9105      	str	r1, [sp, #20]
 8004a9c:	e7c3      	b.n	8004a26 <_vfiprintf_r+0x176>
 8004a9e:	fb0c 2101 	mla	r1, ip, r1, r2
 8004aa2:	4604      	mov	r4, r0
 8004aa4:	2301      	movs	r3, #1
 8004aa6:	e7f0      	b.n	8004a8a <_vfiprintf_r+0x1da>
 8004aa8:	ab03      	add	r3, sp, #12
 8004aaa:	9300      	str	r3, [sp, #0]
 8004aac:	462a      	mov	r2, r5
 8004aae:	4b16      	ldr	r3, [pc, #88]	; (8004b08 <_vfiprintf_r+0x258>)
 8004ab0:	a904      	add	r1, sp, #16
 8004ab2:	4630      	mov	r0, r6
 8004ab4:	f7fd fc8c 	bl	80023d0 <_printf_float>
 8004ab8:	4607      	mov	r7, r0
 8004aba:	1c78      	adds	r0, r7, #1
 8004abc:	d1d6      	bne.n	8004a6c <_vfiprintf_r+0x1bc>
 8004abe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004ac0:	07d9      	lsls	r1, r3, #31
 8004ac2:	d405      	bmi.n	8004ad0 <_vfiprintf_r+0x220>
 8004ac4:	89ab      	ldrh	r3, [r5, #12]
 8004ac6:	059a      	lsls	r2, r3, #22
 8004ac8:	d402      	bmi.n	8004ad0 <_vfiprintf_r+0x220>
 8004aca:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004acc:	f7ff f9d0 	bl	8003e70 <__retarget_lock_release_recursive>
 8004ad0:	89ab      	ldrh	r3, [r5, #12]
 8004ad2:	065b      	lsls	r3, r3, #25
 8004ad4:	f53f af12 	bmi.w	80048fc <_vfiprintf_r+0x4c>
 8004ad8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004ada:	e711      	b.n	8004900 <_vfiprintf_r+0x50>
 8004adc:	ab03      	add	r3, sp, #12
 8004ade:	9300      	str	r3, [sp, #0]
 8004ae0:	462a      	mov	r2, r5
 8004ae2:	4b09      	ldr	r3, [pc, #36]	; (8004b08 <_vfiprintf_r+0x258>)
 8004ae4:	a904      	add	r1, sp, #16
 8004ae6:	4630      	mov	r0, r6
 8004ae8:	f7fd ff16 	bl	8002918 <_printf_i>
 8004aec:	e7e4      	b.n	8004ab8 <_vfiprintf_r+0x208>
 8004aee:	bf00      	nop
 8004af0:	08004f34 	.word	0x08004f34
 8004af4:	08004f54 	.word	0x08004f54
 8004af8:	08004f14 	.word	0x08004f14
 8004afc:	080050cc 	.word	0x080050cc
 8004b00:	080050d6 	.word	0x080050d6
 8004b04:	080023d1 	.word	0x080023d1
 8004b08:	0800488b 	.word	0x0800488b
 8004b0c:	080050d2 	.word	0x080050d2

08004b10 <_sbrk_r>:
 8004b10:	b538      	push	{r3, r4, r5, lr}
 8004b12:	4d06      	ldr	r5, [pc, #24]	; (8004b2c <_sbrk_r+0x1c>)
 8004b14:	2300      	movs	r3, #0
 8004b16:	4604      	mov	r4, r0
 8004b18:	4608      	mov	r0, r1
 8004b1a:	602b      	str	r3, [r5, #0]
 8004b1c:	f7fc fbb2 	bl	8001284 <_sbrk>
 8004b20:	1c43      	adds	r3, r0, #1
 8004b22:	d102      	bne.n	8004b2a <_sbrk_r+0x1a>
 8004b24:	682b      	ldr	r3, [r5, #0]
 8004b26:	b103      	cbz	r3, 8004b2a <_sbrk_r+0x1a>
 8004b28:	6023      	str	r3, [r4, #0]
 8004b2a:	bd38      	pop	{r3, r4, r5, pc}
 8004b2c:	200004b8 	.word	0x200004b8

08004b30 <__sread>:
 8004b30:	b510      	push	{r4, lr}
 8004b32:	460c      	mov	r4, r1
 8004b34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004b38:	f000 f8e2 	bl	8004d00 <_read_r>
 8004b3c:	2800      	cmp	r0, #0
 8004b3e:	bfab      	itete	ge
 8004b40:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004b42:	89a3      	ldrhlt	r3, [r4, #12]
 8004b44:	181b      	addge	r3, r3, r0
 8004b46:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004b4a:	bfac      	ite	ge
 8004b4c:	6563      	strge	r3, [r4, #84]	; 0x54
 8004b4e:	81a3      	strhlt	r3, [r4, #12]
 8004b50:	bd10      	pop	{r4, pc}

08004b52 <__swrite>:
 8004b52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004b56:	461f      	mov	r7, r3
 8004b58:	898b      	ldrh	r3, [r1, #12]
 8004b5a:	05db      	lsls	r3, r3, #23
 8004b5c:	4605      	mov	r5, r0
 8004b5e:	460c      	mov	r4, r1
 8004b60:	4616      	mov	r6, r2
 8004b62:	d505      	bpl.n	8004b70 <__swrite+0x1e>
 8004b64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004b68:	2302      	movs	r3, #2
 8004b6a:	2200      	movs	r2, #0
 8004b6c:	f000 f898 	bl	8004ca0 <_lseek_r>
 8004b70:	89a3      	ldrh	r3, [r4, #12]
 8004b72:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004b76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004b7a:	81a3      	strh	r3, [r4, #12]
 8004b7c:	4632      	mov	r2, r6
 8004b7e:	463b      	mov	r3, r7
 8004b80:	4628      	mov	r0, r5
 8004b82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004b86:	f000 b817 	b.w	8004bb8 <_write_r>

08004b8a <__sseek>:
 8004b8a:	b510      	push	{r4, lr}
 8004b8c:	460c      	mov	r4, r1
 8004b8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004b92:	f000 f885 	bl	8004ca0 <_lseek_r>
 8004b96:	1c43      	adds	r3, r0, #1
 8004b98:	89a3      	ldrh	r3, [r4, #12]
 8004b9a:	bf15      	itete	ne
 8004b9c:	6560      	strne	r0, [r4, #84]	; 0x54
 8004b9e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004ba2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004ba6:	81a3      	strheq	r3, [r4, #12]
 8004ba8:	bf18      	it	ne
 8004baa:	81a3      	strhne	r3, [r4, #12]
 8004bac:	bd10      	pop	{r4, pc}

08004bae <__sclose>:
 8004bae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004bb2:	f000 b831 	b.w	8004c18 <_close_r>
	...

08004bb8 <_write_r>:
 8004bb8:	b538      	push	{r3, r4, r5, lr}
 8004bba:	4d07      	ldr	r5, [pc, #28]	; (8004bd8 <_write_r+0x20>)
 8004bbc:	4604      	mov	r4, r0
 8004bbe:	4608      	mov	r0, r1
 8004bc0:	4611      	mov	r1, r2
 8004bc2:	2200      	movs	r2, #0
 8004bc4:	602a      	str	r2, [r5, #0]
 8004bc6:	461a      	mov	r2, r3
 8004bc8:	f7fc fb0b 	bl	80011e2 <_write>
 8004bcc:	1c43      	adds	r3, r0, #1
 8004bce:	d102      	bne.n	8004bd6 <_write_r+0x1e>
 8004bd0:	682b      	ldr	r3, [r5, #0]
 8004bd2:	b103      	cbz	r3, 8004bd6 <_write_r+0x1e>
 8004bd4:	6023      	str	r3, [r4, #0]
 8004bd6:	bd38      	pop	{r3, r4, r5, pc}
 8004bd8:	200004b8 	.word	0x200004b8

08004bdc <__assert_func>:
 8004bdc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004bde:	4614      	mov	r4, r2
 8004be0:	461a      	mov	r2, r3
 8004be2:	4b09      	ldr	r3, [pc, #36]	; (8004c08 <__assert_func+0x2c>)
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	4605      	mov	r5, r0
 8004be8:	68d8      	ldr	r0, [r3, #12]
 8004bea:	b14c      	cbz	r4, 8004c00 <__assert_func+0x24>
 8004bec:	4b07      	ldr	r3, [pc, #28]	; (8004c0c <__assert_func+0x30>)
 8004bee:	9100      	str	r1, [sp, #0]
 8004bf0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004bf4:	4906      	ldr	r1, [pc, #24]	; (8004c10 <__assert_func+0x34>)
 8004bf6:	462b      	mov	r3, r5
 8004bf8:	f000 f81e 	bl	8004c38 <fiprintf>
 8004bfc:	f000 f89f 	bl	8004d3e <abort>
 8004c00:	4b04      	ldr	r3, [pc, #16]	; (8004c14 <__assert_func+0x38>)
 8004c02:	461c      	mov	r4, r3
 8004c04:	e7f3      	b.n	8004bee <__assert_func+0x12>
 8004c06:	bf00      	nop
 8004c08:	20000148 	.word	0x20000148
 8004c0c:	080050dd 	.word	0x080050dd
 8004c10:	080050ea 	.word	0x080050ea
 8004c14:	08005118 	.word	0x08005118

08004c18 <_close_r>:
 8004c18:	b538      	push	{r3, r4, r5, lr}
 8004c1a:	4d06      	ldr	r5, [pc, #24]	; (8004c34 <_close_r+0x1c>)
 8004c1c:	2300      	movs	r3, #0
 8004c1e:	4604      	mov	r4, r0
 8004c20:	4608      	mov	r0, r1
 8004c22:	602b      	str	r3, [r5, #0]
 8004c24:	f7fc faf9 	bl	800121a <_close>
 8004c28:	1c43      	adds	r3, r0, #1
 8004c2a:	d102      	bne.n	8004c32 <_close_r+0x1a>
 8004c2c:	682b      	ldr	r3, [r5, #0]
 8004c2e:	b103      	cbz	r3, 8004c32 <_close_r+0x1a>
 8004c30:	6023      	str	r3, [r4, #0]
 8004c32:	bd38      	pop	{r3, r4, r5, pc}
 8004c34:	200004b8 	.word	0x200004b8

08004c38 <fiprintf>:
 8004c38:	b40e      	push	{r1, r2, r3}
 8004c3a:	b503      	push	{r0, r1, lr}
 8004c3c:	4601      	mov	r1, r0
 8004c3e:	ab03      	add	r3, sp, #12
 8004c40:	4805      	ldr	r0, [pc, #20]	; (8004c58 <fiprintf+0x20>)
 8004c42:	f853 2b04 	ldr.w	r2, [r3], #4
 8004c46:	6800      	ldr	r0, [r0, #0]
 8004c48:	9301      	str	r3, [sp, #4]
 8004c4a:	f7ff fe31 	bl	80048b0 <_vfiprintf_r>
 8004c4e:	b002      	add	sp, #8
 8004c50:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c54:	b003      	add	sp, #12
 8004c56:	4770      	bx	lr
 8004c58:	20000148 	.word	0x20000148

08004c5c <_fstat_r>:
 8004c5c:	b538      	push	{r3, r4, r5, lr}
 8004c5e:	4d07      	ldr	r5, [pc, #28]	; (8004c7c <_fstat_r+0x20>)
 8004c60:	2300      	movs	r3, #0
 8004c62:	4604      	mov	r4, r0
 8004c64:	4608      	mov	r0, r1
 8004c66:	4611      	mov	r1, r2
 8004c68:	602b      	str	r3, [r5, #0]
 8004c6a:	f7fc fae2 	bl	8001232 <_fstat>
 8004c6e:	1c43      	adds	r3, r0, #1
 8004c70:	d102      	bne.n	8004c78 <_fstat_r+0x1c>
 8004c72:	682b      	ldr	r3, [r5, #0]
 8004c74:	b103      	cbz	r3, 8004c78 <_fstat_r+0x1c>
 8004c76:	6023      	str	r3, [r4, #0]
 8004c78:	bd38      	pop	{r3, r4, r5, pc}
 8004c7a:	bf00      	nop
 8004c7c:	200004b8 	.word	0x200004b8

08004c80 <_isatty_r>:
 8004c80:	b538      	push	{r3, r4, r5, lr}
 8004c82:	4d06      	ldr	r5, [pc, #24]	; (8004c9c <_isatty_r+0x1c>)
 8004c84:	2300      	movs	r3, #0
 8004c86:	4604      	mov	r4, r0
 8004c88:	4608      	mov	r0, r1
 8004c8a:	602b      	str	r3, [r5, #0]
 8004c8c:	f7fc fae1 	bl	8001252 <_isatty>
 8004c90:	1c43      	adds	r3, r0, #1
 8004c92:	d102      	bne.n	8004c9a <_isatty_r+0x1a>
 8004c94:	682b      	ldr	r3, [r5, #0]
 8004c96:	b103      	cbz	r3, 8004c9a <_isatty_r+0x1a>
 8004c98:	6023      	str	r3, [r4, #0]
 8004c9a:	bd38      	pop	{r3, r4, r5, pc}
 8004c9c:	200004b8 	.word	0x200004b8

08004ca0 <_lseek_r>:
 8004ca0:	b538      	push	{r3, r4, r5, lr}
 8004ca2:	4d07      	ldr	r5, [pc, #28]	; (8004cc0 <_lseek_r+0x20>)
 8004ca4:	4604      	mov	r4, r0
 8004ca6:	4608      	mov	r0, r1
 8004ca8:	4611      	mov	r1, r2
 8004caa:	2200      	movs	r2, #0
 8004cac:	602a      	str	r2, [r5, #0]
 8004cae:	461a      	mov	r2, r3
 8004cb0:	f7fc fada 	bl	8001268 <_lseek>
 8004cb4:	1c43      	adds	r3, r0, #1
 8004cb6:	d102      	bne.n	8004cbe <_lseek_r+0x1e>
 8004cb8:	682b      	ldr	r3, [r5, #0]
 8004cba:	b103      	cbz	r3, 8004cbe <_lseek_r+0x1e>
 8004cbc:	6023      	str	r3, [r4, #0]
 8004cbe:	bd38      	pop	{r3, r4, r5, pc}
 8004cc0:	200004b8 	.word	0x200004b8

08004cc4 <__ascii_mbtowc>:
 8004cc4:	b082      	sub	sp, #8
 8004cc6:	b901      	cbnz	r1, 8004cca <__ascii_mbtowc+0x6>
 8004cc8:	a901      	add	r1, sp, #4
 8004cca:	b142      	cbz	r2, 8004cde <__ascii_mbtowc+0x1a>
 8004ccc:	b14b      	cbz	r3, 8004ce2 <__ascii_mbtowc+0x1e>
 8004cce:	7813      	ldrb	r3, [r2, #0]
 8004cd0:	600b      	str	r3, [r1, #0]
 8004cd2:	7812      	ldrb	r2, [r2, #0]
 8004cd4:	1e10      	subs	r0, r2, #0
 8004cd6:	bf18      	it	ne
 8004cd8:	2001      	movne	r0, #1
 8004cda:	b002      	add	sp, #8
 8004cdc:	4770      	bx	lr
 8004cde:	4610      	mov	r0, r2
 8004ce0:	e7fb      	b.n	8004cda <__ascii_mbtowc+0x16>
 8004ce2:	f06f 0001 	mvn.w	r0, #1
 8004ce6:	e7f8      	b.n	8004cda <__ascii_mbtowc+0x16>

08004ce8 <__malloc_lock>:
 8004ce8:	4801      	ldr	r0, [pc, #4]	; (8004cf0 <__malloc_lock+0x8>)
 8004cea:	f7ff b8c0 	b.w	8003e6e <__retarget_lock_acquire_recursive>
 8004cee:	bf00      	nop
 8004cf0:	200004ac 	.word	0x200004ac

08004cf4 <__malloc_unlock>:
 8004cf4:	4801      	ldr	r0, [pc, #4]	; (8004cfc <__malloc_unlock+0x8>)
 8004cf6:	f7ff b8bb 	b.w	8003e70 <__retarget_lock_release_recursive>
 8004cfa:	bf00      	nop
 8004cfc:	200004ac 	.word	0x200004ac

08004d00 <_read_r>:
 8004d00:	b538      	push	{r3, r4, r5, lr}
 8004d02:	4d07      	ldr	r5, [pc, #28]	; (8004d20 <_read_r+0x20>)
 8004d04:	4604      	mov	r4, r0
 8004d06:	4608      	mov	r0, r1
 8004d08:	4611      	mov	r1, r2
 8004d0a:	2200      	movs	r2, #0
 8004d0c:	602a      	str	r2, [r5, #0]
 8004d0e:	461a      	mov	r2, r3
 8004d10:	f7fc fa4a 	bl	80011a8 <_read>
 8004d14:	1c43      	adds	r3, r0, #1
 8004d16:	d102      	bne.n	8004d1e <_read_r+0x1e>
 8004d18:	682b      	ldr	r3, [r5, #0]
 8004d1a:	b103      	cbz	r3, 8004d1e <_read_r+0x1e>
 8004d1c:	6023      	str	r3, [r4, #0]
 8004d1e:	bd38      	pop	{r3, r4, r5, pc}
 8004d20:	200004b8 	.word	0x200004b8

08004d24 <__ascii_wctomb>:
 8004d24:	b149      	cbz	r1, 8004d3a <__ascii_wctomb+0x16>
 8004d26:	2aff      	cmp	r2, #255	; 0xff
 8004d28:	bf85      	ittet	hi
 8004d2a:	238a      	movhi	r3, #138	; 0x8a
 8004d2c:	6003      	strhi	r3, [r0, #0]
 8004d2e:	700a      	strbls	r2, [r1, #0]
 8004d30:	f04f 30ff 	movhi.w	r0, #4294967295
 8004d34:	bf98      	it	ls
 8004d36:	2001      	movls	r0, #1
 8004d38:	4770      	bx	lr
 8004d3a:	4608      	mov	r0, r1
 8004d3c:	4770      	bx	lr

08004d3e <abort>:
 8004d3e:	b508      	push	{r3, lr}
 8004d40:	2006      	movs	r0, #6
 8004d42:	f000 f82b 	bl	8004d9c <raise>
 8004d46:	2001      	movs	r0, #1
 8004d48:	f7fc fa24 	bl	8001194 <_exit>

08004d4c <_raise_r>:
 8004d4c:	291f      	cmp	r1, #31
 8004d4e:	b538      	push	{r3, r4, r5, lr}
 8004d50:	4604      	mov	r4, r0
 8004d52:	460d      	mov	r5, r1
 8004d54:	d904      	bls.n	8004d60 <_raise_r+0x14>
 8004d56:	2316      	movs	r3, #22
 8004d58:	6003      	str	r3, [r0, #0]
 8004d5a:	f04f 30ff 	mov.w	r0, #4294967295
 8004d5e:	bd38      	pop	{r3, r4, r5, pc}
 8004d60:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004d62:	b112      	cbz	r2, 8004d6a <_raise_r+0x1e>
 8004d64:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004d68:	b94b      	cbnz	r3, 8004d7e <_raise_r+0x32>
 8004d6a:	4620      	mov	r0, r4
 8004d6c:	f000 f830 	bl	8004dd0 <_getpid_r>
 8004d70:	462a      	mov	r2, r5
 8004d72:	4601      	mov	r1, r0
 8004d74:	4620      	mov	r0, r4
 8004d76:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004d7a:	f000 b817 	b.w	8004dac <_kill_r>
 8004d7e:	2b01      	cmp	r3, #1
 8004d80:	d00a      	beq.n	8004d98 <_raise_r+0x4c>
 8004d82:	1c59      	adds	r1, r3, #1
 8004d84:	d103      	bne.n	8004d8e <_raise_r+0x42>
 8004d86:	2316      	movs	r3, #22
 8004d88:	6003      	str	r3, [r0, #0]
 8004d8a:	2001      	movs	r0, #1
 8004d8c:	e7e7      	b.n	8004d5e <_raise_r+0x12>
 8004d8e:	2400      	movs	r4, #0
 8004d90:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004d94:	4628      	mov	r0, r5
 8004d96:	4798      	blx	r3
 8004d98:	2000      	movs	r0, #0
 8004d9a:	e7e0      	b.n	8004d5e <_raise_r+0x12>

08004d9c <raise>:
 8004d9c:	4b02      	ldr	r3, [pc, #8]	; (8004da8 <raise+0xc>)
 8004d9e:	4601      	mov	r1, r0
 8004da0:	6818      	ldr	r0, [r3, #0]
 8004da2:	f7ff bfd3 	b.w	8004d4c <_raise_r>
 8004da6:	bf00      	nop
 8004da8:	20000148 	.word	0x20000148

08004dac <_kill_r>:
 8004dac:	b538      	push	{r3, r4, r5, lr}
 8004dae:	4d07      	ldr	r5, [pc, #28]	; (8004dcc <_kill_r+0x20>)
 8004db0:	2300      	movs	r3, #0
 8004db2:	4604      	mov	r4, r0
 8004db4:	4608      	mov	r0, r1
 8004db6:	4611      	mov	r1, r2
 8004db8:	602b      	str	r3, [r5, #0]
 8004dba:	f7fc f9db 	bl	8001174 <_kill>
 8004dbe:	1c43      	adds	r3, r0, #1
 8004dc0:	d102      	bne.n	8004dc8 <_kill_r+0x1c>
 8004dc2:	682b      	ldr	r3, [r5, #0]
 8004dc4:	b103      	cbz	r3, 8004dc8 <_kill_r+0x1c>
 8004dc6:	6023      	str	r3, [r4, #0]
 8004dc8:	bd38      	pop	{r3, r4, r5, pc}
 8004dca:	bf00      	nop
 8004dcc:	200004b8 	.word	0x200004b8

08004dd0 <_getpid_r>:
 8004dd0:	f7fc b9c8 	b.w	8001164 <_getpid>

08004dd4 <_init>:
 8004dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004dd6:	bf00      	nop
 8004dd8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004dda:	bc08      	pop	{r3}
 8004ddc:	469e      	mov	lr, r3
 8004dde:	4770      	bx	lr

08004de0 <_fini>:
 8004de0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004de2:	bf00      	nop
 8004de4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004de6:	bc08      	pop	{r3}
 8004de8:	469e      	mov	lr, r3
 8004dea:	4770      	bx	lr
