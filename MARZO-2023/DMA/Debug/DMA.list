
DMA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004d34  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000434  08004ee8  08004ee8  00014ee8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800531c  0800531c  00020318  2**0
                  CONTENTS
  4 .ARM          00000000  0800531c  0800531c  00020318  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800531c  0800531c  00020318  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800531c  0800531c  0001531c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005320  08005320  00015320  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000318  20000000  08005324  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020318  2**0
                  CONTENTS
 10 .bss          000001ac  20000318  20000318  00020318  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  200004c4  200004c4  00020318  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020318  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002d37  00000000  00000000  00020348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000bce  00000000  00000000  0002307f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000238  00000000  00000000  00023c50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000001a0  00000000  00000000  00023e88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001ac05  00000000  00000000  00024028  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003e9f  00000000  00000000  0003ec2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008f85a  00000000  00000000  00042acc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000d2326  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001760  00000000  00000000  000d2378  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000318 	.word	0x20000318
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08004ecc 	.word	0x08004ecc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000031c 	.word	0x2000031c
 80001ec:	08004ecc 	.word	0x08004ecc

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <ButtonInit>:
 * @param [BT]: Puntero a una estructura que representa el pulsador
 * @param [GPIO]: Puerto donde esta conectado el pulsador
 * @param [pin]: numbero de pin donde esta conectado el pulsador
 * @param [callback]: puntero a la funcion callback
 */
void ButtonInit(Button_t *BT, GPIO_TypeDef *GPIO, uint32_t pin, void (*callback)(void)){
 8000bc8:	b480      	push	{r7}
 8000bca:	b085      	sub	sp, #20
 8000bcc:	af00      	add	r7, sp, #0
 8000bce:	60f8      	str	r0, [r7, #12]
 8000bd0:	60b9      	str	r1, [r7, #8]
 8000bd2:	607a      	str	r2, [r7, #4]
 8000bd4:	603b      	str	r3, [r7, #0]
	BT->GPIO = GPIO;
 8000bd6:	68fb      	ldr	r3, [r7, #12]
 8000bd8:	68ba      	ldr	r2, [r7, #8]
 8000bda:	605a      	str	r2, [r3, #4]
	BT->pin = pin;
 8000bdc:	687b      	ldr	r3, [r7, #4]
 8000bde:	b2da      	uxtb	r2, r3
 8000be0:	68fb      	ldr	r3, [r7, #12]
 8000be2:	721a      	strb	r2, [r3, #8]
	BT->callback = callback;
 8000be4:	68fb      	ldr	r3, [r7, #12]
 8000be6:	683a      	ldr	r2, [r7, #0]
 8000be8:	60da      	str	r2, [r3, #12]
	BT->state = PIN_INIT;
 8000bea:	68fb      	ldr	r3, [r7, #12]
 8000bec:	2200      	movs	r2, #0
 8000bee:	701a      	strb	r2, [r3, #0]
	return;
 8000bf0:	bf00      	nop
}
 8000bf2:	3714      	adds	r7, #20
 8000bf4:	46bd      	mov	sp, r7
 8000bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bfa:	4770      	bx	lr

08000bfc <ButtonRead>:
/**
 * @brief funcion para verificar el estado del pulsador
 * @param [BT]: Puntero que representa el pulsador fisico
 * @param [level]: el estado logico a verificar
 */
bool ButtonRead(Button_t *BT, Button_state_t level){
 8000bfc:	b580      	push	{r7, lr}
 8000bfe:	b082      	sub	sp, #8
 8000c00:	af00      	add	r7, sp, #0
 8000c02:	6078      	str	r0, [r7, #4]
 8000c04:	460b      	mov	r3, r1
 8000c06:	70fb      	strb	r3, [r7, #3]
	switch(BT->state){
 8000c08:	687b      	ldr	r3, [r7, #4]
 8000c0a:	781b      	ldrb	r3, [r3, #0]
 8000c0c:	2b03      	cmp	r3, #3
 8000c0e:	f200 808a 	bhi.w	8000d26 <ButtonRead+0x12a>
 8000c12:	a201      	add	r2, pc, #4	; (adr r2, 8000c18 <ButtonRead+0x1c>)
 8000c14:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c18:	08000c29 	.word	0x08000c29
 8000c1c:	08000c93 	.word	0x08000c93
 8000c20:	08000c6b 	.word	0x08000c6b
 8000c24:	08000cbb 	.word	0x08000cbb
	case PIN_INIT:
		BT->GPIO->MODER &=~ (0x3U<< 2 *BT->pin);		//input floating
 8000c28:	687b      	ldr	r3, [r7, #4]
 8000c2a:	685b      	ldr	r3, [r3, #4]
 8000c2c:	6819      	ldr	r1, [r3, #0]
 8000c2e:	687b      	ldr	r3, [r7, #4]
 8000c30:	7a1b      	ldrb	r3, [r3, #8]
 8000c32:	005b      	lsls	r3, r3, #1
 8000c34:	2203      	movs	r2, #3
 8000c36:	fa02 f303 	lsl.w	r3, r2, r3
 8000c3a:	43da      	mvns	r2, r3
 8000c3c:	687b      	ldr	r3, [r7, #4]
 8000c3e:	685b      	ldr	r3, [r3, #4]
 8000c40:	400a      	ands	r2, r1
 8000c42:	601a      	str	r2, [r3, #0]
		if(BT->GPIO->IDR & 0x1<<BT->pin){			//pin en estado alto
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	685b      	ldr	r3, [r3, #4]
 8000c48:	691b      	ldr	r3, [r3, #16]
 8000c4a:	687a      	ldr	r2, [r7, #4]
 8000c4c:	7a12      	ldrb	r2, [r2, #8]
 8000c4e:	4611      	mov	r1, r2
 8000c50:	2201      	movs	r2, #1
 8000c52:	408a      	lsls	r2, r1
 8000c54:	4013      	ands	r3, r2
 8000c56:	2b00      	cmp	r3, #0
 8000c58:	d003      	beq.n	8000c62 <ButtonRead+0x66>
			BT->state = PIN_HIGH;
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	2201      	movs	r2, #1
 8000c5e:	701a      	strb	r2, [r3, #0]
		}else{
			BT->state = PIN_LOW;
		}
		break;
 8000c60:	e061      	b.n	8000d26 <ButtonRead+0x12a>
			BT->state = PIN_LOW;
 8000c62:	687b      	ldr	r3, [r7, #4]
 8000c64:	2202      	movs	r2, #2
 8000c66:	701a      	strb	r2, [r3, #0]
		break;
 8000c68:	e05d      	b.n	8000d26 <ButtonRead+0x12a>
	case PIN_LOW:
		if(BT->GPIO->IDR & 0x1<<BT->pin){		//de bajo a alto
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	685b      	ldr	r3, [r3, #4]
 8000c6e:	691b      	ldr	r3, [r3, #16]
 8000c70:	687a      	ldr	r2, [r7, #4]
 8000c72:	7a12      	ldrb	r2, [r2, #8]
 8000c74:	4611      	mov	r1, r2
 8000c76:	2201      	movs	r2, #1
 8000c78:	408a      	lsls	r2, r1
 8000c7a:	4013      	ands	r3, r2
 8000c7c:	2b00      	cmp	r3, #0
 8000c7e:	d04d      	beq.n	8000d1c <ButtonRead+0x120>
			BT->state = PIN_DEBOUNCE;
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	2203      	movs	r2, #3
 8000c84:	701a      	strb	r2, [r3, #0]
			BT->tickstart = GetTicks();
 8000c86:	f000 f8b5 	bl	8000df4 <GetTicks>
 8000c8a:	4602      	mov	r2, r0
 8000c8c:	687b      	ldr	r3, [r7, #4]
 8000c8e:	611a      	str	r2, [r3, #16]
		}
		break;
 8000c90:	e044      	b.n	8000d1c <ButtonRead+0x120>
	case PIN_HIGH:
		if(!(BT->GPIO->IDR & 0x1<<BT->pin)){	//alto a bajo
 8000c92:	687b      	ldr	r3, [r7, #4]
 8000c94:	685b      	ldr	r3, [r3, #4]
 8000c96:	691b      	ldr	r3, [r3, #16]
 8000c98:	687a      	ldr	r2, [r7, #4]
 8000c9a:	7a12      	ldrb	r2, [r2, #8]
 8000c9c:	4611      	mov	r1, r2
 8000c9e:	2201      	movs	r2, #1
 8000ca0:	408a      	lsls	r2, r1
 8000ca2:	4013      	ands	r3, r2
 8000ca4:	2b00      	cmp	r3, #0
 8000ca6:	d13b      	bne.n	8000d20 <ButtonRead+0x124>
			BT->state = PIN_DEBOUNCE;
 8000ca8:	687b      	ldr	r3, [r7, #4]
 8000caa:	2203      	movs	r2, #3
 8000cac:	701a      	strb	r2, [r3, #0]
			BT->tickstart = GetTicks();
 8000cae:	f000 f8a1 	bl	8000df4 <GetTicks>
 8000cb2:	4602      	mov	r2, r0
 8000cb4:	687b      	ldr	r3, [r7, #4]
 8000cb6:	611a      	str	r2, [r3, #16]
		}
		break;
 8000cb8:	e032      	b.n	8000d20 <ButtonRead+0x124>
	case PIN_DEBOUNCE:
		if((GetTicks() - BT->tickstart) >= 16){
 8000cba:	f000 f89b 	bl	8000df4 <GetTicks>
 8000cbe:	4602      	mov	r2, r0
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	691b      	ldr	r3, [r3, #16]
 8000cc4:	1ad3      	subs	r3, r2, r3
 8000cc6:	2b0f      	cmp	r3, #15
 8000cc8:	d92c      	bls.n	8000d24 <ButtonRead+0x128>
			if(BT->GPIO->IDR & 0x1<<BT->pin){	//HIGH
 8000cca:	687b      	ldr	r3, [r7, #4]
 8000ccc:	685b      	ldr	r3, [r3, #4]
 8000cce:	691b      	ldr	r3, [r3, #16]
 8000cd0:	687a      	ldr	r2, [r7, #4]
 8000cd2:	7a12      	ldrb	r2, [r2, #8]
 8000cd4:	4611      	mov	r1, r2
 8000cd6:	2201      	movs	r2, #1
 8000cd8:	408a      	lsls	r2, r1
 8000cda:	4013      	ands	r3, r2
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d00e      	beq.n	8000cfe <ButtonRead+0x102>
				BT->state = PIN_HIGH;
 8000ce0:	687b      	ldr	r3, [r7, #4]
 8000ce2:	2201      	movs	r2, #1
 8000ce4:	701a      	strb	r2, [r3, #0]
				if(level == PIN_TO_HIGH){
 8000ce6:	78fb      	ldrb	r3, [r7, #3]
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	d11b      	bne.n	8000d24 <ButtonRead+0x128>
					//ejecutar el callback
					if(BT->callback != NULL){
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	68db      	ldr	r3, [r3, #12]
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	d002      	beq.n	8000cfa <ButtonRead+0xfe>
						BT->callback();
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	68db      	ldr	r3, [r3, #12]
 8000cf8:	4798      	blx	r3
					}
					return true;
 8000cfa:	2301      	movs	r3, #1
 8000cfc:	e014      	b.n	8000d28 <ButtonRead+0x12c>
				}

			}else{								//LOW
				BT->state = PIN_LOW;
 8000cfe:	687b      	ldr	r3, [r7, #4]
 8000d00:	2202      	movs	r2, #2
 8000d02:	701a      	strb	r2, [r3, #0]
				if(level == PIN_TO_LOW){
 8000d04:	78fb      	ldrb	r3, [r7, #3]
 8000d06:	2b01      	cmp	r3, #1
 8000d08:	d10c      	bne.n	8000d24 <ButtonRead+0x128>
					//ejecutar el callback
					if(BT->callback != NULL){
 8000d0a:	687b      	ldr	r3, [r7, #4]
 8000d0c:	68db      	ldr	r3, [r3, #12]
 8000d0e:	2b00      	cmp	r3, #0
 8000d10:	d002      	beq.n	8000d18 <ButtonRead+0x11c>
						BT->callback();
 8000d12:	687b      	ldr	r3, [r7, #4]
 8000d14:	68db      	ldr	r3, [r3, #12]
 8000d16:	4798      	blx	r3
					}
					return true;
 8000d18:	2301      	movs	r3, #1
 8000d1a:	e005      	b.n	8000d28 <ButtonRead+0x12c>
		break;
 8000d1c:	bf00      	nop
 8000d1e:	e002      	b.n	8000d26 <ButtonRead+0x12a>
		break;
 8000d20:	bf00      	nop
 8000d22:	e000      	b.n	8000d26 <ButtonRead+0x12a>
				}
			}
		}
		break;
 8000d24:	bf00      	nop
	}
	return false;
 8000d26:	2300      	movs	r3, #0
}
 8000d28:	4618      	mov	r0, r3
 8000d2a:	3708      	adds	r7, #8
 8000d2c:	46bd      	mov	sp, r7
 8000d2e:	bd80      	pop	{r7, pc}

08000d30 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000d30:	b480      	push	{r7}
 8000d32:	b083      	sub	sp, #12
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	4603      	mov	r3, r0
 8000d38:	6039      	str	r1, [r7, #0]
 8000d3a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000d3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	db0a      	blt.n	8000d5a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d44:	683b      	ldr	r3, [r7, #0]
 8000d46:	b2da      	uxtb	r2, r3
 8000d48:	490c      	ldr	r1, [pc, #48]	; (8000d7c <__NVIC_SetPriority+0x4c>)
 8000d4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d4e:	0112      	lsls	r2, r2, #4
 8000d50:	b2d2      	uxtb	r2, r2
 8000d52:	440b      	add	r3, r1
 8000d54:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000d58:	e00a      	b.n	8000d70 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d5a:	683b      	ldr	r3, [r7, #0]
 8000d5c:	b2da      	uxtb	r2, r3
 8000d5e:	4908      	ldr	r1, [pc, #32]	; (8000d80 <__NVIC_SetPriority+0x50>)
 8000d60:	79fb      	ldrb	r3, [r7, #7]
 8000d62:	f003 030f 	and.w	r3, r3, #15
 8000d66:	3b04      	subs	r3, #4
 8000d68:	0112      	lsls	r2, r2, #4
 8000d6a:	b2d2      	uxtb	r2, r2
 8000d6c:	440b      	add	r3, r1
 8000d6e:	761a      	strb	r2, [r3, #24]
}
 8000d70:	bf00      	nop
 8000d72:	370c      	adds	r7, #12
 8000d74:	46bd      	mov	sp, r7
 8000d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d7a:	4770      	bx	lr
 8000d7c:	e000e100 	.word	0xe000e100
 8000d80:	e000ed00 	.word	0xe000ed00

08000d84 <SysTickInit>:

/*Global variables -------------------------------------------------*/
volatile uint32_t uwTick = 0;


void SysTickInit(void){
 8000d84:	b580      	push	{r7, lr}
 8000d86:	b082      	sub	sp, #8
 8000d88:	af00      	add	r7, sp, #0
	uint32_t temp;
	//1. deshabilitar el conteo de la systick
	SysTick->CTRL &=~ SysTick_CTRL_ENABLE_Msk;
 8000d8a:	4b17      	ldr	r3, [pc, #92]	; (8000de8 <SysTickInit+0x64>)
 8000d8c:	681b      	ldr	r3, [r3, #0]
 8000d8e:	4a16      	ldr	r2, [pc, #88]	; (8000de8 <SysTickInit+0x64>)
 8000d90:	f023 0301 	bic.w	r3, r3, #1
 8000d94:	6013      	str	r3, [r2, #0]
	//2. configurar el valor del registro reload
	SystemCoreClockUpdate();
 8000d96:	f000 fb39 	bl	800140c <SystemCoreClockUpdate>
	temp = SystemCoreClock / 1000 - 1;
 8000d9a:	4b14      	ldr	r3, [pc, #80]	; (8000dec <SysTickInit+0x68>)
 8000d9c:	681b      	ldr	r3, [r3, #0]
 8000d9e:	4a14      	ldr	r2, [pc, #80]	; (8000df0 <SysTickInit+0x6c>)
 8000da0:	fba2 2303 	umull	r2, r3, r2, r3
 8000da4:	099b      	lsrs	r3, r3, #6
 8000da6:	3b01      	subs	r3, #1
 8000da8:	607b      	str	r3, [r7, #4]
	SysTick->LOAD = temp;
 8000daa:	4a0f      	ldr	r2, [pc, #60]	; (8000de8 <SysTickInit+0x64>)
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	6053      	str	r3, [r2, #4]
	//3. Configuras el registro de control y habilitas el conteo
	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk; 			//system core clock
 8000db0:	4b0d      	ldr	r3, [pc, #52]	; (8000de8 <SysTickInit+0x64>)
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	4a0c      	ldr	r2, [pc, #48]	; (8000de8 <SysTickInit+0x64>)
 8000db6:	f043 0304 	orr.w	r3, r3, #4
 8000dba:	6013      	str	r3, [r2, #0]

	//configurar la IT
	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;				//habilita la IT
 8000dbc:	4b0a      	ldr	r3, [pc, #40]	; (8000de8 <SysTickInit+0x64>)
 8000dbe:	681b      	ldr	r3, [r3, #0]
 8000dc0:	4a09      	ldr	r2, [pc, #36]	; (8000de8 <SysTickInit+0x64>)
 8000dc2:	f043 0302 	orr.w	r3, r3, #2
 8000dc6:	6013      	str	r3, [r2, #0]
	NVIC_SetPriority(SysTick_IRQn, 15);
 8000dc8:	210f      	movs	r1, #15
 8000dca:	f04f 30ff 	mov.w	r0, #4294967295
 8000dce:	f7ff ffaf 	bl	8000d30 <__NVIC_SetPriority>

	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;				//habilita el conteo
 8000dd2:	4b05      	ldr	r3, [pc, #20]	; (8000de8 <SysTickInit+0x64>)
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	4a04      	ldr	r2, [pc, #16]	; (8000de8 <SysTickInit+0x64>)
 8000dd8:	f043 0301 	orr.w	r3, r3, #1
 8000ddc:	6013      	str	r3, [r2, #0]

	return;
 8000dde:	bf00      	nop
}
 8000de0:	3708      	adds	r7, #8
 8000de2:	46bd      	mov	sp, r7
 8000de4:	bd80      	pop	{r7, pc}
 8000de6:	bf00      	nop
 8000de8:	e000e010 	.word	0xe000e010
 8000dec:	20000144 	.word	0x20000144
 8000df0:	10624dd3 	.word	0x10624dd3

08000df4 <GetTicks>:
}
/**
 * @brief retorna el ticks generado por la SysTick
 * @return uint32_t
 */
uint32_t GetTicks(void){
 8000df4:	b480      	push	{r7}
 8000df6:	af00      	add	r7, sp, #0
	return (uint32_t)uwTick;
 8000df8:	4b03      	ldr	r3, [pc, #12]	; (8000e08 <GetTicks+0x14>)
 8000dfa:	681b      	ldr	r3, [r3, #0]
}
 8000dfc:	4618      	mov	r0, r3
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e04:	4770      	bx	lr
 8000e06:	bf00      	nop
 8000e08:	20000334 	.word	0x20000334

08000e0c <TickInc_Callback>:


void TickInc_Callback(void){
 8000e0c:	b480      	push	{r7}
 8000e0e:	af00      	add	r7, sp, #0
	uwTick += 1;
 8000e10:	4b04      	ldr	r3, [pc, #16]	; (8000e24 <TickInc_Callback+0x18>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	3301      	adds	r3, #1
 8000e16:	4a03      	ldr	r2, [pc, #12]	; (8000e24 <TickInc_Callback+0x18>)
 8000e18:	6013      	str	r3, [r2, #0]
	return;
 8000e1a:	bf00      	nop
}
 8000e1c:	46bd      	mov	sp, r7
 8000e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e22:	4770      	bx	lr
 8000e24:	20000334 	.word	0x20000334

08000e28 <__NVIC_EnableIRQ>:
{
 8000e28:	b480      	push	{r7}
 8000e2a:	b083      	sub	sp, #12
 8000e2c:	af00      	add	r7, sp, #0
 8000e2e:	4603      	mov	r3, r0
 8000e30:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000e32:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e36:	2b00      	cmp	r3, #0
 8000e38:	db0b      	blt.n	8000e52 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000e3a:	79fb      	ldrb	r3, [r7, #7]
 8000e3c:	f003 021f 	and.w	r2, r3, #31
 8000e40:	4907      	ldr	r1, [pc, #28]	; (8000e60 <__NVIC_EnableIRQ+0x38>)
 8000e42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000e46:	095b      	lsrs	r3, r3, #5
 8000e48:	2001      	movs	r0, #1
 8000e4a:	fa00 f202 	lsl.w	r2, r0, r2
 8000e4e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000e52:	bf00      	nop
 8000e54:	370c      	adds	r7, #12
 8000e56:	46bd      	mov	sp, r7
 8000e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e5c:	4770      	bx	lr
 8000e5e:	bf00      	nop
 8000e60:	e000e100 	.word	0xe000e100

08000e64 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000e64:	b480      	push	{r7}
 8000e66:	b083      	sub	sp, #12
 8000e68:	af00      	add	r7, sp, #0
 8000e6a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e6c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e70:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000e74:	f003 0301 	and.w	r3, r3, #1
 8000e78:	2b00      	cmp	r3, #0
 8000e7a:	d013      	beq.n	8000ea4 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000e7c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e80:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000e84:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000e88:	2b00      	cmp	r3, #0
 8000e8a:	d00b      	beq.n	8000ea4 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000e8c:	e000      	b.n	8000e90 <ITM_SendChar+0x2c>
    {
      __NOP();
 8000e8e:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000e90:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	2b00      	cmp	r3, #0
 8000e98:	d0f9      	beq.n	8000e8e <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000e9a:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000e9e:	687a      	ldr	r2, [r7, #4]
 8000ea0:	b2d2      	uxtb	r2, r2
 8000ea2:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000ea4:	687b      	ldr	r3, [r7, #4]
}
 8000ea6:	4618      	mov	r0, r3
 8000ea8:	370c      	adds	r7, #12
 8000eaa:	46bd      	mov	sp, r7
 8000eac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eb0:	4770      	bx	lr
	...

08000eb4 <main>:

void DMA2_Stream4_init(void);
/*main function --------------------------------------------------------------*/

int main(void)
{
 8000eb4:	b5b0      	push	{r4, r5, r7, lr}
 8000eb6:	b082      	sub	sp, #8
 8000eb8:	af02      	add	r7, sp, #8

	printf("EJEMPLO GPIO1\r\n");
 8000eba:	4862      	ldr	r0, [pc, #392]	; (8001044 <main+0x190>)
 8000ebc:	f001 ff54 	bl	8002d68 <puts>
	printf("%s, %s\r\n", __DATE__, __TIME__);
 8000ec0:	4a61      	ldr	r2, [pc, #388]	; (8001048 <main+0x194>)
 8000ec2:	4962      	ldr	r1, [pc, #392]	; (800104c <main+0x198>)
 8000ec4:	4862      	ldr	r0, [pc, #392]	; (8001050 <main+0x19c>)
 8000ec6:	f001 fec9 	bl	8002c5c <iprintf>


	//init filter
	arm_fir_init_f32(&filtro, K, h, FirState, BLOCKSIZE);
 8000eca:	2301      	movs	r3, #1
 8000ecc:	9300      	str	r3, [sp, #0]
 8000ece:	4b61      	ldr	r3, [pc, #388]	; (8001054 <main+0x1a0>)
 8000ed0:	4a61      	ldr	r2, [pc, #388]	; (8001058 <main+0x1a4>)
 8000ed2:	2151      	movs	r1, #81	; 0x51
 8000ed4:	4861      	ldr	r0, [pc, #388]	; (800105c <main+0x1a8>)
 8000ed6:	f001 fa05 	bl	80022e4 <arm_fir_init_f32>
	//PD12 (LED1)
	RCC->AHB1ENR |= GPIOX_CLOCK(LED) | GPIOX_CLOCK(SW);
 8000eda:	4b61      	ldr	r3, [pc, #388]	; (8001060 <main+0x1ac>)
 8000edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ede:	4a60      	ldr	r2, [pc, #384]	; (8001060 <main+0x1ac>)
 8000ee0:	f043 0309 	orr.w	r3, r3, #9
 8000ee4:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOX_MODER(MODE_OUT, LED);
 8000ee6:	4b5f      	ldr	r3, [pc, #380]	; (8001064 <main+0x1b0>)
 8000ee8:	681b      	ldr	r3, [r3, #0]
 8000eea:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000eee:	4a5d      	ldr	r2, [pc, #372]	; (8001064 <main+0x1b0>)
 8000ef0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000ef4:	6013      	str	r3, [r2, #0]
	GPIOX_OTYPER(MODE_OT_PP, LED);
 8000ef6:	4b5b      	ldr	r3, [pc, #364]	; (8001064 <main+0x1b0>)
 8000ef8:	685b      	ldr	r3, [r3, #4]
 8000efa:	4a5a      	ldr	r2, [pc, #360]	; (8001064 <main+0x1b0>)
 8000efc:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f00:	6053      	str	r3, [r2, #4]
	GPIOX_OSPEEDR(MODE_SPD_VHIGH, LED);
 8000f02:	4b58      	ldr	r3, [pc, #352]	; (8001064 <main+0x1b0>)
 8000f04:	689b      	ldr	r3, [r3, #8]
 8000f06:	4a57      	ldr	r2, [pc, #348]	; (8001064 <main+0x1b0>)
 8000f08:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
 8000f0c:	6093      	str	r3, [r2, #8]
	GPIOX_PUPDR(MODE_PU_NONE, LED);
 8000f0e:	4b55      	ldr	r3, [pc, #340]	; (8001064 <main+0x1b0>)
 8000f10:	68db      	ldr	r3, [r3, #12]
 8000f12:	4a54      	ldr	r2, [pc, #336]	; (8001064 <main+0x1b0>)
 8000f14:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000f18:	60d3      	str	r3, [r2, #12]

	//PA0
	GPIOX_MODER(MODE_DIGITAL_INPUT, SW);
 8000f1a:	4b53      	ldr	r3, [pc, #332]	; (8001068 <main+0x1b4>)
 8000f1c:	681b      	ldr	r3, [r3, #0]
 8000f1e:	4a52      	ldr	r2, [pc, #328]	; (8001068 <main+0x1b4>)
 8000f20:	f023 0303 	bic.w	r3, r3, #3
 8000f24:	6013      	str	r3, [r2, #0]
	GPIOX_PUPDR(MODE_PU_NONE, SW);
 8000f26:	4b50      	ldr	r3, [pc, #320]	; (8001068 <main+0x1b4>)
 8000f28:	68db      	ldr	r3, [r3, #12]
 8000f2a:	4a4f      	ldr	r2, [pc, #316]	; (8001068 <main+0x1b4>)
 8000f2c:	f023 0303 	bic.w	r3, r3, #3
 8000f30:	60d3      	str	r3, [r2, #12]
	//systick
	SysTickInit();
 8000f32:	f7ff ff27 	bl	8000d84 <SysTickInit>

	//inicializar
	ButtonInit(&button1, GPIOA, 0, NULL);
 8000f36:	2300      	movs	r3, #0
 8000f38:	2200      	movs	r2, #0
 8000f3a:	494b      	ldr	r1, [pc, #300]	; (8001068 <main+0x1b4>)
 8000f3c:	484b      	ldr	r0, [pc, #300]	; (800106c <main+0x1b8>)
 8000f3e:	f7ff fe43 	bl	8000bc8 <ButtonInit>
	//adc init
	ADC1_Init();
 8000f42:	f000 f8a1 	bl	8001088 <ADC1_Init>
	DMA2_Stream4_init();
 8000f46:	f000 f8eb 	bl	8001120 <DMA2_Stream4_init>
	//configurar los canales
	RCC->AHB1ENR |= GPIOX_CLOCK(IN1);
 8000f4a:	4b45      	ldr	r3, [pc, #276]	; (8001060 <main+0x1ac>)
 8000f4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f4e:	4a44      	ldr	r2, [pc, #272]	; (8001060 <main+0x1ac>)
 8000f50:	f043 0301 	orr.w	r3, r3, #1
 8000f54:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOX_MODER(MODE_ANALOG_INPUT, IN1);
 8000f56:	4b44      	ldr	r3, [pc, #272]	; (8001068 <main+0x1b4>)
 8000f58:	681b      	ldr	r3, [r3, #0]
 8000f5a:	4a43      	ldr	r2, [pc, #268]	; (8001068 <main+0x1b4>)
 8000f5c:	f043 030c 	orr.w	r3, r3, #12
 8000f60:	6013      	str	r3, [r2, #0]
	GPIOX_PUPDR(MODE_PU_NONE, IN1);
 8000f62:	4b41      	ldr	r3, [pc, #260]	; (8001068 <main+0x1b4>)
 8000f64:	68db      	ldr	r3, [r3, #12]
 8000f66:	4a40      	ldr	r2, [pc, #256]	; (8001068 <main+0x1b4>)
 8000f68:	f023 030c 	bic.w	r3, r3, #12
 8000f6c:	60d3      	str	r3, [r2, #12]
	//Sequencer
	ADC1->SQR1 &=~ (ADC_SQR1_L);		//una sola conversion
 8000f6e:	4b40      	ldr	r3, [pc, #256]	; (8001070 <main+0x1bc>)
 8000f70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000f72:	4a3f      	ldr	r2, [pc, #252]	; (8001070 <main+0x1bc>)
 8000f74:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000f78:	62d3      	str	r3, [r2, #44]	; 0x2c
	ADC1->SQR1 |= 3<<ADC_SQR1_L_Pos;
 8000f7a:	4b3d      	ldr	r3, [pc, #244]	; (8001070 <main+0x1bc>)
 8000f7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000f7e:	4a3c      	ldr	r2, [pc, #240]	; (8001070 <main+0x1bc>)
 8000f80:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8000f84:	62d3      	str	r3, [r2, #44]	; 0x2c
	ADC1->SQR3 = 1<<ADC_SQR3_SQ1_Pos | 1<<ADC_SQR3_SQ2_Pos | 1<<ADC_SQR3_SQ2_Pos | 1<<ADC_SQR3_SQ4_Pos;						//IN1
 8000f86:	4b3a      	ldr	r3, [pc, #232]	; (8001070 <main+0x1bc>)
 8000f88:	f248 0221 	movw	r2, #32801	; 0x8021
 8000f8c:	635a      	str	r2, [r3, #52]	; 0x34
	//Habilita el ADC
	ADC1->CR2 |= ADC_CR2_ADON;
 8000f8e:	4b38      	ldr	r3, [pc, #224]	; (8001070 <main+0x1bc>)
 8000f90:	689b      	ldr	r3, [r3, #8]
 8000f92:	4a37      	ldr	r2, [pc, #220]	; (8001070 <main+0x1bc>)
 8000f94:	f043 0301 	orr.w	r3, r3, #1
 8000f98:	6093      	str	r3, [r2, #8]
	/*timer 2 init -------------------------------------*/
	RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000f9a:	4b31      	ldr	r3, [pc, #196]	; (8001060 <main+0x1ac>)
 8000f9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f9e:	4a30      	ldr	r2, [pc, #192]	; (8001060 <main+0x1ac>)
 8000fa0:	f043 0301 	orr.w	r3, r3, #1
 8000fa4:	6413      	str	r3, [r2, #64]	; 0x40
	 * Update envent  = Ftim / (PSC + 1) (ARR + 1)
	 * PSC = 15
	 * ARR = 16E+6 / (16 * 500) - 1
	 * ARR = 2000 - 1 = 1999
	 */
	TIM2->PSC = 15;
 8000fa6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000faa:	220f      	movs	r2, #15
 8000fac:	629a      	str	r2, [r3, #40]	; 0x28
	TIM2->ARR = 1999;
 8000fae:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fb2:	f240 72cf 	movw	r2, #1999	; 0x7cf
 8000fb6:	62da      	str	r2, [r3, #44]	; 0x2c
	//Habilitar la salida TRGO
	TIM2->CR2 &=~ TIM_CR2_MMS;
 8000fb8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fbc:	685b      	ldr	r3, [r3, #4]
 8000fbe:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fc2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000fc6:	6053      	str	r3, [r2, #4]
	TIM2->CR2 |= TIM_CR2_MMS_1;		//habilita el TGRO para el disparo del adc
 8000fc8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fcc:	685b      	ldr	r3, [r3, #4]
 8000fce:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fd2:	f043 0320 	orr.w	r3, r3, #32
 8000fd6:	6053      	str	r3, [r2, #4]
    //Habilitar el conteo
	TIM2->CR1 |= TIM_CR1_CEN;
 8000fd8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000fdc:	681b      	ldr	r3, [r3, #0]
 8000fde:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fe2:	f043 0301 	orr.w	r3, r3, #1
 8000fe6:	6013      	str	r3, [r2, #0]
	/* Loop forever */
	for(;;){
		if(ButtonRead(&button1, PIN_TO_LOW)){
 8000fe8:	2101      	movs	r1, #1
 8000fea:	4820      	ldr	r0, [pc, #128]	; (800106c <main+0x1b8>)
 8000fec:	f7ff fe06 	bl	8000bfc <ButtonRead>
			//todo
		}
		if(adcComplet == true){
 8000ff0:	4b20      	ldr	r3, [pc, #128]	; (8001074 <main+0x1c0>)
 8000ff2:	781b      	ldrb	r3, [r3, #0]
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d0f7      	beq.n	8000fe8 <main+0x134>
			//procesado
			in = adcData[0];
 8000ff8:	4b1f      	ldr	r3, [pc, #124]	; (8001078 <main+0x1c4>)
 8000ffa:	881b      	ldrh	r3, [r3, #0]
 8000ffc:	ee07 3a90 	vmov	s15, r3
 8001000:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001004:	4b1d      	ldr	r3, [pc, #116]	; (800107c <main+0x1c8>)
 8001006:	edc3 7a00 	vstr	s15, [r3]
			arm_fir_f32(&filtro, &in, &out, 1);
 800100a:	2301      	movs	r3, #1
 800100c:	4a1c      	ldr	r2, [pc, #112]	; (8001080 <main+0x1cc>)
 800100e:	491b      	ldr	r1, [pc, #108]	; (800107c <main+0x1c8>)
 8001010:	4812      	ldr	r0, [pc, #72]	; (800105c <main+0x1a8>)
 8001012:	f000 faa4 	bl	800155e <arm_fir_f32>
			printf("in: %.3f out: %.3f\r\n", in, out);
 8001016:	4b19      	ldr	r3, [pc, #100]	; (800107c <main+0x1c8>)
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	4618      	mov	r0, r3
 800101c:	f7ff faa4 	bl	8000568 <__aeabi_f2d>
 8001020:	4604      	mov	r4, r0
 8001022:	460d      	mov	r5, r1
 8001024:	4b16      	ldr	r3, [pc, #88]	; (8001080 <main+0x1cc>)
 8001026:	681b      	ldr	r3, [r3, #0]
 8001028:	4618      	mov	r0, r3
 800102a:	f7ff fa9d 	bl	8000568 <__aeabi_f2d>
 800102e:	4602      	mov	r2, r0
 8001030:	460b      	mov	r3, r1
 8001032:	e9cd 2300 	strd	r2, r3, [sp]
 8001036:	4622      	mov	r2, r4
 8001038:	462b      	mov	r3, r5
 800103a:	4812      	ldr	r0, [pc, #72]	; (8001084 <main+0x1d0>)
 800103c:	f001 fe0e 	bl	8002c5c <iprintf>
		if(ButtonRead(&button1, PIN_TO_LOW)){
 8001040:	e7d2      	b.n	8000fe8 <main+0x134>
 8001042:	bf00      	nop
 8001044:	08004ee8 	.word	0x08004ee8
 8001048:	08004ef8 	.word	0x08004ef8
 800104c:	08004f04 	.word	0x08004f04
 8001050:	08004f10 	.word	0x08004f10
 8001054:	20000358 	.word	0x20000358
 8001058:	20000000 	.word	0x20000000
 800105c:	2000049c 	.word	0x2000049c
 8001060:	40023800 	.word	0x40023800
 8001064:	40020c00 	.word	0x40020c00
 8001068:	40020000 	.word	0x40020000
 800106c:	20000338 	.word	0x20000338
 8001070:	40012000 	.word	0x40012000
 8001074:	2000034c 	.word	0x2000034c
 8001078:	200004a8 	.word	0x200004a8
 800107c:	20000350 	.word	0x20000350
 8001080:	20000354 	.word	0x20000354
 8001084:	08004f1c 	.word	0x08004f1c

08001088 <ADC1_Init>:
	}
}

/*Function definition ---------------------------------------------------------*/

void ADC1_Init(void){
 8001088:	b480      	push	{r7}
 800108a:	af00      	add	r7, sp, #0
	//HABILITAR EL RELOJ
	RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 800108c:	4b21      	ldr	r3, [pc, #132]	; (8001114 <ADC1_Init+0x8c>)
 800108e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001090:	4a20      	ldr	r2, [pc, #128]	; (8001114 <ADC1_Init+0x8c>)
 8001092:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001096:	6453      	str	r3, [r2, #68]	; 0x44
	//Configurar los rigistros comunes entre ADC1, ADC2, ADC3
	ADC123_COMMON->CCR &=~ ADC_CCR_ADCPRE;				//PCLK2 / 2
 8001098:	4b1f      	ldr	r3, [pc, #124]	; (8001118 <ADC1_Init+0x90>)
 800109a:	685b      	ldr	r3, [r3, #4]
 800109c:	4a1e      	ldr	r2, [pc, #120]	; (8001118 <ADC1_Init+0x90>)
 800109e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80010a2:	6053      	str	r3, [r2, #4]
	//Configurar los registros del ADC1
	ADC1->CR1 = 0;
 80010a4:	4b1d      	ldr	r3, [pc, #116]	; (800111c <ADC1_Init+0x94>)
 80010a6:	2200      	movs	r2, #0
 80010a8:	605a      	str	r2, [r3, #4]
	ADC1->CR1 |= ADC_CR1_OVRIE;				//Generar IT cuando se sobrescribe el dato convertido
 80010aa:	4b1c      	ldr	r3, [pc, #112]	; (800111c <ADC1_Init+0x94>)
 80010ac:	685b      	ldr	r3, [r3, #4]
 80010ae:	4a1b      	ldr	r2, [pc, #108]	; (800111c <ADC1_Init+0x94>)
 80010b0:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80010b4:	6053      	str	r3, [r2, #4]
	ADC1->CR1 |= ADC_CR1_EOCIE;				//generar IT cuando se termine de realizar la conversion
 80010b6:	4b19      	ldr	r3, [pc, #100]	; (800111c <ADC1_Init+0x94>)
 80010b8:	685b      	ldr	r3, [r3, #4]
 80010ba:	4a18      	ldr	r2, [pc, #96]	; (800111c <ADC1_Init+0x94>)
 80010bc:	f043 0320 	orr.w	r3, r3, #32
 80010c0:	6053      	str	r3, [r2, #4]

	ADC1->CR2 |= ADC_CR2_EXTEN_0;			//disparo con flanco acendente
 80010c2:	4b16      	ldr	r3, [pc, #88]	; (800111c <ADC1_Init+0x94>)
 80010c4:	689b      	ldr	r3, [r3, #8]
 80010c6:	4a15      	ldr	r2, [pc, #84]	; (800111c <ADC1_Init+0x94>)
 80010c8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80010cc:	6093      	str	r3, [r2, #8]
	ADC1->CR2 |= ADC_CR2_EXTSEL_1 | ADC_CR2_EXTSEL_2; //disparo por timer2 out event
 80010ce:	4b13      	ldr	r3, [pc, #76]	; (800111c <ADC1_Init+0x94>)
 80010d0:	689b      	ldr	r3, [r3, #8]
 80010d2:	4a12      	ldr	r2, [pc, #72]	; (800111c <ADC1_Init+0x94>)
 80010d4:	f043 63c0 	orr.w	r3, r3, #100663296	; 0x6000000
 80010d8:	6093      	str	r3, [r2, #8]

	//habilitar la peticiones de transferencia DMA
	ADC1->CR2 |= ADC_CR2_EOCS;
 80010da:	4b10      	ldr	r3, [pc, #64]	; (800111c <ADC1_Init+0x94>)
 80010dc:	689b      	ldr	r3, [r3, #8]
 80010de:	4a0f      	ldr	r2, [pc, #60]	; (800111c <ADC1_Init+0x94>)
 80010e0:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80010e4:	6093      	str	r3, [r2, #8]
	ADC1->CR2 |= ADC_CR2_DDS;
 80010e6:	4b0d      	ldr	r3, [pc, #52]	; (800111c <ADC1_Init+0x94>)
 80010e8:	689b      	ldr	r3, [r3, #8]
 80010ea:	4a0c      	ldr	r2, [pc, #48]	; (800111c <ADC1_Init+0x94>)
 80010ec:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80010f0:	6093      	str	r3, [r2, #8]
	ADC1->CR2 |= ADC_CR2_DMA;
 80010f2:	4b0a      	ldr	r3, [pc, #40]	; (800111c <ADC1_Init+0x94>)
 80010f4:	689b      	ldr	r3, [r3, #8]
 80010f6:	4a09      	ldr	r2, [pc, #36]	; (800111c <ADC1_Init+0x94>)
 80010f8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80010fc:	6093      	str	r3, [r2, #8]
	//habilitar el modo scan
	ADC1->CR1 |= ADC_CR1_SCAN;
 80010fe:	4b07      	ldr	r3, [pc, #28]	; (800111c <ADC1_Init+0x94>)
 8001100:	685b      	ldr	r3, [r3, #4]
 8001102:	4a06      	ldr	r2, [pc, #24]	; (800111c <ADC1_Init+0x94>)
 8001104:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001108:	6053      	str	r3, [r2, #4]
	return;
 800110a:	bf00      	nop
}
 800110c:	46bd      	mov	sp, r7
 800110e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001112:	4770      	bx	lr
 8001114:	40023800 	.word	0x40023800
 8001118:	40012300 	.word	0x40012300
 800111c:	40012000 	.word	0x40012000

08001120 <DMA2_Stream4_init>:
void DMA2_Stream4_init(void){
 8001120:	b580      	push	{r7, lr}
 8001122:	af00      	add	r7, sp, #0

	/*Habilitar el reloj	 */
	RCC->AHB1ENR |= RCC_AHB1ENR_DMA2EN;
 8001124:	4b2e      	ldr	r3, [pc, #184]	; (80011e0 <DMA2_Stream4_init+0xc0>)
 8001126:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001128:	4a2d      	ldr	r2, [pc, #180]	; (80011e0 <DMA2_Stream4_init+0xc0>)
 800112a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800112e:	6313      	str	r3, [r2, #48]	; 0x30
	/*Deshabilitar el stream*/
	DMA2_Stream4->CR &=~ DMA_SxCR_EN;
 8001130:	4b2c      	ldr	r3, [pc, #176]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	4a2b      	ldr	r2, [pc, #172]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001136:	f023 0301 	bic.w	r3, r3, #1
 800113a:	6013      	str	r3, [r2, #0]
	while(DMA2_Stream4->CR & DMA_SxCR_EN);
 800113c:	bf00      	nop
 800113e:	4b29      	ldr	r3, [pc, #164]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001140:	681b      	ldr	r3, [r3, #0]
 8001142:	f003 0301 	and.w	r3, r3, #1
 8001146:	2b00      	cmp	r3, #0
 8001148:	d1f9      	bne.n	800113e <DMA2_Stream4_init+0x1e>
	DMA2->HIFCR |= 0xF<<2 | 1U;
 800114a:	4b27      	ldr	r3, [pc, #156]	; (80011e8 <DMA2_Stream4_init+0xc8>)
 800114c:	68db      	ldr	r3, [r3, #12]
 800114e:	4a26      	ldr	r2, [pc, #152]	; (80011e8 <DMA2_Stream4_init+0xc8>)
 8001150:	f043 033d 	orr.w	r3, r3, #61	; 0x3d
 8001154:	60d3      	str	r3, [r2, #12]
	/*Configurar el valor del registro PAR*/
	DMA2_Stream4->PAR = (uint32_t) &ADC1->DR;
 8001156:	4b23      	ldr	r3, [pc, #140]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001158:	4a24      	ldr	r2, [pc, #144]	; (80011ec <DMA2_Stream4_init+0xcc>)
 800115a:	609a      	str	r2, [r3, #8]
	/*Configurar el valor del registro MAR*/
	DMA2_Stream4->M0AR = (uint32_t)adcData;
 800115c:	4b21      	ldr	r3, [pc, #132]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 800115e:	4a24      	ldr	r2, [pc, #144]	; (80011f0 <DMA2_Stream4_init+0xd0>)
 8001160:	60da      	str	r2, [r3, #12]
	/*Numero de datos a stransmitir*/
	DMA2_Stream4->NDTR = 4;
 8001162:	4b20      	ldr	r3, [pc, #128]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001164:	2204      	movs	r2, #4
 8001166:	605a      	str	r2, [r3, #4]
	/*Seleccionar el request*/
	DMA2_Stream4->CR &=~ DMA_SxCR_CHSEL;	//CHANNEL 0
 8001168:	4b1e      	ldr	r3, [pc, #120]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 800116a:	681b      	ldr	r3, [r3, #0]
 800116c:	4a1d      	ldr	r2, [pc, #116]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 800116e:	f023 6360 	bic.w	r3, r3, #234881024	; 0xe000000
 8001172:	6013      	str	r3, [r2, #0]
	/*configurar la prioridad*/
	DMA2_Stream4->CR |= DMA_SxCR_PL;		//prioridad alta
 8001174:	4b1b      	ldr	r3, [pc, #108]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001176:	681b      	ldr	r3, [r3, #0]
 8001178:	4a1a      	ldr	r2, [pc, #104]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 800117a:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 800117e:	6013      	str	r3, [r2, #0]
	/*Configurar la FIFO*/
	DMA2_Stream4->FCR &=~ DMA_SxFCR_DMDIS;	//direct mode
 8001180:	4b18      	ldr	r3, [pc, #96]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001182:	695b      	ldr	r3, [r3, #20]
 8001184:	4a17      	ldr	r2, [pc, #92]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001186:	f023 0304 	bic.w	r3, r3, #4
 800118a:	6153      	str	r3, [r2, #20]
	/*Direccion de transmicion, el tamaño de datos a transmitir y el incremento*/
	DMA2_Stream4->CR &=~ (DMA_SxCR_MSIZE | DMA_SxCR_PSIZE);
 800118c:	4b15      	ldr	r3, [pc, #84]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 800118e:	681b      	ldr	r3, [r3, #0]
 8001190:	4a14      	ldr	r2, [pc, #80]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 8001192:	f423 43f0 	bic.w	r3, r3, #30720	; 0x7800
 8001196:	6013      	str	r3, [r2, #0]
	DMA2_Stream4->CR |= DMA_SxCR_MSIZE_0 | DMA_SxCR_PSIZE_0;	//16bit
 8001198:	4b12      	ldr	r3, [pc, #72]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 800119a:	681b      	ldr	r3, [r3, #0]
 800119c:	4a11      	ldr	r2, [pc, #68]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 800119e:	f443 5320 	orr.w	r3, r3, #10240	; 0x2800
 80011a2:	6013      	str	r3, [r2, #0]
	DMA2_Stream4->CR |= DMA_SxCR_MINC;							//memory address increment
 80011a4:	4b0f      	ldr	r3, [pc, #60]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011a6:	681b      	ldr	r3, [r3, #0]
 80011a8:	4a0e      	ldr	r2, [pc, #56]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011aa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80011ae:	6013      	str	r3, [r2, #0]
	DMA2_Stream4->CR |= DMA_SxCR_CIRC;		//modo circular
 80011b0:	4b0c      	ldr	r3, [pc, #48]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	4a0b      	ldr	r2, [pc, #44]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011b6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80011ba:	6013      	str	r3, [r2, #0]
	/*Configurar las interrupciones */
	DMA2_Stream4->CR |= DMA_SxCR_TCIE;
 80011bc:	4b09      	ldr	r3, [pc, #36]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	4a08      	ldr	r2, [pc, #32]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011c2:	f043 0310 	orr.w	r3, r3, #16
 80011c6:	6013      	str	r3, [r2, #0]
	NVIC_EnableIRQ(DMA2_Stream4_IRQn);
 80011c8:	203c      	movs	r0, #60	; 0x3c
 80011ca:	f7ff fe2d 	bl	8000e28 <__NVIC_EnableIRQ>
	/*Habilitamos el dma*/
	DMA2_Stream4->CR |= DMA_SxCR_EN;
 80011ce:	4b05      	ldr	r3, [pc, #20]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011d0:	681b      	ldr	r3, [r3, #0]
 80011d2:	4a04      	ldr	r2, [pc, #16]	; (80011e4 <DMA2_Stream4_init+0xc4>)
 80011d4:	f043 0301 	orr.w	r3, r3, #1
 80011d8:	6013      	str	r3, [r2, #0]
	return;
 80011da:	bf00      	nop
}
 80011dc:	bd80      	pop	{r7, pc}
 80011de:	bf00      	nop
 80011e0:	40023800 	.word	0x40023800
 80011e4:	40026470 	.word	0x40026470
 80011e8:	40026400 	.word	0x40026400
 80011ec:	4001204c 	.word	0x4001204c
 80011f0:	200004a8 	.word	0x200004a8

080011f4 <ADC1_CpltConvCallback>:
/**
 * @adc callback
 */
void ADC1_CpltConvCallback(void){
 80011f4:	b480      	push	{r7}
 80011f6:	af00      	add	r7, sp, #0
	//todo
	//printf("data->%u\r\n", data);
	adcComplet = true;
 80011f8:	4b03      	ldr	r3, [pc, #12]	; (8001208 <ADC1_CpltConvCallback+0x14>)
 80011fa:	2201      	movs	r2, #1
 80011fc:	701a      	strb	r2, [r3, #0]

}
 80011fe:	bf00      	nop
 8001200:	46bd      	mov	sp, r7
 8001202:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001206:	4770      	bx	lr
 8001208:	2000034c 	.word	0x2000034c

0800120c <__io_putchar>:
int __io_putchar(int ch){
 800120c:	b580      	push	{r7, lr}
 800120e:	b082      	sub	sp, #8
 8001210:	af00      	add	r7, sp, #0
 8001212:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 8001214:	687b      	ldr	r3, [r7, #4]
 8001216:	4618      	mov	r0, r3
 8001218:	f7ff fe24 	bl	8000e64 <ITM_SendChar>
	return ch;
 800121c:	687b      	ldr	r3, [r7, #4]
}
 800121e:	4618      	mov	r0, r3
 8001220:	3708      	adds	r7, #8
 8001222:	46bd      	mov	sp, r7
 8001224:	bd80      	pop	{r7, pc}

08001226 <SysTick_Handler>:

extern void ADC1_CpltConvCallback(void);
/**
 * @brief ISR -> SYSTICK
 */
void SysTick_Handler(void){
 8001226:	b580      	push	{r7, lr}
 8001228:	af00      	add	r7, sp, #0
	TickInc_Callback();
 800122a:	f7ff fdef 	bl	8000e0c <TickInc_Callback>
}
 800122e:	bf00      	nop
 8001230:	bd80      	pop	{r7, pc}
	...

08001234 <DMA2_Stream4_IRQHandler>:

void DMA2_Stream4_IRQHandler (void){
 8001234:	b580      	push	{r7, lr}
 8001236:	af00      	add	r7, sp, #0
	if(DMA2->HISR & DMA_HISR_TCIF4){
 8001238:	4b07      	ldr	r3, [pc, #28]	; (8001258 <DMA2_Stream4_IRQHandler+0x24>)
 800123a:	685b      	ldr	r3, [r3, #4]
 800123c:	f003 0320 	and.w	r3, r3, #32
 8001240:	2b00      	cmp	r3, #0
 8001242:	d007      	beq.n	8001254 <DMA2_Stream4_IRQHandler+0x20>
		DMA2->HIFCR |= DMA_HIFCR_CTCIF4;	//Clear
 8001244:	4b04      	ldr	r3, [pc, #16]	; (8001258 <DMA2_Stream4_IRQHandler+0x24>)
 8001246:	68db      	ldr	r3, [r3, #12]
 8001248:	4a03      	ldr	r2, [pc, #12]	; (8001258 <DMA2_Stream4_IRQHandler+0x24>)
 800124a:	f043 0320 	orr.w	r3, r3, #32
 800124e:	60d3      	str	r3, [r2, #12]
		ADC1_CpltConvCallback();
 8001250:	f7ff ffd0 	bl	80011f4 <ADC1_CpltConvCallback>
	}

}
 8001254:	bf00      	nop
 8001256:	bd80      	pop	{r7, pc}
 8001258:	40026400 	.word	0x40026400

0800125c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800125c:	b480      	push	{r7}
 800125e:	af00      	add	r7, sp, #0
  return 1;
 8001260:	2301      	movs	r3, #1
}
 8001262:	4618      	mov	r0, r3
 8001264:	46bd      	mov	sp, r7
 8001266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800126a:	4770      	bx	lr

0800126c <_kill>:

int _kill(int pid, int sig)
{
 800126c:	b580      	push	{r7, lr}
 800126e:	b082      	sub	sp, #8
 8001270:	af00      	add	r7, sp, #0
 8001272:	6078      	str	r0, [r7, #4]
 8001274:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001276:	f001 f855 	bl	8002324 <__errno>
 800127a:	4603      	mov	r3, r0
 800127c:	2216      	movs	r2, #22
 800127e:	601a      	str	r2, [r3, #0]
  return -1;
 8001280:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001284:	4618      	mov	r0, r3
 8001286:	3708      	adds	r7, #8
 8001288:	46bd      	mov	sp, r7
 800128a:	bd80      	pop	{r7, pc}

0800128c <_exit>:

void _exit (int status)
{
 800128c:	b580      	push	{r7, lr}
 800128e:	b082      	sub	sp, #8
 8001290:	af00      	add	r7, sp, #0
 8001292:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001294:	f04f 31ff 	mov.w	r1, #4294967295
 8001298:	6878      	ldr	r0, [r7, #4]
 800129a:	f7ff ffe7 	bl	800126c <_kill>
  while (1) {}    /* Make sure we hang here */
 800129e:	e7fe      	b.n	800129e <_exit+0x12>

080012a0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80012a0:	b580      	push	{r7, lr}
 80012a2:	b086      	sub	sp, #24
 80012a4:	af00      	add	r7, sp, #0
 80012a6:	60f8      	str	r0, [r7, #12]
 80012a8:	60b9      	str	r1, [r7, #8]
 80012aa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012ac:	2300      	movs	r3, #0
 80012ae:	617b      	str	r3, [r7, #20]
 80012b0:	e00a      	b.n	80012c8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80012b2:	f3af 8000 	nop.w
 80012b6:	4601      	mov	r1, r0
 80012b8:	68bb      	ldr	r3, [r7, #8]
 80012ba:	1c5a      	adds	r2, r3, #1
 80012bc:	60ba      	str	r2, [r7, #8]
 80012be:	b2ca      	uxtb	r2, r1
 80012c0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012c2:	697b      	ldr	r3, [r7, #20]
 80012c4:	3301      	adds	r3, #1
 80012c6:	617b      	str	r3, [r7, #20]
 80012c8:	697a      	ldr	r2, [r7, #20]
 80012ca:	687b      	ldr	r3, [r7, #4]
 80012cc:	429a      	cmp	r2, r3
 80012ce:	dbf0      	blt.n	80012b2 <_read+0x12>
  }

  return len;
 80012d0:	687b      	ldr	r3, [r7, #4]
}
 80012d2:	4618      	mov	r0, r3
 80012d4:	3718      	adds	r7, #24
 80012d6:	46bd      	mov	sp, r7
 80012d8:	bd80      	pop	{r7, pc}

080012da <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80012da:	b580      	push	{r7, lr}
 80012dc:	b086      	sub	sp, #24
 80012de:	af00      	add	r7, sp, #0
 80012e0:	60f8      	str	r0, [r7, #12]
 80012e2:	60b9      	str	r1, [r7, #8]
 80012e4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012e6:	2300      	movs	r3, #0
 80012e8:	617b      	str	r3, [r7, #20]
 80012ea:	e009      	b.n	8001300 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80012ec:	68bb      	ldr	r3, [r7, #8]
 80012ee:	1c5a      	adds	r2, r3, #1
 80012f0:	60ba      	str	r2, [r7, #8]
 80012f2:	781b      	ldrb	r3, [r3, #0]
 80012f4:	4618      	mov	r0, r3
 80012f6:	f7ff ff89 	bl	800120c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012fa:	697b      	ldr	r3, [r7, #20]
 80012fc:	3301      	adds	r3, #1
 80012fe:	617b      	str	r3, [r7, #20]
 8001300:	697a      	ldr	r2, [r7, #20]
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	429a      	cmp	r2, r3
 8001306:	dbf1      	blt.n	80012ec <_write+0x12>
  }
  return len;
 8001308:	687b      	ldr	r3, [r7, #4]
}
 800130a:	4618      	mov	r0, r3
 800130c:	3718      	adds	r7, #24
 800130e:	46bd      	mov	sp, r7
 8001310:	bd80      	pop	{r7, pc}

08001312 <_close>:

int _close(int file)
{
 8001312:	b480      	push	{r7}
 8001314:	b083      	sub	sp, #12
 8001316:	af00      	add	r7, sp, #0
 8001318:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800131a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800131e:	4618      	mov	r0, r3
 8001320:	370c      	adds	r7, #12
 8001322:	46bd      	mov	sp, r7
 8001324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001328:	4770      	bx	lr

0800132a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800132a:	b480      	push	{r7}
 800132c:	b083      	sub	sp, #12
 800132e:	af00      	add	r7, sp, #0
 8001330:	6078      	str	r0, [r7, #4]
 8001332:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001334:	683b      	ldr	r3, [r7, #0]
 8001336:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800133a:	605a      	str	r2, [r3, #4]
  return 0;
 800133c:	2300      	movs	r3, #0
}
 800133e:	4618      	mov	r0, r3
 8001340:	370c      	adds	r7, #12
 8001342:	46bd      	mov	sp, r7
 8001344:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001348:	4770      	bx	lr

0800134a <_isatty>:

int _isatty(int file)
{
 800134a:	b480      	push	{r7}
 800134c:	b083      	sub	sp, #12
 800134e:	af00      	add	r7, sp, #0
 8001350:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001352:	2301      	movs	r3, #1
}
 8001354:	4618      	mov	r0, r3
 8001356:	370c      	adds	r7, #12
 8001358:	46bd      	mov	sp, r7
 800135a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800135e:	4770      	bx	lr

08001360 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001360:	b480      	push	{r7}
 8001362:	b085      	sub	sp, #20
 8001364:	af00      	add	r7, sp, #0
 8001366:	60f8      	str	r0, [r7, #12]
 8001368:	60b9      	str	r1, [r7, #8]
 800136a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800136c:	2300      	movs	r3, #0
}
 800136e:	4618      	mov	r0, r3
 8001370:	3714      	adds	r7, #20
 8001372:	46bd      	mov	sp, r7
 8001374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001378:	4770      	bx	lr
	...

0800137c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800137c:	b580      	push	{r7, lr}
 800137e:	b086      	sub	sp, #24
 8001380:	af00      	add	r7, sp, #0
 8001382:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001384:	4a14      	ldr	r2, [pc, #80]	; (80013d8 <_sbrk+0x5c>)
 8001386:	4b15      	ldr	r3, [pc, #84]	; (80013dc <_sbrk+0x60>)
 8001388:	1ad3      	subs	r3, r2, r3
 800138a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800138c:	697b      	ldr	r3, [r7, #20]
 800138e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001390:	4b13      	ldr	r3, [pc, #76]	; (80013e0 <_sbrk+0x64>)
 8001392:	681b      	ldr	r3, [r3, #0]
 8001394:	2b00      	cmp	r3, #0
 8001396:	d102      	bne.n	800139e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001398:	4b11      	ldr	r3, [pc, #68]	; (80013e0 <_sbrk+0x64>)
 800139a:	4a12      	ldr	r2, [pc, #72]	; (80013e4 <_sbrk+0x68>)
 800139c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800139e:	4b10      	ldr	r3, [pc, #64]	; (80013e0 <_sbrk+0x64>)
 80013a0:	681a      	ldr	r2, [r3, #0]
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	4413      	add	r3, r2
 80013a6:	693a      	ldr	r2, [r7, #16]
 80013a8:	429a      	cmp	r2, r3
 80013aa:	d207      	bcs.n	80013bc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80013ac:	f000 ffba 	bl	8002324 <__errno>
 80013b0:	4603      	mov	r3, r0
 80013b2:	220c      	movs	r2, #12
 80013b4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80013b6:	f04f 33ff 	mov.w	r3, #4294967295
 80013ba:	e009      	b.n	80013d0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80013bc:	4b08      	ldr	r3, [pc, #32]	; (80013e0 <_sbrk+0x64>)
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80013c2:	4b07      	ldr	r3, [pc, #28]	; (80013e0 <_sbrk+0x64>)
 80013c4:	681a      	ldr	r2, [r3, #0]
 80013c6:	687b      	ldr	r3, [r7, #4]
 80013c8:	4413      	add	r3, r2
 80013ca:	4a05      	ldr	r2, [pc, #20]	; (80013e0 <_sbrk+0x64>)
 80013cc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80013ce:	68fb      	ldr	r3, [r7, #12]
}
 80013d0:	4618      	mov	r0, r3
 80013d2:	3718      	adds	r7, #24
 80013d4:	46bd      	mov	sp, r7
 80013d6:	bd80      	pop	{r7, pc}
 80013d8:	20020000 	.word	0x20020000
 80013dc:	00000400 	.word	0x00000400
 80013e0:	200004b0 	.word	0x200004b0
 80013e4:	200004c8 	.word	0x200004c8

080013e8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80013e8:	b480      	push	{r7}
 80013ea:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80013ec:	4b06      	ldr	r3, [pc, #24]	; (8001408 <SystemInit+0x20>)
 80013ee:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80013f2:	4a05      	ldr	r2, [pc, #20]	; (8001408 <SystemInit+0x20>)
 80013f4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80013f8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80013fc:	bf00      	nop
 80013fe:	46bd      	mov	sp, r7
 8001400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001404:	4770      	bx	lr
 8001406:	bf00      	nop
 8001408:	e000ed00 	.word	0xe000ed00

0800140c <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 800140c:	b480      	push	{r7}
 800140e:	b087      	sub	sp, #28
 8001410:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8001412:	2300      	movs	r3, #0
 8001414:	613b      	str	r3, [r7, #16]
 8001416:	2300      	movs	r3, #0
 8001418:	617b      	str	r3, [r7, #20]
 800141a:	2302      	movs	r3, #2
 800141c:	60fb      	str	r3, [r7, #12]
 800141e:	2300      	movs	r3, #0
 8001420:	60bb      	str	r3, [r7, #8]
 8001422:	2302      	movs	r3, #2
 8001424:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001426:	4b34      	ldr	r3, [pc, #208]	; (80014f8 <SystemCoreClockUpdate+0xec>)
 8001428:	689b      	ldr	r3, [r3, #8]
 800142a:	f003 030c 	and.w	r3, r3, #12
 800142e:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8001430:	693b      	ldr	r3, [r7, #16]
 8001432:	2b08      	cmp	r3, #8
 8001434:	d011      	beq.n	800145a <SystemCoreClockUpdate+0x4e>
 8001436:	693b      	ldr	r3, [r7, #16]
 8001438:	2b08      	cmp	r3, #8
 800143a:	d844      	bhi.n	80014c6 <SystemCoreClockUpdate+0xba>
 800143c:	693b      	ldr	r3, [r7, #16]
 800143e:	2b00      	cmp	r3, #0
 8001440:	d003      	beq.n	800144a <SystemCoreClockUpdate+0x3e>
 8001442:	693b      	ldr	r3, [r7, #16]
 8001444:	2b04      	cmp	r3, #4
 8001446:	d004      	beq.n	8001452 <SystemCoreClockUpdate+0x46>
 8001448:	e03d      	b.n	80014c6 <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 800144a:	4b2c      	ldr	r3, [pc, #176]	; (80014fc <SystemCoreClockUpdate+0xf0>)
 800144c:	4a2c      	ldr	r2, [pc, #176]	; (8001500 <SystemCoreClockUpdate+0xf4>)
 800144e:	601a      	str	r2, [r3, #0]
      break;
 8001450:	e03d      	b.n	80014ce <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8001452:	4b2a      	ldr	r3, [pc, #168]	; (80014fc <SystemCoreClockUpdate+0xf0>)
 8001454:	4a2b      	ldr	r2, [pc, #172]	; (8001504 <SystemCoreClockUpdate+0xf8>)
 8001456:	601a      	str	r2, [r3, #0]
      break;
 8001458:	e039      	b.n	80014ce <SystemCoreClockUpdate+0xc2>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 800145a:	4b27      	ldr	r3, [pc, #156]	; (80014f8 <SystemCoreClockUpdate+0xec>)
 800145c:	685b      	ldr	r3, [r3, #4]
 800145e:	0d9b      	lsrs	r3, r3, #22
 8001460:	f003 0301 	and.w	r3, r3, #1
 8001464:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8001466:	4b24      	ldr	r3, [pc, #144]	; (80014f8 <SystemCoreClockUpdate+0xec>)
 8001468:	685b      	ldr	r3, [r3, #4]
 800146a:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800146e:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8001470:	68bb      	ldr	r3, [r7, #8]
 8001472:	2b00      	cmp	r3, #0
 8001474:	d00c      	beq.n	8001490 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001476:	4a23      	ldr	r2, [pc, #140]	; (8001504 <SystemCoreClockUpdate+0xf8>)
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	fbb2 f3f3 	udiv	r3, r2, r3
 800147e:	4a1e      	ldr	r2, [pc, #120]	; (80014f8 <SystemCoreClockUpdate+0xec>)
 8001480:	6852      	ldr	r2, [r2, #4]
 8001482:	0992      	lsrs	r2, r2, #6
 8001484:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001488:	fb02 f303 	mul.w	r3, r2, r3
 800148c:	617b      	str	r3, [r7, #20]
 800148e:	e00b      	b.n	80014a8 <SystemCoreClockUpdate+0x9c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001490:	4a1b      	ldr	r2, [pc, #108]	; (8001500 <SystemCoreClockUpdate+0xf4>)
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	fbb2 f3f3 	udiv	r3, r2, r3
 8001498:	4a17      	ldr	r2, [pc, #92]	; (80014f8 <SystemCoreClockUpdate+0xec>)
 800149a:	6852      	ldr	r2, [r2, #4]
 800149c:	0992      	lsrs	r2, r2, #6
 800149e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80014a2:	fb02 f303 	mul.w	r3, r2, r3
 80014a6:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 80014a8:	4b13      	ldr	r3, [pc, #76]	; (80014f8 <SystemCoreClockUpdate+0xec>)
 80014aa:	685b      	ldr	r3, [r3, #4]
 80014ac:	0c1b      	lsrs	r3, r3, #16
 80014ae:	f003 0303 	and.w	r3, r3, #3
 80014b2:	3301      	adds	r3, #1
 80014b4:	005b      	lsls	r3, r3, #1
 80014b6:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 80014b8:	697a      	ldr	r2, [r7, #20]
 80014ba:	68fb      	ldr	r3, [r7, #12]
 80014bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80014c0:	4a0e      	ldr	r2, [pc, #56]	; (80014fc <SystemCoreClockUpdate+0xf0>)
 80014c2:	6013      	str	r3, [r2, #0]
      break;
 80014c4:	e003      	b.n	80014ce <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 80014c6:	4b0d      	ldr	r3, [pc, #52]	; (80014fc <SystemCoreClockUpdate+0xf0>)
 80014c8:	4a0d      	ldr	r2, [pc, #52]	; (8001500 <SystemCoreClockUpdate+0xf4>)
 80014ca:	601a      	str	r2, [r3, #0]
      break;
 80014cc:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80014ce:	4b0a      	ldr	r3, [pc, #40]	; (80014f8 <SystemCoreClockUpdate+0xec>)
 80014d0:	689b      	ldr	r3, [r3, #8]
 80014d2:	091b      	lsrs	r3, r3, #4
 80014d4:	f003 030f 	and.w	r3, r3, #15
 80014d8:	4a0b      	ldr	r2, [pc, #44]	; (8001508 <SystemCoreClockUpdate+0xfc>)
 80014da:	5cd3      	ldrb	r3, [r2, r3]
 80014dc:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80014de:	4b07      	ldr	r3, [pc, #28]	; (80014fc <SystemCoreClockUpdate+0xf0>)
 80014e0:	681a      	ldr	r2, [r3, #0]
 80014e2:	693b      	ldr	r3, [r7, #16]
 80014e4:	fa22 f303 	lsr.w	r3, r2, r3
 80014e8:	4a04      	ldr	r2, [pc, #16]	; (80014fc <SystemCoreClockUpdate+0xf0>)
 80014ea:	6013      	str	r3, [r2, #0]
}
 80014ec:	bf00      	nop
 80014ee:	371c      	adds	r7, #28
 80014f0:	46bd      	mov	sp, r7
 80014f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014f6:	4770      	bx	lr
 80014f8:	40023800 	.word	0x40023800
 80014fc:	20000144 	.word	0x20000144
 8001500:	00f42400 	.word	0x00f42400
 8001504:	017d7840 	.word	0x017d7840
 8001508:	08004f34 	.word	0x08004f34

0800150c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800150c:	480d      	ldr	r0, [pc, #52]	; (8001544 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800150e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001510:	f7ff ff6a 	bl	80013e8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001514:	480c      	ldr	r0, [pc, #48]	; (8001548 <LoopForever+0x6>)
  ldr r1, =_edata
 8001516:	490d      	ldr	r1, [pc, #52]	; (800154c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001518:	4a0d      	ldr	r2, [pc, #52]	; (8001550 <LoopForever+0xe>)
  movs r3, #0
 800151a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800151c:	e002      	b.n	8001524 <LoopCopyDataInit>

0800151e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800151e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001520:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001522:	3304      	adds	r3, #4

08001524 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001524:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001526:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001528:	d3f9      	bcc.n	800151e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800152a:	4a0a      	ldr	r2, [pc, #40]	; (8001554 <LoopForever+0x12>)
  ldr r4, =_ebss
 800152c:	4c0a      	ldr	r4, [pc, #40]	; (8001558 <LoopForever+0x16>)
  movs r3, #0
 800152e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001530:	e001      	b.n	8001536 <LoopFillZerobss>

08001532 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001532:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001534:	3204      	adds	r2, #4

08001536 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001536:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001538:	d3fb      	bcc.n	8001532 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800153a:	f000 fef9 	bl	8002330 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800153e:	f7ff fcb9 	bl	8000eb4 <main>

08001542 <LoopForever>:

LoopForever:
  b LoopForever
 8001542:	e7fe      	b.n	8001542 <LoopForever>
  ldr   r0, =_estack
 8001544:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001548:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800154c:	20000318 	.word	0x20000318
  ldr r2, =_sidata
 8001550:	08005324 	.word	0x08005324
  ldr r2, =_sbss
 8001554:	20000318 	.word	0x20000318
  ldr r4, =_ebss
 8001558:	200004c4 	.word	0x200004c4

0800155c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800155c:	e7fe      	b.n	800155c <ADC_IRQHandler>

0800155e <arm_fir_f32>:
void arm_fir_f32(
const arm_fir_instance_f32 * S,
float32_t * pSrc,
float32_t * pDst,
uint32_t blockSize)
{
 800155e:	b480      	push	{r7}
 8001560:	b0a7      	sub	sp, #156	; 0x9c
 8001562:	af00      	add	r7, sp, #0
 8001564:	60f8      	str	r0, [r7, #12]
 8001566:	60b9      	str	r1, [r7, #8]
 8001568:	607a      	str	r2, [r7, #4]
 800156a:	603b      	str	r3, [r7, #0]
   float32_t *pState = S->pState;                 /* State pointer */
 800156c:	68fb      	ldr	r3, [r7, #12]
 800156e:	685b      	ldr	r3, [r3, #4]
 8001570:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
   float32_t *pCoeffs = S->pCoeffs;               /* Coefficient pointer */
 8001574:	68fb      	ldr	r3, [r7, #12]
 8001576:	689b      	ldr	r3, [r3, #8]
 8001578:	63fb      	str	r3, [r7, #60]	; 0x3c
   float32_t *pStateCurnt;                        /* Points to the current sample of the state */
   float32_t *px, *pb;                            /* Temporary pointers for state and coefficient buffers */
   float32_t acc0, acc1, acc2, acc3, acc4, acc5, acc6, acc7;     /* Accumulators */
   float32_t x0, x1, x2, x3, x4, x5, x6, x7, c0;  /* Temporary variables to hold state and coefficient values */
   uint32_t numTaps = S->numTaps;                 /* Number of filter coefficients in the filter */
 800157a:	68fb      	ldr	r3, [r7, #12]
 800157c:	881b      	ldrh	r3, [r3, #0]
 800157e:	63bb      	str	r3, [r7, #56]	; 0x38
   uint32_t i, tapCnt, blkCnt;                    /* Loop counters */
   float32_t p0,p1,p2,p3,p4,p5,p6,p7;             /* Temporary product values */

   /* S->pState points to state array which contains previous frame (numTaps - 1) samples */
   /* pStateCurnt points to the location where the new input data should be written */
   pStateCurnt = &(S->pState[(numTaps - 1U)]);
 8001580:	68fb      	ldr	r3, [r7, #12]
 8001582:	685a      	ldr	r2, [r3, #4]
 8001584:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001586:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800158a:	3b01      	subs	r3, #1
 800158c:	009b      	lsls	r3, r3, #2
 800158e:	4413      	add	r3, r2
 8001590:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
    *    acc0 =  b[numTaps-1] * x[n-numTaps-1] + b[numTaps-2] * x[n-numTaps-2] + b[numTaps-3] * x[n-numTaps-3] +...+ b[0] * x[0]
    *    acc1 =  b[numTaps-1] * x[n-numTaps] +   b[numTaps-2] * x[n-numTaps-1] + b[numTaps-3] * x[n-numTaps-2] +...+ b[0] * x[1]
    *    acc2 =  b[numTaps-1] * x[n-numTaps+1] + b[numTaps-2] * x[n-numTaps] +   b[numTaps-3] * x[n-numTaps-1] +...+ b[0] * x[2]
    *    acc3 =  b[numTaps-1] * x[n-numTaps+2] + b[numTaps-2] * x[n-numTaps+1] + b[numTaps-3] * x[n-numTaps]   +...+ b[0] * x[3]
    */
   blkCnt = blockSize >> 3;
 8001594:	683b      	ldr	r3, [r7, #0]
 8001596:	08db      	lsrs	r3, r3, #3
 8001598:	643b      	str	r3, [r7, #64]	; 0x40

   /* First part of the processing with loop unrolling.  Compute 8 outputs at a time.
   ** a second loop below computes the remaining 1 to 7 samples. */
   while (blkCnt > 0U)
 800159a:	f000 bdf8 	b.w	800218e <arm_fir_f32+0xc30>
   {
      /* Copy four new input samples into the state buffer */
      *pStateCurnt++ = *pSrc++;
 800159e:	68ba      	ldr	r2, [r7, #8]
 80015a0:	1d13      	adds	r3, r2, #4
 80015a2:	60bb      	str	r3, [r7, #8]
 80015a4:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80015a8:	1d19      	adds	r1, r3, #4
 80015aa:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80015ae:	6812      	ldr	r2, [r2, #0]
 80015b0:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 80015b2:	68ba      	ldr	r2, [r7, #8]
 80015b4:	1d13      	adds	r3, r2, #4
 80015b6:	60bb      	str	r3, [r7, #8]
 80015b8:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80015bc:	1d19      	adds	r1, r3, #4
 80015be:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80015c2:	6812      	ldr	r2, [r2, #0]
 80015c4:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 80015c6:	68ba      	ldr	r2, [r7, #8]
 80015c8:	1d13      	adds	r3, r2, #4
 80015ca:	60bb      	str	r3, [r7, #8]
 80015cc:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80015d0:	1d19      	adds	r1, r3, #4
 80015d2:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80015d6:	6812      	ldr	r2, [r2, #0]
 80015d8:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 80015da:	68ba      	ldr	r2, [r7, #8]
 80015dc:	1d13      	adds	r3, r2, #4
 80015de:	60bb      	str	r3, [r7, #8]
 80015e0:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80015e4:	1d19      	adds	r1, r3, #4
 80015e6:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80015ea:	6812      	ldr	r2, [r2, #0]
 80015ec:	601a      	str	r2, [r3, #0]

      /* Set all accumulators to zero */
      acc0 = 0.0f;
 80015ee:	f04f 0300 	mov.w	r3, #0
 80015f2:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
      acc1 = 0.0f;
 80015f6:	f04f 0300 	mov.w	r3, #0
 80015fa:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
      acc2 = 0.0f;
 80015fe:	f04f 0300 	mov.w	r3, #0
 8001602:	67fb      	str	r3, [r7, #124]	; 0x7c
      acc3 = 0.0f;
 8001604:	f04f 0300 	mov.w	r3, #0
 8001608:	67bb      	str	r3, [r7, #120]	; 0x78
      acc4 = 0.0f;
 800160a:	f04f 0300 	mov.w	r3, #0
 800160e:	677b      	str	r3, [r7, #116]	; 0x74
      acc5 = 0.0f;
 8001610:	f04f 0300 	mov.w	r3, #0
 8001614:	673b      	str	r3, [r7, #112]	; 0x70
      acc6 = 0.0f;
 8001616:	f04f 0300 	mov.w	r3, #0
 800161a:	66fb      	str	r3, [r7, #108]	; 0x6c
      acc7 = 0.0f;
 800161c:	f04f 0300 	mov.w	r3, #0
 8001620:	66bb      	str	r3, [r7, #104]	; 0x68

      /* Initialize state pointer */
      px = pState;
 8001622:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8001626:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c

      /* Initialize coeff pointer */
      pb = (pCoeffs);
 800162a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800162c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88

      /* This is separated from the others to avoid
       * a call to __aeabi_memmove which would be slower
       */
      *pStateCurnt++ = *pSrc++;
 8001630:	68ba      	ldr	r2, [r7, #8]
 8001632:	1d13      	adds	r3, r2, #4
 8001634:	60bb      	str	r3, [r7, #8]
 8001636:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800163a:	1d19      	adds	r1, r3, #4
 800163c:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8001640:	6812      	ldr	r2, [r2, #0]
 8001642:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 8001644:	68ba      	ldr	r2, [r7, #8]
 8001646:	1d13      	adds	r3, r2, #4
 8001648:	60bb      	str	r3, [r7, #8]
 800164a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 800164e:	1d19      	adds	r1, r3, #4
 8001650:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8001654:	6812      	ldr	r2, [r2, #0]
 8001656:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 8001658:	68ba      	ldr	r2, [r7, #8]
 800165a:	1d13      	adds	r3, r2, #4
 800165c:	60bb      	str	r3, [r7, #8]
 800165e:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001662:	1d19      	adds	r1, r3, #4
 8001664:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8001668:	6812      	ldr	r2, [r2, #0]
 800166a:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pSrc++;
 800166c:	68ba      	ldr	r2, [r7, #8]
 800166e:	1d13      	adds	r3, r2, #4
 8001670:	60bb      	str	r3, [r7, #8]
 8001672:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8001676:	1d19      	adds	r1, r3, #4
 8001678:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 800167c:	6812      	ldr	r2, [r2, #0]
 800167e:	601a      	str	r2, [r3, #0]

      /* Read the first seven samples from the state buffer:  x[n-numTaps], x[n-numTaps-1], x[n-numTaps-2] */
      x0 = *px++;
 8001680:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001684:	1d1a      	adds	r2, r3, #4
 8001686:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	667b      	str	r3, [r7, #100]	; 0x64
      x1 = *px++;
 800168e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001692:	1d1a      	adds	r2, r3, #4
 8001694:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	663b      	str	r3, [r7, #96]	; 0x60
      x2 = *px++;
 800169c:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80016a0:	1d1a      	adds	r2, r3, #4
 80016a2:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80016a6:	681b      	ldr	r3, [r3, #0]
 80016a8:	65fb      	str	r3, [r7, #92]	; 0x5c
      x3 = *px++;
 80016aa:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80016ae:	1d1a      	adds	r2, r3, #4
 80016b0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80016b4:	681b      	ldr	r3, [r3, #0]
 80016b6:	65bb      	str	r3, [r7, #88]	; 0x58
      x4 = *px++;
 80016b8:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80016bc:	1d1a      	adds	r2, r3, #4
 80016be:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80016c2:	681b      	ldr	r3, [r3, #0]
 80016c4:	657b      	str	r3, [r7, #84]	; 0x54
      x5 = *px++;
 80016c6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80016ca:	1d1a      	adds	r2, r3, #4
 80016cc:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80016d0:	681b      	ldr	r3, [r3, #0]
 80016d2:	653b      	str	r3, [r7, #80]	; 0x50
      x6 = *px++;
 80016d4:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80016d8:	1d1a      	adds	r2, r3, #4
 80016da:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	64fb      	str	r3, [r7, #76]	; 0x4c

      /* Loop unrolling.  Process 8 taps at a time. */
      tapCnt = numTaps >> 3U;
 80016e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80016e4:	08db      	lsrs	r3, r3, #3
 80016e6:	647b      	str	r3, [r7, #68]	; 0x44

      /* Loop over the number of taps.  Unroll by a factor of 8.
       ** Repeat until we've computed numTaps-8 coefficients. */
      while (tapCnt > 0U)
 80016e8:	f000 bc73 	b.w	8001fd2 <arm_fir_f32+0xa74>
      {
         /* Read the b[numTaps-1] coefficient */
         c0 = *(pb++);
 80016ec:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80016f0:	1d1a      	adds	r2, r3, #4
 80016f2:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80016f6:	681b      	ldr	r3, [r3, #0]
 80016f8:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-3] sample */
         x7 = *(px++);
 80016fa:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80016fe:	1d1a      	adds	r2, r3, #4
 8001700:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	633b      	str	r3, [r7, #48]	; 0x30

         /* acc0 +=  b[numTaps-1] * x[n-numTaps] */
         p0 = x0 * c0;
 8001708:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 800170c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001710:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001714:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c

         /* acc1 +=  b[numTaps-1] * x[n-numTaps-1] */
         p1 = x1 * c0;
 8001718:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 800171c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001720:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001724:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28

         /* acc2 +=  b[numTaps-1] * x[n-numTaps-2] */
         p2 = x2 * c0;
 8001728:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 800172c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001730:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001734:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24

         /* acc3 +=  b[numTaps-1] * x[n-numTaps-3] */
         p3 = x3 * c0;
 8001738:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 800173c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001740:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001744:	edc7 7a08 	vstr	s15, [r7, #32]

         /* acc4 +=  b[numTaps-1] * x[n-numTaps-4] */
         p4 = x4 * c0;
 8001748:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 800174c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001750:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001754:	edc7 7a07 	vstr	s15, [r7, #28]

         /* acc1 +=  b[numTaps-1] * x[n-numTaps-5] */
         p5 = x5 * c0;
 8001758:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 800175c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001760:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001764:	edc7 7a06 	vstr	s15, [r7, #24]

         /* acc2 +=  b[numTaps-1] * x[n-numTaps-6] */
         p6 = x6 * c0;
 8001768:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 800176c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001770:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001774:	edc7 7a05 	vstr	s15, [r7, #20]

         /* acc3 +=  b[numTaps-1] * x[n-numTaps-7] */
         p7 = x7 * c0;
 8001778:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800177c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001780:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001784:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-2] coefficient */
         c0 = *(pb++);
 8001788:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800178c:	1d1a      	adds	r2, r3, #4
 800178e:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-4] sample */
         x0 = *(px++);
 8001796:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800179a:	1d1a      	adds	r2, r3, #4
 800179c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80017a0:	681b      	ldr	r3, [r3, #0]
 80017a2:	667b      	str	r3, [r7, #100]	; 0x64

         acc0 += p0;
 80017a4:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80017a8:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80017ac:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017b0:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 80017b4:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 80017b8:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80017bc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017c0:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 80017c4:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 80017c8:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80017cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017d0:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 80017d4:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 80017d8:	edd7 7a08 	vldr	s15, [r7, #32]
 80017dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017e0:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 80017e4:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 80017e8:	edd7 7a07 	vldr	s15, [r7, #28]
 80017ec:	ee77 7a27 	vadd.f32	s15, s14, s15
 80017f0:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 80017f4:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 80017f8:	edd7 7a06 	vldr	s15, [r7, #24]
 80017fc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001800:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001804:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001808:	edd7 7a05 	vldr	s15, [r7, #20]
 800180c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001810:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001814:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001818:	edd7 7a04 	vldr	s15, [r7, #16]
 800181c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001820:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68


         /* Perform the multiply-accumulate */
         p0 = x1 * c0;
 8001824:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001828:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800182c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001830:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x2 * c0;
 8001834:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001838:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800183c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001840:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x3 * c0;
 8001844:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001848:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800184c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001850:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x4 * c0;
 8001854:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001858:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800185c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001860:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x5 * c0;
 8001864:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001868:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800186c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001870:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x6 * c0;
 8001874:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001878:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800187c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001880:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x7 * c0;
 8001884:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001888:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800188c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001890:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x0 * c0;
 8001894:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001898:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800189c:	ee67 7a27 	vmul.f32	s15, s14, s15
 80018a0:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-3] coefficient */
         c0 = *(pb++);
 80018a4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80018a8:	1d1a      	adds	r2, r3, #4
 80018aa:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80018ae:	681b      	ldr	r3, [r3, #0]
 80018b0:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-5] sample */
         x1 = *(px++);
 80018b2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80018b6:	1d1a      	adds	r2, r3, #4
 80018b8:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80018bc:	681b      	ldr	r3, [r3, #0]
 80018be:	663b      	str	r3, [r7, #96]	; 0x60

         acc0 += p0;
 80018c0:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80018c4:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80018c8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018cc:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 80018d0:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 80018d4:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80018d8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018dc:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 80018e0:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 80018e4:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80018e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018ec:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 80018f0:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 80018f4:	edd7 7a08 	vldr	s15, [r7, #32]
 80018f8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80018fc:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001900:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001904:	edd7 7a07 	vldr	s15, [r7, #28]
 8001908:	ee77 7a27 	vadd.f32	s15, s14, s15
 800190c:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001910:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001914:	edd7 7a06 	vldr	s15, [r7, #24]
 8001918:	ee77 7a27 	vadd.f32	s15, s14, s15
 800191c:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001920:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001924:	edd7 7a05 	vldr	s15, [r7, #20]
 8001928:	ee77 7a27 	vadd.f32	s15, s14, s15
 800192c:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001930:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001934:	edd7 7a04 	vldr	s15, [r7, #16]
 8001938:	ee77 7a27 	vadd.f32	s15, s14, s15
 800193c:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x2 * c0;
 8001940:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001944:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001948:	ee67 7a27 	vmul.f32	s15, s14, s15
 800194c:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x3 * c0;
 8001950:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001954:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001958:	ee67 7a27 	vmul.f32	s15, s14, s15
 800195c:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x4 * c0;
 8001960:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001964:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001968:	ee67 7a27 	vmul.f32	s15, s14, s15
 800196c:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x5 * c0;
 8001970:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001974:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001978:	ee67 7a27 	vmul.f32	s15, s14, s15
 800197c:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x6 * c0;
 8001980:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001984:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001988:	ee67 7a27 	vmul.f32	s15, s14, s15
 800198c:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x7 * c0;
 8001990:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001994:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001998:	ee67 7a27 	vmul.f32	s15, s14, s15
 800199c:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x0 * c0;
 80019a0:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 80019a4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80019a8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80019ac:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x1 * c0;
 80019b0:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 80019b4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 80019b8:	ee67 7a27 	vmul.f32	s15, s14, s15
 80019bc:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 80019c0:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80019c4:	1d1a      	adds	r2, r3, #4
 80019c6:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x2 = *(px++);
 80019ce:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80019d2:	1d1a      	adds	r2, r3, #4
 80019d4:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80019d8:	681b      	ldr	r3, [r3, #0]
 80019da:	65fb      	str	r3, [r7, #92]	; 0x5c

         acc0 += p0;
 80019dc:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80019e0:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80019e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019e8:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 80019ec:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 80019f0:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80019f4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019f8:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 80019fc:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001a00:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001a04:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a08:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001a0c:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001a10:	edd7 7a08 	vldr	s15, [r7, #32]
 8001a14:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a18:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001a1c:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001a20:	edd7 7a07 	vldr	s15, [r7, #28]
 8001a24:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a28:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001a2c:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001a30:	edd7 7a06 	vldr	s15, [r7, #24]
 8001a34:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a38:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001a3c:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001a40:	edd7 7a05 	vldr	s15, [r7, #20]
 8001a44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a48:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001a4c:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001a50:	edd7 7a04 	vldr	s15, [r7, #16]
 8001a54:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a58:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x3 * c0;
 8001a5c:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001a60:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001a64:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001a68:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x4 * c0;
 8001a6c:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001a70:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001a74:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001a78:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x5 * c0;
 8001a7c:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001a80:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001a84:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001a88:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x6 * c0;
 8001a8c:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001a90:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001a94:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001a98:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x7 * c0;
 8001a9c:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001aa0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001aa4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001aa8:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x0 * c0;
 8001aac:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001ab0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ab4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ab8:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x1 * c0;
 8001abc:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001ac0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ac4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ac8:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x2 * c0;
 8001acc:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001ad0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ad4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ad8:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 8001adc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001ae0:	1d1a      	adds	r2, r3, #4
 8001ae2:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001ae6:	681b      	ldr	r3, [r3, #0]
 8001ae8:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x3 = *(px++);
 8001aea:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001aee:	1d1a      	adds	r2, r3, #4
 8001af0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001af4:	681b      	ldr	r3, [r3, #0]
 8001af6:	65bb      	str	r3, [r7, #88]	; 0x58

         acc0 += p0;
 8001af8:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001afc:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001b00:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b04:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001b08:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001b0c:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001b10:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b14:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001b18:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001b1c:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001b20:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b24:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001b28:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001b2c:	edd7 7a08 	vldr	s15, [r7, #32]
 8001b30:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b34:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001b38:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001b3c:	edd7 7a07 	vldr	s15, [r7, #28]
 8001b40:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b44:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001b48:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001b4c:	edd7 7a06 	vldr	s15, [r7, #24]
 8001b50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b54:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001b58:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001b5c:	edd7 7a05 	vldr	s15, [r7, #20]
 8001b60:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b64:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001b68:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001b6c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001b70:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b74:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x4 * c0;
 8001b78:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001b7c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001b80:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001b84:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x5 * c0;
 8001b88:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001b8c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001b90:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001b94:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x6 * c0;
 8001b98:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001b9c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ba0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ba4:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x7 * c0;
 8001ba8:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001bac:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bb0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bb4:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x0 * c0;
 8001bb8:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001bbc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bc0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bc4:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x1 * c0;
 8001bc8:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001bcc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bd0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bd4:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x2 * c0;
 8001bd8:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001bdc:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001be0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001be4:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x3 * c0;
 8001be8:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001bec:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001bf0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001bf4:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 8001bf8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001bfc:	1d1a      	adds	r2, r3, #4
 8001bfe:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001c02:	681b      	ldr	r3, [r3, #0]
 8001c04:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x4 = *(px++);
 8001c06:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001c0a:	1d1a      	adds	r2, r3, #4
 8001c0c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	657b      	str	r3, [r7, #84]	; 0x54

         acc0 += p0;
 8001c14:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001c18:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001c1c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c20:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001c24:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001c28:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001c2c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c30:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001c34:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001c38:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001c3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c40:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001c44:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001c48:	edd7 7a08 	vldr	s15, [r7, #32]
 8001c4c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c50:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001c54:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001c58:	edd7 7a07 	vldr	s15, [r7, #28]
 8001c5c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c60:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001c64:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001c68:	edd7 7a06 	vldr	s15, [r7, #24]
 8001c6c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c70:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001c74:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001c78:	edd7 7a05 	vldr	s15, [r7, #20]
 8001c7c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c80:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001c84:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001c88:	edd7 7a04 	vldr	s15, [r7, #16]
 8001c8c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c90:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x5 * c0;
 8001c94:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001c98:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001c9c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ca0:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x6 * c0;
 8001ca4:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001ca8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cac:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cb0:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x7 * c0;
 8001cb4:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001cb8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cbc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cc0:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x0 * c0;
 8001cc4:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001cc8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ccc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cd0:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x1 * c0;
 8001cd4:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001cd8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cdc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ce0:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x2 * c0;
 8001ce4:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001ce8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cec:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001cf0:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x3 * c0;
 8001cf4:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001cf8:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001cfc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d00:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x4 * c0;
 8001d04:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001d08:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001d0c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001d10:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 8001d14:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001d18:	1d1a      	adds	r2, r3, #4
 8001d1a:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x5 = *(px++);
 8001d22:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001d26:	1d1a      	adds	r2, r3, #4
 8001d28:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001d2c:	681b      	ldr	r3, [r3, #0]
 8001d2e:	653b      	str	r3, [r7, #80]	; 0x50

         acc0 += p0;
 8001d30:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001d34:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001d38:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d3c:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001d40:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001d44:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001d48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d4c:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001d50:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001d54:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001d58:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d5c:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001d60:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001d64:	edd7 7a08 	vldr	s15, [r7, #32]
 8001d68:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d6c:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001d70:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001d74:	edd7 7a07 	vldr	s15, [r7, #28]
 8001d78:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d7c:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001d80:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001d84:	edd7 7a06 	vldr	s15, [r7, #24]
 8001d88:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d8c:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001d90:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001d94:	edd7 7a05 	vldr	s15, [r7, #20]
 8001d98:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d9c:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001da0:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001da4:	edd7 7a04 	vldr	s15, [r7, #16]
 8001da8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001dac:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x6 * c0;
 8001db0:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001db4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001db8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001dbc:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x7 * c0;
 8001dc0:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001dc4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001dc8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001dcc:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x0 * c0;
 8001dd0:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001dd4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001dd8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ddc:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x1 * c0;
 8001de0:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001de4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001de8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001dec:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x2 * c0;
 8001df0:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001df4:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001df8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001dfc:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x3 * c0;
 8001e00:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001e04:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e08:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e0c:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x4 * c0;
 8001e10:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001e14:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e18:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e1c:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x5 * c0;
 8001e20:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001e24:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001e28:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e2c:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Read the b[numTaps-4] coefficient */
         c0 = *(pb++);
 8001e30:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001e34:	1d1a      	adds	r2, r3, #4
 8001e36:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	637b      	str	r3, [r7, #52]	; 0x34

         /* Read x[n-numTaps-6] sample */
         x6 = *(px++);
 8001e3e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001e42:	1d1a      	adds	r2, r3, #4
 8001e44:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001e48:	681b      	ldr	r3, [r3, #0]
 8001e4a:	64fb      	str	r3, [r7, #76]	; 0x4c

         acc0 += p0;
 8001e4c:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001e50:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001e54:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e58:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001e5c:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001e60:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001e64:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e68:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001e6c:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001e70:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001e74:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e78:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001e7c:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001e80:	edd7 7a08 	vldr	s15, [r7, #32]
 8001e84:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e88:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001e8c:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001e90:	edd7 7a07 	vldr	s15, [r7, #28]
 8001e94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e98:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001e9c:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001ea0:	edd7 7a06 	vldr	s15, [r7, #24]
 8001ea4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ea8:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001eac:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001eb0:	edd7 7a05 	vldr	s15, [r7, #20]
 8001eb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001eb8:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001ebc:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001ec0:	edd7 7a04 	vldr	s15, [r7, #16]
 8001ec4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ec8:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Perform the multiply-accumulates */
         p0 = x7 * c0;
 8001ecc:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8001ed0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ed4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ed8:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x0 * c0;
 8001edc:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8001ee0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ee4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ee8:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x1 * c0;
 8001eec:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8001ef0:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001ef4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001ef8:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x2 * c0;
 8001efc:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8001f00:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f04:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f08:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x3 * c0;
 8001f0c:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8001f10:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f14:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f18:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x4 * c0;
 8001f1c:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8001f20:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f24:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f28:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x5 * c0;
 8001f2c:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8001f30:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f34:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f38:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x6 * c0;
 8001f3c:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8001f40:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8001f44:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001f48:	edc7 7a04 	vstr	s15, [r7, #16]

         tapCnt--;
 8001f4c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001f4e:	3b01      	subs	r3, #1
 8001f50:	647b      	str	r3, [r7, #68]	; 0x44

         acc0 += p0;
 8001f52:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 8001f56:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8001f5a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f5e:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 8001f62:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 8001f66:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 8001f6a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f6e:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 8001f72:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 8001f76:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001f7a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f7e:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 8001f82:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 8001f86:	edd7 7a08 	vldr	s15, [r7, #32]
 8001f8a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f8e:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 8001f92:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 8001f96:	edd7 7a07 	vldr	s15, [r7, #28]
 8001f9a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f9e:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 8001fa2:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 8001fa6:	edd7 7a06 	vldr	s15, [r7, #24]
 8001faa:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fae:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 8001fb2:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8001fb6:	edd7 7a05 	vldr	s15, [r7, #20]
 8001fba:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fbe:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 8001fc2:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8001fc6:	edd7 7a04 	vldr	s15, [r7, #16]
 8001fca:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fce:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68
      while (tapCnt > 0U)
 8001fd2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001fd4:	2b00      	cmp	r3, #0
 8001fd6:	f47f ab89 	bne.w	80016ec <arm_fir_f32+0x18e>
      }

      /* If the filter length is not a multiple of 8, compute the remaining filter taps */
      tapCnt = numTaps % 0x8U;
 8001fda:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001fdc:	f003 0307 	and.w	r3, r3, #7
 8001fe0:	647b      	str	r3, [r7, #68]	; 0x44

      while (tapCnt > 0U)
 8001fe2:	e09e      	b.n	8002122 <arm_fir_f32+0xbc4>
      {
         /* Read coefficients */
         c0 = *(pb++);
 8001fe4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8001fe8:	1d1a      	adds	r2, r3, #4
 8001fea:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	637b      	str	r3, [r7, #52]	; 0x34

         /* Fetch 1 state variable */
         x7 = *(px++);
 8001ff2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8001ff6:	1d1a      	adds	r2, r3, #4
 8001ff8:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	633b      	str	r3, [r7, #48]	; 0x30

         /* Perform the multiply-accumulates */
         p0 = x0 * c0;
 8002000:	ed97 7a19 	vldr	s14, [r7, #100]	; 0x64
 8002004:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002008:	ee67 7a27 	vmul.f32	s15, s14, s15
 800200c:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
         p1 = x1 * c0;
 8002010:	ed97 7a18 	vldr	s14, [r7, #96]	; 0x60
 8002014:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002018:	ee67 7a27 	vmul.f32	s15, s14, s15
 800201c:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
         p2 = x2 * c0;
 8002020:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8002024:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002028:	ee67 7a27 	vmul.f32	s15, s14, s15
 800202c:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
         p3 = x3 * c0;
 8002030:	ed97 7a16 	vldr	s14, [r7, #88]	; 0x58
 8002034:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002038:	ee67 7a27 	vmul.f32	s15, s14, s15
 800203c:	edc7 7a08 	vstr	s15, [r7, #32]
         p4 = x4 * c0;
 8002040:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8002044:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002048:	ee67 7a27 	vmul.f32	s15, s14, s15
 800204c:	edc7 7a07 	vstr	s15, [r7, #28]
         p5 = x5 * c0;
 8002050:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 8002054:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002058:	ee67 7a27 	vmul.f32	s15, s14, s15
 800205c:	edc7 7a06 	vstr	s15, [r7, #24]
         p6 = x6 * c0;
 8002060:	ed97 7a13 	vldr	s14, [r7, #76]	; 0x4c
 8002064:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002068:	ee67 7a27 	vmul.f32	s15, s14, s15
 800206c:	edc7 7a05 	vstr	s15, [r7, #20]
         p7 = x7 * c0;
 8002070:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8002074:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 8002078:	ee67 7a27 	vmul.f32	s15, s14, s15
 800207c:	edc7 7a04 	vstr	s15, [r7, #16]

         /* Reuse the present sample states for next sample */
         x0 = x1;
 8002080:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002082:	667b      	str	r3, [r7, #100]	; 0x64
         x1 = x2;
 8002084:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8002086:	663b      	str	r3, [r7, #96]	; 0x60
         x2 = x3;
 8002088:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800208a:	65fb      	str	r3, [r7, #92]	; 0x5c
         x3 = x4;
 800208c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800208e:	65bb      	str	r3, [r7, #88]	; 0x58
         x4 = x5;
 8002090:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002092:	657b      	str	r3, [r7, #84]	; 0x54
         x5 = x6;
 8002094:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002096:	653b      	str	r3, [r7, #80]	; 0x50
         x6 = x7;
 8002098:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800209a:	64fb      	str	r3, [r7, #76]	; 0x4c

         acc0 += p0;
 800209c:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80020a0:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80020a4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020a8:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         acc1 += p1;
 80020ac:	ed97 7a20 	vldr	s14, [r7, #128]	; 0x80
 80020b0:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80020b4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020b8:	edc7 7a20 	vstr	s15, [r7, #128]	; 0x80
         acc2 += p2;
 80020bc:	ed97 7a1f 	vldr	s14, [r7, #124]	; 0x7c
 80020c0:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80020c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020c8:	edc7 7a1f 	vstr	s15, [r7, #124]	; 0x7c
         acc3 += p3;
 80020cc:	ed97 7a1e 	vldr	s14, [r7, #120]	; 0x78
 80020d0:	edd7 7a08 	vldr	s15, [r7, #32]
 80020d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020d8:	edc7 7a1e 	vstr	s15, [r7, #120]	; 0x78
         acc4 += p4;
 80020dc:	ed97 7a1d 	vldr	s14, [r7, #116]	; 0x74
 80020e0:	edd7 7a07 	vldr	s15, [r7, #28]
 80020e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020e8:	edc7 7a1d 	vstr	s15, [r7, #116]	; 0x74
         acc5 += p5;
 80020ec:	ed97 7a1c 	vldr	s14, [r7, #112]	; 0x70
 80020f0:	edd7 7a06 	vldr	s15, [r7, #24]
 80020f4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020f8:	edc7 7a1c 	vstr	s15, [r7, #112]	; 0x70
         acc6 += p6;
 80020fc:	ed97 7a1b 	vldr	s14, [r7, #108]	; 0x6c
 8002100:	edd7 7a05 	vldr	s15, [r7, #20]
 8002104:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002108:	edc7 7a1b 	vstr	s15, [r7, #108]	; 0x6c
         acc7 += p7;
 800210c:	ed97 7a1a 	vldr	s14, [r7, #104]	; 0x68
 8002110:	edd7 7a04 	vldr	s15, [r7, #16]
 8002114:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002118:	edc7 7a1a 	vstr	s15, [r7, #104]	; 0x68

         /* Decrement the loop counter */
         tapCnt--;
 800211c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800211e:	3b01      	subs	r3, #1
 8002120:	647b      	str	r3, [r7, #68]	; 0x44
      while (tapCnt > 0U)
 8002122:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002124:	2b00      	cmp	r3, #0
 8002126:	f47f af5d 	bne.w	8001fe4 <arm_fir_f32+0xa86>
      }

      /* Advance the state pointer by 8 to process the next group of 8 samples */
      pState = pState + 8;
 800212a:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 800212e:	3320      	adds	r3, #32
 8002130:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94

      /* The results in the 8 accumulators, store in the destination buffer. */
      *pDst++ = acc0;
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	1d1a      	adds	r2, r3, #4
 8002138:	607a      	str	r2, [r7, #4]
 800213a:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 800213e:	601a      	str	r2, [r3, #0]
      *pDst++ = acc1;
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	1d1a      	adds	r2, r3, #4
 8002144:	607a      	str	r2, [r7, #4]
 8002146:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800214a:	601a      	str	r2, [r3, #0]
      *pDst++ = acc2;
 800214c:	687b      	ldr	r3, [r7, #4]
 800214e:	1d1a      	adds	r2, r3, #4
 8002150:	607a      	str	r2, [r7, #4]
 8002152:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 8002154:	601a      	str	r2, [r3, #0]
      *pDst++ = acc3;
 8002156:	687b      	ldr	r3, [r7, #4]
 8002158:	1d1a      	adds	r2, r3, #4
 800215a:	607a      	str	r2, [r7, #4]
 800215c:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800215e:	601a      	str	r2, [r3, #0]
      *pDst++ = acc4;
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	1d1a      	adds	r2, r3, #4
 8002164:	607a      	str	r2, [r7, #4]
 8002166:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 8002168:	601a      	str	r2, [r3, #0]
      *pDst++ = acc5;
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	1d1a      	adds	r2, r3, #4
 800216e:	607a      	str	r2, [r7, #4]
 8002170:	6f3a      	ldr	r2, [r7, #112]	; 0x70
 8002172:	601a      	str	r2, [r3, #0]
      *pDst++ = acc6;
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	1d1a      	adds	r2, r3, #4
 8002178:	607a      	str	r2, [r7, #4]
 800217a:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800217c:	601a      	str	r2, [r3, #0]
      *pDst++ = acc7;
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	1d1a      	adds	r2, r3, #4
 8002182:	607a      	str	r2, [r7, #4]
 8002184:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8002186:	601a      	str	r2, [r3, #0]

      blkCnt--;
 8002188:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800218a:	3b01      	subs	r3, #1
 800218c:	643b      	str	r3, [r7, #64]	; 0x40
   while (blkCnt > 0U)
 800218e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002190:	2b00      	cmp	r3, #0
 8002192:	f47f aa04 	bne.w	800159e <arm_fir_f32+0x40>
   }

   /* If the blockSize is not a multiple of 8, compute any remaining output samples here.
   ** No loop unrolling is used. */
   blkCnt = blockSize % 0x8U;
 8002196:	683b      	ldr	r3, [r7, #0]
 8002198:	f003 0307 	and.w	r3, r3, #7
 800219c:	643b      	str	r3, [r7, #64]	; 0x40

   while (blkCnt > 0U)
 800219e:	e040      	b.n	8002222 <arm_fir_f32+0xcc4>
   {
      /* Copy one sample at a time into state buffer */
      *pStateCurnt++ = *pSrc++;
 80021a0:	68ba      	ldr	r2, [r7, #8]
 80021a2:	1d13      	adds	r3, r2, #4
 80021a4:	60bb      	str	r3, [r7, #8]
 80021a6:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80021aa:	1d19      	adds	r1, r3, #4
 80021ac:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80021b0:	6812      	ldr	r2, [r2, #0]
 80021b2:	601a      	str	r2, [r3, #0]

      /* Set the accumulator to zero */
      acc0 = 0.0f;
 80021b4:	f04f 0300 	mov.w	r3, #0
 80021b8:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84

      /* Initialize state pointer */
      px = pState;
 80021bc:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 80021c0:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c

      /* Initialize Coefficient pointer */
      pb = (pCoeffs);
 80021c4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80021c6:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88

      i = numTaps;
 80021ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80021cc:	64bb      	str	r3, [r7, #72]	; 0x48

      /* Perform the multiply-accumulates */
      do
      {
         acc0 += *px++ * *pb++;
 80021ce:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80021d2:	1d1a      	adds	r2, r3, #4
 80021d4:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80021d8:	ed93 7a00 	vldr	s14, [r3]
 80021dc:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80021e0:	1d1a      	adds	r2, r3, #4
 80021e2:	f8c7 2088 	str.w	r2, [r7, #136]	; 0x88
 80021e6:	edd3 7a00 	vldr	s15, [r3]
 80021ea:	ee67 7a27 	vmul.f32	s15, s14, s15
 80021ee:	ed97 7a21 	vldr	s14, [r7, #132]	; 0x84
 80021f2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80021f6:	edc7 7a21 	vstr	s15, [r7, #132]	; 0x84
         i--;
 80021fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80021fc:	3b01      	subs	r3, #1
 80021fe:	64bb      	str	r3, [r7, #72]	; 0x48

      } while (i > 0U);
 8002200:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002202:	2b00      	cmp	r3, #0
 8002204:	d1e3      	bne.n	80021ce <arm_fir_f32+0xc70>

      /* The result is store in the destination buffer. */
      *pDst++ = acc0;
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	1d1a      	adds	r2, r3, #4
 800220a:	607a      	str	r2, [r7, #4]
 800220c:	f8d7 2084 	ldr.w	r2, [r7, #132]	; 0x84
 8002210:	601a      	str	r2, [r3, #0]

      /* Advance state pointer by 1 for the next sample */
      pState = pState + 1;
 8002212:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8002216:	3304      	adds	r3, #4
 8002218:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94

      blkCnt--;
 800221c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800221e:	3b01      	subs	r3, #1
 8002220:	643b      	str	r3, [r7, #64]	; 0x40
   while (blkCnt > 0U)
 8002222:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002224:	2b00      	cmp	r3, #0
 8002226:	d1bb      	bne.n	80021a0 <arm_fir_f32+0xc42>
   /* Processing is complete.
   ** Now copy the last numTaps - 1 samples to the start of the state buffer.
   ** This prepares the state buffer for the next function call. */

   /* Points to the start of the state buffer */
   pStateCurnt = S->pState;
 8002228:	68fb      	ldr	r3, [r7, #12]
 800222a:	685b      	ldr	r3, [r3, #4]
 800222c:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90

   tapCnt = (numTaps - 1U) >> 2U;
 8002230:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002232:	3b01      	subs	r3, #1
 8002234:	089b      	lsrs	r3, r3, #2
 8002236:	647b      	str	r3, [r7, #68]	; 0x44

   /* copy data */
   while (tapCnt > 0U)
 8002238:	e032      	b.n	80022a0 <arm_fir_f32+0xd42>
   {
      *pStateCurnt++ = *pState++;
 800223a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800223e:	1d13      	adds	r3, r2, #4
 8002240:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8002244:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002248:	1d19      	adds	r1, r3, #4
 800224a:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 800224e:	6812      	ldr	r2, [r2, #0]
 8002250:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pState++;
 8002252:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8002256:	1d13      	adds	r3, r2, #4
 8002258:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800225c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002260:	1d19      	adds	r1, r3, #4
 8002262:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8002266:	6812      	ldr	r2, [r2, #0]
 8002268:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pState++;
 800226a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800226e:	1d13      	adds	r3, r2, #4
 8002270:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8002274:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002278:	1d19      	adds	r1, r3, #4
 800227a:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 800227e:	6812      	ldr	r2, [r2, #0]
 8002280:	601a      	str	r2, [r3, #0]
      *pStateCurnt++ = *pState++;
 8002282:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8002286:	1d13      	adds	r3, r2, #4
 8002288:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800228c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8002290:	1d19      	adds	r1, r3, #4
 8002292:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 8002296:	6812      	ldr	r2, [r2, #0]
 8002298:	601a      	str	r2, [r3, #0]

      /* Decrement the loop counter */
      tapCnt--;
 800229a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800229c:	3b01      	subs	r3, #1
 800229e:	647b      	str	r3, [r7, #68]	; 0x44
   while (tapCnt > 0U)
 80022a0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80022a2:	2b00      	cmp	r3, #0
 80022a4:	d1c9      	bne.n	800223a <arm_fir_f32+0xcdc>
   }

   /* Calculate remaining number of copies */
   tapCnt = (numTaps - 1U) % 0x4U;
 80022a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80022a8:	3b01      	subs	r3, #1
 80022aa:	f003 0303 	and.w	r3, r3, #3
 80022ae:	647b      	str	r3, [r7, #68]	; 0x44

   /* Copy the remaining q31_t data */
   while (tapCnt > 0U)
 80022b0:	e00e      	b.n	80022d0 <arm_fir_f32+0xd72>
   {
      *pStateCurnt++ = *pState++;
 80022b2:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80022b6:	1d13      	adds	r3, r2, #4
 80022b8:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80022bc:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 80022c0:	1d19      	adds	r1, r3, #4
 80022c2:	f8c7 1090 	str.w	r1, [r7, #144]	; 0x90
 80022c6:	6812      	ldr	r2, [r2, #0]
 80022c8:	601a      	str	r2, [r3, #0]

      /* Decrement the loop counter */
      tapCnt--;
 80022ca:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80022cc:	3b01      	subs	r3, #1
 80022ce:	647b      	str	r3, [r7, #68]	; 0x44
   while (tapCnt > 0U)
 80022d0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80022d2:	2b00      	cmp	r3, #0
 80022d4:	d1ed      	bne.n	80022b2 <arm_fir_f32+0xd54>
   }
}
 80022d6:	bf00      	nop
 80022d8:	bf00      	nop
 80022da:	379c      	adds	r7, #156	; 0x9c
 80022dc:	46bd      	mov	sp, r7
 80022de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e2:	4770      	bx	lr

080022e4 <arm_fir_init_f32>:
  arm_fir_instance_f32 * S,
  uint16_t numTaps,
  float32_t * pCoeffs,
  float32_t * pState,
  uint32_t blockSize)
{
 80022e4:	b580      	push	{r7, lr}
 80022e6:	b084      	sub	sp, #16
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	60f8      	str	r0, [r7, #12]
 80022ec:	607a      	str	r2, [r7, #4]
 80022ee:	603b      	str	r3, [r7, #0]
 80022f0:	460b      	mov	r3, r1
 80022f2:	817b      	strh	r3, [r7, #10]
  /* Assign filter taps */
  S->numTaps = numTaps;
 80022f4:	68fb      	ldr	r3, [r7, #12]
 80022f6:	897a      	ldrh	r2, [r7, #10]
 80022f8:	801a      	strh	r2, [r3, #0]

  /* Assign coefficient pointer */
  S->pCoeffs = pCoeffs;
 80022fa:	68fb      	ldr	r3, [r7, #12]
 80022fc:	687a      	ldr	r2, [r7, #4]
 80022fe:	609a      	str	r2, [r3, #8]

  /* Clear state buffer and the size of state buffer is (blockSize + numTaps - 1) */
  memset(pState, 0, (numTaps + (blockSize - 1U)) * sizeof(float32_t));
 8002300:	897a      	ldrh	r2, [r7, #10]
 8002302:	69bb      	ldr	r3, [r7, #24]
 8002304:	4413      	add	r3, r2
 8002306:	3b01      	subs	r3, #1
 8002308:	009b      	lsls	r3, r3, #2
 800230a:	461a      	mov	r2, r3
 800230c:	2100      	movs	r1, #0
 800230e:	6838      	ldr	r0, [r7, #0]
 8002310:	f000 f832 	bl	8002378 <memset>

  /* Assign state pointer */
  S->pState = pState;
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	683a      	ldr	r2, [r7, #0]
 8002318:	605a      	str	r2, [r3, #4]

}
 800231a:	bf00      	nop
 800231c:	3710      	adds	r7, #16
 800231e:	46bd      	mov	sp, r7
 8002320:	bd80      	pop	{r7, pc}
	...

08002324 <__errno>:
 8002324:	4b01      	ldr	r3, [pc, #4]	; (800232c <__errno+0x8>)
 8002326:	6818      	ldr	r0, [r3, #0]
 8002328:	4770      	bx	lr
 800232a:	bf00      	nop
 800232c:	20000148 	.word	0x20000148

08002330 <__libc_init_array>:
 8002330:	b570      	push	{r4, r5, r6, lr}
 8002332:	4d0d      	ldr	r5, [pc, #52]	; (8002368 <__libc_init_array+0x38>)
 8002334:	4c0d      	ldr	r4, [pc, #52]	; (800236c <__libc_init_array+0x3c>)
 8002336:	1b64      	subs	r4, r4, r5
 8002338:	10a4      	asrs	r4, r4, #2
 800233a:	2600      	movs	r6, #0
 800233c:	42a6      	cmp	r6, r4
 800233e:	d109      	bne.n	8002354 <__libc_init_array+0x24>
 8002340:	4d0b      	ldr	r5, [pc, #44]	; (8002370 <__libc_init_array+0x40>)
 8002342:	4c0c      	ldr	r4, [pc, #48]	; (8002374 <__libc_init_array+0x44>)
 8002344:	f002 fdc2 	bl	8004ecc <_init>
 8002348:	1b64      	subs	r4, r4, r5
 800234a:	10a4      	asrs	r4, r4, #2
 800234c:	2600      	movs	r6, #0
 800234e:	42a6      	cmp	r6, r4
 8002350:	d105      	bne.n	800235e <__libc_init_array+0x2e>
 8002352:	bd70      	pop	{r4, r5, r6, pc}
 8002354:	f855 3b04 	ldr.w	r3, [r5], #4
 8002358:	4798      	blx	r3
 800235a:	3601      	adds	r6, #1
 800235c:	e7ee      	b.n	800233c <__libc_init_array+0xc>
 800235e:	f855 3b04 	ldr.w	r3, [r5], #4
 8002362:	4798      	blx	r3
 8002364:	3601      	adds	r6, #1
 8002366:	e7f2      	b.n	800234e <__libc_init_array+0x1e>
 8002368:	0800531c 	.word	0x0800531c
 800236c:	0800531c 	.word	0x0800531c
 8002370:	0800531c 	.word	0x0800531c
 8002374:	08005320 	.word	0x08005320

08002378 <memset>:
 8002378:	4402      	add	r2, r0
 800237a:	4603      	mov	r3, r0
 800237c:	4293      	cmp	r3, r2
 800237e:	d100      	bne.n	8002382 <memset+0xa>
 8002380:	4770      	bx	lr
 8002382:	f803 1b01 	strb.w	r1, [r3], #1
 8002386:	e7f9      	b.n	800237c <memset+0x4>

08002388 <__cvt>:
 8002388:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800238c:	ec55 4b10 	vmov	r4, r5, d0
 8002390:	2d00      	cmp	r5, #0
 8002392:	460e      	mov	r6, r1
 8002394:	4619      	mov	r1, r3
 8002396:	462b      	mov	r3, r5
 8002398:	bfbb      	ittet	lt
 800239a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800239e:	461d      	movlt	r5, r3
 80023a0:	2300      	movge	r3, #0
 80023a2:	232d      	movlt	r3, #45	; 0x2d
 80023a4:	700b      	strb	r3, [r1, #0]
 80023a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80023a8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80023ac:	4691      	mov	r9, r2
 80023ae:	f023 0820 	bic.w	r8, r3, #32
 80023b2:	bfbc      	itt	lt
 80023b4:	4622      	movlt	r2, r4
 80023b6:	4614      	movlt	r4, r2
 80023b8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80023bc:	d005      	beq.n	80023ca <__cvt+0x42>
 80023be:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80023c2:	d100      	bne.n	80023c6 <__cvt+0x3e>
 80023c4:	3601      	adds	r6, #1
 80023c6:	2102      	movs	r1, #2
 80023c8:	e000      	b.n	80023cc <__cvt+0x44>
 80023ca:	2103      	movs	r1, #3
 80023cc:	ab03      	add	r3, sp, #12
 80023ce:	9301      	str	r3, [sp, #4]
 80023d0:	ab02      	add	r3, sp, #8
 80023d2:	9300      	str	r3, [sp, #0]
 80023d4:	ec45 4b10 	vmov	d0, r4, r5
 80023d8:	4653      	mov	r3, sl
 80023da:	4632      	mov	r2, r6
 80023dc:	f000 fe18 	bl	8003010 <_dtoa_r>
 80023e0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80023e4:	4607      	mov	r7, r0
 80023e6:	d102      	bne.n	80023ee <__cvt+0x66>
 80023e8:	f019 0f01 	tst.w	r9, #1
 80023ec:	d022      	beq.n	8002434 <__cvt+0xac>
 80023ee:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80023f2:	eb07 0906 	add.w	r9, r7, r6
 80023f6:	d110      	bne.n	800241a <__cvt+0x92>
 80023f8:	783b      	ldrb	r3, [r7, #0]
 80023fa:	2b30      	cmp	r3, #48	; 0x30
 80023fc:	d10a      	bne.n	8002414 <__cvt+0x8c>
 80023fe:	2200      	movs	r2, #0
 8002400:	2300      	movs	r3, #0
 8002402:	4620      	mov	r0, r4
 8002404:	4629      	mov	r1, r5
 8002406:	f7fe fb6f 	bl	8000ae8 <__aeabi_dcmpeq>
 800240a:	b918      	cbnz	r0, 8002414 <__cvt+0x8c>
 800240c:	f1c6 0601 	rsb	r6, r6, #1
 8002410:	f8ca 6000 	str.w	r6, [sl]
 8002414:	f8da 3000 	ldr.w	r3, [sl]
 8002418:	4499      	add	r9, r3
 800241a:	2200      	movs	r2, #0
 800241c:	2300      	movs	r3, #0
 800241e:	4620      	mov	r0, r4
 8002420:	4629      	mov	r1, r5
 8002422:	f7fe fb61 	bl	8000ae8 <__aeabi_dcmpeq>
 8002426:	b108      	cbz	r0, 800242c <__cvt+0xa4>
 8002428:	f8cd 900c 	str.w	r9, [sp, #12]
 800242c:	2230      	movs	r2, #48	; 0x30
 800242e:	9b03      	ldr	r3, [sp, #12]
 8002430:	454b      	cmp	r3, r9
 8002432:	d307      	bcc.n	8002444 <__cvt+0xbc>
 8002434:	9b03      	ldr	r3, [sp, #12]
 8002436:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002438:	1bdb      	subs	r3, r3, r7
 800243a:	4638      	mov	r0, r7
 800243c:	6013      	str	r3, [r2, #0]
 800243e:	b004      	add	sp, #16
 8002440:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002444:	1c59      	adds	r1, r3, #1
 8002446:	9103      	str	r1, [sp, #12]
 8002448:	701a      	strb	r2, [r3, #0]
 800244a:	e7f0      	b.n	800242e <__cvt+0xa6>

0800244c <__exponent>:
 800244c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800244e:	4603      	mov	r3, r0
 8002450:	2900      	cmp	r1, #0
 8002452:	bfb8      	it	lt
 8002454:	4249      	neglt	r1, r1
 8002456:	f803 2b02 	strb.w	r2, [r3], #2
 800245a:	bfb4      	ite	lt
 800245c:	222d      	movlt	r2, #45	; 0x2d
 800245e:	222b      	movge	r2, #43	; 0x2b
 8002460:	2909      	cmp	r1, #9
 8002462:	7042      	strb	r2, [r0, #1]
 8002464:	dd2a      	ble.n	80024bc <__exponent+0x70>
 8002466:	f10d 0407 	add.w	r4, sp, #7
 800246a:	46a4      	mov	ip, r4
 800246c:	270a      	movs	r7, #10
 800246e:	46a6      	mov	lr, r4
 8002470:	460a      	mov	r2, r1
 8002472:	fb91 f6f7 	sdiv	r6, r1, r7
 8002476:	fb07 1516 	mls	r5, r7, r6, r1
 800247a:	3530      	adds	r5, #48	; 0x30
 800247c:	2a63      	cmp	r2, #99	; 0x63
 800247e:	f104 34ff 	add.w	r4, r4, #4294967295
 8002482:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8002486:	4631      	mov	r1, r6
 8002488:	dcf1      	bgt.n	800246e <__exponent+0x22>
 800248a:	3130      	adds	r1, #48	; 0x30
 800248c:	f1ae 0502 	sub.w	r5, lr, #2
 8002490:	f804 1c01 	strb.w	r1, [r4, #-1]
 8002494:	1c44      	adds	r4, r0, #1
 8002496:	4629      	mov	r1, r5
 8002498:	4561      	cmp	r1, ip
 800249a:	d30a      	bcc.n	80024b2 <__exponent+0x66>
 800249c:	f10d 0209 	add.w	r2, sp, #9
 80024a0:	eba2 020e 	sub.w	r2, r2, lr
 80024a4:	4565      	cmp	r5, ip
 80024a6:	bf88      	it	hi
 80024a8:	2200      	movhi	r2, #0
 80024aa:	4413      	add	r3, r2
 80024ac:	1a18      	subs	r0, r3, r0
 80024ae:	b003      	add	sp, #12
 80024b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80024b2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80024b6:	f804 2f01 	strb.w	r2, [r4, #1]!
 80024ba:	e7ed      	b.n	8002498 <__exponent+0x4c>
 80024bc:	2330      	movs	r3, #48	; 0x30
 80024be:	3130      	adds	r1, #48	; 0x30
 80024c0:	7083      	strb	r3, [r0, #2]
 80024c2:	70c1      	strb	r1, [r0, #3]
 80024c4:	1d03      	adds	r3, r0, #4
 80024c6:	e7f1      	b.n	80024ac <__exponent+0x60>

080024c8 <_printf_float>:
 80024c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024cc:	ed2d 8b02 	vpush	{d8}
 80024d0:	b08d      	sub	sp, #52	; 0x34
 80024d2:	460c      	mov	r4, r1
 80024d4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80024d8:	4616      	mov	r6, r2
 80024da:	461f      	mov	r7, r3
 80024dc:	4605      	mov	r5, r0
 80024de:	f001 fd3d 	bl	8003f5c <_localeconv_r>
 80024e2:	f8d0 a000 	ldr.w	sl, [r0]
 80024e6:	4650      	mov	r0, sl
 80024e8:	f7fd fe82 	bl	80001f0 <strlen>
 80024ec:	2300      	movs	r3, #0
 80024ee:	930a      	str	r3, [sp, #40]	; 0x28
 80024f0:	6823      	ldr	r3, [r4, #0]
 80024f2:	9305      	str	r3, [sp, #20]
 80024f4:	f8d8 3000 	ldr.w	r3, [r8]
 80024f8:	f894 b018 	ldrb.w	fp, [r4, #24]
 80024fc:	3307      	adds	r3, #7
 80024fe:	f023 0307 	bic.w	r3, r3, #7
 8002502:	f103 0208 	add.w	r2, r3, #8
 8002506:	f8c8 2000 	str.w	r2, [r8]
 800250a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800250e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8002512:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 8002516:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800251a:	9307      	str	r3, [sp, #28]
 800251c:	f8cd 8018 	str.w	r8, [sp, #24]
 8002520:	ee08 0a10 	vmov	s16, r0
 8002524:	4b9f      	ldr	r3, [pc, #636]	; (80027a4 <_printf_float+0x2dc>)
 8002526:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800252a:	f04f 32ff 	mov.w	r2, #4294967295
 800252e:	f7fe fb0d 	bl	8000b4c <__aeabi_dcmpun>
 8002532:	bb88      	cbnz	r0, 8002598 <_printf_float+0xd0>
 8002534:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002538:	4b9a      	ldr	r3, [pc, #616]	; (80027a4 <_printf_float+0x2dc>)
 800253a:	f04f 32ff 	mov.w	r2, #4294967295
 800253e:	f7fe fae7 	bl	8000b10 <__aeabi_dcmple>
 8002542:	bb48      	cbnz	r0, 8002598 <_printf_float+0xd0>
 8002544:	2200      	movs	r2, #0
 8002546:	2300      	movs	r3, #0
 8002548:	4640      	mov	r0, r8
 800254a:	4649      	mov	r1, r9
 800254c:	f7fe fad6 	bl	8000afc <__aeabi_dcmplt>
 8002550:	b110      	cbz	r0, 8002558 <_printf_float+0x90>
 8002552:	232d      	movs	r3, #45	; 0x2d
 8002554:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002558:	4b93      	ldr	r3, [pc, #588]	; (80027a8 <_printf_float+0x2e0>)
 800255a:	4894      	ldr	r0, [pc, #592]	; (80027ac <_printf_float+0x2e4>)
 800255c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8002560:	bf94      	ite	ls
 8002562:	4698      	movls	r8, r3
 8002564:	4680      	movhi	r8, r0
 8002566:	2303      	movs	r3, #3
 8002568:	6123      	str	r3, [r4, #16]
 800256a:	9b05      	ldr	r3, [sp, #20]
 800256c:	f023 0204 	bic.w	r2, r3, #4
 8002570:	6022      	str	r2, [r4, #0]
 8002572:	f04f 0900 	mov.w	r9, #0
 8002576:	9700      	str	r7, [sp, #0]
 8002578:	4633      	mov	r3, r6
 800257a:	aa0b      	add	r2, sp, #44	; 0x2c
 800257c:	4621      	mov	r1, r4
 800257e:	4628      	mov	r0, r5
 8002580:	f000 f9d8 	bl	8002934 <_printf_common>
 8002584:	3001      	adds	r0, #1
 8002586:	f040 8090 	bne.w	80026aa <_printf_float+0x1e2>
 800258a:	f04f 30ff 	mov.w	r0, #4294967295
 800258e:	b00d      	add	sp, #52	; 0x34
 8002590:	ecbd 8b02 	vpop	{d8}
 8002594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002598:	4642      	mov	r2, r8
 800259a:	464b      	mov	r3, r9
 800259c:	4640      	mov	r0, r8
 800259e:	4649      	mov	r1, r9
 80025a0:	f7fe fad4 	bl	8000b4c <__aeabi_dcmpun>
 80025a4:	b140      	cbz	r0, 80025b8 <_printf_float+0xf0>
 80025a6:	464b      	mov	r3, r9
 80025a8:	2b00      	cmp	r3, #0
 80025aa:	bfbc      	itt	lt
 80025ac:	232d      	movlt	r3, #45	; 0x2d
 80025ae:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80025b2:	487f      	ldr	r0, [pc, #508]	; (80027b0 <_printf_float+0x2e8>)
 80025b4:	4b7f      	ldr	r3, [pc, #508]	; (80027b4 <_printf_float+0x2ec>)
 80025b6:	e7d1      	b.n	800255c <_printf_float+0x94>
 80025b8:	6863      	ldr	r3, [r4, #4]
 80025ba:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80025be:	9206      	str	r2, [sp, #24]
 80025c0:	1c5a      	adds	r2, r3, #1
 80025c2:	d13f      	bne.n	8002644 <_printf_float+0x17c>
 80025c4:	2306      	movs	r3, #6
 80025c6:	6063      	str	r3, [r4, #4]
 80025c8:	9b05      	ldr	r3, [sp, #20]
 80025ca:	6861      	ldr	r1, [r4, #4]
 80025cc:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80025d0:	2300      	movs	r3, #0
 80025d2:	9303      	str	r3, [sp, #12]
 80025d4:	ab0a      	add	r3, sp, #40	; 0x28
 80025d6:	e9cd b301 	strd	fp, r3, [sp, #4]
 80025da:	ab09      	add	r3, sp, #36	; 0x24
 80025dc:	ec49 8b10 	vmov	d0, r8, r9
 80025e0:	9300      	str	r3, [sp, #0]
 80025e2:	6022      	str	r2, [r4, #0]
 80025e4:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80025e8:	4628      	mov	r0, r5
 80025ea:	f7ff fecd 	bl	8002388 <__cvt>
 80025ee:	9b06      	ldr	r3, [sp, #24]
 80025f0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80025f2:	2b47      	cmp	r3, #71	; 0x47
 80025f4:	4680      	mov	r8, r0
 80025f6:	d108      	bne.n	800260a <_printf_float+0x142>
 80025f8:	1cc8      	adds	r0, r1, #3
 80025fa:	db02      	blt.n	8002602 <_printf_float+0x13a>
 80025fc:	6863      	ldr	r3, [r4, #4]
 80025fe:	4299      	cmp	r1, r3
 8002600:	dd41      	ble.n	8002686 <_printf_float+0x1be>
 8002602:	f1ab 0b02 	sub.w	fp, fp, #2
 8002606:	fa5f fb8b 	uxtb.w	fp, fp
 800260a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800260e:	d820      	bhi.n	8002652 <_printf_float+0x18a>
 8002610:	3901      	subs	r1, #1
 8002612:	465a      	mov	r2, fp
 8002614:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002618:	9109      	str	r1, [sp, #36]	; 0x24
 800261a:	f7ff ff17 	bl	800244c <__exponent>
 800261e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002620:	1813      	adds	r3, r2, r0
 8002622:	2a01      	cmp	r2, #1
 8002624:	4681      	mov	r9, r0
 8002626:	6123      	str	r3, [r4, #16]
 8002628:	dc02      	bgt.n	8002630 <_printf_float+0x168>
 800262a:	6822      	ldr	r2, [r4, #0]
 800262c:	07d2      	lsls	r2, r2, #31
 800262e:	d501      	bpl.n	8002634 <_printf_float+0x16c>
 8002630:	3301      	adds	r3, #1
 8002632:	6123      	str	r3, [r4, #16]
 8002634:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8002638:	2b00      	cmp	r3, #0
 800263a:	d09c      	beq.n	8002576 <_printf_float+0xae>
 800263c:	232d      	movs	r3, #45	; 0x2d
 800263e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002642:	e798      	b.n	8002576 <_printf_float+0xae>
 8002644:	9a06      	ldr	r2, [sp, #24]
 8002646:	2a47      	cmp	r2, #71	; 0x47
 8002648:	d1be      	bne.n	80025c8 <_printf_float+0x100>
 800264a:	2b00      	cmp	r3, #0
 800264c:	d1bc      	bne.n	80025c8 <_printf_float+0x100>
 800264e:	2301      	movs	r3, #1
 8002650:	e7b9      	b.n	80025c6 <_printf_float+0xfe>
 8002652:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8002656:	d118      	bne.n	800268a <_printf_float+0x1c2>
 8002658:	2900      	cmp	r1, #0
 800265a:	6863      	ldr	r3, [r4, #4]
 800265c:	dd0b      	ble.n	8002676 <_printf_float+0x1ae>
 800265e:	6121      	str	r1, [r4, #16]
 8002660:	b913      	cbnz	r3, 8002668 <_printf_float+0x1a0>
 8002662:	6822      	ldr	r2, [r4, #0]
 8002664:	07d0      	lsls	r0, r2, #31
 8002666:	d502      	bpl.n	800266e <_printf_float+0x1a6>
 8002668:	3301      	adds	r3, #1
 800266a:	440b      	add	r3, r1
 800266c:	6123      	str	r3, [r4, #16]
 800266e:	65a1      	str	r1, [r4, #88]	; 0x58
 8002670:	f04f 0900 	mov.w	r9, #0
 8002674:	e7de      	b.n	8002634 <_printf_float+0x16c>
 8002676:	b913      	cbnz	r3, 800267e <_printf_float+0x1b6>
 8002678:	6822      	ldr	r2, [r4, #0]
 800267a:	07d2      	lsls	r2, r2, #31
 800267c:	d501      	bpl.n	8002682 <_printf_float+0x1ba>
 800267e:	3302      	adds	r3, #2
 8002680:	e7f4      	b.n	800266c <_printf_float+0x1a4>
 8002682:	2301      	movs	r3, #1
 8002684:	e7f2      	b.n	800266c <_printf_float+0x1a4>
 8002686:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800268a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800268c:	4299      	cmp	r1, r3
 800268e:	db05      	blt.n	800269c <_printf_float+0x1d4>
 8002690:	6823      	ldr	r3, [r4, #0]
 8002692:	6121      	str	r1, [r4, #16]
 8002694:	07d8      	lsls	r0, r3, #31
 8002696:	d5ea      	bpl.n	800266e <_printf_float+0x1a6>
 8002698:	1c4b      	adds	r3, r1, #1
 800269a:	e7e7      	b.n	800266c <_printf_float+0x1a4>
 800269c:	2900      	cmp	r1, #0
 800269e:	bfd4      	ite	le
 80026a0:	f1c1 0202 	rsble	r2, r1, #2
 80026a4:	2201      	movgt	r2, #1
 80026a6:	4413      	add	r3, r2
 80026a8:	e7e0      	b.n	800266c <_printf_float+0x1a4>
 80026aa:	6823      	ldr	r3, [r4, #0]
 80026ac:	055a      	lsls	r2, r3, #21
 80026ae:	d407      	bmi.n	80026c0 <_printf_float+0x1f8>
 80026b0:	6923      	ldr	r3, [r4, #16]
 80026b2:	4642      	mov	r2, r8
 80026b4:	4631      	mov	r1, r6
 80026b6:	4628      	mov	r0, r5
 80026b8:	47b8      	blx	r7
 80026ba:	3001      	adds	r0, #1
 80026bc:	d12c      	bne.n	8002718 <_printf_float+0x250>
 80026be:	e764      	b.n	800258a <_printf_float+0xc2>
 80026c0:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80026c4:	f240 80e0 	bls.w	8002888 <_printf_float+0x3c0>
 80026c8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80026cc:	2200      	movs	r2, #0
 80026ce:	2300      	movs	r3, #0
 80026d0:	f7fe fa0a 	bl	8000ae8 <__aeabi_dcmpeq>
 80026d4:	2800      	cmp	r0, #0
 80026d6:	d034      	beq.n	8002742 <_printf_float+0x27a>
 80026d8:	4a37      	ldr	r2, [pc, #220]	; (80027b8 <_printf_float+0x2f0>)
 80026da:	2301      	movs	r3, #1
 80026dc:	4631      	mov	r1, r6
 80026de:	4628      	mov	r0, r5
 80026e0:	47b8      	blx	r7
 80026e2:	3001      	adds	r0, #1
 80026e4:	f43f af51 	beq.w	800258a <_printf_float+0xc2>
 80026e8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80026ec:	429a      	cmp	r2, r3
 80026ee:	db02      	blt.n	80026f6 <_printf_float+0x22e>
 80026f0:	6823      	ldr	r3, [r4, #0]
 80026f2:	07d8      	lsls	r0, r3, #31
 80026f4:	d510      	bpl.n	8002718 <_printf_float+0x250>
 80026f6:	ee18 3a10 	vmov	r3, s16
 80026fa:	4652      	mov	r2, sl
 80026fc:	4631      	mov	r1, r6
 80026fe:	4628      	mov	r0, r5
 8002700:	47b8      	blx	r7
 8002702:	3001      	adds	r0, #1
 8002704:	f43f af41 	beq.w	800258a <_printf_float+0xc2>
 8002708:	f04f 0800 	mov.w	r8, #0
 800270c:	f104 091a 	add.w	r9, r4, #26
 8002710:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002712:	3b01      	subs	r3, #1
 8002714:	4543      	cmp	r3, r8
 8002716:	dc09      	bgt.n	800272c <_printf_float+0x264>
 8002718:	6823      	ldr	r3, [r4, #0]
 800271a:	079b      	lsls	r3, r3, #30
 800271c:	f100 8105 	bmi.w	800292a <_printf_float+0x462>
 8002720:	68e0      	ldr	r0, [r4, #12]
 8002722:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002724:	4298      	cmp	r0, r3
 8002726:	bfb8      	it	lt
 8002728:	4618      	movlt	r0, r3
 800272a:	e730      	b.n	800258e <_printf_float+0xc6>
 800272c:	2301      	movs	r3, #1
 800272e:	464a      	mov	r2, r9
 8002730:	4631      	mov	r1, r6
 8002732:	4628      	mov	r0, r5
 8002734:	47b8      	blx	r7
 8002736:	3001      	adds	r0, #1
 8002738:	f43f af27 	beq.w	800258a <_printf_float+0xc2>
 800273c:	f108 0801 	add.w	r8, r8, #1
 8002740:	e7e6      	b.n	8002710 <_printf_float+0x248>
 8002742:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002744:	2b00      	cmp	r3, #0
 8002746:	dc39      	bgt.n	80027bc <_printf_float+0x2f4>
 8002748:	4a1b      	ldr	r2, [pc, #108]	; (80027b8 <_printf_float+0x2f0>)
 800274a:	2301      	movs	r3, #1
 800274c:	4631      	mov	r1, r6
 800274e:	4628      	mov	r0, r5
 8002750:	47b8      	blx	r7
 8002752:	3001      	adds	r0, #1
 8002754:	f43f af19 	beq.w	800258a <_printf_float+0xc2>
 8002758:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800275c:	4313      	orrs	r3, r2
 800275e:	d102      	bne.n	8002766 <_printf_float+0x29e>
 8002760:	6823      	ldr	r3, [r4, #0]
 8002762:	07d9      	lsls	r1, r3, #31
 8002764:	d5d8      	bpl.n	8002718 <_printf_float+0x250>
 8002766:	ee18 3a10 	vmov	r3, s16
 800276a:	4652      	mov	r2, sl
 800276c:	4631      	mov	r1, r6
 800276e:	4628      	mov	r0, r5
 8002770:	47b8      	blx	r7
 8002772:	3001      	adds	r0, #1
 8002774:	f43f af09 	beq.w	800258a <_printf_float+0xc2>
 8002778:	f04f 0900 	mov.w	r9, #0
 800277c:	f104 0a1a 	add.w	sl, r4, #26
 8002780:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002782:	425b      	negs	r3, r3
 8002784:	454b      	cmp	r3, r9
 8002786:	dc01      	bgt.n	800278c <_printf_float+0x2c4>
 8002788:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800278a:	e792      	b.n	80026b2 <_printf_float+0x1ea>
 800278c:	2301      	movs	r3, #1
 800278e:	4652      	mov	r2, sl
 8002790:	4631      	mov	r1, r6
 8002792:	4628      	mov	r0, r5
 8002794:	47b8      	blx	r7
 8002796:	3001      	adds	r0, #1
 8002798:	f43f aef7 	beq.w	800258a <_printf_float+0xc2>
 800279c:	f109 0901 	add.w	r9, r9, #1
 80027a0:	e7ee      	b.n	8002780 <_printf_float+0x2b8>
 80027a2:	bf00      	nop
 80027a4:	7fefffff 	.word	0x7fefffff
 80027a8:	08004f48 	.word	0x08004f48
 80027ac:	08004f4c 	.word	0x08004f4c
 80027b0:	08004f54 	.word	0x08004f54
 80027b4:	08004f50 	.word	0x08004f50
 80027b8:	08004f58 	.word	0x08004f58
 80027bc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80027be:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80027c0:	429a      	cmp	r2, r3
 80027c2:	bfa8      	it	ge
 80027c4:	461a      	movge	r2, r3
 80027c6:	2a00      	cmp	r2, #0
 80027c8:	4691      	mov	r9, r2
 80027ca:	dc37      	bgt.n	800283c <_printf_float+0x374>
 80027cc:	f04f 0b00 	mov.w	fp, #0
 80027d0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80027d4:	f104 021a 	add.w	r2, r4, #26
 80027d8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80027da:	9305      	str	r3, [sp, #20]
 80027dc:	eba3 0309 	sub.w	r3, r3, r9
 80027e0:	455b      	cmp	r3, fp
 80027e2:	dc33      	bgt.n	800284c <_printf_float+0x384>
 80027e4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80027e8:	429a      	cmp	r2, r3
 80027ea:	db3b      	blt.n	8002864 <_printf_float+0x39c>
 80027ec:	6823      	ldr	r3, [r4, #0]
 80027ee:	07da      	lsls	r2, r3, #31
 80027f0:	d438      	bmi.n	8002864 <_printf_float+0x39c>
 80027f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80027f4:	9a05      	ldr	r2, [sp, #20]
 80027f6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80027f8:	1a9a      	subs	r2, r3, r2
 80027fa:	eba3 0901 	sub.w	r9, r3, r1
 80027fe:	4591      	cmp	r9, r2
 8002800:	bfa8      	it	ge
 8002802:	4691      	movge	r9, r2
 8002804:	f1b9 0f00 	cmp.w	r9, #0
 8002808:	dc35      	bgt.n	8002876 <_printf_float+0x3ae>
 800280a:	f04f 0800 	mov.w	r8, #0
 800280e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002812:	f104 0a1a 	add.w	sl, r4, #26
 8002816:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800281a:	1a9b      	subs	r3, r3, r2
 800281c:	eba3 0309 	sub.w	r3, r3, r9
 8002820:	4543      	cmp	r3, r8
 8002822:	f77f af79 	ble.w	8002718 <_printf_float+0x250>
 8002826:	2301      	movs	r3, #1
 8002828:	4652      	mov	r2, sl
 800282a:	4631      	mov	r1, r6
 800282c:	4628      	mov	r0, r5
 800282e:	47b8      	blx	r7
 8002830:	3001      	adds	r0, #1
 8002832:	f43f aeaa 	beq.w	800258a <_printf_float+0xc2>
 8002836:	f108 0801 	add.w	r8, r8, #1
 800283a:	e7ec      	b.n	8002816 <_printf_float+0x34e>
 800283c:	4613      	mov	r3, r2
 800283e:	4631      	mov	r1, r6
 8002840:	4642      	mov	r2, r8
 8002842:	4628      	mov	r0, r5
 8002844:	47b8      	blx	r7
 8002846:	3001      	adds	r0, #1
 8002848:	d1c0      	bne.n	80027cc <_printf_float+0x304>
 800284a:	e69e      	b.n	800258a <_printf_float+0xc2>
 800284c:	2301      	movs	r3, #1
 800284e:	4631      	mov	r1, r6
 8002850:	4628      	mov	r0, r5
 8002852:	9205      	str	r2, [sp, #20]
 8002854:	47b8      	blx	r7
 8002856:	3001      	adds	r0, #1
 8002858:	f43f ae97 	beq.w	800258a <_printf_float+0xc2>
 800285c:	9a05      	ldr	r2, [sp, #20]
 800285e:	f10b 0b01 	add.w	fp, fp, #1
 8002862:	e7b9      	b.n	80027d8 <_printf_float+0x310>
 8002864:	ee18 3a10 	vmov	r3, s16
 8002868:	4652      	mov	r2, sl
 800286a:	4631      	mov	r1, r6
 800286c:	4628      	mov	r0, r5
 800286e:	47b8      	blx	r7
 8002870:	3001      	adds	r0, #1
 8002872:	d1be      	bne.n	80027f2 <_printf_float+0x32a>
 8002874:	e689      	b.n	800258a <_printf_float+0xc2>
 8002876:	9a05      	ldr	r2, [sp, #20]
 8002878:	464b      	mov	r3, r9
 800287a:	4442      	add	r2, r8
 800287c:	4631      	mov	r1, r6
 800287e:	4628      	mov	r0, r5
 8002880:	47b8      	blx	r7
 8002882:	3001      	adds	r0, #1
 8002884:	d1c1      	bne.n	800280a <_printf_float+0x342>
 8002886:	e680      	b.n	800258a <_printf_float+0xc2>
 8002888:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800288a:	2a01      	cmp	r2, #1
 800288c:	dc01      	bgt.n	8002892 <_printf_float+0x3ca>
 800288e:	07db      	lsls	r3, r3, #31
 8002890:	d538      	bpl.n	8002904 <_printf_float+0x43c>
 8002892:	2301      	movs	r3, #1
 8002894:	4642      	mov	r2, r8
 8002896:	4631      	mov	r1, r6
 8002898:	4628      	mov	r0, r5
 800289a:	47b8      	blx	r7
 800289c:	3001      	adds	r0, #1
 800289e:	f43f ae74 	beq.w	800258a <_printf_float+0xc2>
 80028a2:	ee18 3a10 	vmov	r3, s16
 80028a6:	4652      	mov	r2, sl
 80028a8:	4631      	mov	r1, r6
 80028aa:	4628      	mov	r0, r5
 80028ac:	47b8      	blx	r7
 80028ae:	3001      	adds	r0, #1
 80028b0:	f43f ae6b 	beq.w	800258a <_printf_float+0xc2>
 80028b4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80028b8:	2200      	movs	r2, #0
 80028ba:	2300      	movs	r3, #0
 80028bc:	f7fe f914 	bl	8000ae8 <__aeabi_dcmpeq>
 80028c0:	b9d8      	cbnz	r0, 80028fa <_printf_float+0x432>
 80028c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80028c4:	f108 0201 	add.w	r2, r8, #1
 80028c8:	3b01      	subs	r3, #1
 80028ca:	4631      	mov	r1, r6
 80028cc:	4628      	mov	r0, r5
 80028ce:	47b8      	blx	r7
 80028d0:	3001      	adds	r0, #1
 80028d2:	d10e      	bne.n	80028f2 <_printf_float+0x42a>
 80028d4:	e659      	b.n	800258a <_printf_float+0xc2>
 80028d6:	2301      	movs	r3, #1
 80028d8:	4652      	mov	r2, sl
 80028da:	4631      	mov	r1, r6
 80028dc:	4628      	mov	r0, r5
 80028de:	47b8      	blx	r7
 80028e0:	3001      	adds	r0, #1
 80028e2:	f43f ae52 	beq.w	800258a <_printf_float+0xc2>
 80028e6:	f108 0801 	add.w	r8, r8, #1
 80028ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80028ec:	3b01      	subs	r3, #1
 80028ee:	4543      	cmp	r3, r8
 80028f0:	dcf1      	bgt.n	80028d6 <_printf_float+0x40e>
 80028f2:	464b      	mov	r3, r9
 80028f4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80028f8:	e6dc      	b.n	80026b4 <_printf_float+0x1ec>
 80028fa:	f04f 0800 	mov.w	r8, #0
 80028fe:	f104 0a1a 	add.w	sl, r4, #26
 8002902:	e7f2      	b.n	80028ea <_printf_float+0x422>
 8002904:	2301      	movs	r3, #1
 8002906:	4642      	mov	r2, r8
 8002908:	e7df      	b.n	80028ca <_printf_float+0x402>
 800290a:	2301      	movs	r3, #1
 800290c:	464a      	mov	r2, r9
 800290e:	4631      	mov	r1, r6
 8002910:	4628      	mov	r0, r5
 8002912:	47b8      	blx	r7
 8002914:	3001      	adds	r0, #1
 8002916:	f43f ae38 	beq.w	800258a <_printf_float+0xc2>
 800291a:	f108 0801 	add.w	r8, r8, #1
 800291e:	68e3      	ldr	r3, [r4, #12]
 8002920:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002922:	1a5b      	subs	r3, r3, r1
 8002924:	4543      	cmp	r3, r8
 8002926:	dcf0      	bgt.n	800290a <_printf_float+0x442>
 8002928:	e6fa      	b.n	8002720 <_printf_float+0x258>
 800292a:	f04f 0800 	mov.w	r8, #0
 800292e:	f104 0919 	add.w	r9, r4, #25
 8002932:	e7f4      	b.n	800291e <_printf_float+0x456>

08002934 <_printf_common>:
 8002934:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002938:	4616      	mov	r6, r2
 800293a:	4699      	mov	r9, r3
 800293c:	688a      	ldr	r2, [r1, #8]
 800293e:	690b      	ldr	r3, [r1, #16]
 8002940:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002944:	4293      	cmp	r3, r2
 8002946:	bfb8      	it	lt
 8002948:	4613      	movlt	r3, r2
 800294a:	6033      	str	r3, [r6, #0]
 800294c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002950:	4607      	mov	r7, r0
 8002952:	460c      	mov	r4, r1
 8002954:	b10a      	cbz	r2, 800295a <_printf_common+0x26>
 8002956:	3301      	adds	r3, #1
 8002958:	6033      	str	r3, [r6, #0]
 800295a:	6823      	ldr	r3, [r4, #0]
 800295c:	0699      	lsls	r1, r3, #26
 800295e:	bf42      	ittt	mi
 8002960:	6833      	ldrmi	r3, [r6, #0]
 8002962:	3302      	addmi	r3, #2
 8002964:	6033      	strmi	r3, [r6, #0]
 8002966:	6825      	ldr	r5, [r4, #0]
 8002968:	f015 0506 	ands.w	r5, r5, #6
 800296c:	d106      	bne.n	800297c <_printf_common+0x48>
 800296e:	f104 0a19 	add.w	sl, r4, #25
 8002972:	68e3      	ldr	r3, [r4, #12]
 8002974:	6832      	ldr	r2, [r6, #0]
 8002976:	1a9b      	subs	r3, r3, r2
 8002978:	42ab      	cmp	r3, r5
 800297a:	dc26      	bgt.n	80029ca <_printf_common+0x96>
 800297c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002980:	1e13      	subs	r3, r2, #0
 8002982:	6822      	ldr	r2, [r4, #0]
 8002984:	bf18      	it	ne
 8002986:	2301      	movne	r3, #1
 8002988:	0692      	lsls	r2, r2, #26
 800298a:	d42b      	bmi.n	80029e4 <_printf_common+0xb0>
 800298c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002990:	4649      	mov	r1, r9
 8002992:	4638      	mov	r0, r7
 8002994:	47c0      	blx	r8
 8002996:	3001      	adds	r0, #1
 8002998:	d01e      	beq.n	80029d8 <_printf_common+0xa4>
 800299a:	6823      	ldr	r3, [r4, #0]
 800299c:	68e5      	ldr	r5, [r4, #12]
 800299e:	6832      	ldr	r2, [r6, #0]
 80029a0:	f003 0306 	and.w	r3, r3, #6
 80029a4:	2b04      	cmp	r3, #4
 80029a6:	bf08      	it	eq
 80029a8:	1aad      	subeq	r5, r5, r2
 80029aa:	68a3      	ldr	r3, [r4, #8]
 80029ac:	6922      	ldr	r2, [r4, #16]
 80029ae:	bf0c      	ite	eq
 80029b0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80029b4:	2500      	movne	r5, #0
 80029b6:	4293      	cmp	r3, r2
 80029b8:	bfc4      	itt	gt
 80029ba:	1a9b      	subgt	r3, r3, r2
 80029bc:	18ed      	addgt	r5, r5, r3
 80029be:	2600      	movs	r6, #0
 80029c0:	341a      	adds	r4, #26
 80029c2:	42b5      	cmp	r5, r6
 80029c4:	d11a      	bne.n	80029fc <_printf_common+0xc8>
 80029c6:	2000      	movs	r0, #0
 80029c8:	e008      	b.n	80029dc <_printf_common+0xa8>
 80029ca:	2301      	movs	r3, #1
 80029cc:	4652      	mov	r2, sl
 80029ce:	4649      	mov	r1, r9
 80029d0:	4638      	mov	r0, r7
 80029d2:	47c0      	blx	r8
 80029d4:	3001      	adds	r0, #1
 80029d6:	d103      	bne.n	80029e0 <_printf_common+0xac>
 80029d8:	f04f 30ff 	mov.w	r0, #4294967295
 80029dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80029e0:	3501      	adds	r5, #1
 80029e2:	e7c6      	b.n	8002972 <_printf_common+0x3e>
 80029e4:	18e1      	adds	r1, r4, r3
 80029e6:	1c5a      	adds	r2, r3, #1
 80029e8:	2030      	movs	r0, #48	; 0x30
 80029ea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80029ee:	4422      	add	r2, r4
 80029f0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80029f4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80029f8:	3302      	adds	r3, #2
 80029fa:	e7c7      	b.n	800298c <_printf_common+0x58>
 80029fc:	2301      	movs	r3, #1
 80029fe:	4622      	mov	r2, r4
 8002a00:	4649      	mov	r1, r9
 8002a02:	4638      	mov	r0, r7
 8002a04:	47c0      	blx	r8
 8002a06:	3001      	adds	r0, #1
 8002a08:	d0e6      	beq.n	80029d8 <_printf_common+0xa4>
 8002a0a:	3601      	adds	r6, #1
 8002a0c:	e7d9      	b.n	80029c2 <_printf_common+0x8e>
	...

08002a10 <_printf_i>:
 8002a10:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002a14:	7e0f      	ldrb	r7, [r1, #24]
 8002a16:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8002a18:	2f78      	cmp	r7, #120	; 0x78
 8002a1a:	4691      	mov	r9, r2
 8002a1c:	4680      	mov	r8, r0
 8002a1e:	460c      	mov	r4, r1
 8002a20:	469a      	mov	sl, r3
 8002a22:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8002a26:	d807      	bhi.n	8002a38 <_printf_i+0x28>
 8002a28:	2f62      	cmp	r7, #98	; 0x62
 8002a2a:	d80a      	bhi.n	8002a42 <_printf_i+0x32>
 8002a2c:	2f00      	cmp	r7, #0
 8002a2e:	f000 80d8 	beq.w	8002be2 <_printf_i+0x1d2>
 8002a32:	2f58      	cmp	r7, #88	; 0x58
 8002a34:	f000 80a3 	beq.w	8002b7e <_printf_i+0x16e>
 8002a38:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002a3c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002a40:	e03a      	b.n	8002ab8 <_printf_i+0xa8>
 8002a42:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002a46:	2b15      	cmp	r3, #21
 8002a48:	d8f6      	bhi.n	8002a38 <_printf_i+0x28>
 8002a4a:	a101      	add	r1, pc, #4	; (adr r1, 8002a50 <_printf_i+0x40>)
 8002a4c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002a50:	08002aa9 	.word	0x08002aa9
 8002a54:	08002abd 	.word	0x08002abd
 8002a58:	08002a39 	.word	0x08002a39
 8002a5c:	08002a39 	.word	0x08002a39
 8002a60:	08002a39 	.word	0x08002a39
 8002a64:	08002a39 	.word	0x08002a39
 8002a68:	08002abd 	.word	0x08002abd
 8002a6c:	08002a39 	.word	0x08002a39
 8002a70:	08002a39 	.word	0x08002a39
 8002a74:	08002a39 	.word	0x08002a39
 8002a78:	08002a39 	.word	0x08002a39
 8002a7c:	08002bc9 	.word	0x08002bc9
 8002a80:	08002aed 	.word	0x08002aed
 8002a84:	08002bab 	.word	0x08002bab
 8002a88:	08002a39 	.word	0x08002a39
 8002a8c:	08002a39 	.word	0x08002a39
 8002a90:	08002beb 	.word	0x08002beb
 8002a94:	08002a39 	.word	0x08002a39
 8002a98:	08002aed 	.word	0x08002aed
 8002a9c:	08002a39 	.word	0x08002a39
 8002aa0:	08002a39 	.word	0x08002a39
 8002aa4:	08002bb3 	.word	0x08002bb3
 8002aa8:	682b      	ldr	r3, [r5, #0]
 8002aaa:	1d1a      	adds	r2, r3, #4
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	602a      	str	r2, [r5, #0]
 8002ab0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002ab4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002ab8:	2301      	movs	r3, #1
 8002aba:	e0a3      	b.n	8002c04 <_printf_i+0x1f4>
 8002abc:	6820      	ldr	r0, [r4, #0]
 8002abe:	6829      	ldr	r1, [r5, #0]
 8002ac0:	0606      	lsls	r6, r0, #24
 8002ac2:	f101 0304 	add.w	r3, r1, #4
 8002ac6:	d50a      	bpl.n	8002ade <_printf_i+0xce>
 8002ac8:	680e      	ldr	r6, [r1, #0]
 8002aca:	602b      	str	r3, [r5, #0]
 8002acc:	2e00      	cmp	r6, #0
 8002ace:	da03      	bge.n	8002ad8 <_printf_i+0xc8>
 8002ad0:	232d      	movs	r3, #45	; 0x2d
 8002ad2:	4276      	negs	r6, r6
 8002ad4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002ad8:	485e      	ldr	r0, [pc, #376]	; (8002c54 <_printf_i+0x244>)
 8002ada:	230a      	movs	r3, #10
 8002adc:	e019      	b.n	8002b12 <_printf_i+0x102>
 8002ade:	680e      	ldr	r6, [r1, #0]
 8002ae0:	602b      	str	r3, [r5, #0]
 8002ae2:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002ae6:	bf18      	it	ne
 8002ae8:	b236      	sxthne	r6, r6
 8002aea:	e7ef      	b.n	8002acc <_printf_i+0xbc>
 8002aec:	682b      	ldr	r3, [r5, #0]
 8002aee:	6820      	ldr	r0, [r4, #0]
 8002af0:	1d19      	adds	r1, r3, #4
 8002af2:	6029      	str	r1, [r5, #0]
 8002af4:	0601      	lsls	r1, r0, #24
 8002af6:	d501      	bpl.n	8002afc <_printf_i+0xec>
 8002af8:	681e      	ldr	r6, [r3, #0]
 8002afa:	e002      	b.n	8002b02 <_printf_i+0xf2>
 8002afc:	0646      	lsls	r6, r0, #25
 8002afe:	d5fb      	bpl.n	8002af8 <_printf_i+0xe8>
 8002b00:	881e      	ldrh	r6, [r3, #0]
 8002b02:	4854      	ldr	r0, [pc, #336]	; (8002c54 <_printf_i+0x244>)
 8002b04:	2f6f      	cmp	r7, #111	; 0x6f
 8002b06:	bf0c      	ite	eq
 8002b08:	2308      	moveq	r3, #8
 8002b0a:	230a      	movne	r3, #10
 8002b0c:	2100      	movs	r1, #0
 8002b0e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002b12:	6865      	ldr	r5, [r4, #4]
 8002b14:	60a5      	str	r5, [r4, #8]
 8002b16:	2d00      	cmp	r5, #0
 8002b18:	bfa2      	ittt	ge
 8002b1a:	6821      	ldrge	r1, [r4, #0]
 8002b1c:	f021 0104 	bicge.w	r1, r1, #4
 8002b20:	6021      	strge	r1, [r4, #0]
 8002b22:	b90e      	cbnz	r6, 8002b28 <_printf_i+0x118>
 8002b24:	2d00      	cmp	r5, #0
 8002b26:	d04d      	beq.n	8002bc4 <_printf_i+0x1b4>
 8002b28:	4615      	mov	r5, r2
 8002b2a:	fbb6 f1f3 	udiv	r1, r6, r3
 8002b2e:	fb03 6711 	mls	r7, r3, r1, r6
 8002b32:	5dc7      	ldrb	r7, [r0, r7]
 8002b34:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002b38:	4637      	mov	r7, r6
 8002b3a:	42bb      	cmp	r3, r7
 8002b3c:	460e      	mov	r6, r1
 8002b3e:	d9f4      	bls.n	8002b2a <_printf_i+0x11a>
 8002b40:	2b08      	cmp	r3, #8
 8002b42:	d10b      	bne.n	8002b5c <_printf_i+0x14c>
 8002b44:	6823      	ldr	r3, [r4, #0]
 8002b46:	07de      	lsls	r6, r3, #31
 8002b48:	d508      	bpl.n	8002b5c <_printf_i+0x14c>
 8002b4a:	6923      	ldr	r3, [r4, #16]
 8002b4c:	6861      	ldr	r1, [r4, #4]
 8002b4e:	4299      	cmp	r1, r3
 8002b50:	bfde      	ittt	le
 8002b52:	2330      	movle	r3, #48	; 0x30
 8002b54:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002b58:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002b5c:	1b52      	subs	r2, r2, r5
 8002b5e:	6122      	str	r2, [r4, #16]
 8002b60:	f8cd a000 	str.w	sl, [sp]
 8002b64:	464b      	mov	r3, r9
 8002b66:	aa03      	add	r2, sp, #12
 8002b68:	4621      	mov	r1, r4
 8002b6a:	4640      	mov	r0, r8
 8002b6c:	f7ff fee2 	bl	8002934 <_printf_common>
 8002b70:	3001      	adds	r0, #1
 8002b72:	d14c      	bne.n	8002c0e <_printf_i+0x1fe>
 8002b74:	f04f 30ff 	mov.w	r0, #4294967295
 8002b78:	b004      	add	sp, #16
 8002b7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002b7e:	4835      	ldr	r0, [pc, #212]	; (8002c54 <_printf_i+0x244>)
 8002b80:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002b84:	6829      	ldr	r1, [r5, #0]
 8002b86:	6823      	ldr	r3, [r4, #0]
 8002b88:	f851 6b04 	ldr.w	r6, [r1], #4
 8002b8c:	6029      	str	r1, [r5, #0]
 8002b8e:	061d      	lsls	r5, r3, #24
 8002b90:	d514      	bpl.n	8002bbc <_printf_i+0x1ac>
 8002b92:	07df      	lsls	r7, r3, #31
 8002b94:	bf44      	itt	mi
 8002b96:	f043 0320 	orrmi.w	r3, r3, #32
 8002b9a:	6023      	strmi	r3, [r4, #0]
 8002b9c:	b91e      	cbnz	r6, 8002ba6 <_printf_i+0x196>
 8002b9e:	6823      	ldr	r3, [r4, #0]
 8002ba0:	f023 0320 	bic.w	r3, r3, #32
 8002ba4:	6023      	str	r3, [r4, #0]
 8002ba6:	2310      	movs	r3, #16
 8002ba8:	e7b0      	b.n	8002b0c <_printf_i+0xfc>
 8002baa:	6823      	ldr	r3, [r4, #0]
 8002bac:	f043 0320 	orr.w	r3, r3, #32
 8002bb0:	6023      	str	r3, [r4, #0]
 8002bb2:	2378      	movs	r3, #120	; 0x78
 8002bb4:	4828      	ldr	r0, [pc, #160]	; (8002c58 <_printf_i+0x248>)
 8002bb6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002bba:	e7e3      	b.n	8002b84 <_printf_i+0x174>
 8002bbc:	0659      	lsls	r1, r3, #25
 8002bbe:	bf48      	it	mi
 8002bc0:	b2b6      	uxthmi	r6, r6
 8002bc2:	e7e6      	b.n	8002b92 <_printf_i+0x182>
 8002bc4:	4615      	mov	r5, r2
 8002bc6:	e7bb      	b.n	8002b40 <_printf_i+0x130>
 8002bc8:	682b      	ldr	r3, [r5, #0]
 8002bca:	6826      	ldr	r6, [r4, #0]
 8002bcc:	6961      	ldr	r1, [r4, #20]
 8002bce:	1d18      	adds	r0, r3, #4
 8002bd0:	6028      	str	r0, [r5, #0]
 8002bd2:	0635      	lsls	r5, r6, #24
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	d501      	bpl.n	8002bdc <_printf_i+0x1cc>
 8002bd8:	6019      	str	r1, [r3, #0]
 8002bda:	e002      	b.n	8002be2 <_printf_i+0x1d2>
 8002bdc:	0670      	lsls	r0, r6, #25
 8002bde:	d5fb      	bpl.n	8002bd8 <_printf_i+0x1c8>
 8002be0:	8019      	strh	r1, [r3, #0]
 8002be2:	2300      	movs	r3, #0
 8002be4:	6123      	str	r3, [r4, #16]
 8002be6:	4615      	mov	r5, r2
 8002be8:	e7ba      	b.n	8002b60 <_printf_i+0x150>
 8002bea:	682b      	ldr	r3, [r5, #0]
 8002bec:	1d1a      	adds	r2, r3, #4
 8002bee:	602a      	str	r2, [r5, #0]
 8002bf0:	681d      	ldr	r5, [r3, #0]
 8002bf2:	6862      	ldr	r2, [r4, #4]
 8002bf4:	2100      	movs	r1, #0
 8002bf6:	4628      	mov	r0, r5
 8002bf8:	f7fd fb02 	bl	8000200 <memchr>
 8002bfc:	b108      	cbz	r0, 8002c02 <_printf_i+0x1f2>
 8002bfe:	1b40      	subs	r0, r0, r5
 8002c00:	6060      	str	r0, [r4, #4]
 8002c02:	6863      	ldr	r3, [r4, #4]
 8002c04:	6123      	str	r3, [r4, #16]
 8002c06:	2300      	movs	r3, #0
 8002c08:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002c0c:	e7a8      	b.n	8002b60 <_printf_i+0x150>
 8002c0e:	6923      	ldr	r3, [r4, #16]
 8002c10:	462a      	mov	r2, r5
 8002c12:	4649      	mov	r1, r9
 8002c14:	4640      	mov	r0, r8
 8002c16:	47d0      	blx	sl
 8002c18:	3001      	adds	r0, #1
 8002c1a:	d0ab      	beq.n	8002b74 <_printf_i+0x164>
 8002c1c:	6823      	ldr	r3, [r4, #0]
 8002c1e:	079b      	lsls	r3, r3, #30
 8002c20:	d413      	bmi.n	8002c4a <_printf_i+0x23a>
 8002c22:	68e0      	ldr	r0, [r4, #12]
 8002c24:	9b03      	ldr	r3, [sp, #12]
 8002c26:	4298      	cmp	r0, r3
 8002c28:	bfb8      	it	lt
 8002c2a:	4618      	movlt	r0, r3
 8002c2c:	e7a4      	b.n	8002b78 <_printf_i+0x168>
 8002c2e:	2301      	movs	r3, #1
 8002c30:	4632      	mov	r2, r6
 8002c32:	4649      	mov	r1, r9
 8002c34:	4640      	mov	r0, r8
 8002c36:	47d0      	blx	sl
 8002c38:	3001      	adds	r0, #1
 8002c3a:	d09b      	beq.n	8002b74 <_printf_i+0x164>
 8002c3c:	3501      	adds	r5, #1
 8002c3e:	68e3      	ldr	r3, [r4, #12]
 8002c40:	9903      	ldr	r1, [sp, #12]
 8002c42:	1a5b      	subs	r3, r3, r1
 8002c44:	42ab      	cmp	r3, r5
 8002c46:	dcf2      	bgt.n	8002c2e <_printf_i+0x21e>
 8002c48:	e7eb      	b.n	8002c22 <_printf_i+0x212>
 8002c4a:	2500      	movs	r5, #0
 8002c4c:	f104 0619 	add.w	r6, r4, #25
 8002c50:	e7f5      	b.n	8002c3e <_printf_i+0x22e>
 8002c52:	bf00      	nop
 8002c54:	08004f5a 	.word	0x08004f5a
 8002c58:	08004f6b 	.word	0x08004f6b

08002c5c <iprintf>:
 8002c5c:	b40f      	push	{r0, r1, r2, r3}
 8002c5e:	4b0a      	ldr	r3, [pc, #40]	; (8002c88 <iprintf+0x2c>)
 8002c60:	b513      	push	{r0, r1, r4, lr}
 8002c62:	681c      	ldr	r4, [r3, #0]
 8002c64:	b124      	cbz	r4, 8002c70 <iprintf+0x14>
 8002c66:	69a3      	ldr	r3, [r4, #24]
 8002c68:	b913      	cbnz	r3, 8002c70 <iprintf+0x14>
 8002c6a:	4620      	mov	r0, r4
 8002c6c:	f001 f8d8 	bl	8003e20 <__sinit>
 8002c70:	ab05      	add	r3, sp, #20
 8002c72:	9a04      	ldr	r2, [sp, #16]
 8002c74:	68a1      	ldr	r1, [r4, #8]
 8002c76:	9301      	str	r3, [sp, #4]
 8002c78:	4620      	mov	r0, r4
 8002c7a:	f001 fe95 	bl	80049a8 <_vfiprintf_r>
 8002c7e:	b002      	add	sp, #8
 8002c80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c84:	b004      	add	sp, #16
 8002c86:	4770      	bx	lr
 8002c88:	20000148 	.word	0x20000148

08002c8c <_puts_r>:
 8002c8c:	b570      	push	{r4, r5, r6, lr}
 8002c8e:	460e      	mov	r6, r1
 8002c90:	4605      	mov	r5, r0
 8002c92:	b118      	cbz	r0, 8002c9c <_puts_r+0x10>
 8002c94:	6983      	ldr	r3, [r0, #24]
 8002c96:	b90b      	cbnz	r3, 8002c9c <_puts_r+0x10>
 8002c98:	f001 f8c2 	bl	8003e20 <__sinit>
 8002c9c:	69ab      	ldr	r3, [r5, #24]
 8002c9e:	68ac      	ldr	r4, [r5, #8]
 8002ca0:	b913      	cbnz	r3, 8002ca8 <_puts_r+0x1c>
 8002ca2:	4628      	mov	r0, r5
 8002ca4:	f001 f8bc 	bl	8003e20 <__sinit>
 8002ca8:	4b2c      	ldr	r3, [pc, #176]	; (8002d5c <_puts_r+0xd0>)
 8002caa:	429c      	cmp	r4, r3
 8002cac:	d120      	bne.n	8002cf0 <_puts_r+0x64>
 8002cae:	686c      	ldr	r4, [r5, #4]
 8002cb0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002cb2:	07db      	lsls	r3, r3, #31
 8002cb4:	d405      	bmi.n	8002cc2 <_puts_r+0x36>
 8002cb6:	89a3      	ldrh	r3, [r4, #12]
 8002cb8:	0598      	lsls	r0, r3, #22
 8002cba:	d402      	bmi.n	8002cc2 <_puts_r+0x36>
 8002cbc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002cbe:	f001 f952 	bl	8003f66 <__retarget_lock_acquire_recursive>
 8002cc2:	89a3      	ldrh	r3, [r4, #12]
 8002cc4:	0719      	lsls	r1, r3, #28
 8002cc6:	d51d      	bpl.n	8002d04 <_puts_r+0x78>
 8002cc8:	6923      	ldr	r3, [r4, #16]
 8002cca:	b1db      	cbz	r3, 8002d04 <_puts_r+0x78>
 8002ccc:	3e01      	subs	r6, #1
 8002cce:	68a3      	ldr	r3, [r4, #8]
 8002cd0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002cd4:	3b01      	subs	r3, #1
 8002cd6:	60a3      	str	r3, [r4, #8]
 8002cd8:	bb39      	cbnz	r1, 8002d2a <_puts_r+0x9e>
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	da38      	bge.n	8002d50 <_puts_r+0xc4>
 8002cde:	4622      	mov	r2, r4
 8002ce0:	210a      	movs	r1, #10
 8002ce2:	4628      	mov	r0, r5
 8002ce4:	f000 f848 	bl	8002d78 <__swbuf_r>
 8002ce8:	3001      	adds	r0, #1
 8002cea:	d011      	beq.n	8002d10 <_puts_r+0x84>
 8002cec:	250a      	movs	r5, #10
 8002cee:	e011      	b.n	8002d14 <_puts_r+0x88>
 8002cf0:	4b1b      	ldr	r3, [pc, #108]	; (8002d60 <_puts_r+0xd4>)
 8002cf2:	429c      	cmp	r4, r3
 8002cf4:	d101      	bne.n	8002cfa <_puts_r+0x6e>
 8002cf6:	68ac      	ldr	r4, [r5, #8]
 8002cf8:	e7da      	b.n	8002cb0 <_puts_r+0x24>
 8002cfa:	4b1a      	ldr	r3, [pc, #104]	; (8002d64 <_puts_r+0xd8>)
 8002cfc:	429c      	cmp	r4, r3
 8002cfe:	bf08      	it	eq
 8002d00:	68ec      	ldreq	r4, [r5, #12]
 8002d02:	e7d5      	b.n	8002cb0 <_puts_r+0x24>
 8002d04:	4621      	mov	r1, r4
 8002d06:	4628      	mov	r0, r5
 8002d08:	f000 f888 	bl	8002e1c <__swsetup_r>
 8002d0c:	2800      	cmp	r0, #0
 8002d0e:	d0dd      	beq.n	8002ccc <_puts_r+0x40>
 8002d10:	f04f 35ff 	mov.w	r5, #4294967295
 8002d14:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002d16:	07da      	lsls	r2, r3, #31
 8002d18:	d405      	bmi.n	8002d26 <_puts_r+0x9a>
 8002d1a:	89a3      	ldrh	r3, [r4, #12]
 8002d1c:	059b      	lsls	r3, r3, #22
 8002d1e:	d402      	bmi.n	8002d26 <_puts_r+0x9a>
 8002d20:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002d22:	f001 f921 	bl	8003f68 <__retarget_lock_release_recursive>
 8002d26:	4628      	mov	r0, r5
 8002d28:	bd70      	pop	{r4, r5, r6, pc}
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	da04      	bge.n	8002d38 <_puts_r+0xac>
 8002d2e:	69a2      	ldr	r2, [r4, #24]
 8002d30:	429a      	cmp	r2, r3
 8002d32:	dc06      	bgt.n	8002d42 <_puts_r+0xb6>
 8002d34:	290a      	cmp	r1, #10
 8002d36:	d004      	beq.n	8002d42 <_puts_r+0xb6>
 8002d38:	6823      	ldr	r3, [r4, #0]
 8002d3a:	1c5a      	adds	r2, r3, #1
 8002d3c:	6022      	str	r2, [r4, #0]
 8002d3e:	7019      	strb	r1, [r3, #0]
 8002d40:	e7c5      	b.n	8002cce <_puts_r+0x42>
 8002d42:	4622      	mov	r2, r4
 8002d44:	4628      	mov	r0, r5
 8002d46:	f000 f817 	bl	8002d78 <__swbuf_r>
 8002d4a:	3001      	adds	r0, #1
 8002d4c:	d1bf      	bne.n	8002cce <_puts_r+0x42>
 8002d4e:	e7df      	b.n	8002d10 <_puts_r+0x84>
 8002d50:	6823      	ldr	r3, [r4, #0]
 8002d52:	250a      	movs	r5, #10
 8002d54:	1c5a      	adds	r2, r3, #1
 8002d56:	6022      	str	r2, [r4, #0]
 8002d58:	701d      	strb	r5, [r3, #0]
 8002d5a:	e7db      	b.n	8002d14 <_puts_r+0x88>
 8002d5c:	0800502c 	.word	0x0800502c
 8002d60:	0800504c 	.word	0x0800504c
 8002d64:	0800500c 	.word	0x0800500c

08002d68 <puts>:
 8002d68:	4b02      	ldr	r3, [pc, #8]	; (8002d74 <puts+0xc>)
 8002d6a:	4601      	mov	r1, r0
 8002d6c:	6818      	ldr	r0, [r3, #0]
 8002d6e:	f7ff bf8d 	b.w	8002c8c <_puts_r>
 8002d72:	bf00      	nop
 8002d74:	20000148 	.word	0x20000148

08002d78 <__swbuf_r>:
 8002d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002d7a:	460e      	mov	r6, r1
 8002d7c:	4614      	mov	r4, r2
 8002d7e:	4605      	mov	r5, r0
 8002d80:	b118      	cbz	r0, 8002d8a <__swbuf_r+0x12>
 8002d82:	6983      	ldr	r3, [r0, #24]
 8002d84:	b90b      	cbnz	r3, 8002d8a <__swbuf_r+0x12>
 8002d86:	f001 f84b 	bl	8003e20 <__sinit>
 8002d8a:	4b21      	ldr	r3, [pc, #132]	; (8002e10 <__swbuf_r+0x98>)
 8002d8c:	429c      	cmp	r4, r3
 8002d8e:	d12b      	bne.n	8002de8 <__swbuf_r+0x70>
 8002d90:	686c      	ldr	r4, [r5, #4]
 8002d92:	69a3      	ldr	r3, [r4, #24]
 8002d94:	60a3      	str	r3, [r4, #8]
 8002d96:	89a3      	ldrh	r3, [r4, #12]
 8002d98:	071a      	lsls	r2, r3, #28
 8002d9a:	d52f      	bpl.n	8002dfc <__swbuf_r+0x84>
 8002d9c:	6923      	ldr	r3, [r4, #16]
 8002d9e:	b36b      	cbz	r3, 8002dfc <__swbuf_r+0x84>
 8002da0:	6923      	ldr	r3, [r4, #16]
 8002da2:	6820      	ldr	r0, [r4, #0]
 8002da4:	1ac0      	subs	r0, r0, r3
 8002da6:	6963      	ldr	r3, [r4, #20]
 8002da8:	b2f6      	uxtb	r6, r6
 8002daa:	4283      	cmp	r3, r0
 8002dac:	4637      	mov	r7, r6
 8002dae:	dc04      	bgt.n	8002dba <__swbuf_r+0x42>
 8002db0:	4621      	mov	r1, r4
 8002db2:	4628      	mov	r0, r5
 8002db4:	f000 ffa0 	bl	8003cf8 <_fflush_r>
 8002db8:	bb30      	cbnz	r0, 8002e08 <__swbuf_r+0x90>
 8002dba:	68a3      	ldr	r3, [r4, #8]
 8002dbc:	3b01      	subs	r3, #1
 8002dbe:	60a3      	str	r3, [r4, #8]
 8002dc0:	6823      	ldr	r3, [r4, #0]
 8002dc2:	1c5a      	adds	r2, r3, #1
 8002dc4:	6022      	str	r2, [r4, #0]
 8002dc6:	701e      	strb	r6, [r3, #0]
 8002dc8:	6963      	ldr	r3, [r4, #20]
 8002dca:	3001      	adds	r0, #1
 8002dcc:	4283      	cmp	r3, r0
 8002dce:	d004      	beq.n	8002dda <__swbuf_r+0x62>
 8002dd0:	89a3      	ldrh	r3, [r4, #12]
 8002dd2:	07db      	lsls	r3, r3, #31
 8002dd4:	d506      	bpl.n	8002de4 <__swbuf_r+0x6c>
 8002dd6:	2e0a      	cmp	r6, #10
 8002dd8:	d104      	bne.n	8002de4 <__swbuf_r+0x6c>
 8002dda:	4621      	mov	r1, r4
 8002ddc:	4628      	mov	r0, r5
 8002dde:	f000 ff8b 	bl	8003cf8 <_fflush_r>
 8002de2:	b988      	cbnz	r0, 8002e08 <__swbuf_r+0x90>
 8002de4:	4638      	mov	r0, r7
 8002de6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002de8:	4b0a      	ldr	r3, [pc, #40]	; (8002e14 <__swbuf_r+0x9c>)
 8002dea:	429c      	cmp	r4, r3
 8002dec:	d101      	bne.n	8002df2 <__swbuf_r+0x7a>
 8002dee:	68ac      	ldr	r4, [r5, #8]
 8002df0:	e7cf      	b.n	8002d92 <__swbuf_r+0x1a>
 8002df2:	4b09      	ldr	r3, [pc, #36]	; (8002e18 <__swbuf_r+0xa0>)
 8002df4:	429c      	cmp	r4, r3
 8002df6:	bf08      	it	eq
 8002df8:	68ec      	ldreq	r4, [r5, #12]
 8002dfa:	e7ca      	b.n	8002d92 <__swbuf_r+0x1a>
 8002dfc:	4621      	mov	r1, r4
 8002dfe:	4628      	mov	r0, r5
 8002e00:	f000 f80c 	bl	8002e1c <__swsetup_r>
 8002e04:	2800      	cmp	r0, #0
 8002e06:	d0cb      	beq.n	8002da0 <__swbuf_r+0x28>
 8002e08:	f04f 37ff 	mov.w	r7, #4294967295
 8002e0c:	e7ea      	b.n	8002de4 <__swbuf_r+0x6c>
 8002e0e:	bf00      	nop
 8002e10:	0800502c 	.word	0x0800502c
 8002e14:	0800504c 	.word	0x0800504c
 8002e18:	0800500c 	.word	0x0800500c

08002e1c <__swsetup_r>:
 8002e1c:	4b32      	ldr	r3, [pc, #200]	; (8002ee8 <__swsetup_r+0xcc>)
 8002e1e:	b570      	push	{r4, r5, r6, lr}
 8002e20:	681d      	ldr	r5, [r3, #0]
 8002e22:	4606      	mov	r6, r0
 8002e24:	460c      	mov	r4, r1
 8002e26:	b125      	cbz	r5, 8002e32 <__swsetup_r+0x16>
 8002e28:	69ab      	ldr	r3, [r5, #24]
 8002e2a:	b913      	cbnz	r3, 8002e32 <__swsetup_r+0x16>
 8002e2c:	4628      	mov	r0, r5
 8002e2e:	f000 fff7 	bl	8003e20 <__sinit>
 8002e32:	4b2e      	ldr	r3, [pc, #184]	; (8002eec <__swsetup_r+0xd0>)
 8002e34:	429c      	cmp	r4, r3
 8002e36:	d10f      	bne.n	8002e58 <__swsetup_r+0x3c>
 8002e38:	686c      	ldr	r4, [r5, #4]
 8002e3a:	89a3      	ldrh	r3, [r4, #12]
 8002e3c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002e40:	0719      	lsls	r1, r3, #28
 8002e42:	d42c      	bmi.n	8002e9e <__swsetup_r+0x82>
 8002e44:	06dd      	lsls	r5, r3, #27
 8002e46:	d411      	bmi.n	8002e6c <__swsetup_r+0x50>
 8002e48:	2309      	movs	r3, #9
 8002e4a:	6033      	str	r3, [r6, #0]
 8002e4c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8002e50:	81a3      	strh	r3, [r4, #12]
 8002e52:	f04f 30ff 	mov.w	r0, #4294967295
 8002e56:	e03e      	b.n	8002ed6 <__swsetup_r+0xba>
 8002e58:	4b25      	ldr	r3, [pc, #148]	; (8002ef0 <__swsetup_r+0xd4>)
 8002e5a:	429c      	cmp	r4, r3
 8002e5c:	d101      	bne.n	8002e62 <__swsetup_r+0x46>
 8002e5e:	68ac      	ldr	r4, [r5, #8]
 8002e60:	e7eb      	b.n	8002e3a <__swsetup_r+0x1e>
 8002e62:	4b24      	ldr	r3, [pc, #144]	; (8002ef4 <__swsetup_r+0xd8>)
 8002e64:	429c      	cmp	r4, r3
 8002e66:	bf08      	it	eq
 8002e68:	68ec      	ldreq	r4, [r5, #12]
 8002e6a:	e7e6      	b.n	8002e3a <__swsetup_r+0x1e>
 8002e6c:	0758      	lsls	r0, r3, #29
 8002e6e:	d512      	bpl.n	8002e96 <__swsetup_r+0x7a>
 8002e70:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002e72:	b141      	cbz	r1, 8002e86 <__swsetup_r+0x6a>
 8002e74:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002e78:	4299      	cmp	r1, r3
 8002e7a:	d002      	beq.n	8002e82 <__swsetup_r+0x66>
 8002e7c:	4630      	mov	r0, r6
 8002e7e:	f001 fc89 	bl	8004794 <_free_r>
 8002e82:	2300      	movs	r3, #0
 8002e84:	6363      	str	r3, [r4, #52]	; 0x34
 8002e86:	89a3      	ldrh	r3, [r4, #12]
 8002e88:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8002e8c:	81a3      	strh	r3, [r4, #12]
 8002e8e:	2300      	movs	r3, #0
 8002e90:	6063      	str	r3, [r4, #4]
 8002e92:	6923      	ldr	r3, [r4, #16]
 8002e94:	6023      	str	r3, [r4, #0]
 8002e96:	89a3      	ldrh	r3, [r4, #12]
 8002e98:	f043 0308 	orr.w	r3, r3, #8
 8002e9c:	81a3      	strh	r3, [r4, #12]
 8002e9e:	6923      	ldr	r3, [r4, #16]
 8002ea0:	b94b      	cbnz	r3, 8002eb6 <__swsetup_r+0x9a>
 8002ea2:	89a3      	ldrh	r3, [r4, #12]
 8002ea4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8002ea8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002eac:	d003      	beq.n	8002eb6 <__swsetup_r+0x9a>
 8002eae:	4621      	mov	r1, r4
 8002eb0:	4630      	mov	r0, r6
 8002eb2:	f001 f87f 	bl	8003fb4 <__smakebuf_r>
 8002eb6:	89a0      	ldrh	r0, [r4, #12]
 8002eb8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002ebc:	f010 0301 	ands.w	r3, r0, #1
 8002ec0:	d00a      	beq.n	8002ed8 <__swsetup_r+0xbc>
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	60a3      	str	r3, [r4, #8]
 8002ec6:	6963      	ldr	r3, [r4, #20]
 8002ec8:	425b      	negs	r3, r3
 8002eca:	61a3      	str	r3, [r4, #24]
 8002ecc:	6923      	ldr	r3, [r4, #16]
 8002ece:	b943      	cbnz	r3, 8002ee2 <__swsetup_r+0xc6>
 8002ed0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8002ed4:	d1ba      	bne.n	8002e4c <__swsetup_r+0x30>
 8002ed6:	bd70      	pop	{r4, r5, r6, pc}
 8002ed8:	0781      	lsls	r1, r0, #30
 8002eda:	bf58      	it	pl
 8002edc:	6963      	ldrpl	r3, [r4, #20]
 8002ede:	60a3      	str	r3, [r4, #8]
 8002ee0:	e7f4      	b.n	8002ecc <__swsetup_r+0xb0>
 8002ee2:	2000      	movs	r0, #0
 8002ee4:	e7f7      	b.n	8002ed6 <__swsetup_r+0xba>
 8002ee6:	bf00      	nop
 8002ee8:	20000148 	.word	0x20000148
 8002eec:	0800502c 	.word	0x0800502c
 8002ef0:	0800504c 	.word	0x0800504c
 8002ef4:	0800500c 	.word	0x0800500c

08002ef8 <quorem>:
 8002ef8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002efc:	6903      	ldr	r3, [r0, #16]
 8002efe:	690c      	ldr	r4, [r1, #16]
 8002f00:	42a3      	cmp	r3, r4
 8002f02:	4607      	mov	r7, r0
 8002f04:	f2c0 8081 	blt.w	800300a <quorem+0x112>
 8002f08:	3c01      	subs	r4, #1
 8002f0a:	f101 0814 	add.w	r8, r1, #20
 8002f0e:	f100 0514 	add.w	r5, r0, #20
 8002f12:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002f16:	9301      	str	r3, [sp, #4]
 8002f18:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002f1c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002f20:	3301      	adds	r3, #1
 8002f22:	429a      	cmp	r2, r3
 8002f24:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002f28:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002f2c:	fbb2 f6f3 	udiv	r6, r2, r3
 8002f30:	d331      	bcc.n	8002f96 <quorem+0x9e>
 8002f32:	f04f 0e00 	mov.w	lr, #0
 8002f36:	4640      	mov	r0, r8
 8002f38:	46ac      	mov	ip, r5
 8002f3a:	46f2      	mov	sl, lr
 8002f3c:	f850 2b04 	ldr.w	r2, [r0], #4
 8002f40:	b293      	uxth	r3, r2
 8002f42:	fb06 e303 	mla	r3, r6, r3, lr
 8002f46:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8002f4a:	b29b      	uxth	r3, r3
 8002f4c:	ebaa 0303 	sub.w	r3, sl, r3
 8002f50:	f8dc a000 	ldr.w	sl, [ip]
 8002f54:	0c12      	lsrs	r2, r2, #16
 8002f56:	fa13 f38a 	uxtah	r3, r3, sl
 8002f5a:	fb06 e202 	mla	r2, r6, r2, lr
 8002f5e:	9300      	str	r3, [sp, #0]
 8002f60:	9b00      	ldr	r3, [sp, #0]
 8002f62:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002f66:	b292      	uxth	r2, r2
 8002f68:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002f6c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002f70:	f8bd 3000 	ldrh.w	r3, [sp]
 8002f74:	4581      	cmp	r9, r0
 8002f76:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002f7a:	f84c 3b04 	str.w	r3, [ip], #4
 8002f7e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002f82:	d2db      	bcs.n	8002f3c <quorem+0x44>
 8002f84:	f855 300b 	ldr.w	r3, [r5, fp]
 8002f88:	b92b      	cbnz	r3, 8002f96 <quorem+0x9e>
 8002f8a:	9b01      	ldr	r3, [sp, #4]
 8002f8c:	3b04      	subs	r3, #4
 8002f8e:	429d      	cmp	r5, r3
 8002f90:	461a      	mov	r2, r3
 8002f92:	d32e      	bcc.n	8002ff2 <quorem+0xfa>
 8002f94:	613c      	str	r4, [r7, #16]
 8002f96:	4638      	mov	r0, r7
 8002f98:	f001 fae4 	bl	8004564 <__mcmp>
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	db24      	blt.n	8002fea <quorem+0xf2>
 8002fa0:	3601      	adds	r6, #1
 8002fa2:	4628      	mov	r0, r5
 8002fa4:	f04f 0c00 	mov.w	ip, #0
 8002fa8:	f858 2b04 	ldr.w	r2, [r8], #4
 8002fac:	f8d0 e000 	ldr.w	lr, [r0]
 8002fb0:	b293      	uxth	r3, r2
 8002fb2:	ebac 0303 	sub.w	r3, ip, r3
 8002fb6:	0c12      	lsrs	r2, r2, #16
 8002fb8:	fa13 f38e 	uxtah	r3, r3, lr
 8002fbc:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8002fc0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002fc4:	b29b      	uxth	r3, r3
 8002fc6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002fca:	45c1      	cmp	r9, r8
 8002fcc:	f840 3b04 	str.w	r3, [r0], #4
 8002fd0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8002fd4:	d2e8      	bcs.n	8002fa8 <quorem+0xb0>
 8002fd6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002fda:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002fde:	b922      	cbnz	r2, 8002fea <quorem+0xf2>
 8002fe0:	3b04      	subs	r3, #4
 8002fe2:	429d      	cmp	r5, r3
 8002fe4:	461a      	mov	r2, r3
 8002fe6:	d30a      	bcc.n	8002ffe <quorem+0x106>
 8002fe8:	613c      	str	r4, [r7, #16]
 8002fea:	4630      	mov	r0, r6
 8002fec:	b003      	add	sp, #12
 8002fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ff2:	6812      	ldr	r2, [r2, #0]
 8002ff4:	3b04      	subs	r3, #4
 8002ff6:	2a00      	cmp	r2, #0
 8002ff8:	d1cc      	bne.n	8002f94 <quorem+0x9c>
 8002ffa:	3c01      	subs	r4, #1
 8002ffc:	e7c7      	b.n	8002f8e <quorem+0x96>
 8002ffe:	6812      	ldr	r2, [r2, #0]
 8003000:	3b04      	subs	r3, #4
 8003002:	2a00      	cmp	r2, #0
 8003004:	d1f0      	bne.n	8002fe8 <quorem+0xf0>
 8003006:	3c01      	subs	r4, #1
 8003008:	e7eb      	b.n	8002fe2 <quorem+0xea>
 800300a:	2000      	movs	r0, #0
 800300c:	e7ee      	b.n	8002fec <quorem+0xf4>
	...

08003010 <_dtoa_r>:
 8003010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003014:	ed2d 8b04 	vpush	{d8-d9}
 8003018:	ec57 6b10 	vmov	r6, r7, d0
 800301c:	b093      	sub	sp, #76	; 0x4c
 800301e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8003020:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8003024:	9106      	str	r1, [sp, #24]
 8003026:	ee10 aa10 	vmov	sl, s0
 800302a:	4604      	mov	r4, r0
 800302c:	9209      	str	r2, [sp, #36]	; 0x24
 800302e:	930c      	str	r3, [sp, #48]	; 0x30
 8003030:	46bb      	mov	fp, r7
 8003032:	b975      	cbnz	r5, 8003052 <_dtoa_r+0x42>
 8003034:	2010      	movs	r0, #16
 8003036:	f000 fffd 	bl	8004034 <malloc>
 800303a:	4602      	mov	r2, r0
 800303c:	6260      	str	r0, [r4, #36]	; 0x24
 800303e:	b920      	cbnz	r0, 800304a <_dtoa_r+0x3a>
 8003040:	4ba7      	ldr	r3, [pc, #668]	; (80032e0 <_dtoa_r+0x2d0>)
 8003042:	21ea      	movs	r1, #234	; 0xea
 8003044:	48a7      	ldr	r0, [pc, #668]	; (80032e4 <_dtoa_r+0x2d4>)
 8003046:	f001 fe45 	bl	8004cd4 <__assert_func>
 800304a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800304e:	6005      	str	r5, [r0, #0]
 8003050:	60c5      	str	r5, [r0, #12]
 8003052:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003054:	6819      	ldr	r1, [r3, #0]
 8003056:	b151      	cbz	r1, 800306e <_dtoa_r+0x5e>
 8003058:	685a      	ldr	r2, [r3, #4]
 800305a:	604a      	str	r2, [r1, #4]
 800305c:	2301      	movs	r3, #1
 800305e:	4093      	lsls	r3, r2
 8003060:	608b      	str	r3, [r1, #8]
 8003062:	4620      	mov	r0, r4
 8003064:	f001 f83c 	bl	80040e0 <_Bfree>
 8003068:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800306a:	2200      	movs	r2, #0
 800306c:	601a      	str	r2, [r3, #0]
 800306e:	1e3b      	subs	r3, r7, #0
 8003070:	bfaa      	itet	ge
 8003072:	2300      	movge	r3, #0
 8003074:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 8003078:	f8c8 3000 	strge.w	r3, [r8]
 800307c:	4b9a      	ldr	r3, [pc, #616]	; (80032e8 <_dtoa_r+0x2d8>)
 800307e:	bfbc      	itt	lt
 8003080:	2201      	movlt	r2, #1
 8003082:	f8c8 2000 	strlt.w	r2, [r8]
 8003086:	ea33 030b 	bics.w	r3, r3, fp
 800308a:	d11b      	bne.n	80030c4 <_dtoa_r+0xb4>
 800308c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800308e:	f242 730f 	movw	r3, #9999	; 0x270f
 8003092:	6013      	str	r3, [r2, #0]
 8003094:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8003098:	4333      	orrs	r3, r6
 800309a:	f000 8592 	beq.w	8003bc2 <_dtoa_r+0xbb2>
 800309e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030a0:	b963      	cbnz	r3, 80030bc <_dtoa_r+0xac>
 80030a2:	4b92      	ldr	r3, [pc, #584]	; (80032ec <_dtoa_r+0x2dc>)
 80030a4:	e022      	b.n	80030ec <_dtoa_r+0xdc>
 80030a6:	4b92      	ldr	r3, [pc, #584]	; (80032f0 <_dtoa_r+0x2e0>)
 80030a8:	9301      	str	r3, [sp, #4]
 80030aa:	3308      	adds	r3, #8
 80030ac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80030ae:	6013      	str	r3, [r2, #0]
 80030b0:	9801      	ldr	r0, [sp, #4]
 80030b2:	b013      	add	sp, #76	; 0x4c
 80030b4:	ecbd 8b04 	vpop	{d8-d9}
 80030b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030bc:	4b8b      	ldr	r3, [pc, #556]	; (80032ec <_dtoa_r+0x2dc>)
 80030be:	9301      	str	r3, [sp, #4]
 80030c0:	3303      	adds	r3, #3
 80030c2:	e7f3      	b.n	80030ac <_dtoa_r+0x9c>
 80030c4:	2200      	movs	r2, #0
 80030c6:	2300      	movs	r3, #0
 80030c8:	4650      	mov	r0, sl
 80030ca:	4659      	mov	r1, fp
 80030cc:	f7fd fd0c 	bl	8000ae8 <__aeabi_dcmpeq>
 80030d0:	ec4b ab19 	vmov	d9, sl, fp
 80030d4:	4680      	mov	r8, r0
 80030d6:	b158      	cbz	r0, 80030f0 <_dtoa_r+0xe0>
 80030d8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80030da:	2301      	movs	r3, #1
 80030dc:	6013      	str	r3, [r2, #0]
 80030de:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	f000 856b 	beq.w	8003bbc <_dtoa_r+0xbac>
 80030e6:	4883      	ldr	r0, [pc, #524]	; (80032f4 <_dtoa_r+0x2e4>)
 80030e8:	6018      	str	r0, [r3, #0]
 80030ea:	1e43      	subs	r3, r0, #1
 80030ec:	9301      	str	r3, [sp, #4]
 80030ee:	e7df      	b.n	80030b0 <_dtoa_r+0xa0>
 80030f0:	ec4b ab10 	vmov	d0, sl, fp
 80030f4:	aa10      	add	r2, sp, #64	; 0x40
 80030f6:	a911      	add	r1, sp, #68	; 0x44
 80030f8:	4620      	mov	r0, r4
 80030fa:	f001 fad9 	bl	80046b0 <__d2b>
 80030fe:	f3cb 550a 	ubfx	r5, fp, #20, #11
 8003102:	ee08 0a10 	vmov	s16, r0
 8003106:	2d00      	cmp	r5, #0
 8003108:	f000 8084 	beq.w	8003214 <_dtoa_r+0x204>
 800310c:	ee19 3a90 	vmov	r3, s19
 8003110:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003114:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8003118:	4656      	mov	r6, sl
 800311a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800311e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8003122:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8003126:	4b74      	ldr	r3, [pc, #464]	; (80032f8 <_dtoa_r+0x2e8>)
 8003128:	2200      	movs	r2, #0
 800312a:	4630      	mov	r0, r6
 800312c:	4639      	mov	r1, r7
 800312e:	f7fd f8bb 	bl	80002a8 <__aeabi_dsub>
 8003132:	a365      	add	r3, pc, #404	; (adr r3, 80032c8 <_dtoa_r+0x2b8>)
 8003134:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003138:	f7fd fa6e 	bl	8000618 <__aeabi_dmul>
 800313c:	a364      	add	r3, pc, #400	; (adr r3, 80032d0 <_dtoa_r+0x2c0>)
 800313e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003142:	f7fd f8b3 	bl	80002ac <__adddf3>
 8003146:	4606      	mov	r6, r0
 8003148:	4628      	mov	r0, r5
 800314a:	460f      	mov	r7, r1
 800314c:	f7fd f9fa 	bl	8000544 <__aeabi_i2d>
 8003150:	a361      	add	r3, pc, #388	; (adr r3, 80032d8 <_dtoa_r+0x2c8>)
 8003152:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003156:	f7fd fa5f 	bl	8000618 <__aeabi_dmul>
 800315a:	4602      	mov	r2, r0
 800315c:	460b      	mov	r3, r1
 800315e:	4630      	mov	r0, r6
 8003160:	4639      	mov	r1, r7
 8003162:	f7fd f8a3 	bl	80002ac <__adddf3>
 8003166:	4606      	mov	r6, r0
 8003168:	460f      	mov	r7, r1
 800316a:	f7fd fd05 	bl	8000b78 <__aeabi_d2iz>
 800316e:	2200      	movs	r2, #0
 8003170:	9000      	str	r0, [sp, #0]
 8003172:	2300      	movs	r3, #0
 8003174:	4630      	mov	r0, r6
 8003176:	4639      	mov	r1, r7
 8003178:	f7fd fcc0 	bl	8000afc <__aeabi_dcmplt>
 800317c:	b150      	cbz	r0, 8003194 <_dtoa_r+0x184>
 800317e:	9800      	ldr	r0, [sp, #0]
 8003180:	f7fd f9e0 	bl	8000544 <__aeabi_i2d>
 8003184:	4632      	mov	r2, r6
 8003186:	463b      	mov	r3, r7
 8003188:	f7fd fcae 	bl	8000ae8 <__aeabi_dcmpeq>
 800318c:	b910      	cbnz	r0, 8003194 <_dtoa_r+0x184>
 800318e:	9b00      	ldr	r3, [sp, #0]
 8003190:	3b01      	subs	r3, #1
 8003192:	9300      	str	r3, [sp, #0]
 8003194:	9b00      	ldr	r3, [sp, #0]
 8003196:	2b16      	cmp	r3, #22
 8003198:	d85a      	bhi.n	8003250 <_dtoa_r+0x240>
 800319a:	9a00      	ldr	r2, [sp, #0]
 800319c:	4b57      	ldr	r3, [pc, #348]	; (80032fc <_dtoa_r+0x2ec>)
 800319e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80031a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80031a6:	ec51 0b19 	vmov	r0, r1, d9
 80031aa:	f7fd fca7 	bl	8000afc <__aeabi_dcmplt>
 80031ae:	2800      	cmp	r0, #0
 80031b0:	d050      	beq.n	8003254 <_dtoa_r+0x244>
 80031b2:	9b00      	ldr	r3, [sp, #0]
 80031b4:	3b01      	subs	r3, #1
 80031b6:	9300      	str	r3, [sp, #0]
 80031b8:	2300      	movs	r3, #0
 80031ba:	930b      	str	r3, [sp, #44]	; 0x2c
 80031bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80031be:	1b5d      	subs	r5, r3, r5
 80031c0:	1e6b      	subs	r3, r5, #1
 80031c2:	9305      	str	r3, [sp, #20]
 80031c4:	bf45      	ittet	mi
 80031c6:	f1c5 0301 	rsbmi	r3, r5, #1
 80031ca:	9304      	strmi	r3, [sp, #16]
 80031cc:	2300      	movpl	r3, #0
 80031ce:	2300      	movmi	r3, #0
 80031d0:	bf4c      	ite	mi
 80031d2:	9305      	strmi	r3, [sp, #20]
 80031d4:	9304      	strpl	r3, [sp, #16]
 80031d6:	9b00      	ldr	r3, [sp, #0]
 80031d8:	2b00      	cmp	r3, #0
 80031da:	db3d      	blt.n	8003258 <_dtoa_r+0x248>
 80031dc:	9b05      	ldr	r3, [sp, #20]
 80031de:	9a00      	ldr	r2, [sp, #0]
 80031e0:	920a      	str	r2, [sp, #40]	; 0x28
 80031e2:	4413      	add	r3, r2
 80031e4:	9305      	str	r3, [sp, #20]
 80031e6:	2300      	movs	r3, #0
 80031e8:	9307      	str	r3, [sp, #28]
 80031ea:	9b06      	ldr	r3, [sp, #24]
 80031ec:	2b09      	cmp	r3, #9
 80031ee:	f200 8089 	bhi.w	8003304 <_dtoa_r+0x2f4>
 80031f2:	2b05      	cmp	r3, #5
 80031f4:	bfc4      	itt	gt
 80031f6:	3b04      	subgt	r3, #4
 80031f8:	9306      	strgt	r3, [sp, #24]
 80031fa:	9b06      	ldr	r3, [sp, #24]
 80031fc:	f1a3 0302 	sub.w	r3, r3, #2
 8003200:	bfcc      	ite	gt
 8003202:	2500      	movgt	r5, #0
 8003204:	2501      	movle	r5, #1
 8003206:	2b03      	cmp	r3, #3
 8003208:	f200 8087 	bhi.w	800331a <_dtoa_r+0x30a>
 800320c:	e8df f003 	tbb	[pc, r3]
 8003210:	59383a2d 	.word	0x59383a2d
 8003214:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8003218:	441d      	add	r5, r3
 800321a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800321e:	2b20      	cmp	r3, #32
 8003220:	bfc1      	itttt	gt
 8003222:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8003226:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800322a:	fa0b f303 	lslgt.w	r3, fp, r3
 800322e:	fa26 f000 	lsrgt.w	r0, r6, r0
 8003232:	bfda      	itte	le
 8003234:	f1c3 0320 	rsble	r3, r3, #32
 8003238:	fa06 f003 	lslle.w	r0, r6, r3
 800323c:	4318      	orrgt	r0, r3
 800323e:	f7fd f971 	bl	8000524 <__aeabi_ui2d>
 8003242:	2301      	movs	r3, #1
 8003244:	4606      	mov	r6, r0
 8003246:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800324a:	3d01      	subs	r5, #1
 800324c:	930e      	str	r3, [sp, #56]	; 0x38
 800324e:	e76a      	b.n	8003126 <_dtoa_r+0x116>
 8003250:	2301      	movs	r3, #1
 8003252:	e7b2      	b.n	80031ba <_dtoa_r+0x1aa>
 8003254:	900b      	str	r0, [sp, #44]	; 0x2c
 8003256:	e7b1      	b.n	80031bc <_dtoa_r+0x1ac>
 8003258:	9b04      	ldr	r3, [sp, #16]
 800325a:	9a00      	ldr	r2, [sp, #0]
 800325c:	1a9b      	subs	r3, r3, r2
 800325e:	9304      	str	r3, [sp, #16]
 8003260:	4253      	negs	r3, r2
 8003262:	9307      	str	r3, [sp, #28]
 8003264:	2300      	movs	r3, #0
 8003266:	930a      	str	r3, [sp, #40]	; 0x28
 8003268:	e7bf      	b.n	80031ea <_dtoa_r+0x1da>
 800326a:	2300      	movs	r3, #0
 800326c:	9308      	str	r3, [sp, #32]
 800326e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003270:	2b00      	cmp	r3, #0
 8003272:	dc55      	bgt.n	8003320 <_dtoa_r+0x310>
 8003274:	2301      	movs	r3, #1
 8003276:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800327a:	461a      	mov	r2, r3
 800327c:	9209      	str	r2, [sp, #36]	; 0x24
 800327e:	e00c      	b.n	800329a <_dtoa_r+0x28a>
 8003280:	2301      	movs	r3, #1
 8003282:	e7f3      	b.n	800326c <_dtoa_r+0x25c>
 8003284:	2300      	movs	r3, #0
 8003286:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003288:	9308      	str	r3, [sp, #32]
 800328a:	9b00      	ldr	r3, [sp, #0]
 800328c:	4413      	add	r3, r2
 800328e:	9302      	str	r3, [sp, #8]
 8003290:	3301      	adds	r3, #1
 8003292:	2b01      	cmp	r3, #1
 8003294:	9303      	str	r3, [sp, #12]
 8003296:	bfb8      	it	lt
 8003298:	2301      	movlt	r3, #1
 800329a:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800329c:	2200      	movs	r2, #0
 800329e:	6042      	str	r2, [r0, #4]
 80032a0:	2204      	movs	r2, #4
 80032a2:	f102 0614 	add.w	r6, r2, #20
 80032a6:	429e      	cmp	r6, r3
 80032a8:	6841      	ldr	r1, [r0, #4]
 80032aa:	d93d      	bls.n	8003328 <_dtoa_r+0x318>
 80032ac:	4620      	mov	r0, r4
 80032ae:	f000 fed7 	bl	8004060 <_Balloc>
 80032b2:	9001      	str	r0, [sp, #4]
 80032b4:	2800      	cmp	r0, #0
 80032b6:	d13b      	bne.n	8003330 <_dtoa_r+0x320>
 80032b8:	4b11      	ldr	r3, [pc, #68]	; (8003300 <_dtoa_r+0x2f0>)
 80032ba:	4602      	mov	r2, r0
 80032bc:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80032c0:	e6c0      	b.n	8003044 <_dtoa_r+0x34>
 80032c2:	2301      	movs	r3, #1
 80032c4:	e7df      	b.n	8003286 <_dtoa_r+0x276>
 80032c6:	bf00      	nop
 80032c8:	636f4361 	.word	0x636f4361
 80032cc:	3fd287a7 	.word	0x3fd287a7
 80032d0:	8b60c8b3 	.word	0x8b60c8b3
 80032d4:	3fc68a28 	.word	0x3fc68a28
 80032d8:	509f79fb 	.word	0x509f79fb
 80032dc:	3fd34413 	.word	0x3fd34413
 80032e0:	08004f89 	.word	0x08004f89
 80032e4:	08004fa0 	.word	0x08004fa0
 80032e8:	7ff00000 	.word	0x7ff00000
 80032ec:	08004f85 	.word	0x08004f85
 80032f0:	08004f7c 	.word	0x08004f7c
 80032f4:	08004f59 	.word	0x08004f59
 80032f8:	3ff80000 	.word	0x3ff80000
 80032fc:	080050f0 	.word	0x080050f0
 8003300:	08004ffb 	.word	0x08004ffb
 8003304:	2501      	movs	r5, #1
 8003306:	2300      	movs	r3, #0
 8003308:	9306      	str	r3, [sp, #24]
 800330a:	9508      	str	r5, [sp, #32]
 800330c:	f04f 33ff 	mov.w	r3, #4294967295
 8003310:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8003314:	2200      	movs	r2, #0
 8003316:	2312      	movs	r3, #18
 8003318:	e7b0      	b.n	800327c <_dtoa_r+0x26c>
 800331a:	2301      	movs	r3, #1
 800331c:	9308      	str	r3, [sp, #32]
 800331e:	e7f5      	b.n	800330c <_dtoa_r+0x2fc>
 8003320:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003322:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8003326:	e7b8      	b.n	800329a <_dtoa_r+0x28a>
 8003328:	3101      	adds	r1, #1
 800332a:	6041      	str	r1, [r0, #4]
 800332c:	0052      	lsls	r2, r2, #1
 800332e:	e7b8      	b.n	80032a2 <_dtoa_r+0x292>
 8003330:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003332:	9a01      	ldr	r2, [sp, #4]
 8003334:	601a      	str	r2, [r3, #0]
 8003336:	9b03      	ldr	r3, [sp, #12]
 8003338:	2b0e      	cmp	r3, #14
 800333a:	f200 809d 	bhi.w	8003478 <_dtoa_r+0x468>
 800333e:	2d00      	cmp	r5, #0
 8003340:	f000 809a 	beq.w	8003478 <_dtoa_r+0x468>
 8003344:	9b00      	ldr	r3, [sp, #0]
 8003346:	2b00      	cmp	r3, #0
 8003348:	dd32      	ble.n	80033b0 <_dtoa_r+0x3a0>
 800334a:	4ab7      	ldr	r2, [pc, #732]	; (8003628 <_dtoa_r+0x618>)
 800334c:	f003 030f 	and.w	r3, r3, #15
 8003350:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003354:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003358:	9b00      	ldr	r3, [sp, #0]
 800335a:	05d8      	lsls	r0, r3, #23
 800335c:	ea4f 1723 	mov.w	r7, r3, asr #4
 8003360:	d516      	bpl.n	8003390 <_dtoa_r+0x380>
 8003362:	4bb2      	ldr	r3, [pc, #712]	; (800362c <_dtoa_r+0x61c>)
 8003364:	ec51 0b19 	vmov	r0, r1, d9
 8003368:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800336c:	f7fd fa7e 	bl	800086c <__aeabi_ddiv>
 8003370:	f007 070f 	and.w	r7, r7, #15
 8003374:	4682      	mov	sl, r0
 8003376:	468b      	mov	fp, r1
 8003378:	2503      	movs	r5, #3
 800337a:	4eac      	ldr	r6, [pc, #688]	; (800362c <_dtoa_r+0x61c>)
 800337c:	b957      	cbnz	r7, 8003394 <_dtoa_r+0x384>
 800337e:	4642      	mov	r2, r8
 8003380:	464b      	mov	r3, r9
 8003382:	4650      	mov	r0, sl
 8003384:	4659      	mov	r1, fp
 8003386:	f7fd fa71 	bl	800086c <__aeabi_ddiv>
 800338a:	4682      	mov	sl, r0
 800338c:	468b      	mov	fp, r1
 800338e:	e028      	b.n	80033e2 <_dtoa_r+0x3d2>
 8003390:	2502      	movs	r5, #2
 8003392:	e7f2      	b.n	800337a <_dtoa_r+0x36a>
 8003394:	07f9      	lsls	r1, r7, #31
 8003396:	d508      	bpl.n	80033aa <_dtoa_r+0x39a>
 8003398:	4640      	mov	r0, r8
 800339a:	4649      	mov	r1, r9
 800339c:	e9d6 2300 	ldrd	r2, r3, [r6]
 80033a0:	f7fd f93a 	bl	8000618 <__aeabi_dmul>
 80033a4:	3501      	adds	r5, #1
 80033a6:	4680      	mov	r8, r0
 80033a8:	4689      	mov	r9, r1
 80033aa:	107f      	asrs	r7, r7, #1
 80033ac:	3608      	adds	r6, #8
 80033ae:	e7e5      	b.n	800337c <_dtoa_r+0x36c>
 80033b0:	f000 809b 	beq.w	80034ea <_dtoa_r+0x4da>
 80033b4:	9b00      	ldr	r3, [sp, #0]
 80033b6:	4f9d      	ldr	r7, [pc, #628]	; (800362c <_dtoa_r+0x61c>)
 80033b8:	425e      	negs	r6, r3
 80033ba:	4b9b      	ldr	r3, [pc, #620]	; (8003628 <_dtoa_r+0x618>)
 80033bc:	f006 020f 	and.w	r2, r6, #15
 80033c0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80033c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033c8:	ec51 0b19 	vmov	r0, r1, d9
 80033cc:	f7fd f924 	bl	8000618 <__aeabi_dmul>
 80033d0:	1136      	asrs	r6, r6, #4
 80033d2:	4682      	mov	sl, r0
 80033d4:	468b      	mov	fp, r1
 80033d6:	2300      	movs	r3, #0
 80033d8:	2502      	movs	r5, #2
 80033da:	2e00      	cmp	r6, #0
 80033dc:	d17a      	bne.n	80034d4 <_dtoa_r+0x4c4>
 80033de:	2b00      	cmp	r3, #0
 80033e0:	d1d3      	bne.n	800338a <_dtoa_r+0x37a>
 80033e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80033e4:	2b00      	cmp	r3, #0
 80033e6:	f000 8082 	beq.w	80034ee <_dtoa_r+0x4de>
 80033ea:	4b91      	ldr	r3, [pc, #580]	; (8003630 <_dtoa_r+0x620>)
 80033ec:	2200      	movs	r2, #0
 80033ee:	4650      	mov	r0, sl
 80033f0:	4659      	mov	r1, fp
 80033f2:	f7fd fb83 	bl	8000afc <__aeabi_dcmplt>
 80033f6:	2800      	cmp	r0, #0
 80033f8:	d079      	beq.n	80034ee <_dtoa_r+0x4de>
 80033fa:	9b03      	ldr	r3, [sp, #12]
 80033fc:	2b00      	cmp	r3, #0
 80033fe:	d076      	beq.n	80034ee <_dtoa_r+0x4de>
 8003400:	9b02      	ldr	r3, [sp, #8]
 8003402:	2b00      	cmp	r3, #0
 8003404:	dd36      	ble.n	8003474 <_dtoa_r+0x464>
 8003406:	9b00      	ldr	r3, [sp, #0]
 8003408:	4650      	mov	r0, sl
 800340a:	4659      	mov	r1, fp
 800340c:	1e5f      	subs	r7, r3, #1
 800340e:	2200      	movs	r2, #0
 8003410:	4b88      	ldr	r3, [pc, #544]	; (8003634 <_dtoa_r+0x624>)
 8003412:	f7fd f901 	bl	8000618 <__aeabi_dmul>
 8003416:	9e02      	ldr	r6, [sp, #8]
 8003418:	4682      	mov	sl, r0
 800341a:	468b      	mov	fp, r1
 800341c:	3501      	adds	r5, #1
 800341e:	4628      	mov	r0, r5
 8003420:	f7fd f890 	bl	8000544 <__aeabi_i2d>
 8003424:	4652      	mov	r2, sl
 8003426:	465b      	mov	r3, fp
 8003428:	f7fd f8f6 	bl	8000618 <__aeabi_dmul>
 800342c:	4b82      	ldr	r3, [pc, #520]	; (8003638 <_dtoa_r+0x628>)
 800342e:	2200      	movs	r2, #0
 8003430:	f7fc ff3c 	bl	80002ac <__adddf3>
 8003434:	46d0      	mov	r8, sl
 8003436:	46d9      	mov	r9, fp
 8003438:	4682      	mov	sl, r0
 800343a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800343e:	2e00      	cmp	r6, #0
 8003440:	d158      	bne.n	80034f4 <_dtoa_r+0x4e4>
 8003442:	4b7e      	ldr	r3, [pc, #504]	; (800363c <_dtoa_r+0x62c>)
 8003444:	2200      	movs	r2, #0
 8003446:	4640      	mov	r0, r8
 8003448:	4649      	mov	r1, r9
 800344a:	f7fc ff2d 	bl	80002a8 <__aeabi_dsub>
 800344e:	4652      	mov	r2, sl
 8003450:	465b      	mov	r3, fp
 8003452:	4680      	mov	r8, r0
 8003454:	4689      	mov	r9, r1
 8003456:	f7fd fb6f 	bl	8000b38 <__aeabi_dcmpgt>
 800345a:	2800      	cmp	r0, #0
 800345c:	f040 8295 	bne.w	800398a <_dtoa_r+0x97a>
 8003460:	4652      	mov	r2, sl
 8003462:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8003466:	4640      	mov	r0, r8
 8003468:	4649      	mov	r1, r9
 800346a:	f7fd fb47 	bl	8000afc <__aeabi_dcmplt>
 800346e:	2800      	cmp	r0, #0
 8003470:	f040 8289 	bne.w	8003986 <_dtoa_r+0x976>
 8003474:	ec5b ab19 	vmov	sl, fp, d9
 8003478:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800347a:	2b00      	cmp	r3, #0
 800347c:	f2c0 8148 	blt.w	8003710 <_dtoa_r+0x700>
 8003480:	9a00      	ldr	r2, [sp, #0]
 8003482:	2a0e      	cmp	r2, #14
 8003484:	f300 8144 	bgt.w	8003710 <_dtoa_r+0x700>
 8003488:	4b67      	ldr	r3, [pc, #412]	; (8003628 <_dtoa_r+0x618>)
 800348a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800348e:	e9d3 8900 	ldrd	r8, r9, [r3]
 8003492:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003494:	2b00      	cmp	r3, #0
 8003496:	f280 80d5 	bge.w	8003644 <_dtoa_r+0x634>
 800349a:	9b03      	ldr	r3, [sp, #12]
 800349c:	2b00      	cmp	r3, #0
 800349e:	f300 80d1 	bgt.w	8003644 <_dtoa_r+0x634>
 80034a2:	f040 826f 	bne.w	8003984 <_dtoa_r+0x974>
 80034a6:	4b65      	ldr	r3, [pc, #404]	; (800363c <_dtoa_r+0x62c>)
 80034a8:	2200      	movs	r2, #0
 80034aa:	4640      	mov	r0, r8
 80034ac:	4649      	mov	r1, r9
 80034ae:	f7fd f8b3 	bl	8000618 <__aeabi_dmul>
 80034b2:	4652      	mov	r2, sl
 80034b4:	465b      	mov	r3, fp
 80034b6:	f7fd fb35 	bl	8000b24 <__aeabi_dcmpge>
 80034ba:	9e03      	ldr	r6, [sp, #12]
 80034bc:	4637      	mov	r7, r6
 80034be:	2800      	cmp	r0, #0
 80034c0:	f040 8245 	bne.w	800394e <_dtoa_r+0x93e>
 80034c4:	9d01      	ldr	r5, [sp, #4]
 80034c6:	2331      	movs	r3, #49	; 0x31
 80034c8:	f805 3b01 	strb.w	r3, [r5], #1
 80034cc:	9b00      	ldr	r3, [sp, #0]
 80034ce:	3301      	adds	r3, #1
 80034d0:	9300      	str	r3, [sp, #0]
 80034d2:	e240      	b.n	8003956 <_dtoa_r+0x946>
 80034d4:	07f2      	lsls	r2, r6, #31
 80034d6:	d505      	bpl.n	80034e4 <_dtoa_r+0x4d4>
 80034d8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80034dc:	f7fd f89c 	bl	8000618 <__aeabi_dmul>
 80034e0:	3501      	adds	r5, #1
 80034e2:	2301      	movs	r3, #1
 80034e4:	1076      	asrs	r6, r6, #1
 80034e6:	3708      	adds	r7, #8
 80034e8:	e777      	b.n	80033da <_dtoa_r+0x3ca>
 80034ea:	2502      	movs	r5, #2
 80034ec:	e779      	b.n	80033e2 <_dtoa_r+0x3d2>
 80034ee:	9f00      	ldr	r7, [sp, #0]
 80034f0:	9e03      	ldr	r6, [sp, #12]
 80034f2:	e794      	b.n	800341e <_dtoa_r+0x40e>
 80034f4:	9901      	ldr	r1, [sp, #4]
 80034f6:	4b4c      	ldr	r3, [pc, #304]	; (8003628 <_dtoa_r+0x618>)
 80034f8:	4431      	add	r1, r6
 80034fa:	910d      	str	r1, [sp, #52]	; 0x34
 80034fc:	9908      	ldr	r1, [sp, #32]
 80034fe:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8003502:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003506:	2900      	cmp	r1, #0
 8003508:	d043      	beq.n	8003592 <_dtoa_r+0x582>
 800350a:	494d      	ldr	r1, [pc, #308]	; (8003640 <_dtoa_r+0x630>)
 800350c:	2000      	movs	r0, #0
 800350e:	f7fd f9ad 	bl	800086c <__aeabi_ddiv>
 8003512:	4652      	mov	r2, sl
 8003514:	465b      	mov	r3, fp
 8003516:	f7fc fec7 	bl	80002a8 <__aeabi_dsub>
 800351a:	9d01      	ldr	r5, [sp, #4]
 800351c:	4682      	mov	sl, r0
 800351e:	468b      	mov	fp, r1
 8003520:	4649      	mov	r1, r9
 8003522:	4640      	mov	r0, r8
 8003524:	f7fd fb28 	bl	8000b78 <__aeabi_d2iz>
 8003528:	4606      	mov	r6, r0
 800352a:	f7fd f80b 	bl	8000544 <__aeabi_i2d>
 800352e:	4602      	mov	r2, r0
 8003530:	460b      	mov	r3, r1
 8003532:	4640      	mov	r0, r8
 8003534:	4649      	mov	r1, r9
 8003536:	f7fc feb7 	bl	80002a8 <__aeabi_dsub>
 800353a:	3630      	adds	r6, #48	; 0x30
 800353c:	f805 6b01 	strb.w	r6, [r5], #1
 8003540:	4652      	mov	r2, sl
 8003542:	465b      	mov	r3, fp
 8003544:	4680      	mov	r8, r0
 8003546:	4689      	mov	r9, r1
 8003548:	f7fd fad8 	bl	8000afc <__aeabi_dcmplt>
 800354c:	2800      	cmp	r0, #0
 800354e:	d163      	bne.n	8003618 <_dtoa_r+0x608>
 8003550:	4642      	mov	r2, r8
 8003552:	464b      	mov	r3, r9
 8003554:	4936      	ldr	r1, [pc, #216]	; (8003630 <_dtoa_r+0x620>)
 8003556:	2000      	movs	r0, #0
 8003558:	f7fc fea6 	bl	80002a8 <__aeabi_dsub>
 800355c:	4652      	mov	r2, sl
 800355e:	465b      	mov	r3, fp
 8003560:	f7fd facc 	bl	8000afc <__aeabi_dcmplt>
 8003564:	2800      	cmp	r0, #0
 8003566:	f040 80b5 	bne.w	80036d4 <_dtoa_r+0x6c4>
 800356a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800356c:	429d      	cmp	r5, r3
 800356e:	d081      	beq.n	8003474 <_dtoa_r+0x464>
 8003570:	4b30      	ldr	r3, [pc, #192]	; (8003634 <_dtoa_r+0x624>)
 8003572:	2200      	movs	r2, #0
 8003574:	4650      	mov	r0, sl
 8003576:	4659      	mov	r1, fp
 8003578:	f7fd f84e 	bl	8000618 <__aeabi_dmul>
 800357c:	4b2d      	ldr	r3, [pc, #180]	; (8003634 <_dtoa_r+0x624>)
 800357e:	4682      	mov	sl, r0
 8003580:	468b      	mov	fp, r1
 8003582:	4640      	mov	r0, r8
 8003584:	4649      	mov	r1, r9
 8003586:	2200      	movs	r2, #0
 8003588:	f7fd f846 	bl	8000618 <__aeabi_dmul>
 800358c:	4680      	mov	r8, r0
 800358e:	4689      	mov	r9, r1
 8003590:	e7c6      	b.n	8003520 <_dtoa_r+0x510>
 8003592:	4650      	mov	r0, sl
 8003594:	4659      	mov	r1, fp
 8003596:	f7fd f83f 	bl	8000618 <__aeabi_dmul>
 800359a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800359c:	9d01      	ldr	r5, [sp, #4]
 800359e:	930f      	str	r3, [sp, #60]	; 0x3c
 80035a0:	4682      	mov	sl, r0
 80035a2:	468b      	mov	fp, r1
 80035a4:	4649      	mov	r1, r9
 80035a6:	4640      	mov	r0, r8
 80035a8:	f7fd fae6 	bl	8000b78 <__aeabi_d2iz>
 80035ac:	4606      	mov	r6, r0
 80035ae:	f7fc ffc9 	bl	8000544 <__aeabi_i2d>
 80035b2:	3630      	adds	r6, #48	; 0x30
 80035b4:	4602      	mov	r2, r0
 80035b6:	460b      	mov	r3, r1
 80035b8:	4640      	mov	r0, r8
 80035ba:	4649      	mov	r1, r9
 80035bc:	f7fc fe74 	bl	80002a8 <__aeabi_dsub>
 80035c0:	f805 6b01 	strb.w	r6, [r5], #1
 80035c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80035c6:	429d      	cmp	r5, r3
 80035c8:	4680      	mov	r8, r0
 80035ca:	4689      	mov	r9, r1
 80035cc:	f04f 0200 	mov.w	r2, #0
 80035d0:	d124      	bne.n	800361c <_dtoa_r+0x60c>
 80035d2:	4b1b      	ldr	r3, [pc, #108]	; (8003640 <_dtoa_r+0x630>)
 80035d4:	4650      	mov	r0, sl
 80035d6:	4659      	mov	r1, fp
 80035d8:	f7fc fe68 	bl	80002ac <__adddf3>
 80035dc:	4602      	mov	r2, r0
 80035de:	460b      	mov	r3, r1
 80035e0:	4640      	mov	r0, r8
 80035e2:	4649      	mov	r1, r9
 80035e4:	f7fd faa8 	bl	8000b38 <__aeabi_dcmpgt>
 80035e8:	2800      	cmp	r0, #0
 80035ea:	d173      	bne.n	80036d4 <_dtoa_r+0x6c4>
 80035ec:	4652      	mov	r2, sl
 80035ee:	465b      	mov	r3, fp
 80035f0:	4913      	ldr	r1, [pc, #76]	; (8003640 <_dtoa_r+0x630>)
 80035f2:	2000      	movs	r0, #0
 80035f4:	f7fc fe58 	bl	80002a8 <__aeabi_dsub>
 80035f8:	4602      	mov	r2, r0
 80035fa:	460b      	mov	r3, r1
 80035fc:	4640      	mov	r0, r8
 80035fe:	4649      	mov	r1, r9
 8003600:	f7fd fa7c 	bl	8000afc <__aeabi_dcmplt>
 8003604:	2800      	cmp	r0, #0
 8003606:	f43f af35 	beq.w	8003474 <_dtoa_r+0x464>
 800360a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800360c:	1e6b      	subs	r3, r5, #1
 800360e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003610:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003614:	2b30      	cmp	r3, #48	; 0x30
 8003616:	d0f8      	beq.n	800360a <_dtoa_r+0x5fa>
 8003618:	9700      	str	r7, [sp, #0]
 800361a:	e049      	b.n	80036b0 <_dtoa_r+0x6a0>
 800361c:	4b05      	ldr	r3, [pc, #20]	; (8003634 <_dtoa_r+0x624>)
 800361e:	f7fc fffb 	bl	8000618 <__aeabi_dmul>
 8003622:	4680      	mov	r8, r0
 8003624:	4689      	mov	r9, r1
 8003626:	e7bd      	b.n	80035a4 <_dtoa_r+0x594>
 8003628:	080050f0 	.word	0x080050f0
 800362c:	080050c8 	.word	0x080050c8
 8003630:	3ff00000 	.word	0x3ff00000
 8003634:	40240000 	.word	0x40240000
 8003638:	401c0000 	.word	0x401c0000
 800363c:	40140000 	.word	0x40140000
 8003640:	3fe00000 	.word	0x3fe00000
 8003644:	9d01      	ldr	r5, [sp, #4]
 8003646:	4656      	mov	r6, sl
 8003648:	465f      	mov	r7, fp
 800364a:	4642      	mov	r2, r8
 800364c:	464b      	mov	r3, r9
 800364e:	4630      	mov	r0, r6
 8003650:	4639      	mov	r1, r7
 8003652:	f7fd f90b 	bl	800086c <__aeabi_ddiv>
 8003656:	f7fd fa8f 	bl	8000b78 <__aeabi_d2iz>
 800365a:	4682      	mov	sl, r0
 800365c:	f7fc ff72 	bl	8000544 <__aeabi_i2d>
 8003660:	4642      	mov	r2, r8
 8003662:	464b      	mov	r3, r9
 8003664:	f7fc ffd8 	bl	8000618 <__aeabi_dmul>
 8003668:	4602      	mov	r2, r0
 800366a:	460b      	mov	r3, r1
 800366c:	4630      	mov	r0, r6
 800366e:	4639      	mov	r1, r7
 8003670:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 8003674:	f7fc fe18 	bl	80002a8 <__aeabi_dsub>
 8003678:	f805 6b01 	strb.w	r6, [r5], #1
 800367c:	9e01      	ldr	r6, [sp, #4]
 800367e:	9f03      	ldr	r7, [sp, #12]
 8003680:	1bae      	subs	r6, r5, r6
 8003682:	42b7      	cmp	r7, r6
 8003684:	4602      	mov	r2, r0
 8003686:	460b      	mov	r3, r1
 8003688:	d135      	bne.n	80036f6 <_dtoa_r+0x6e6>
 800368a:	f7fc fe0f 	bl	80002ac <__adddf3>
 800368e:	4642      	mov	r2, r8
 8003690:	464b      	mov	r3, r9
 8003692:	4606      	mov	r6, r0
 8003694:	460f      	mov	r7, r1
 8003696:	f7fd fa4f 	bl	8000b38 <__aeabi_dcmpgt>
 800369a:	b9d0      	cbnz	r0, 80036d2 <_dtoa_r+0x6c2>
 800369c:	4642      	mov	r2, r8
 800369e:	464b      	mov	r3, r9
 80036a0:	4630      	mov	r0, r6
 80036a2:	4639      	mov	r1, r7
 80036a4:	f7fd fa20 	bl	8000ae8 <__aeabi_dcmpeq>
 80036a8:	b110      	cbz	r0, 80036b0 <_dtoa_r+0x6a0>
 80036aa:	f01a 0f01 	tst.w	sl, #1
 80036ae:	d110      	bne.n	80036d2 <_dtoa_r+0x6c2>
 80036b0:	4620      	mov	r0, r4
 80036b2:	ee18 1a10 	vmov	r1, s16
 80036b6:	f000 fd13 	bl	80040e0 <_Bfree>
 80036ba:	2300      	movs	r3, #0
 80036bc:	9800      	ldr	r0, [sp, #0]
 80036be:	702b      	strb	r3, [r5, #0]
 80036c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80036c2:	3001      	adds	r0, #1
 80036c4:	6018      	str	r0, [r3, #0]
 80036c6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80036c8:	2b00      	cmp	r3, #0
 80036ca:	f43f acf1 	beq.w	80030b0 <_dtoa_r+0xa0>
 80036ce:	601d      	str	r5, [r3, #0]
 80036d0:	e4ee      	b.n	80030b0 <_dtoa_r+0xa0>
 80036d2:	9f00      	ldr	r7, [sp, #0]
 80036d4:	462b      	mov	r3, r5
 80036d6:	461d      	mov	r5, r3
 80036d8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80036dc:	2a39      	cmp	r2, #57	; 0x39
 80036de:	d106      	bne.n	80036ee <_dtoa_r+0x6de>
 80036e0:	9a01      	ldr	r2, [sp, #4]
 80036e2:	429a      	cmp	r2, r3
 80036e4:	d1f7      	bne.n	80036d6 <_dtoa_r+0x6c6>
 80036e6:	9901      	ldr	r1, [sp, #4]
 80036e8:	2230      	movs	r2, #48	; 0x30
 80036ea:	3701      	adds	r7, #1
 80036ec:	700a      	strb	r2, [r1, #0]
 80036ee:	781a      	ldrb	r2, [r3, #0]
 80036f0:	3201      	adds	r2, #1
 80036f2:	701a      	strb	r2, [r3, #0]
 80036f4:	e790      	b.n	8003618 <_dtoa_r+0x608>
 80036f6:	4ba6      	ldr	r3, [pc, #664]	; (8003990 <_dtoa_r+0x980>)
 80036f8:	2200      	movs	r2, #0
 80036fa:	f7fc ff8d 	bl	8000618 <__aeabi_dmul>
 80036fe:	2200      	movs	r2, #0
 8003700:	2300      	movs	r3, #0
 8003702:	4606      	mov	r6, r0
 8003704:	460f      	mov	r7, r1
 8003706:	f7fd f9ef 	bl	8000ae8 <__aeabi_dcmpeq>
 800370a:	2800      	cmp	r0, #0
 800370c:	d09d      	beq.n	800364a <_dtoa_r+0x63a>
 800370e:	e7cf      	b.n	80036b0 <_dtoa_r+0x6a0>
 8003710:	9a08      	ldr	r2, [sp, #32]
 8003712:	2a00      	cmp	r2, #0
 8003714:	f000 80d7 	beq.w	80038c6 <_dtoa_r+0x8b6>
 8003718:	9a06      	ldr	r2, [sp, #24]
 800371a:	2a01      	cmp	r2, #1
 800371c:	f300 80ba 	bgt.w	8003894 <_dtoa_r+0x884>
 8003720:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003722:	2a00      	cmp	r2, #0
 8003724:	f000 80b2 	beq.w	800388c <_dtoa_r+0x87c>
 8003728:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800372c:	9e07      	ldr	r6, [sp, #28]
 800372e:	9d04      	ldr	r5, [sp, #16]
 8003730:	9a04      	ldr	r2, [sp, #16]
 8003732:	441a      	add	r2, r3
 8003734:	9204      	str	r2, [sp, #16]
 8003736:	9a05      	ldr	r2, [sp, #20]
 8003738:	2101      	movs	r1, #1
 800373a:	441a      	add	r2, r3
 800373c:	4620      	mov	r0, r4
 800373e:	9205      	str	r2, [sp, #20]
 8003740:	f000 fd86 	bl	8004250 <__i2b>
 8003744:	4607      	mov	r7, r0
 8003746:	2d00      	cmp	r5, #0
 8003748:	dd0c      	ble.n	8003764 <_dtoa_r+0x754>
 800374a:	9b05      	ldr	r3, [sp, #20]
 800374c:	2b00      	cmp	r3, #0
 800374e:	dd09      	ble.n	8003764 <_dtoa_r+0x754>
 8003750:	42ab      	cmp	r3, r5
 8003752:	9a04      	ldr	r2, [sp, #16]
 8003754:	bfa8      	it	ge
 8003756:	462b      	movge	r3, r5
 8003758:	1ad2      	subs	r2, r2, r3
 800375a:	9204      	str	r2, [sp, #16]
 800375c:	9a05      	ldr	r2, [sp, #20]
 800375e:	1aed      	subs	r5, r5, r3
 8003760:	1ad3      	subs	r3, r2, r3
 8003762:	9305      	str	r3, [sp, #20]
 8003764:	9b07      	ldr	r3, [sp, #28]
 8003766:	b31b      	cbz	r3, 80037b0 <_dtoa_r+0x7a0>
 8003768:	9b08      	ldr	r3, [sp, #32]
 800376a:	2b00      	cmp	r3, #0
 800376c:	f000 80af 	beq.w	80038ce <_dtoa_r+0x8be>
 8003770:	2e00      	cmp	r6, #0
 8003772:	dd13      	ble.n	800379c <_dtoa_r+0x78c>
 8003774:	4639      	mov	r1, r7
 8003776:	4632      	mov	r2, r6
 8003778:	4620      	mov	r0, r4
 800377a:	f000 fe29 	bl	80043d0 <__pow5mult>
 800377e:	ee18 2a10 	vmov	r2, s16
 8003782:	4601      	mov	r1, r0
 8003784:	4607      	mov	r7, r0
 8003786:	4620      	mov	r0, r4
 8003788:	f000 fd78 	bl	800427c <__multiply>
 800378c:	ee18 1a10 	vmov	r1, s16
 8003790:	4680      	mov	r8, r0
 8003792:	4620      	mov	r0, r4
 8003794:	f000 fca4 	bl	80040e0 <_Bfree>
 8003798:	ee08 8a10 	vmov	s16, r8
 800379c:	9b07      	ldr	r3, [sp, #28]
 800379e:	1b9a      	subs	r2, r3, r6
 80037a0:	d006      	beq.n	80037b0 <_dtoa_r+0x7a0>
 80037a2:	ee18 1a10 	vmov	r1, s16
 80037a6:	4620      	mov	r0, r4
 80037a8:	f000 fe12 	bl	80043d0 <__pow5mult>
 80037ac:	ee08 0a10 	vmov	s16, r0
 80037b0:	2101      	movs	r1, #1
 80037b2:	4620      	mov	r0, r4
 80037b4:	f000 fd4c 	bl	8004250 <__i2b>
 80037b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	4606      	mov	r6, r0
 80037be:	f340 8088 	ble.w	80038d2 <_dtoa_r+0x8c2>
 80037c2:	461a      	mov	r2, r3
 80037c4:	4601      	mov	r1, r0
 80037c6:	4620      	mov	r0, r4
 80037c8:	f000 fe02 	bl	80043d0 <__pow5mult>
 80037cc:	9b06      	ldr	r3, [sp, #24]
 80037ce:	2b01      	cmp	r3, #1
 80037d0:	4606      	mov	r6, r0
 80037d2:	f340 8081 	ble.w	80038d8 <_dtoa_r+0x8c8>
 80037d6:	f04f 0800 	mov.w	r8, #0
 80037da:	6933      	ldr	r3, [r6, #16]
 80037dc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80037e0:	6918      	ldr	r0, [r3, #16]
 80037e2:	f000 fce5 	bl	80041b0 <__hi0bits>
 80037e6:	f1c0 0020 	rsb	r0, r0, #32
 80037ea:	9b05      	ldr	r3, [sp, #20]
 80037ec:	4418      	add	r0, r3
 80037ee:	f010 001f 	ands.w	r0, r0, #31
 80037f2:	f000 8092 	beq.w	800391a <_dtoa_r+0x90a>
 80037f6:	f1c0 0320 	rsb	r3, r0, #32
 80037fa:	2b04      	cmp	r3, #4
 80037fc:	f340 808a 	ble.w	8003914 <_dtoa_r+0x904>
 8003800:	f1c0 001c 	rsb	r0, r0, #28
 8003804:	9b04      	ldr	r3, [sp, #16]
 8003806:	4403      	add	r3, r0
 8003808:	9304      	str	r3, [sp, #16]
 800380a:	9b05      	ldr	r3, [sp, #20]
 800380c:	4403      	add	r3, r0
 800380e:	4405      	add	r5, r0
 8003810:	9305      	str	r3, [sp, #20]
 8003812:	9b04      	ldr	r3, [sp, #16]
 8003814:	2b00      	cmp	r3, #0
 8003816:	dd07      	ble.n	8003828 <_dtoa_r+0x818>
 8003818:	ee18 1a10 	vmov	r1, s16
 800381c:	461a      	mov	r2, r3
 800381e:	4620      	mov	r0, r4
 8003820:	f000 fe30 	bl	8004484 <__lshift>
 8003824:	ee08 0a10 	vmov	s16, r0
 8003828:	9b05      	ldr	r3, [sp, #20]
 800382a:	2b00      	cmp	r3, #0
 800382c:	dd05      	ble.n	800383a <_dtoa_r+0x82a>
 800382e:	4631      	mov	r1, r6
 8003830:	461a      	mov	r2, r3
 8003832:	4620      	mov	r0, r4
 8003834:	f000 fe26 	bl	8004484 <__lshift>
 8003838:	4606      	mov	r6, r0
 800383a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800383c:	2b00      	cmp	r3, #0
 800383e:	d06e      	beq.n	800391e <_dtoa_r+0x90e>
 8003840:	ee18 0a10 	vmov	r0, s16
 8003844:	4631      	mov	r1, r6
 8003846:	f000 fe8d 	bl	8004564 <__mcmp>
 800384a:	2800      	cmp	r0, #0
 800384c:	da67      	bge.n	800391e <_dtoa_r+0x90e>
 800384e:	9b00      	ldr	r3, [sp, #0]
 8003850:	3b01      	subs	r3, #1
 8003852:	ee18 1a10 	vmov	r1, s16
 8003856:	9300      	str	r3, [sp, #0]
 8003858:	220a      	movs	r2, #10
 800385a:	2300      	movs	r3, #0
 800385c:	4620      	mov	r0, r4
 800385e:	f000 fc61 	bl	8004124 <__multadd>
 8003862:	9b08      	ldr	r3, [sp, #32]
 8003864:	ee08 0a10 	vmov	s16, r0
 8003868:	2b00      	cmp	r3, #0
 800386a:	f000 81b1 	beq.w	8003bd0 <_dtoa_r+0xbc0>
 800386e:	2300      	movs	r3, #0
 8003870:	4639      	mov	r1, r7
 8003872:	220a      	movs	r2, #10
 8003874:	4620      	mov	r0, r4
 8003876:	f000 fc55 	bl	8004124 <__multadd>
 800387a:	9b02      	ldr	r3, [sp, #8]
 800387c:	2b00      	cmp	r3, #0
 800387e:	4607      	mov	r7, r0
 8003880:	f300 808e 	bgt.w	80039a0 <_dtoa_r+0x990>
 8003884:	9b06      	ldr	r3, [sp, #24]
 8003886:	2b02      	cmp	r3, #2
 8003888:	dc51      	bgt.n	800392e <_dtoa_r+0x91e>
 800388a:	e089      	b.n	80039a0 <_dtoa_r+0x990>
 800388c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800388e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8003892:	e74b      	b.n	800372c <_dtoa_r+0x71c>
 8003894:	9b03      	ldr	r3, [sp, #12]
 8003896:	1e5e      	subs	r6, r3, #1
 8003898:	9b07      	ldr	r3, [sp, #28]
 800389a:	42b3      	cmp	r3, r6
 800389c:	bfbf      	itttt	lt
 800389e:	9b07      	ldrlt	r3, [sp, #28]
 80038a0:	9607      	strlt	r6, [sp, #28]
 80038a2:	1af2      	sublt	r2, r6, r3
 80038a4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80038a6:	bfb6      	itet	lt
 80038a8:	189b      	addlt	r3, r3, r2
 80038aa:	1b9e      	subge	r6, r3, r6
 80038ac:	930a      	strlt	r3, [sp, #40]	; 0x28
 80038ae:	9b03      	ldr	r3, [sp, #12]
 80038b0:	bfb8      	it	lt
 80038b2:	2600      	movlt	r6, #0
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	bfb7      	itett	lt
 80038b8:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 80038bc:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 80038c0:	1a9d      	sublt	r5, r3, r2
 80038c2:	2300      	movlt	r3, #0
 80038c4:	e734      	b.n	8003730 <_dtoa_r+0x720>
 80038c6:	9e07      	ldr	r6, [sp, #28]
 80038c8:	9d04      	ldr	r5, [sp, #16]
 80038ca:	9f08      	ldr	r7, [sp, #32]
 80038cc:	e73b      	b.n	8003746 <_dtoa_r+0x736>
 80038ce:	9a07      	ldr	r2, [sp, #28]
 80038d0:	e767      	b.n	80037a2 <_dtoa_r+0x792>
 80038d2:	9b06      	ldr	r3, [sp, #24]
 80038d4:	2b01      	cmp	r3, #1
 80038d6:	dc18      	bgt.n	800390a <_dtoa_r+0x8fa>
 80038d8:	f1ba 0f00 	cmp.w	sl, #0
 80038dc:	d115      	bne.n	800390a <_dtoa_r+0x8fa>
 80038de:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80038e2:	b993      	cbnz	r3, 800390a <_dtoa_r+0x8fa>
 80038e4:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80038e8:	0d1b      	lsrs	r3, r3, #20
 80038ea:	051b      	lsls	r3, r3, #20
 80038ec:	b183      	cbz	r3, 8003910 <_dtoa_r+0x900>
 80038ee:	9b04      	ldr	r3, [sp, #16]
 80038f0:	3301      	adds	r3, #1
 80038f2:	9304      	str	r3, [sp, #16]
 80038f4:	9b05      	ldr	r3, [sp, #20]
 80038f6:	3301      	adds	r3, #1
 80038f8:	9305      	str	r3, [sp, #20]
 80038fa:	f04f 0801 	mov.w	r8, #1
 80038fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003900:	2b00      	cmp	r3, #0
 8003902:	f47f af6a 	bne.w	80037da <_dtoa_r+0x7ca>
 8003906:	2001      	movs	r0, #1
 8003908:	e76f      	b.n	80037ea <_dtoa_r+0x7da>
 800390a:	f04f 0800 	mov.w	r8, #0
 800390e:	e7f6      	b.n	80038fe <_dtoa_r+0x8ee>
 8003910:	4698      	mov	r8, r3
 8003912:	e7f4      	b.n	80038fe <_dtoa_r+0x8ee>
 8003914:	f43f af7d 	beq.w	8003812 <_dtoa_r+0x802>
 8003918:	4618      	mov	r0, r3
 800391a:	301c      	adds	r0, #28
 800391c:	e772      	b.n	8003804 <_dtoa_r+0x7f4>
 800391e:	9b03      	ldr	r3, [sp, #12]
 8003920:	2b00      	cmp	r3, #0
 8003922:	dc37      	bgt.n	8003994 <_dtoa_r+0x984>
 8003924:	9b06      	ldr	r3, [sp, #24]
 8003926:	2b02      	cmp	r3, #2
 8003928:	dd34      	ble.n	8003994 <_dtoa_r+0x984>
 800392a:	9b03      	ldr	r3, [sp, #12]
 800392c:	9302      	str	r3, [sp, #8]
 800392e:	9b02      	ldr	r3, [sp, #8]
 8003930:	b96b      	cbnz	r3, 800394e <_dtoa_r+0x93e>
 8003932:	4631      	mov	r1, r6
 8003934:	2205      	movs	r2, #5
 8003936:	4620      	mov	r0, r4
 8003938:	f000 fbf4 	bl	8004124 <__multadd>
 800393c:	4601      	mov	r1, r0
 800393e:	4606      	mov	r6, r0
 8003940:	ee18 0a10 	vmov	r0, s16
 8003944:	f000 fe0e 	bl	8004564 <__mcmp>
 8003948:	2800      	cmp	r0, #0
 800394a:	f73f adbb 	bgt.w	80034c4 <_dtoa_r+0x4b4>
 800394e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003950:	9d01      	ldr	r5, [sp, #4]
 8003952:	43db      	mvns	r3, r3
 8003954:	9300      	str	r3, [sp, #0]
 8003956:	f04f 0800 	mov.w	r8, #0
 800395a:	4631      	mov	r1, r6
 800395c:	4620      	mov	r0, r4
 800395e:	f000 fbbf 	bl	80040e0 <_Bfree>
 8003962:	2f00      	cmp	r7, #0
 8003964:	f43f aea4 	beq.w	80036b0 <_dtoa_r+0x6a0>
 8003968:	f1b8 0f00 	cmp.w	r8, #0
 800396c:	d005      	beq.n	800397a <_dtoa_r+0x96a>
 800396e:	45b8      	cmp	r8, r7
 8003970:	d003      	beq.n	800397a <_dtoa_r+0x96a>
 8003972:	4641      	mov	r1, r8
 8003974:	4620      	mov	r0, r4
 8003976:	f000 fbb3 	bl	80040e0 <_Bfree>
 800397a:	4639      	mov	r1, r7
 800397c:	4620      	mov	r0, r4
 800397e:	f000 fbaf 	bl	80040e0 <_Bfree>
 8003982:	e695      	b.n	80036b0 <_dtoa_r+0x6a0>
 8003984:	2600      	movs	r6, #0
 8003986:	4637      	mov	r7, r6
 8003988:	e7e1      	b.n	800394e <_dtoa_r+0x93e>
 800398a:	9700      	str	r7, [sp, #0]
 800398c:	4637      	mov	r7, r6
 800398e:	e599      	b.n	80034c4 <_dtoa_r+0x4b4>
 8003990:	40240000 	.word	0x40240000
 8003994:	9b08      	ldr	r3, [sp, #32]
 8003996:	2b00      	cmp	r3, #0
 8003998:	f000 80ca 	beq.w	8003b30 <_dtoa_r+0xb20>
 800399c:	9b03      	ldr	r3, [sp, #12]
 800399e:	9302      	str	r3, [sp, #8]
 80039a0:	2d00      	cmp	r5, #0
 80039a2:	dd05      	ble.n	80039b0 <_dtoa_r+0x9a0>
 80039a4:	4639      	mov	r1, r7
 80039a6:	462a      	mov	r2, r5
 80039a8:	4620      	mov	r0, r4
 80039aa:	f000 fd6b 	bl	8004484 <__lshift>
 80039ae:	4607      	mov	r7, r0
 80039b0:	f1b8 0f00 	cmp.w	r8, #0
 80039b4:	d05b      	beq.n	8003a6e <_dtoa_r+0xa5e>
 80039b6:	6879      	ldr	r1, [r7, #4]
 80039b8:	4620      	mov	r0, r4
 80039ba:	f000 fb51 	bl	8004060 <_Balloc>
 80039be:	4605      	mov	r5, r0
 80039c0:	b928      	cbnz	r0, 80039ce <_dtoa_r+0x9be>
 80039c2:	4b87      	ldr	r3, [pc, #540]	; (8003be0 <_dtoa_r+0xbd0>)
 80039c4:	4602      	mov	r2, r0
 80039c6:	f240 21ea 	movw	r1, #746	; 0x2ea
 80039ca:	f7ff bb3b 	b.w	8003044 <_dtoa_r+0x34>
 80039ce:	693a      	ldr	r2, [r7, #16]
 80039d0:	3202      	adds	r2, #2
 80039d2:	0092      	lsls	r2, r2, #2
 80039d4:	f107 010c 	add.w	r1, r7, #12
 80039d8:	300c      	adds	r0, #12
 80039da:	f000 fb33 	bl	8004044 <memcpy>
 80039de:	2201      	movs	r2, #1
 80039e0:	4629      	mov	r1, r5
 80039e2:	4620      	mov	r0, r4
 80039e4:	f000 fd4e 	bl	8004484 <__lshift>
 80039e8:	9b01      	ldr	r3, [sp, #4]
 80039ea:	f103 0901 	add.w	r9, r3, #1
 80039ee:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80039f2:	4413      	add	r3, r2
 80039f4:	9305      	str	r3, [sp, #20]
 80039f6:	f00a 0301 	and.w	r3, sl, #1
 80039fa:	46b8      	mov	r8, r7
 80039fc:	9304      	str	r3, [sp, #16]
 80039fe:	4607      	mov	r7, r0
 8003a00:	4631      	mov	r1, r6
 8003a02:	ee18 0a10 	vmov	r0, s16
 8003a06:	f7ff fa77 	bl	8002ef8 <quorem>
 8003a0a:	4641      	mov	r1, r8
 8003a0c:	9002      	str	r0, [sp, #8]
 8003a0e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8003a12:	ee18 0a10 	vmov	r0, s16
 8003a16:	f000 fda5 	bl	8004564 <__mcmp>
 8003a1a:	463a      	mov	r2, r7
 8003a1c:	9003      	str	r0, [sp, #12]
 8003a1e:	4631      	mov	r1, r6
 8003a20:	4620      	mov	r0, r4
 8003a22:	f000 fdbb 	bl	800459c <__mdiff>
 8003a26:	68c2      	ldr	r2, [r0, #12]
 8003a28:	f109 3bff 	add.w	fp, r9, #4294967295
 8003a2c:	4605      	mov	r5, r0
 8003a2e:	bb02      	cbnz	r2, 8003a72 <_dtoa_r+0xa62>
 8003a30:	4601      	mov	r1, r0
 8003a32:	ee18 0a10 	vmov	r0, s16
 8003a36:	f000 fd95 	bl	8004564 <__mcmp>
 8003a3a:	4602      	mov	r2, r0
 8003a3c:	4629      	mov	r1, r5
 8003a3e:	4620      	mov	r0, r4
 8003a40:	9207      	str	r2, [sp, #28]
 8003a42:	f000 fb4d 	bl	80040e0 <_Bfree>
 8003a46:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8003a4a:	ea43 0102 	orr.w	r1, r3, r2
 8003a4e:	9b04      	ldr	r3, [sp, #16]
 8003a50:	430b      	orrs	r3, r1
 8003a52:	464d      	mov	r5, r9
 8003a54:	d10f      	bne.n	8003a76 <_dtoa_r+0xa66>
 8003a56:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8003a5a:	d02a      	beq.n	8003ab2 <_dtoa_r+0xaa2>
 8003a5c:	9b03      	ldr	r3, [sp, #12]
 8003a5e:	2b00      	cmp	r3, #0
 8003a60:	dd02      	ble.n	8003a68 <_dtoa_r+0xa58>
 8003a62:	9b02      	ldr	r3, [sp, #8]
 8003a64:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8003a68:	f88b a000 	strb.w	sl, [fp]
 8003a6c:	e775      	b.n	800395a <_dtoa_r+0x94a>
 8003a6e:	4638      	mov	r0, r7
 8003a70:	e7ba      	b.n	80039e8 <_dtoa_r+0x9d8>
 8003a72:	2201      	movs	r2, #1
 8003a74:	e7e2      	b.n	8003a3c <_dtoa_r+0xa2c>
 8003a76:	9b03      	ldr	r3, [sp, #12]
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	db04      	blt.n	8003a86 <_dtoa_r+0xa76>
 8003a7c:	9906      	ldr	r1, [sp, #24]
 8003a7e:	430b      	orrs	r3, r1
 8003a80:	9904      	ldr	r1, [sp, #16]
 8003a82:	430b      	orrs	r3, r1
 8003a84:	d122      	bne.n	8003acc <_dtoa_r+0xabc>
 8003a86:	2a00      	cmp	r2, #0
 8003a88:	ddee      	ble.n	8003a68 <_dtoa_r+0xa58>
 8003a8a:	ee18 1a10 	vmov	r1, s16
 8003a8e:	2201      	movs	r2, #1
 8003a90:	4620      	mov	r0, r4
 8003a92:	f000 fcf7 	bl	8004484 <__lshift>
 8003a96:	4631      	mov	r1, r6
 8003a98:	ee08 0a10 	vmov	s16, r0
 8003a9c:	f000 fd62 	bl	8004564 <__mcmp>
 8003aa0:	2800      	cmp	r0, #0
 8003aa2:	dc03      	bgt.n	8003aac <_dtoa_r+0xa9c>
 8003aa4:	d1e0      	bne.n	8003a68 <_dtoa_r+0xa58>
 8003aa6:	f01a 0f01 	tst.w	sl, #1
 8003aaa:	d0dd      	beq.n	8003a68 <_dtoa_r+0xa58>
 8003aac:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8003ab0:	d1d7      	bne.n	8003a62 <_dtoa_r+0xa52>
 8003ab2:	2339      	movs	r3, #57	; 0x39
 8003ab4:	f88b 3000 	strb.w	r3, [fp]
 8003ab8:	462b      	mov	r3, r5
 8003aba:	461d      	mov	r5, r3
 8003abc:	3b01      	subs	r3, #1
 8003abe:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003ac2:	2a39      	cmp	r2, #57	; 0x39
 8003ac4:	d071      	beq.n	8003baa <_dtoa_r+0xb9a>
 8003ac6:	3201      	adds	r2, #1
 8003ac8:	701a      	strb	r2, [r3, #0]
 8003aca:	e746      	b.n	800395a <_dtoa_r+0x94a>
 8003acc:	2a00      	cmp	r2, #0
 8003ace:	dd07      	ble.n	8003ae0 <_dtoa_r+0xad0>
 8003ad0:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8003ad4:	d0ed      	beq.n	8003ab2 <_dtoa_r+0xaa2>
 8003ad6:	f10a 0301 	add.w	r3, sl, #1
 8003ada:	f88b 3000 	strb.w	r3, [fp]
 8003ade:	e73c      	b.n	800395a <_dtoa_r+0x94a>
 8003ae0:	9b05      	ldr	r3, [sp, #20]
 8003ae2:	f809 ac01 	strb.w	sl, [r9, #-1]
 8003ae6:	4599      	cmp	r9, r3
 8003ae8:	d047      	beq.n	8003b7a <_dtoa_r+0xb6a>
 8003aea:	ee18 1a10 	vmov	r1, s16
 8003aee:	2300      	movs	r3, #0
 8003af0:	220a      	movs	r2, #10
 8003af2:	4620      	mov	r0, r4
 8003af4:	f000 fb16 	bl	8004124 <__multadd>
 8003af8:	45b8      	cmp	r8, r7
 8003afa:	ee08 0a10 	vmov	s16, r0
 8003afe:	f04f 0300 	mov.w	r3, #0
 8003b02:	f04f 020a 	mov.w	r2, #10
 8003b06:	4641      	mov	r1, r8
 8003b08:	4620      	mov	r0, r4
 8003b0a:	d106      	bne.n	8003b1a <_dtoa_r+0xb0a>
 8003b0c:	f000 fb0a 	bl	8004124 <__multadd>
 8003b10:	4680      	mov	r8, r0
 8003b12:	4607      	mov	r7, r0
 8003b14:	f109 0901 	add.w	r9, r9, #1
 8003b18:	e772      	b.n	8003a00 <_dtoa_r+0x9f0>
 8003b1a:	f000 fb03 	bl	8004124 <__multadd>
 8003b1e:	4639      	mov	r1, r7
 8003b20:	4680      	mov	r8, r0
 8003b22:	2300      	movs	r3, #0
 8003b24:	220a      	movs	r2, #10
 8003b26:	4620      	mov	r0, r4
 8003b28:	f000 fafc 	bl	8004124 <__multadd>
 8003b2c:	4607      	mov	r7, r0
 8003b2e:	e7f1      	b.n	8003b14 <_dtoa_r+0xb04>
 8003b30:	9b03      	ldr	r3, [sp, #12]
 8003b32:	9302      	str	r3, [sp, #8]
 8003b34:	9d01      	ldr	r5, [sp, #4]
 8003b36:	ee18 0a10 	vmov	r0, s16
 8003b3a:	4631      	mov	r1, r6
 8003b3c:	f7ff f9dc 	bl	8002ef8 <quorem>
 8003b40:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8003b44:	9b01      	ldr	r3, [sp, #4]
 8003b46:	f805 ab01 	strb.w	sl, [r5], #1
 8003b4a:	1aea      	subs	r2, r5, r3
 8003b4c:	9b02      	ldr	r3, [sp, #8]
 8003b4e:	4293      	cmp	r3, r2
 8003b50:	dd09      	ble.n	8003b66 <_dtoa_r+0xb56>
 8003b52:	ee18 1a10 	vmov	r1, s16
 8003b56:	2300      	movs	r3, #0
 8003b58:	220a      	movs	r2, #10
 8003b5a:	4620      	mov	r0, r4
 8003b5c:	f000 fae2 	bl	8004124 <__multadd>
 8003b60:	ee08 0a10 	vmov	s16, r0
 8003b64:	e7e7      	b.n	8003b36 <_dtoa_r+0xb26>
 8003b66:	9b02      	ldr	r3, [sp, #8]
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	bfc8      	it	gt
 8003b6c:	461d      	movgt	r5, r3
 8003b6e:	9b01      	ldr	r3, [sp, #4]
 8003b70:	bfd8      	it	le
 8003b72:	2501      	movle	r5, #1
 8003b74:	441d      	add	r5, r3
 8003b76:	f04f 0800 	mov.w	r8, #0
 8003b7a:	ee18 1a10 	vmov	r1, s16
 8003b7e:	2201      	movs	r2, #1
 8003b80:	4620      	mov	r0, r4
 8003b82:	f000 fc7f 	bl	8004484 <__lshift>
 8003b86:	4631      	mov	r1, r6
 8003b88:	ee08 0a10 	vmov	s16, r0
 8003b8c:	f000 fcea 	bl	8004564 <__mcmp>
 8003b90:	2800      	cmp	r0, #0
 8003b92:	dc91      	bgt.n	8003ab8 <_dtoa_r+0xaa8>
 8003b94:	d102      	bne.n	8003b9c <_dtoa_r+0xb8c>
 8003b96:	f01a 0f01 	tst.w	sl, #1
 8003b9a:	d18d      	bne.n	8003ab8 <_dtoa_r+0xaa8>
 8003b9c:	462b      	mov	r3, r5
 8003b9e:	461d      	mov	r5, r3
 8003ba0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003ba4:	2a30      	cmp	r2, #48	; 0x30
 8003ba6:	d0fa      	beq.n	8003b9e <_dtoa_r+0xb8e>
 8003ba8:	e6d7      	b.n	800395a <_dtoa_r+0x94a>
 8003baa:	9a01      	ldr	r2, [sp, #4]
 8003bac:	429a      	cmp	r2, r3
 8003bae:	d184      	bne.n	8003aba <_dtoa_r+0xaaa>
 8003bb0:	9b00      	ldr	r3, [sp, #0]
 8003bb2:	3301      	adds	r3, #1
 8003bb4:	9300      	str	r3, [sp, #0]
 8003bb6:	2331      	movs	r3, #49	; 0x31
 8003bb8:	7013      	strb	r3, [r2, #0]
 8003bba:	e6ce      	b.n	800395a <_dtoa_r+0x94a>
 8003bbc:	4b09      	ldr	r3, [pc, #36]	; (8003be4 <_dtoa_r+0xbd4>)
 8003bbe:	f7ff ba95 	b.w	80030ec <_dtoa_r+0xdc>
 8003bc2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003bc4:	2b00      	cmp	r3, #0
 8003bc6:	f47f aa6e 	bne.w	80030a6 <_dtoa_r+0x96>
 8003bca:	4b07      	ldr	r3, [pc, #28]	; (8003be8 <_dtoa_r+0xbd8>)
 8003bcc:	f7ff ba8e 	b.w	80030ec <_dtoa_r+0xdc>
 8003bd0:	9b02      	ldr	r3, [sp, #8]
 8003bd2:	2b00      	cmp	r3, #0
 8003bd4:	dcae      	bgt.n	8003b34 <_dtoa_r+0xb24>
 8003bd6:	9b06      	ldr	r3, [sp, #24]
 8003bd8:	2b02      	cmp	r3, #2
 8003bda:	f73f aea8 	bgt.w	800392e <_dtoa_r+0x91e>
 8003bde:	e7a9      	b.n	8003b34 <_dtoa_r+0xb24>
 8003be0:	08004ffb 	.word	0x08004ffb
 8003be4:	08004f58 	.word	0x08004f58
 8003be8:	08004f7c 	.word	0x08004f7c

08003bec <__sflush_r>:
 8003bec:	898a      	ldrh	r2, [r1, #12]
 8003bee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003bf2:	4605      	mov	r5, r0
 8003bf4:	0710      	lsls	r0, r2, #28
 8003bf6:	460c      	mov	r4, r1
 8003bf8:	d458      	bmi.n	8003cac <__sflush_r+0xc0>
 8003bfa:	684b      	ldr	r3, [r1, #4]
 8003bfc:	2b00      	cmp	r3, #0
 8003bfe:	dc05      	bgt.n	8003c0c <__sflush_r+0x20>
 8003c00:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	dc02      	bgt.n	8003c0c <__sflush_r+0x20>
 8003c06:	2000      	movs	r0, #0
 8003c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003c0c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003c0e:	2e00      	cmp	r6, #0
 8003c10:	d0f9      	beq.n	8003c06 <__sflush_r+0x1a>
 8003c12:	2300      	movs	r3, #0
 8003c14:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003c18:	682f      	ldr	r7, [r5, #0]
 8003c1a:	602b      	str	r3, [r5, #0]
 8003c1c:	d032      	beq.n	8003c84 <__sflush_r+0x98>
 8003c1e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003c20:	89a3      	ldrh	r3, [r4, #12]
 8003c22:	075a      	lsls	r2, r3, #29
 8003c24:	d505      	bpl.n	8003c32 <__sflush_r+0x46>
 8003c26:	6863      	ldr	r3, [r4, #4]
 8003c28:	1ac0      	subs	r0, r0, r3
 8003c2a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003c2c:	b10b      	cbz	r3, 8003c32 <__sflush_r+0x46>
 8003c2e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003c30:	1ac0      	subs	r0, r0, r3
 8003c32:	2300      	movs	r3, #0
 8003c34:	4602      	mov	r2, r0
 8003c36:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003c38:	6a21      	ldr	r1, [r4, #32]
 8003c3a:	4628      	mov	r0, r5
 8003c3c:	47b0      	blx	r6
 8003c3e:	1c43      	adds	r3, r0, #1
 8003c40:	89a3      	ldrh	r3, [r4, #12]
 8003c42:	d106      	bne.n	8003c52 <__sflush_r+0x66>
 8003c44:	6829      	ldr	r1, [r5, #0]
 8003c46:	291d      	cmp	r1, #29
 8003c48:	d82c      	bhi.n	8003ca4 <__sflush_r+0xb8>
 8003c4a:	4a2a      	ldr	r2, [pc, #168]	; (8003cf4 <__sflush_r+0x108>)
 8003c4c:	40ca      	lsrs	r2, r1
 8003c4e:	07d6      	lsls	r6, r2, #31
 8003c50:	d528      	bpl.n	8003ca4 <__sflush_r+0xb8>
 8003c52:	2200      	movs	r2, #0
 8003c54:	6062      	str	r2, [r4, #4]
 8003c56:	04d9      	lsls	r1, r3, #19
 8003c58:	6922      	ldr	r2, [r4, #16]
 8003c5a:	6022      	str	r2, [r4, #0]
 8003c5c:	d504      	bpl.n	8003c68 <__sflush_r+0x7c>
 8003c5e:	1c42      	adds	r2, r0, #1
 8003c60:	d101      	bne.n	8003c66 <__sflush_r+0x7a>
 8003c62:	682b      	ldr	r3, [r5, #0]
 8003c64:	b903      	cbnz	r3, 8003c68 <__sflush_r+0x7c>
 8003c66:	6560      	str	r0, [r4, #84]	; 0x54
 8003c68:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003c6a:	602f      	str	r7, [r5, #0]
 8003c6c:	2900      	cmp	r1, #0
 8003c6e:	d0ca      	beq.n	8003c06 <__sflush_r+0x1a>
 8003c70:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003c74:	4299      	cmp	r1, r3
 8003c76:	d002      	beq.n	8003c7e <__sflush_r+0x92>
 8003c78:	4628      	mov	r0, r5
 8003c7a:	f000 fd8b 	bl	8004794 <_free_r>
 8003c7e:	2000      	movs	r0, #0
 8003c80:	6360      	str	r0, [r4, #52]	; 0x34
 8003c82:	e7c1      	b.n	8003c08 <__sflush_r+0x1c>
 8003c84:	6a21      	ldr	r1, [r4, #32]
 8003c86:	2301      	movs	r3, #1
 8003c88:	4628      	mov	r0, r5
 8003c8a:	47b0      	blx	r6
 8003c8c:	1c41      	adds	r1, r0, #1
 8003c8e:	d1c7      	bne.n	8003c20 <__sflush_r+0x34>
 8003c90:	682b      	ldr	r3, [r5, #0]
 8003c92:	2b00      	cmp	r3, #0
 8003c94:	d0c4      	beq.n	8003c20 <__sflush_r+0x34>
 8003c96:	2b1d      	cmp	r3, #29
 8003c98:	d001      	beq.n	8003c9e <__sflush_r+0xb2>
 8003c9a:	2b16      	cmp	r3, #22
 8003c9c:	d101      	bne.n	8003ca2 <__sflush_r+0xb6>
 8003c9e:	602f      	str	r7, [r5, #0]
 8003ca0:	e7b1      	b.n	8003c06 <__sflush_r+0x1a>
 8003ca2:	89a3      	ldrh	r3, [r4, #12]
 8003ca4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003ca8:	81a3      	strh	r3, [r4, #12]
 8003caa:	e7ad      	b.n	8003c08 <__sflush_r+0x1c>
 8003cac:	690f      	ldr	r7, [r1, #16]
 8003cae:	2f00      	cmp	r7, #0
 8003cb0:	d0a9      	beq.n	8003c06 <__sflush_r+0x1a>
 8003cb2:	0793      	lsls	r3, r2, #30
 8003cb4:	680e      	ldr	r6, [r1, #0]
 8003cb6:	bf08      	it	eq
 8003cb8:	694b      	ldreq	r3, [r1, #20]
 8003cba:	600f      	str	r7, [r1, #0]
 8003cbc:	bf18      	it	ne
 8003cbe:	2300      	movne	r3, #0
 8003cc0:	eba6 0807 	sub.w	r8, r6, r7
 8003cc4:	608b      	str	r3, [r1, #8]
 8003cc6:	f1b8 0f00 	cmp.w	r8, #0
 8003cca:	dd9c      	ble.n	8003c06 <__sflush_r+0x1a>
 8003ccc:	6a21      	ldr	r1, [r4, #32]
 8003cce:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003cd0:	4643      	mov	r3, r8
 8003cd2:	463a      	mov	r2, r7
 8003cd4:	4628      	mov	r0, r5
 8003cd6:	47b0      	blx	r6
 8003cd8:	2800      	cmp	r0, #0
 8003cda:	dc06      	bgt.n	8003cea <__sflush_r+0xfe>
 8003cdc:	89a3      	ldrh	r3, [r4, #12]
 8003cde:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003ce2:	81a3      	strh	r3, [r4, #12]
 8003ce4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ce8:	e78e      	b.n	8003c08 <__sflush_r+0x1c>
 8003cea:	4407      	add	r7, r0
 8003cec:	eba8 0800 	sub.w	r8, r8, r0
 8003cf0:	e7e9      	b.n	8003cc6 <__sflush_r+0xda>
 8003cf2:	bf00      	nop
 8003cf4:	20400001 	.word	0x20400001

08003cf8 <_fflush_r>:
 8003cf8:	b538      	push	{r3, r4, r5, lr}
 8003cfa:	690b      	ldr	r3, [r1, #16]
 8003cfc:	4605      	mov	r5, r0
 8003cfe:	460c      	mov	r4, r1
 8003d00:	b913      	cbnz	r3, 8003d08 <_fflush_r+0x10>
 8003d02:	2500      	movs	r5, #0
 8003d04:	4628      	mov	r0, r5
 8003d06:	bd38      	pop	{r3, r4, r5, pc}
 8003d08:	b118      	cbz	r0, 8003d12 <_fflush_r+0x1a>
 8003d0a:	6983      	ldr	r3, [r0, #24]
 8003d0c:	b90b      	cbnz	r3, 8003d12 <_fflush_r+0x1a>
 8003d0e:	f000 f887 	bl	8003e20 <__sinit>
 8003d12:	4b14      	ldr	r3, [pc, #80]	; (8003d64 <_fflush_r+0x6c>)
 8003d14:	429c      	cmp	r4, r3
 8003d16:	d11b      	bne.n	8003d50 <_fflush_r+0x58>
 8003d18:	686c      	ldr	r4, [r5, #4]
 8003d1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d0ef      	beq.n	8003d02 <_fflush_r+0xa>
 8003d22:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003d24:	07d0      	lsls	r0, r2, #31
 8003d26:	d404      	bmi.n	8003d32 <_fflush_r+0x3a>
 8003d28:	0599      	lsls	r1, r3, #22
 8003d2a:	d402      	bmi.n	8003d32 <_fflush_r+0x3a>
 8003d2c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003d2e:	f000 f91a 	bl	8003f66 <__retarget_lock_acquire_recursive>
 8003d32:	4628      	mov	r0, r5
 8003d34:	4621      	mov	r1, r4
 8003d36:	f7ff ff59 	bl	8003bec <__sflush_r>
 8003d3a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003d3c:	07da      	lsls	r2, r3, #31
 8003d3e:	4605      	mov	r5, r0
 8003d40:	d4e0      	bmi.n	8003d04 <_fflush_r+0xc>
 8003d42:	89a3      	ldrh	r3, [r4, #12]
 8003d44:	059b      	lsls	r3, r3, #22
 8003d46:	d4dd      	bmi.n	8003d04 <_fflush_r+0xc>
 8003d48:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003d4a:	f000 f90d 	bl	8003f68 <__retarget_lock_release_recursive>
 8003d4e:	e7d9      	b.n	8003d04 <_fflush_r+0xc>
 8003d50:	4b05      	ldr	r3, [pc, #20]	; (8003d68 <_fflush_r+0x70>)
 8003d52:	429c      	cmp	r4, r3
 8003d54:	d101      	bne.n	8003d5a <_fflush_r+0x62>
 8003d56:	68ac      	ldr	r4, [r5, #8]
 8003d58:	e7df      	b.n	8003d1a <_fflush_r+0x22>
 8003d5a:	4b04      	ldr	r3, [pc, #16]	; (8003d6c <_fflush_r+0x74>)
 8003d5c:	429c      	cmp	r4, r3
 8003d5e:	bf08      	it	eq
 8003d60:	68ec      	ldreq	r4, [r5, #12]
 8003d62:	e7da      	b.n	8003d1a <_fflush_r+0x22>
 8003d64:	0800502c 	.word	0x0800502c
 8003d68:	0800504c 	.word	0x0800504c
 8003d6c:	0800500c 	.word	0x0800500c

08003d70 <std>:
 8003d70:	2300      	movs	r3, #0
 8003d72:	b510      	push	{r4, lr}
 8003d74:	4604      	mov	r4, r0
 8003d76:	e9c0 3300 	strd	r3, r3, [r0]
 8003d7a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8003d7e:	6083      	str	r3, [r0, #8]
 8003d80:	8181      	strh	r1, [r0, #12]
 8003d82:	6643      	str	r3, [r0, #100]	; 0x64
 8003d84:	81c2      	strh	r2, [r0, #14]
 8003d86:	6183      	str	r3, [r0, #24]
 8003d88:	4619      	mov	r1, r3
 8003d8a:	2208      	movs	r2, #8
 8003d8c:	305c      	adds	r0, #92	; 0x5c
 8003d8e:	f7fe faf3 	bl	8002378 <memset>
 8003d92:	4b05      	ldr	r3, [pc, #20]	; (8003da8 <std+0x38>)
 8003d94:	6263      	str	r3, [r4, #36]	; 0x24
 8003d96:	4b05      	ldr	r3, [pc, #20]	; (8003dac <std+0x3c>)
 8003d98:	62a3      	str	r3, [r4, #40]	; 0x28
 8003d9a:	4b05      	ldr	r3, [pc, #20]	; (8003db0 <std+0x40>)
 8003d9c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003d9e:	4b05      	ldr	r3, [pc, #20]	; (8003db4 <std+0x44>)
 8003da0:	6224      	str	r4, [r4, #32]
 8003da2:	6323      	str	r3, [r4, #48]	; 0x30
 8003da4:	bd10      	pop	{r4, pc}
 8003da6:	bf00      	nop
 8003da8:	08004c29 	.word	0x08004c29
 8003dac:	08004c4b 	.word	0x08004c4b
 8003db0:	08004c83 	.word	0x08004c83
 8003db4:	08004ca7 	.word	0x08004ca7

08003db8 <_cleanup_r>:
 8003db8:	4901      	ldr	r1, [pc, #4]	; (8003dc0 <_cleanup_r+0x8>)
 8003dba:	f000 b8af 	b.w	8003f1c <_fwalk_reent>
 8003dbe:	bf00      	nop
 8003dc0:	08003cf9 	.word	0x08003cf9

08003dc4 <__sfmoreglue>:
 8003dc4:	b570      	push	{r4, r5, r6, lr}
 8003dc6:	2268      	movs	r2, #104	; 0x68
 8003dc8:	1e4d      	subs	r5, r1, #1
 8003dca:	4355      	muls	r5, r2
 8003dcc:	460e      	mov	r6, r1
 8003dce:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8003dd2:	f000 fd4b 	bl	800486c <_malloc_r>
 8003dd6:	4604      	mov	r4, r0
 8003dd8:	b140      	cbz	r0, 8003dec <__sfmoreglue+0x28>
 8003dda:	2100      	movs	r1, #0
 8003ddc:	e9c0 1600 	strd	r1, r6, [r0]
 8003de0:	300c      	adds	r0, #12
 8003de2:	60a0      	str	r0, [r4, #8]
 8003de4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8003de8:	f7fe fac6 	bl	8002378 <memset>
 8003dec:	4620      	mov	r0, r4
 8003dee:	bd70      	pop	{r4, r5, r6, pc}

08003df0 <__sfp_lock_acquire>:
 8003df0:	4801      	ldr	r0, [pc, #4]	; (8003df8 <__sfp_lock_acquire+0x8>)
 8003df2:	f000 b8b8 	b.w	8003f66 <__retarget_lock_acquire_recursive>
 8003df6:	bf00      	nop
 8003df8:	200004b5 	.word	0x200004b5

08003dfc <__sfp_lock_release>:
 8003dfc:	4801      	ldr	r0, [pc, #4]	; (8003e04 <__sfp_lock_release+0x8>)
 8003dfe:	f000 b8b3 	b.w	8003f68 <__retarget_lock_release_recursive>
 8003e02:	bf00      	nop
 8003e04:	200004b5 	.word	0x200004b5

08003e08 <__sinit_lock_acquire>:
 8003e08:	4801      	ldr	r0, [pc, #4]	; (8003e10 <__sinit_lock_acquire+0x8>)
 8003e0a:	f000 b8ac 	b.w	8003f66 <__retarget_lock_acquire_recursive>
 8003e0e:	bf00      	nop
 8003e10:	200004b6 	.word	0x200004b6

08003e14 <__sinit_lock_release>:
 8003e14:	4801      	ldr	r0, [pc, #4]	; (8003e1c <__sinit_lock_release+0x8>)
 8003e16:	f000 b8a7 	b.w	8003f68 <__retarget_lock_release_recursive>
 8003e1a:	bf00      	nop
 8003e1c:	200004b6 	.word	0x200004b6

08003e20 <__sinit>:
 8003e20:	b510      	push	{r4, lr}
 8003e22:	4604      	mov	r4, r0
 8003e24:	f7ff fff0 	bl	8003e08 <__sinit_lock_acquire>
 8003e28:	69a3      	ldr	r3, [r4, #24]
 8003e2a:	b11b      	cbz	r3, 8003e34 <__sinit+0x14>
 8003e2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003e30:	f7ff bff0 	b.w	8003e14 <__sinit_lock_release>
 8003e34:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003e38:	6523      	str	r3, [r4, #80]	; 0x50
 8003e3a:	4b13      	ldr	r3, [pc, #76]	; (8003e88 <__sinit+0x68>)
 8003e3c:	4a13      	ldr	r2, [pc, #76]	; (8003e8c <__sinit+0x6c>)
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	62a2      	str	r2, [r4, #40]	; 0x28
 8003e42:	42a3      	cmp	r3, r4
 8003e44:	bf04      	itt	eq
 8003e46:	2301      	moveq	r3, #1
 8003e48:	61a3      	streq	r3, [r4, #24]
 8003e4a:	4620      	mov	r0, r4
 8003e4c:	f000 f820 	bl	8003e90 <__sfp>
 8003e50:	6060      	str	r0, [r4, #4]
 8003e52:	4620      	mov	r0, r4
 8003e54:	f000 f81c 	bl	8003e90 <__sfp>
 8003e58:	60a0      	str	r0, [r4, #8]
 8003e5a:	4620      	mov	r0, r4
 8003e5c:	f000 f818 	bl	8003e90 <__sfp>
 8003e60:	2200      	movs	r2, #0
 8003e62:	60e0      	str	r0, [r4, #12]
 8003e64:	2104      	movs	r1, #4
 8003e66:	6860      	ldr	r0, [r4, #4]
 8003e68:	f7ff ff82 	bl	8003d70 <std>
 8003e6c:	68a0      	ldr	r0, [r4, #8]
 8003e6e:	2201      	movs	r2, #1
 8003e70:	2109      	movs	r1, #9
 8003e72:	f7ff ff7d 	bl	8003d70 <std>
 8003e76:	68e0      	ldr	r0, [r4, #12]
 8003e78:	2202      	movs	r2, #2
 8003e7a:	2112      	movs	r1, #18
 8003e7c:	f7ff ff78 	bl	8003d70 <std>
 8003e80:	2301      	movs	r3, #1
 8003e82:	61a3      	str	r3, [r4, #24]
 8003e84:	e7d2      	b.n	8003e2c <__sinit+0xc>
 8003e86:	bf00      	nop
 8003e88:	08004f44 	.word	0x08004f44
 8003e8c:	08003db9 	.word	0x08003db9

08003e90 <__sfp>:
 8003e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e92:	4607      	mov	r7, r0
 8003e94:	f7ff ffac 	bl	8003df0 <__sfp_lock_acquire>
 8003e98:	4b1e      	ldr	r3, [pc, #120]	; (8003f14 <__sfp+0x84>)
 8003e9a:	681e      	ldr	r6, [r3, #0]
 8003e9c:	69b3      	ldr	r3, [r6, #24]
 8003e9e:	b913      	cbnz	r3, 8003ea6 <__sfp+0x16>
 8003ea0:	4630      	mov	r0, r6
 8003ea2:	f7ff ffbd 	bl	8003e20 <__sinit>
 8003ea6:	3648      	adds	r6, #72	; 0x48
 8003ea8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8003eac:	3b01      	subs	r3, #1
 8003eae:	d503      	bpl.n	8003eb8 <__sfp+0x28>
 8003eb0:	6833      	ldr	r3, [r6, #0]
 8003eb2:	b30b      	cbz	r3, 8003ef8 <__sfp+0x68>
 8003eb4:	6836      	ldr	r6, [r6, #0]
 8003eb6:	e7f7      	b.n	8003ea8 <__sfp+0x18>
 8003eb8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8003ebc:	b9d5      	cbnz	r5, 8003ef4 <__sfp+0x64>
 8003ebe:	4b16      	ldr	r3, [pc, #88]	; (8003f18 <__sfp+0x88>)
 8003ec0:	60e3      	str	r3, [r4, #12]
 8003ec2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8003ec6:	6665      	str	r5, [r4, #100]	; 0x64
 8003ec8:	f000 f84c 	bl	8003f64 <__retarget_lock_init_recursive>
 8003ecc:	f7ff ff96 	bl	8003dfc <__sfp_lock_release>
 8003ed0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8003ed4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8003ed8:	6025      	str	r5, [r4, #0]
 8003eda:	61a5      	str	r5, [r4, #24]
 8003edc:	2208      	movs	r2, #8
 8003ede:	4629      	mov	r1, r5
 8003ee0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8003ee4:	f7fe fa48 	bl	8002378 <memset>
 8003ee8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8003eec:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8003ef0:	4620      	mov	r0, r4
 8003ef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003ef4:	3468      	adds	r4, #104	; 0x68
 8003ef6:	e7d9      	b.n	8003eac <__sfp+0x1c>
 8003ef8:	2104      	movs	r1, #4
 8003efa:	4638      	mov	r0, r7
 8003efc:	f7ff ff62 	bl	8003dc4 <__sfmoreglue>
 8003f00:	4604      	mov	r4, r0
 8003f02:	6030      	str	r0, [r6, #0]
 8003f04:	2800      	cmp	r0, #0
 8003f06:	d1d5      	bne.n	8003eb4 <__sfp+0x24>
 8003f08:	f7ff ff78 	bl	8003dfc <__sfp_lock_release>
 8003f0c:	230c      	movs	r3, #12
 8003f0e:	603b      	str	r3, [r7, #0]
 8003f10:	e7ee      	b.n	8003ef0 <__sfp+0x60>
 8003f12:	bf00      	nop
 8003f14:	08004f44 	.word	0x08004f44
 8003f18:	ffff0001 	.word	0xffff0001

08003f1c <_fwalk_reent>:
 8003f1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f20:	4606      	mov	r6, r0
 8003f22:	4688      	mov	r8, r1
 8003f24:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003f28:	2700      	movs	r7, #0
 8003f2a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003f2e:	f1b9 0901 	subs.w	r9, r9, #1
 8003f32:	d505      	bpl.n	8003f40 <_fwalk_reent+0x24>
 8003f34:	6824      	ldr	r4, [r4, #0]
 8003f36:	2c00      	cmp	r4, #0
 8003f38:	d1f7      	bne.n	8003f2a <_fwalk_reent+0xe>
 8003f3a:	4638      	mov	r0, r7
 8003f3c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003f40:	89ab      	ldrh	r3, [r5, #12]
 8003f42:	2b01      	cmp	r3, #1
 8003f44:	d907      	bls.n	8003f56 <_fwalk_reent+0x3a>
 8003f46:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003f4a:	3301      	adds	r3, #1
 8003f4c:	d003      	beq.n	8003f56 <_fwalk_reent+0x3a>
 8003f4e:	4629      	mov	r1, r5
 8003f50:	4630      	mov	r0, r6
 8003f52:	47c0      	blx	r8
 8003f54:	4307      	orrs	r7, r0
 8003f56:	3568      	adds	r5, #104	; 0x68
 8003f58:	e7e9      	b.n	8003f2e <_fwalk_reent+0x12>
	...

08003f5c <_localeconv_r>:
 8003f5c:	4800      	ldr	r0, [pc, #0]	; (8003f60 <_localeconv_r+0x4>)
 8003f5e:	4770      	bx	lr
 8003f60:	2000029c 	.word	0x2000029c

08003f64 <__retarget_lock_init_recursive>:
 8003f64:	4770      	bx	lr

08003f66 <__retarget_lock_acquire_recursive>:
 8003f66:	4770      	bx	lr

08003f68 <__retarget_lock_release_recursive>:
 8003f68:	4770      	bx	lr

08003f6a <__swhatbuf_r>:
 8003f6a:	b570      	push	{r4, r5, r6, lr}
 8003f6c:	460e      	mov	r6, r1
 8003f6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003f72:	2900      	cmp	r1, #0
 8003f74:	b096      	sub	sp, #88	; 0x58
 8003f76:	4614      	mov	r4, r2
 8003f78:	461d      	mov	r5, r3
 8003f7a:	da08      	bge.n	8003f8e <__swhatbuf_r+0x24>
 8003f7c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003f80:	2200      	movs	r2, #0
 8003f82:	602a      	str	r2, [r5, #0]
 8003f84:	061a      	lsls	r2, r3, #24
 8003f86:	d410      	bmi.n	8003faa <__swhatbuf_r+0x40>
 8003f88:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003f8c:	e00e      	b.n	8003fac <__swhatbuf_r+0x42>
 8003f8e:	466a      	mov	r2, sp
 8003f90:	f000 fee0 	bl	8004d54 <_fstat_r>
 8003f94:	2800      	cmp	r0, #0
 8003f96:	dbf1      	blt.n	8003f7c <__swhatbuf_r+0x12>
 8003f98:	9a01      	ldr	r2, [sp, #4]
 8003f9a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003f9e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003fa2:	425a      	negs	r2, r3
 8003fa4:	415a      	adcs	r2, r3
 8003fa6:	602a      	str	r2, [r5, #0]
 8003fa8:	e7ee      	b.n	8003f88 <__swhatbuf_r+0x1e>
 8003faa:	2340      	movs	r3, #64	; 0x40
 8003fac:	2000      	movs	r0, #0
 8003fae:	6023      	str	r3, [r4, #0]
 8003fb0:	b016      	add	sp, #88	; 0x58
 8003fb2:	bd70      	pop	{r4, r5, r6, pc}

08003fb4 <__smakebuf_r>:
 8003fb4:	898b      	ldrh	r3, [r1, #12]
 8003fb6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003fb8:	079d      	lsls	r5, r3, #30
 8003fba:	4606      	mov	r6, r0
 8003fbc:	460c      	mov	r4, r1
 8003fbe:	d507      	bpl.n	8003fd0 <__smakebuf_r+0x1c>
 8003fc0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003fc4:	6023      	str	r3, [r4, #0]
 8003fc6:	6123      	str	r3, [r4, #16]
 8003fc8:	2301      	movs	r3, #1
 8003fca:	6163      	str	r3, [r4, #20]
 8003fcc:	b002      	add	sp, #8
 8003fce:	bd70      	pop	{r4, r5, r6, pc}
 8003fd0:	ab01      	add	r3, sp, #4
 8003fd2:	466a      	mov	r2, sp
 8003fd4:	f7ff ffc9 	bl	8003f6a <__swhatbuf_r>
 8003fd8:	9900      	ldr	r1, [sp, #0]
 8003fda:	4605      	mov	r5, r0
 8003fdc:	4630      	mov	r0, r6
 8003fde:	f000 fc45 	bl	800486c <_malloc_r>
 8003fe2:	b948      	cbnz	r0, 8003ff8 <__smakebuf_r+0x44>
 8003fe4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003fe8:	059a      	lsls	r2, r3, #22
 8003fea:	d4ef      	bmi.n	8003fcc <__smakebuf_r+0x18>
 8003fec:	f023 0303 	bic.w	r3, r3, #3
 8003ff0:	f043 0302 	orr.w	r3, r3, #2
 8003ff4:	81a3      	strh	r3, [r4, #12]
 8003ff6:	e7e3      	b.n	8003fc0 <__smakebuf_r+0xc>
 8003ff8:	4b0d      	ldr	r3, [pc, #52]	; (8004030 <__smakebuf_r+0x7c>)
 8003ffa:	62b3      	str	r3, [r6, #40]	; 0x28
 8003ffc:	89a3      	ldrh	r3, [r4, #12]
 8003ffe:	6020      	str	r0, [r4, #0]
 8004000:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004004:	81a3      	strh	r3, [r4, #12]
 8004006:	9b00      	ldr	r3, [sp, #0]
 8004008:	6163      	str	r3, [r4, #20]
 800400a:	9b01      	ldr	r3, [sp, #4]
 800400c:	6120      	str	r0, [r4, #16]
 800400e:	b15b      	cbz	r3, 8004028 <__smakebuf_r+0x74>
 8004010:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004014:	4630      	mov	r0, r6
 8004016:	f000 feaf 	bl	8004d78 <_isatty_r>
 800401a:	b128      	cbz	r0, 8004028 <__smakebuf_r+0x74>
 800401c:	89a3      	ldrh	r3, [r4, #12]
 800401e:	f023 0303 	bic.w	r3, r3, #3
 8004022:	f043 0301 	orr.w	r3, r3, #1
 8004026:	81a3      	strh	r3, [r4, #12]
 8004028:	89a0      	ldrh	r0, [r4, #12]
 800402a:	4305      	orrs	r5, r0
 800402c:	81a5      	strh	r5, [r4, #12]
 800402e:	e7cd      	b.n	8003fcc <__smakebuf_r+0x18>
 8004030:	08003db9 	.word	0x08003db9

08004034 <malloc>:
 8004034:	4b02      	ldr	r3, [pc, #8]	; (8004040 <malloc+0xc>)
 8004036:	4601      	mov	r1, r0
 8004038:	6818      	ldr	r0, [r3, #0]
 800403a:	f000 bc17 	b.w	800486c <_malloc_r>
 800403e:	bf00      	nop
 8004040:	20000148 	.word	0x20000148

08004044 <memcpy>:
 8004044:	440a      	add	r2, r1
 8004046:	4291      	cmp	r1, r2
 8004048:	f100 33ff 	add.w	r3, r0, #4294967295
 800404c:	d100      	bne.n	8004050 <memcpy+0xc>
 800404e:	4770      	bx	lr
 8004050:	b510      	push	{r4, lr}
 8004052:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004056:	f803 4f01 	strb.w	r4, [r3, #1]!
 800405a:	4291      	cmp	r1, r2
 800405c:	d1f9      	bne.n	8004052 <memcpy+0xe>
 800405e:	bd10      	pop	{r4, pc}

08004060 <_Balloc>:
 8004060:	b570      	push	{r4, r5, r6, lr}
 8004062:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004064:	4604      	mov	r4, r0
 8004066:	460d      	mov	r5, r1
 8004068:	b976      	cbnz	r6, 8004088 <_Balloc+0x28>
 800406a:	2010      	movs	r0, #16
 800406c:	f7ff ffe2 	bl	8004034 <malloc>
 8004070:	4602      	mov	r2, r0
 8004072:	6260      	str	r0, [r4, #36]	; 0x24
 8004074:	b920      	cbnz	r0, 8004080 <_Balloc+0x20>
 8004076:	4b18      	ldr	r3, [pc, #96]	; (80040d8 <_Balloc+0x78>)
 8004078:	4818      	ldr	r0, [pc, #96]	; (80040dc <_Balloc+0x7c>)
 800407a:	2166      	movs	r1, #102	; 0x66
 800407c:	f000 fe2a 	bl	8004cd4 <__assert_func>
 8004080:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004084:	6006      	str	r6, [r0, #0]
 8004086:	60c6      	str	r6, [r0, #12]
 8004088:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800408a:	68f3      	ldr	r3, [r6, #12]
 800408c:	b183      	cbz	r3, 80040b0 <_Balloc+0x50>
 800408e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004090:	68db      	ldr	r3, [r3, #12]
 8004092:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004096:	b9b8      	cbnz	r0, 80040c8 <_Balloc+0x68>
 8004098:	2101      	movs	r1, #1
 800409a:	fa01 f605 	lsl.w	r6, r1, r5
 800409e:	1d72      	adds	r2, r6, #5
 80040a0:	0092      	lsls	r2, r2, #2
 80040a2:	4620      	mov	r0, r4
 80040a4:	f000 fb60 	bl	8004768 <_calloc_r>
 80040a8:	b160      	cbz	r0, 80040c4 <_Balloc+0x64>
 80040aa:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80040ae:	e00e      	b.n	80040ce <_Balloc+0x6e>
 80040b0:	2221      	movs	r2, #33	; 0x21
 80040b2:	2104      	movs	r1, #4
 80040b4:	4620      	mov	r0, r4
 80040b6:	f000 fb57 	bl	8004768 <_calloc_r>
 80040ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80040bc:	60f0      	str	r0, [r6, #12]
 80040be:	68db      	ldr	r3, [r3, #12]
 80040c0:	2b00      	cmp	r3, #0
 80040c2:	d1e4      	bne.n	800408e <_Balloc+0x2e>
 80040c4:	2000      	movs	r0, #0
 80040c6:	bd70      	pop	{r4, r5, r6, pc}
 80040c8:	6802      	ldr	r2, [r0, #0]
 80040ca:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80040ce:	2300      	movs	r3, #0
 80040d0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80040d4:	e7f7      	b.n	80040c6 <_Balloc+0x66>
 80040d6:	bf00      	nop
 80040d8:	08004f89 	.word	0x08004f89
 80040dc:	0800506c 	.word	0x0800506c

080040e0 <_Bfree>:
 80040e0:	b570      	push	{r4, r5, r6, lr}
 80040e2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80040e4:	4605      	mov	r5, r0
 80040e6:	460c      	mov	r4, r1
 80040e8:	b976      	cbnz	r6, 8004108 <_Bfree+0x28>
 80040ea:	2010      	movs	r0, #16
 80040ec:	f7ff ffa2 	bl	8004034 <malloc>
 80040f0:	4602      	mov	r2, r0
 80040f2:	6268      	str	r0, [r5, #36]	; 0x24
 80040f4:	b920      	cbnz	r0, 8004100 <_Bfree+0x20>
 80040f6:	4b09      	ldr	r3, [pc, #36]	; (800411c <_Bfree+0x3c>)
 80040f8:	4809      	ldr	r0, [pc, #36]	; (8004120 <_Bfree+0x40>)
 80040fa:	218a      	movs	r1, #138	; 0x8a
 80040fc:	f000 fdea 	bl	8004cd4 <__assert_func>
 8004100:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004104:	6006      	str	r6, [r0, #0]
 8004106:	60c6      	str	r6, [r0, #12]
 8004108:	b13c      	cbz	r4, 800411a <_Bfree+0x3a>
 800410a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800410c:	6862      	ldr	r2, [r4, #4]
 800410e:	68db      	ldr	r3, [r3, #12]
 8004110:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004114:	6021      	str	r1, [r4, #0]
 8004116:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800411a:	bd70      	pop	{r4, r5, r6, pc}
 800411c:	08004f89 	.word	0x08004f89
 8004120:	0800506c 	.word	0x0800506c

08004124 <__multadd>:
 8004124:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004128:	690d      	ldr	r5, [r1, #16]
 800412a:	4607      	mov	r7, r0
 800412c:	460c      	mov	r4, r1
 800412e:	461e      	mov	r6, r3
 8004130:	f101 0c14 	add.w	ip, r1, #20
 8004134:	2000      	movs	r0, #0
 8004136:	f8dc 3000 	ldr.w	r3, [ip]
 800413a:	b299      	uxth	r1, r3
 800413c:	fb02 6101 	mla	r1, r2, r1, r6
 8004140:	0c1e      	lsrs	r6, r3, #16
 8004142:	0c0b      	lsrs	r3, r1, #16
 8004144:	fb02 3306 	mla	r3, r2, r6, r3
 8004148:	b289      	uxth	r1, r1
 800414a:	3001      	adds	r0, #1
 800414c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004150:	4285      	cmp	r5, r0
 8004152:	f84c 1b04 	str.w	r1, [ip], #4
 8004156:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800415a:	dcec      	bgt.n	8004136 <__multadd+0x12>
 800415c:	b30e      	cbz	r6, 80041a2 <__multadd+0x7e>
 800415e:	68a3      	ldr	r3, [r4, #8]
 8004160:	42ab      	cmp	r3, r5
 8004162:	dc19      	bgt.n	8004198 <__multadd+0x74>
 8004164:	6861      	ldr	r1, [r4, #4]
 8004166:	4638      	mov	r0, r7
 8004168:	3101      	adds	r1, #1
 800416a:	f7ff ff79 	bl	8004060 <_Balloc>
 800416e:	4680      	mov	r8, r0
 8004170:	b928      	cbnz	r0, 800417e <__multadd+0x5a>
 8004172:	4602      	mov	r2, r0
 8004174:	4b0c      	ldr	r3, [pc, #48]	; (80041a8 <__multadd+0x84>)
 8004176:	480d      	ldr	r0, [pc, #52]	; (80041ac <__multadd+0x88>)
 8004178:	21b5      	movs	r1, #181	; 0xb5
 800417a:	f000 fdab 	bl	8004cd4 <__assert_func>
 800417e:	6922      	ldr	r2, [r4, #16]
 8004180:	3202      	adds	r2, #2
 8004182:	f104 010c 	add.w	r1, r4, #12
 8004186:	0092      	lsls	r2, r2, #2
 8004188:	300c      	adds	r0, #12
 800418a:	f7ff ff5b 	bl	8004044 <memcpy>
 800418e:	4621      	mov	r1, r4
 8004190:	4638      	mov	r0, r7
 8004192:	f7ff ffa5 	bl	80040e0 <_Bfree>
 8004196:	4644      	mov	r4, r8
 8004198:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800419c:	3501      	adds	r5, #1
 800419e:	615e      	str	r6, [r3, #20]
 80041a0:	6125      	str	r5, [r4, #16]
 80041a2:	4620      	mov	r0, r4
 80041a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041a8:	08004ffb 	.word	0x08004ffb
 80041ac:	0800506c 	.word	0x0800506c

080041b0 <__hi0bits>:
 80041b0:	0c03      	lsrs	r3, r0, #16
 80041b2:	041b      	lsls	r3, r3, #16
 80041b4:	b9d3      	cbnz	r3, 80041ec <__hi0bits+0x3c>
 80041b6:	0400      	lsls	r0, r0, #16
 80041b8:	2310      	movs	r3, #16
 80041ba:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80041be:	bf04      	itt	eq
 80041c0:	0200      	lsleq	r0, r0, #8
 80041c2:	3308      	addeq	r3, #8
 80041c4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80041c8:	bf04      	itt	eq
 80041ca:	0100      	lsleq	r0, r0, #4
 80041cc:	3304      	addeq	r3, #4
 80041ce:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80041d2:	bf04      	itt	eq
 80041d4:	0080      	lsleq	r0, r0, #2
 80041d6:	3302      	addeq	r3, #2
 80041d8:	2800      	cmp	r0, #0
 80041da:	db05      	blt.n	80041e8 <__hi0bits+0x38>
 80041dc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 80041e0:	f103 0301 	add.w	r3, r3, #1
 80041e4:	bf08      	it	eq
 80041e6:	2320      	moveq	r3, #32
 80041e8:	4618      	mov	r0, r3
 80041ea:	4770      	bx	lr
 80041ec:	2300      	movs	r3, #0
 80041ee:	e7e4      	b.n	80041ba <__hi0bits+0xa>

080041f0 <__lo0bits>:
 80041f0:	6803      	ldr	r3, [r0, #0]
 80041f2:	f013 0207 	ands.w	r2, r3, #7
 80041f6:	4601      	mov	r1, r0
 80041f8:	d00b      	beq.n	8004212 <__lo0bits+0x22>
 80041fa:	07da      	lsls	r2, r3, #31
 80041fc:	d423      	bmi.n	8004246 <__lo0bits+0x56>
 80041fe:	0798      	lsls	r0, r3, #30
 8004200:	bf49      	itett	mi
 8004202:	085b      	lsrmi	r3, r3, #1
 8004204:	089b      	lsrpl	r3, r3, #2
 8004206:	2001      	movmi	r0, #1
 8004208:	600b      	strmi	r3, [r1, #0]
 800420a:	bf5c      	itt	pl
 800420c:	600b      	strpl	r3, [r1, #0]
 800420e:	2002      	movpl	r0, #2
 8004210:	4770      	bx	lr
 8004212:	b298      	uxth	r0, r3
 8004214:	b9a8      	cbnz	r0, 8004242 <__lo0bits+0x52>
 8004216:	0c1b      	lsrs	r3, r3, #16
 8004218:	2010      	movs	r0, #16
 800421a:	b2da      	uxtb	r2, r3
 800421c:	b90a      	cbnz	r2, 8004222 <__lo0bits+0x32>
 800421e:	3008      	adds	r0, #8
 8004220:	0a1b      	lsrs	r3, r3, #8
 8004222:	071a      	lsls	r2, r3, #28
 8004224:	bf04      	itt	eq
 8004226:	091b      	lsreq	r3, r3, #4
 8004228:	3004      	addeq	r0, #4
 800422a:	079a      	lsls	r2, r3, #30
 800422c:	bf04      	itt	eq
 800422e:	089b      	lsreq	r3, r3, #2
 8004230:	3002      	addeq	r0, #2
 8004232:	07da      	lsls	r2, r3, #31
 8004234:	d403      	bmi.n	800423e <__lo0bits+0x4e>
 8004236:	085b      	lsrs	r3, r3, #1
 8004238:	f100 0001 	add.w	r0, r0, #1
 800423c:	d005      	beq.n	800424a <__lo0bits+0x5a>
 800423e:	600b      	str	r3, [r1, #0]
 8004240:	4770      	bx	lr
 8004242:	4610      	mov	r0, r2
 8004244:	e7e9      	b.n	800421a <__lo0bits+0x2a>
 8004246:	2000      	movs	r0, #0
 8004248:	4770      	bx	lr
 800424a:	2020      	movs	r0, #32
 800424c:	4770      	bx	lr
	...

08004250 <__i2b>:
 8004250:	b510      	push	{r4, lr}
 8004252:	460c      	mov	r4, r1
 8004254:	2101      	movs	r1, #1
 8004256:	f7ff ff03 	bl	8004060 <_Balloc>
 800425a:	4602      	mov	r2, r0
 800425c:	b928      	cbnz	r0, 800426a <__i2b+0x1a>
 800425e:	4b05      	ldr	r3, [pc, #20]	; (8004274 <__i2b+0x24>)
 8004260:	4805      	ldr	r0, [pc, #20]	; (8004278 <__i2b+0x28>)
 8004262:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8004266:	f000 fd35 	bl	8004cd4 <__assert_func>
 800426a:	2301      	movs	r3, #1
 800426c:	6144      	str	r4, [r0, #20]
 800426e:	6103      	str	r3, [r0, #16]
 8004270:	bd10      	pop	{r4, pc}
 8004272:	bf00      	nop
 8004274:	08004ffb 	.word	0x08004ffb
 8004278:	0800506c 	.word	0x0800506c

0800427c <__multiply>:
 800427c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004280:	4691      	mov	r9, r2
 8004282:	690a      	ldr	r2, [r1, #16]
 8004284:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004288:	429a      	cmp	r2, r3
 800428a:	bfb8      	it	lt
 800428c:	460b      	movlt	r3, r1
 800428e:	460c      	mov	r4, r1
 8004290:	bfbc      	itt	lt
 8004292:	464c      	movlt	r4, r9
 8004294:	4699      	movlt	r9, r3
 8004296:	6927      	ldr	r7, [r4, #16]
 8004298:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800429c:	68a3      	ldr	r3, [r4, #8]
 800429e:	6861      	ldr	r1, [r4, #4]
 80042a0:	eb07 060a 	add.w	r6, r7, sl
 80042a4:	42b3      	cmp	r3, r6
 80042a6:	b085      	sub	sp, #20
 80042a8:	bfb8      	it	lt
 80042aa:	3101      	addlt	r1, #1
 80042ac:	f7ff fed8 	bl	8004060 <_Balloc>
 80042b0:	b930      	cbnz	r0, 80042c0 <__multiply+0x44>
 80042b2:	4602      	mov	r2, r0
 80042b4:	4b44      	ldr	r3, [pc, #272]	; (80043c8 <__multiply+0x14c>)
 80042b6:	4845      	ldr	r0, [pc, #276]	; (80043cc <__multiply+0x150>)
 80042b8:	f240 115d 	movw	r1, #349	; 0x15d
 80042bc:	f000 fd0a 	bl	8004cd4 <__assert_func>
 80042c0:	f100 0514 	add.w	r5, r0, #20
 80042c4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80042c8:	462b      	mov	r3, r5
 80042ca:	2200      	movs	r2, #0
 80042cc:	4543      	cmp	r3, r8
 80042ce:	d321      	bcc.n	8004314 <__multiply+0x98>
 80042d0:	f104 0314 	add.w	r3, r4, #20
 80042d4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80042d8:	f109 0314 	add.w	r3, r9, #20
 80042dc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 80042e0:	9202      	str	r2, [sp, #8]
 80042e2:	1b3a      	subs	r2, r7, r4
 80042e4:	3a15      	subs	r2, #21
 80042e6:	f022 0203 	bic.w	r2, r2, #3
 80042ea:	3204      	adds	r2, #4
 80042ec:	f104 0115 	add.w	r1, r4, #21
 80042f0:	428f      	cmp	r7, r1
 80042f2:	bf38      	it	cc
 80042f4:	2204      	movcc	r2, #4
 80042f6:	9201      	str	r2, [sp, #4]
 80042f8:	9a02      	ldr	r2, [sp, #8]
 80042fa:	9303      	str	r3, [sp, #12]
 80042fc:	429a      	cmp	r2, r3
 80042fe:	d80c      	bhi.n	800431a <__multiply+0x9e>
 8004300:	2e00      	cmp	r6, #0
 8004302:	dd03      	ble.n	800430c <__multiply+0x90>
 8004304:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004308:	2b00      	cmp	r3, #0
 800430a:	d05a      	beq.n	80043c2 <__multiply+0x146>
 800430c:	6106      	str	r6, [r0, #16]
 800430e:	b005      	add	sp, #20
 8004310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004314:	f843 2b04 	str.w	r2, [r3], #4
 8004318:	e7d8      	b.n	80042cc <__multiply+0x50>
 800431a:	f8b3 a000 	ldrh.w	sl, [r3]
 800431e:	f1ba 0f00 	cmp.w	sl, #0
 8004322:	d024      	beq.n	800436e <__multiply+0xf2>
 8004324:	f104 0e14 	add.w	lr, r4, #20
 8004328:	46a9      	mov	r9, r5
 800432a:	f04f 0c00 	mov.w	ip, #0
 800432e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8004332:	f8d9 1000 	ldr.w	r1, [r9]
 8004336:	fa1f fb82 	uxth.w	fp, r2
 800433a:	b289      	uxth	r1, r1
 800433c:	fb0a 110b 	mla	r1, sl, fp, r1
 8004340:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8004344:	f8d9 2000 	ldr.w	r2, [r9]
 8004348:	4461      	add	r1, ip
 800434a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800434e:	fb0a c20b 	mla	r2, sl, fp, ip
 8004352:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8004356:	b289      	uxth	r1, r1
 8004358:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800435c:	4577      	cmp	r7, lr
 800435e:	f849 1b04 	str.w	r1, [r9], #4
 8004362:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8004366:	d8e2      	bhi.n	800432e <__multiply+0xb2>
 8004368:	9a01      	ldr	r2, [sp, #4]
 800436a:	f845 c002 	str.w	ip, [r5, r2]
 800436e:	9a03      	ldr	r2, [sp, #12]
 8004370:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8004374:	3304      	adds	r3, #4
 8004376:	f1b9 0f00 	cmp.w	r9, #0
 800437a:	d020      	beq.n	80043be <__multiply+0x142>
 800437c:	6829      	ldr	r1, [r5, #0]
 800437e:	f104 0c14 	add.w	ip, r4, #20
 8004382:	46ae      	mov	lr, r5
 8004384:	f04f 0a00 	mov.w	sl, #0
 8004388:	f8bc b000 	ldrh.w	fp, [ip]
 800438c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8004390:	fb09 220b 	mla	r2, r9, fp, r2
 8004394:	4492      	add	sl, r2
 8004396:	b289      	uxth	r1, r1
 8004398:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800439c:	f84e 1b04 	str.w	r1, [lr], #4
 80043a0:	f85c 2b04 	ldr.w	r2, [ip], #4
 80043a4:	f8be 1000 	ldrh.w	r1, [lr]
 80043a8:	0c12      	lsrs	r2, r2, #16
 80043aa:	fb09 1102 	mla	r1, r9, r2, r1
 80043ae:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 80043b2:	4567      	cmp	r7, ip
 80043b4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80043b8:	d8e6      	bhi.n	8004388 <__multiply+0x10c>
 80043ba:	9a01      	ldr	r2, [sp, #4]
 80043bc:	50a9      	str	r1, [r5, r2]
 80043be:	3504      	adds	r5, #4
 80043c0:	e79a      	b.n	80042f8 <__multiply+0x7c>
 80043c2:	3e01      	subs	r6, #1
 80043c4:	e79c      	b.n	8004300 <__multiply+0x84>
 80043c6:	bf00      	nop
 80043c8:	08004ffb 	.word	0x08004ffb
 80043cc:	0800506c 	.word	0x0800506c

080043d0 <__pow5mult>:
 80043d0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80043d4:	4615      	mov	r5, r2
 80043d6:	f012 0203 	ands.w	r2, r2, #3
 80043da:	4606      	mov	r6, r0
 80043dc:	460f      	mov	r7, r1
 80043de:	d007      	beq.n	80043f0 <__pow5mult+0x20>
 80043e0:	4c25      	ldr	r4, [pc, #148]	; (8004478 <__pow5mult+0xa8>)
 80043e2:	3a01      	subs	r2, #1
 80043e4:	2300      	movs	r3, #0
 80043e6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80043ea:	f7ff fe9b 	bl	8004124 <__multadd>
 80043ee:	4607      	mov	r7, r0
 80043f0:	10ad      	asrs	r5, r5, #2
 80043f2:	d03d      	beq.n	8004470 <__pow5mult+0xa0>
 80043f4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80043f6:	b97c      	cbnz	r4, 8004418 <__pow5mult+0x48>
 80043f8:	2010      	movs	r0, #16
 80043fa:	f7ff fe1b 	bl	8004034 <malloc>
 80043fe:	4602      	mov	r2, r0
 8004400:	6270      	str	r0, [r6, #36]	; 0x24
 8004402:	b928      	cbnz	r0, 8004410 <__pow5mult+0x40>
 8004404:	4b1d      	ldr	r3, [pc, #116]	; (800447c <__pow5mult+0xac>)
 8004406:	481e      	ldr	r0, [pc, #120]	; (8004480 <__pow5mult+0xb0>)
 8004408:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800440c:	f000 fc62 	bl	8004cd4 <__assert_func>
 8004410:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004414:	6004      	str	r4, [r0, #0]
 8004416:	60c4      	str	r4, [r0, #12]
 8004418:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800441c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004420:	b94c      	cbnz	r4, 8004436 <__pow5mult+0x66>
 8004422:	f240 2171 	movw	r1, #625	; 0x271
 8004426:	4630      	mov	r0, r6
 8004428:	f7ff ff12 	bl	8004250 <__i2b>
 800442c:	2300      	movs	r3, #0
 800442e:	f8c8 0008 	str.w	r0, [r8, #8]
 8004432:	4604      	mov	r4, r0
 8004434:	6003      	str	r3, [r0, #0]
 8004436:	f04f 0900 	mov.w	r9, #0
 800443a:	07eb      	lsls	r3, r5, #31
 800443c:	d50a      	bpl.n	8004454 <__pow5mult+0x84>
 800443e:	4639      	mov	r1, r7
 8004440:	4622      	mov	r2, r4
 8004442:	4630      	mov	r0, r6
 8004444:	f7ff ff1a 	bl	800427c <__multiply>
 8004448:	4639      	mov	r1, r7
 800444a:	4680      	mov	r8, r0
 800444c:	4630      	mov	r0, r6
 800444e:	f7ff fe47 	bl	80040e0 <_Bfree>
 8004452:	4647      	mov	r7, r8
 8004454:	106d      	asrs	r5, r5, #1
 8004456:	d00b      	beq.n	8004470 <__pow5mult+0xa0>
 8004458:	6820      	ldr	r0, [r4, #0]
 800445a:	b938      	cbnz	r0, 800446c <__pow5mult+0x9c>
 800445c:	4622      	mov	r2, r4
 800445e:	4621      	mov	r1, r4
 8004460:	4630      	mov	r0, r6
 8004462:	f7ff ff0b 	bl	800427c <__multiply>
 8004466:	6020      	str	r0, [r4, #0]
 8004468:	f8c0 9000 	str.w	r9, [r0]
 800446c:	4604      	mov	r4, r0
 800446e:	e7e4      	b.n	800443a <__pow5mult+0x6a>
 8004470:	4638      	mov	r0, r7
 8004472:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004476:	bf00      	nop
 8004478:	080051b8 	.word	0x080051b8
 800447c:	08004f89 	.word	0x08004f89
 8004480:	0800506c 	.word	0x0800506c

08004484 <__lshift>:
 8004484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004488:	460c      	mov	r4, r1
 800448a:	6849      	ldr	r1, [r1, #4]
 800448c:	6923      	ldr	r3, [r4, #16]
 800448e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8004492:	68a3      	ldr	r3, [r4, #8]
 8004494:	4607      	mov	r7, r0
 8004496:	4691      	mov	r9, r2
 8004498:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800449c:	f108 0601 	add.w	r6, r8, #1
 80044a0:	42b3      	cmp	r3, r6
 80044a2:	db0b      	blt.n	80044bc <__lshift+0x38>
 80044a4:	4638      	mov	r0, r7
 80044a6:	f7ff fddb 	bl	8004060 <_Balloc>
 80044aa:	4605      	mov	r5, r0
 80044ac:	b948      	cbnz	r0, 80044c2 <__lshift+0x3e>
 80044ae:	4602      	mov	r2, r0
 80044b0:	4b2a      	ldr	r3, [pc, #168]	; (800455c <__lshift+0xd8>)
 80044b2:	482b      	ldr	r0, [pc, #172]	; (8004560 <__lshift+0xdc>)
 80044b4:	f240 11d9 	movw	r1, #473	; 0x1d9
 80044b8:	f000 fc0c 	bl	8004cd4 <__assert_func>
 80044bc:	3101      	adds	r1, #1
 80044be:	005b      	lsls	r3, r3, #1
 80044c0:	e7ee      	b.n	80044a0 <__lshift+0x1c>
 80044c2:	2300      	movs	r3, #0
 80044c4:	f100 0114 	add.w	r1, r0, #20
 80044c8:	f100 0210 	add.w	r2, r0, #16
 80044cc:	4618      	mov	r0, r3
 80044ce:	4553      	cmp	r3, sl
 80044d0:	db37      	blt.n	8004542 <__lshift+0xbe>
 80044d2:	6920      	ldr	r0, [r4, #16]
 80044d4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80044d8:	f104 0314 	add.w	r3, r4, #20
 80044dc:	f019 091f 	ands.w	r9, r9, #31
 80044e0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80044e4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80044e8:	d02f      	beq.n	800454a <__lshift+0xc6>
 80044ea:	f1c9 0e20 	rsb	lr, r9, #32
 80044ee:	468a      	mov	sl, r1
 80044f0:	f04f 0c00 	mov.w	ip, #0
 80044f4:	681a      	ldr	r2, [r3, #0]
 80044f6:	fa02 f209 	lsl.w	r2, r2, r9
 80044fa:	ea42 020c 	orr.w	r2, r2, ip
 80044fe:	f84a 2b04 	str.w	r2, [sl], #4
 8004502:	f853 2b04 	ldr.w	r2, [r3], #4
 8004506:	4298      	cmp	r0, r3
 8004508:	fa22 fc0e 	lsr.w	ip, r2, lr
 800450c:	d8f2      	bhi.n	80044f4 <__lshift+0x70>
 800450e:	1b03      	subs	r3, r0, r4
 8004510:	3b15      	subs	r3, #21
 8004512:	f023 0303 	bic.w	r3, r3, #3
 8004516:	3304      	adds	r3, #4
 8004518:	f104 0215 	add.w	r2, r4, #21
 800451c:	4290      	cmp	r0, r2
 800451e:	bf38      	it	cc
 8004520:	2304      	movcc	r3, #4
 8004522:	f841 c003 	str.w	ip, [r1, r3]
 8004526:	f1bc 0f00 	cmp.w	ip, #0
 800452a:	d001      	beq.n	8004530 <__lshift+0xac>
 800452c:	f108 0602 	add.w	r6, r8, #2
 8004530:	3e01      	subs	r6, #1
 8004532:	4638      	mov	r0, r7
 8004534:	612e      	str	r6, [r5, #16]
 8004536:	4621      	mov	r1, r4
 8004538:	f7ff fdd2 	bl	80040e0 <_Bfree>
 800453c:	4628      	mov	r0, r5
 800453e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004542:	f842 0f04 	str.w	r0, [r2, #4]!
 8004546:	3301      	adds	r3, #1
 8004548:	e7c1      	b.n	80044ce <__lshift+0x4a>
 800454a:	3904      	subs	r1, #4
 800454c:	f853 2b04 	ldr.w	r2, [r3], #4
 8004550:	f841 2f04 	str.w	r2, [r1, #4]!
 8004554:	4298      	cmp	r0, r3
 8004556:	d8f9      	bhi.n	800454c <__lshift+0xc8>
 8004558:	e7ea      	b.n	8004530 <__lshift+0xac>
 800455a:	bf00      	nop
 800455c:	08004ffb 	.word	0x08004ffb
 8004560:	0800506c 	.word	0x0800506c

08004564 <__mcmp>:
 8004564:	b530      	push	{r4, r5, lr}
 8004566:	6902      	ldr	r2, [r0, #16]
 8004568:	690c      	ldr	r4, [r1, #16]
 800456a:	1b12      	subs	r2, r2, r4
 800456c:	d10e      	bne.n	800458c <__mcmp+0x28>
 800456e:	f100 0314 	add.w	r3, r0, #20
 8004572:	3114      	adds	r1, #20
 8004574:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8004578:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800457c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8004580:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8004584:	42a5      	cmp	r5, r4
 8004586:	d003      	beq.n	8004590 <__mcmp+0x2c>
 8004588:	d305      	bcc.n	8004596 <__mcmp+0x32>
 800458a:	2201      	movs	r2, #1
 800458c:	4610      	mov	r0, r2
 800458e:	bd30      	pop	{r4, r5, pc}
 8004590:	4283      	cmp	r3, r0
 8004592:	d3f3      	bcc.n	800457c <__mcmp+0x18>
 8004594:	e7fa      	b.n	800458c <__mcmp+0x28>
 8004596:	f04f 32ff 	mov.w	r2, #4294967295
 800459a:	e7f7      	b.n	800458c <__mcmp+0x28>

0800459c <__mdiff>:
 800459c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80045a0:	460c      	mov	r4, r1
 80045a2:	4606      	mov	r6, r0
 80045a4:	4611      	mov	r1, r2
 80045a6:	4620      	mov	r0, r4
 80045a8:	4690      	mov	r8, r2
 80045aa:	f7ff ffdb 	bl	8004564 <__mcmp>
 80045ae:	1e05      	subs	r5, r0, #0
 80045b0:	d110      	bne.n	80045d4 <__mdiff+0x38>
 80045b2:	4629      	mov	r1, r5
 80045b4:	4630      	mov	r0, r6
 80045b6:	f7ff fd53 	bl	8004060 <_Balloc>
 80045ba:	b930      	cbnz	r0, 80045ca <__mdiff+0x2e>
 80045bc:	4b3a      	ldr	r3, [pc, #232]	; (80046a8 <__mdiff+0x10c>)
 80045be:	4602      	mov	r2, r0
 80045c0:	f240 2132 	movw	r1, #562	; 0x232
 80045c4:	4839      	ldr	r0, [pc, #228]	; (80046ac <__mdiff+0x110>)
 80045c6:	f000 fb85 	bl	8004cd4 <__assert_func>
 80045ca:	2301      	movs	r3, #1
 80045cc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80045d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80045d4:	bfa4      	itt	ge
 80045d6:	4643      	movge	r3, r8
 80045d8:	46a0      	movge	r8, r4
 80045da:	4630      	mov	r0, r6
 80045dc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80045e0:	bfa6      	itte	ge
 80045e2:	461c      	movge	r4, r3
 80045e4:	2500      	movge	r5, #0
 80045e6:	2501      	movlt	r5, #1
 80045e8:	f7ff fd3a 	bl	8004060 <_Balloc>
 80045ec:	b920      	cbnz	r0, 80045f8 <__mdiff+0x5c>
 80045ee:	4b2e      	ldr	r3, [pc, #184]	; (80046a8 <__mdiff+0x10c>)
 80045f0:	4602      	mov	r2, r0
 80045f2:	f44f 7110 	mov.w	r1, #576	; 0x240
 80045f6:	e7e5      	b.n	80045c4 <__mdiff+0x28>
 80045f8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80045fc:	6926      	ldr	r6, [r4, #16]
 80045fe:	60c5      	str	r5, [r0, #12]
 8004600:	f104 0914 	add.w	r9, r4, #20
 8004604:	f108 0514 	add.w	r5, r8, #20
 8004608:	f100 0e14 	add.w	lr, r0, #20
 800460c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8004610:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8004614:	f108 0210 	add.w	r2, r8, #16
 8004618:	46f2      	mov	sl, lr
 800461a:	2100      	movs	r1, #0
 800461c:	f859 3b04 	ldr.w	r3, [r9], #4
 8004620:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8004624:	fa1f f883 	uxth.w	r8, r3
 8004628:	fa11 f18b 	uxtah	r1, r1, fp
 800462c:	0c1b      	lsrs	r3, r3, #16
 800462e:	eba1 0808 	sub.w	r8, r1, r8
 8004632:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8004636:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800463a:	fa1f f888 	uxth.w	r8, r8
 800463e:	1419      	asrs	r1, r3, #16
 8004640:	454e      	cmp	r6, r9
 8004642:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8004646:	f84a 3b04 	str.w	r3, [sl], #4
 800464a:	d8e7      	bhi.n	800461c <__mdiff+0x80>
 800464c:	1b33      	subs	r3, r6, r4
 800464e:	3b15      	subs	r3, #21
 8004650:	f023 0303 	bic.w	r3, r3, #3
 8004654:	3304      	adds	r3, #4
 8004656:	3415      	adds	r4, #21
 8004658:	42a6      	cmp	r6, r4
 800465a:	bf38      	it	cc
 800465c:	2304      	movcc	r3, #4
 800465e:	441d      	add	r5, r3
 8004660:	4473      	add	r3, lr
 8004662:	469e      	mov	lr, r3
 8004664:	462e      	mov	r6, r5
 8004666:	4566      	cmp	r6, ip
 8004668:	d30e      	bcc.n	8004688 <__mdiff+0xec>
 800466a:	f10c 0203 	add.w	r2, ip, #3
 800466e:	1b52      	subs	r2, r2, r5
 8004670:	f022 0203 	bic.w	r2, r2, #3
 8004674:	3d03      	subs	r5, #3
 8004676:	45ac      	cmp	ip, r5
 8004678:	bf38      	it	cc
 800467a:	2200      	movcc	r2, #0
 800467c:	441a      	add	r2, r3
 800467e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8004682:	b17b      	cbz	r3, 80046a4 <__mdiff+0x108>
 8004684:	6107      	str	r7, [r0, #16]
 8004686:	e7a3      	b.n	80045d0 <__mdiff+0x34>
 8004688:	f856 8b04 	ldr.w	r8, [r6], #4
 800468c:	fa11 f288 	uxtah	r2, r1, r8
 8004690:	1414      	asrs	r4, r2, #16
 8004692:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8004696:	b292      	uxth	r2, r2
 8004698:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800469c:	f84e 2b04 	str.w	r2, [lr], #4
 80046a0:	1421      	asrs	r1, r4, #16
 80046a2:	e7e0      	b.n	8004666 <__mdiff+0xca>
 80046a4:	3f01      	subs	r7, #1
 80046a6:	e7ea      	b.n	800467e <__mdiff+0xe2>
 80046a8:	08004ffb 	.word	0x08004ffb
 80046ac:	0800506c 	.word	0x0800506c

080046b0 <__d2b>:
 80046b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80046b4:	4689      	mov	r9, r1
 80046b6:	2101      	movs	r1, #1
 80046b8:	ec57 6b10 	vmov	r6, r7, d0
 80046bc:	4690      	mov	r8, r2
 80046be:	f7ff fccf 	bl	8004060 <_Balloc>
 80046c2:	4604      	mov	r4, r0
 80046c4:	b930      	cbnz	r0, 80046d4 <__d2b+0x24>
 80046c6:	4602      	mov	r2, r0
 80046c8:	4b25      	ldr	r3, [pc, #148]	; (8004760 <__d2b+0xb0>)
 80046ca:	4826      	ldr	r0, [pc, #152]	; (8004764 <__d2b+0xb4>)
 80046cc:	f240 310a 	movw	r1, #778	; 0x30a
 80046d0:	f000 fb00 	bl	8004cd4 <__assert_func>
 80046d4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 80046d8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80046dc:	bb35      	cbnz	r5, 800472c <__d2b+0x7c>
 80046de:	2e00      	cmp	r6, #0
 80046e0:	9301      	str	r3, [sp, #4]
 80046e2:	d028      	beq.n	8004736 <__d2b+0x86>
 80046e4:	4668      	mov	r0, sp
 80046e6:	9600      	str	r6, [sp, #0]
 80046e8:	f7ff fd82 	bl	80041f0 <__lo0bits>
 80046ec:	9900      	ldr	r1, [sp, #0]
 80046ee:	b300      	cbz	r0, 8004732 <__d2b+0x82>
 80046f0:	9a01      	ldr	r2, [sp, #4]
 80046f2:	f1c0 0320 	rsb	r3, r0, #32
 80046f6:	fa02 f303 	lsl.w	r3, r2, r3
 80046fa:	430b      	orrs	r3, r1
 80046fc:	40c2      	lsrs	r2, r0
 80046fe:	6163      	str	r3, [r4, #20]
 8004700:	9201      	str	r2, [sp, #4]
 8004702:	9b01      	ldr	r3, [sp, #4]
 8004704:	61a3      	str	r3, [r4, #24]
 8004706:	2b00      	cmp	r3, #0
 8004708:	bf14      	ite	ne
 800470a:	2202      	movne	r2, #2
 800470c:	2201      	moveq	r2, #1
 800470e:	6122      	str	r2, [r4, #16]
 8004710:	b1d5      	cbz	r5, 8004748 <__d2b+0x98>
 8004712:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8004716:	4405      	add	r5, r0
 8004718:	f8c9 5000 	str.w	r5, [r9]
 800471c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8004720:	f8c8 0000 	str.w	r0, [r8]
 8004724:	4620      	mov	r0, r4
 8004726:	b003      	add	sp, #12
 8004728:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800472c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004730:	e7d5      	b.n	80046de <__d2b+0x2e>
 8004732:	6161      	str	r1, [r4, #20]
 8004734:	e7e5      	b.n	8004702 <__d2b+0x52>
 8004736:	a801      	add	r0, sp, #4
 8004738:	f7ff fd5a 	bl	80041f0 <__lo0bits>
 800473c:	9b01      	ldr	r3, [sp, #4]
 800473e:	6163      	str	r3, [r4, #20]
 8004740:	2201      	movs	r2, #1
 8004742:	6122      	str	r2, [r4, #16]
 8004744:	3020      	adds	r0, #32
 8004746:	e7e3      	b.n	8004710 <__d2b+0x60>
 8004748:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800474c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8004750:	f8c9 0000 	str.w	r0, [r9]
 8004754:	6918      	ldr	r0, [r3, #16]
 8004756:	f7ff fd2b 	bl	80041b0 <__hi0bits>
 800475a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800475e:	e7df      	b.n	8004720 <__d2b+0x70>
 8004760:	08004ffb 	.word	0x08004ffb
 8004764:	0800506c 	.word	0x0800506c

08004768 <_calloc_r>:
 8004768:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800476a:	fba1 2402 	umull	r2, r4, r1, r2
 800476e:	b94c      	cbnz	r4, 8004784 <_calloc_r+0x1c>
 8004770:	4611      	mov	r1, r2
 8004772:	9201      	str	r2, [sp, #4]
 8004774:	f000 f87a 	bl	800486c <_malloc_r>
 8004778:	9a01      	ldr	r2, [sp, #4]
 800477a:	4605      	mov	r5, r0
 800477c:	b930      	cbnz	r0, 800478c <_calloc_r+0x24>
 800477e:	4628      	mov	r0, r5
 8004780:	b003      	add	sp, #12
 8004782:	bd30      	pop	{r4, r5, pc}
 8004784:	220c      	movs	r2, #12
 8004786:	6002      	str	r2, [r0, #0]
 8004788:	2500      	movs	r5, #0
 800478a:	e7f8      	b.n	800477e <_calloc_r+0x16>
 800478c:	4621      	mov	r1, r4
 800478e:	f7fd fdf3 	bl	8002378 <memset>
 8004792:	e7f4      	b.n	800477e <_calloc_r+0x16>

08004794 <_free_r>:
 8004794:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8004796:	2900      	cmp	r1, #0
 8004798:	d044      	beq.n	8004824 <_free_r+0x90>
 800479a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800479e:	9001      	str	r0, [sp, #4]
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	f1a1 0404 	sub.w	r4, r1, #4
 80047a6:	bfb8      	it	lt
 80047a8:	18e4      	addlt	r4, r4, r3
 80047aa:	f000 fb19 	bl	8004de0 <__malloc_lock>
 80047ae:	4a1e      	ldr	r2, [pc, #120]	; (8004828 <_free_r+0x94>)
 80047b0:	9801      	ldr	r0, [sp, #4]
 80047b2:	6813      	ldr	r3, [r2, #0]
 80047b4:	b933      	cbnz	r3, 80047c4 <_free_r+0x30>
 80047b6:	6063      	str	r3, [r4, #4]
 80047b8:	6014      	str	r4, [r2, #0]
 80047ba:	b003      	add	sp, #12
 80047bc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80047c0:	f000 bb14 	b.w	8004dec <__malloc_unlock>
 80047c4:	42a3      	cmp	r3, r4
 80047c6:	d908      	bls.n	80047da <_free_r+0x46>
 80047c8:	6825      	ldr	r5, [r4, #0]
 80047ca:	1961      	adds	r1, r4, r5
 80047cc:	428b      	cmp	r3, r1
 80047ce:	bf01      	itttt	eq
 80047d0:	6819      	ldreq	r1, [r3, #0]
 80047d2:	685b      	ldreq	r3, [r3, #4]
 80047d4:	1949      	addeq	r1, r1, r5
 80047d6:	6021      	streq	r1, [r4, #0]
 80047d8:	e7ed      	b.n	80047b6 <_free_r+0x22>
 80047da:	461a      	mov	r2, r3
 80047dc:	685b      	ldr	r3, [r3, #4]
 80047de:	b10b      	cbz	r3, 80047e4 <_free_r+0x50>
 80047e0:	42a3      	cmp	r3, r4
 80047e2:	d9fa      	bls.n	80047da <_free_r+0x46>
 80047e4:	6811      	ldr	r1, [r2, #0]
 80047e6:	1855      	adds	r5, r2, r1
 80047e8:	42a5      	cmp	r5, r4
 80047ea:	d10b      	bne.n	8004804 <_free_r+0x70>
 80047ec:	6824      	ldr	r4, [r4, #0]
 80047ee:	4421      	add	r1, r4
 80047f0:	1854      	adds	r4, r2, r1
 80047f2:	42a3      	cmp	r3, r4
 80047f4:	6011      	str	r1, [r2, #0]
 80047f6:	d1e0      	bne.n	80047ba <_free_r+0x26>
 80047f8:	681c      	ldr	r4, [r3, #0]
 80047fa:	685b      	ldr	r3, [r3, #4]
 80047fc:	6053      	str	r3, [r2, #4]
 80047fe:	4421      	add	r1, r4
 8004800:	6011      	str	r1, [r2, #0]
 8004802:	e7da      	b.n	80047ba <_free_r+0x26>
 8004804:	d902      	bls.n	800480c <_free_r+0x78>
 8004806:	230c      	movs	r3, #12
 8004808:	6003      	str	r3, [r0, #0]
 800480a:	e7d6      	b.n	80047ba <_free_r+0x26>
 800480c:	6825      	ldr	r5, [r4, #0]
 800480e:	1961      	adds	r1, r4, r5
 8004810:	428b      	cmp	r3, r1
 8004812:	bf04      	itt	eq
 8004814:	6819      	ldreq	r1, [r3, #0]
 8004816:	685b      	ldreq	r3, [r3, #4]
 8004818:	6063      	str	r3, [r4, #4]
 800481a:	bf04      	itt	eq
 800481c:	1949      	addeq	r1, r1, r5
 800481e:	6021      	streq	r1, [r4, #0]
 8004820:	6054      	str	r4, [r2, #4]
 8004822:	e7ca      	b.n	80047ba <_free_r+0x26>
 8004824:	b003      	add	sp, #12
 8004826:	bd30      	pop	{r4, r5, pc}
 8004828:	200004b8 	.word	0x200004b8

0800482c <sbrk_aligned>:
 800482c:	b570      	push	{r4, r5, r6, lr}
 800482e:	4e0e      	ldr	r6, [pc, #56]	; (8004868 <sbrk_aligned+0x3c>)
 8004830:	460c      	mov	r4, r1
 8004832:	6831      	ldr	r1, [r6, #0]
 8004834:	4605      	mov	r5, r0
 8004836:	b911      	cbnz	r1, 800483e <sbrk_aligned+0x12>
 8004838:	f000 f9e6 	bl	8004c08 <_sbrk_r>
 800483c:	6030      	str	r0, [r6, #0]
 800483e:	4621      	mov	r1, r4
 8004840:	4628      	mov	r0, r5
 8004842:	f000 f9e1 	bl	8004c08 <_sbrk_r>
 8004846:	1c43      	adds	r3, r0, #1
 8004848:	d00a      	beq.n	8004860 <sbrk_aligned+0x34>
 800484a:	1cc4      	adds	r4, r0, #3
 800484c:	f024 0403 	bic.w	r4, r4, #3
 8004850:	42a0      	cmp	r0, r4
 8004852:	d007      	beq.n	8004864 <sbrk_aligned+0x38>
 8004854:	1a21      	subs	r1, r4, r0
 8004856:	4628      	mov	r0, r5
 8004858:	f000 f9d6 	bl	8004c08 <_sbrk_r>
 800485c:	3001      	adds	r0, #1
 800485e:	d101      	bne.n	8004864 <sbrk_aligned+0x38>
 8004860:	f04f 34ff 	mov.w	r4, #4294967295
 8004864:	4620      	mov	r0, r4
 8004866:	bd70      	pop	{r4, r5, r6, pc}
 8004868:	200004bc 	.word	0x200004bc

0800486c <_malloc_r>:
 800486c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004870:	1ccd      	adds	r5, r1, #3
 8004872:	f025 0503 	bic.w	r5, r5, #3
 8004876:	3508      	adds	r5, #8
 8004878:	2d0c      	cmp	r5, #12
 800487a:	bf38      	it	cc
 800487c:	250c      	movcc	r5, #12
 800487e:	2d00      	cmp	r5, #0
 8004880:	4607      	mov	r7, r0
 8004882:	db01      	blt.n	8004888 <_malloc_r+0x1c>
 8004884:	42a9      	cmp	r1, r5
 8004886:	d905      	bls.n	8004894 <_malloc_r+0x28>
 8004888:	230c      	movs	r3, #12
 800488a:	603b      	str	r3, [r7, #0]
 800488c:	2600      	movs	r6, #0
 800488e:	4630      	mov	r0, r6
 8004890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004894:	4e2e      	ldr	r6, [pc, #184]	; (8004950 <_malloc_r+0xe4>)
 8004896:	f000 faa3 	bl	8004de0 <__malloc_lock>
 800489a:	6833      	ldr	r3, [r6, #0]
 800489c:	461c      	mov	r4, r3
 800489e:	bb34      	cbnz	r4, 80048ee <_malloc_r+0x82>
 80048a0:	4629      	mov	r1, r5
 80048a2:	4638      	mov	r0, r7
 80048a4:	f7ff ffc2 	bl	800482c <sbrk_aligned>
 80048a8:	1c43      	adds	r3, r0, #1
 80048aa:	4604      	mov	r4, r0
 80048ac:	d14d      	bne.n	800494a <_malloc_r+0xde>
 80048ae:	6834      	ldr	r4, [r6, #0]
 80048b0:	4626      	mov	r6, r4
 80048b2:	2e00      	cmp	r6, #0
 80048b4:	d140      	bne.n	8004938 <_malloc_r+0xcc>
 80048b6:	6823      	ldr	r3, [r4, #0]
 80048b8:	4631      	mov	r1, r6
 80048ba:	4638      	mov	r0, r7
 80048bc:	eb04 0803 	add.w	r8, r4, r3
 80048c0:	f000 f9a2 	bl	8004c08 <_sbrk_r>
 80048c4:	4580      	cmp	r8, r0
 80048c6:	d13a      	bne.n	800493e <_malloc_r+0xd2>
 80048c8:	6821      	ldr	r1, [r4, #0]
 80048ca:	3503      	adds	r5, #3
 80048cc:	1a6d      	subs	r5, r5, r1
 80048ce:	f025 0503 	bic.w	r5, r5, #3
 80048d2:	3508      	adds	r5, #8
 80048d4:	2d0c      	cmp	r5, #12
 80048d6:	bf38      	it	cc
 80048d8:	250c      	movcc	r5, #12
 80048da:	4629      	mov	r1, r5
 80048dc:	4638      	mov	r0, r7
 80048de:	f7ff ffa5 	bl	800482c <sbrk_aligned>
 80048e2:	3001      	adds	r0, #1
 80048e4:	d02b      	beq.n	800493e <_malloc_r+0xd2>
 80048e6:	6823      	ldr	r3, [r4, #0]
 80048e8:	442b      	add	r3, r5
 80048ea:	6023      	str	r3, [r4, #0]
 80048ec:	e00e      	b.n	800490c <_malloc_r+0xa0>
 80048ee:	6822      	ldr	r2, [r4, #0]
 80048f0:	1b52      	subs	r2, r2, r5
 80048f2:	d41e      	bmi.n	8004932 <_malloc_r+0xc6>
 80048f4:	2a0b      	cmp	r2, #11
 80048f6:	d916      	bls.n	8004926 <_malloc_r+0xba>
 80048f8:	1961      	adds	r1, r4, r5
 80048fa:	42a3      	cmp	r3, r4
 80048fc:	6025      	str	r5, [r4, #0]
 80048fe:	bf18      	it	ne
 8004900:	6059      	strne	r1, [r3, #4]
 8004902:	6863      	ldr	r3, [r4, #4]
 8004904:	bf08      	it	eq
 8004906:	6031      	streq	r1, [r6, #0]
 8004908:	5162      	str	r2, [r4, r5]
 800490a:	604b      	str	r3, [r1, #4]
 800490c:	4638      	mov	r0, r7
 800490e:	f104 060b 	add.w	r6, r4, #11
 8004912:	f000 fa6b 	bl	8004dec <__malloc_unlock>
 8004916:	f026 0607 	bic.w	r6, r6, #7
 800491a:	1d23      	adds	r3, r4, #4
 800491c:	1af2      	subs	r2, r6, r3
 800491e:	d0b6      	beq.n	800488e <_malloc_r+0x22>
 8004920:	1b9b      	subs	r3, r3, r6
 8004922:	50a3      	str	r3, [r4, r2]
 8004924:	e7b3      	b.n	800488e <_malloc_r+0x22>
 8004926:	6862      	ldr	r2, [r4, #4]
 8004928:	42a3      	cmp	r3, r4
 800492a:	bf0c      	ite	eq
 800492c:	6032      	streq	r2, [r6, #0]
 800492e:	605a      	strne	r2, [r3, #4]
 8004930:	e7ec      	b.n	800490c <_malloc_r+0xa0>
 8004932:	4623      	mov	r3, r4
 8004934:	6864      	ldr	r4, [r4, #4]
 8004936:	e7b2      	b.n	800489e <_malloc_r+0x32>
 8004938:	4634      	mov	r4, r6
 800493a:	6876      	ldr	r6, [r6, #4]
 800493c:	e7b9      	b.n	80048b2 <_malloc_r+0x46>
 800493e:	230c      	movs	r3, #12
 8004940:	603b      	str	r3, [r7, #0]
 8004942:	4638      	mov	r0, r7
 8004944:	f000 fa52 	bl	8004dec <__malloc_unlock>
 8004948:	e7a1      	b.n	800488e <_malloc_r+0x22>
 800494a:	6025      	str	r5, [r4, #0]
 800494c:	e7de      	b.n	800490c <_malloc_r+0xa0>
 800494e:	bf00      	nop
 8004950:	200004b8 	.word	0x200004b8

08004954 <__sfputc_r>:
 8004954:	6893      	ldr	r3, [r2, #8]
 8004956:	3b01      	subs	r3, #1
 8004958:	2b00      	cmp	r3, #0
 800495a:	b410      	push	{r4}
 800495c:	6093      	str	r3, [r2, #8]
 800495e:	da08      	bge.n	8004972 <__sfputc_r+0x1e>
 8004960:	6994      	ldr	r4, [r2, #24]
 8004962:	42a3      	cmp	r3, r4
 8004964:	db01      	blt.n	800496a <__sfputc_r+0x16>
 8004966:	290a      	cmp	r1, #10
 8004968:	d103      	bne.n	8004972 <__sfputc_r+0x1e>
 800496a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800496e:	f7fe ba03 	b.w	8002d78 <__swbuf_r>
 8004972:	6813      	ldr	r3, [r2, #0]
 8004974:	1c58      	adds	r0, r3, #1
 8004976:	6010      	str	r0, [r2, #0]
 8004978:	7019      	strb	r1, [r3, #0]
 800497a:	4608      	mov	r0, r1
 800497c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004980:	4770      	bx	lr

08004982 <__sfputs_r>:
 8004982:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004984:	4606      	mov	r6, r0
 8004986:	460f      	mov	r7, r1
 8004988:	4614      	mov	r4, r2
 800498a:	18d5      	adds	r5, r2, r3
 800498c:	42ac      	cmp	r4, r5
 800498e:	d101      	bne.n	8004994 <__sfputs_r+0x12>
 8004990:	2000      	movs	r0, #0
 8004992:	e007      	b.n	80049a4 <__sfputs_r+0x22>
 8004994:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004998:	463a      	mov	r2, r7
 800499a:	4630      	mov	r0, r6
 800499c:	f7ff ffda 	bl	8004954 <__sfputc_r>
 80049a0:	1c43      	adds	r3, r0, #1
 80049a2:	d1f3      	bne.n	800498c <__sfputs_r+0xa>
 80049a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080049a8 <_vfiprintf_r>:
 80049a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049ac:	460d      	mov	r5, r1
 80049ae:	b09d      	sub	sp, #116	; 0x74
 80049b0:	4614      	mov	r4, r2
 80049b2:	4698      	mov	r8, r3
 80049b4:	4606      	mov	r6, r0
 80049b6:	b118      	cbz	r0, 80049c0 <_vfiprintf_r+0x18>
 80049b8:	6983      	ldr	r3, [r0, #24]
 80049ba:	b90b      	cbnz	r3, 80049c0 <_vfiprintf_r+0x18>
 80049bc:	f7ff fa30 	bl	8003e20 <__sinit>
 80049c0:	4b89      	ldr	r3, [pc, #548]	; (8004be8 <_vfiprintf_r+0x240>)
 80049c2:	429d      	cmp	r5, r3
 80049c4:	d11b      	bne.n	80049fe <_vfiprintf_r+0x56>
 80049c6:	6875      	ldr	r5, [r6, #4]
 80049c8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80049ca:	07d9      	lsls	r1, r3, #31
 80049cc:	d405      	bmi.n	80049da <_vfiprintf_r+0x32>
 80049ce:	89ab      	ldrh	r3, [r5, #12]
 80049d0:	059a      	lsls	r2, r3, #22
 80049d2:	d402      	bmi.n	80049da <_vfiprintf_r+0x32>
 80049d4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80049d6:	f7ff fac6 	bl	8003f66 <__retarget_lock_acquire_recursive>
 80049da:	89ab      	ldrh	r3, [r5, #12]
 80049dc:	071b      	lsls	r3, r3, #28
 80049de:	d501      	bpl.n	80049e4 <_vfiprintf_r+0x3c>
 80049e0:	692b      	ldr	r3, [r5, #16]
 80049e2:	b9eb      	cbnz	r3, 8004a20 <_vfiprintf_r+0x78>
 80049e4:	4629      	mov	r1, r5
 80049e6:	4630      	mov	r0, r6
 80049e8:	f7fe fa18 	bl	8002e1c <__swsetup_r>
 80049ec:	b1c0      	cbz	r0, 8004a20 <_vfiprintf_r+0x78>
 80049ee:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80049f0:	07dc      	lsls	r4, r3, #31
 80049f2:	d50e      	bpl.n	8004a12 <_vfiprintf_r+0x6a>
 80049f4:	f04f 30ff 	mov.w	r0, #4294967295
 80049f8:	b01d      	add	sp, #116	; 0x74
 80049fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80049fe:	4b7b      	ldr	r3, [pc, #492]	; (8004bec <_vfiprintf_r+0x244>)
 8004a00:	429d      	cmp	r5, r3
 8004a02:	d101      	bne.n	8004a08 <_vfiprintf_r+0x60>
 8004a04:	68b5      	ldr	r5, [r6, #8]
 8004a06:	e7df      	b.n	80049c8 <_vfiprintf_r+0x20>
 8004a08:	4b79      	ldr	r3, [pc, #484]	; (8004bf0 <_vfiprintf_r+0x248>)
 8004a0a:	429d      	cmp	r5, r3
 8004a0c:	bf08      	it	eq
 8004a0e:	68f5      	ldreq	r5, [r6, #12]
 8004a10:	e7da      	b.n	80049c8 <_vfiprintf_r+0x20>
 8004a12:	89ab      	ldrh	r3, [r5, #12]
 8004a14:	0598      	lsls	r0, r3, #22
 8004a16:	d4ed      	bmi.n	80049f4 <_vfiprintf_r+0x4c>
 8004a18:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004a1a:	f7ff faa5 	bl	8003f68 <__retarget_lock_release_recursive>
 8004a1e:	e7e9      	b.n	80049f4 <_vfiprintf_r+0x4c>
 8004a20:	2300      	movs	r3, #0
 8004a22:	9309      	str	r3, [sp, #36]	; 0x24
 8004a24:	2320      	movs	r3, #32
 8004a26:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004a2a:	f8cd 800c 	str.w	r8, [sp, #12]
 8004a2e:	2330      	movs	r3, #48	; 0x30
 8004a30:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8004bf4 <_vfiprintf_r+0x24c>
 8004a34:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004a38:	f04f 0901 	mov.w	r9, #1
 8004a3c:	4623      	mov	r3, r4
 8004a3e:	469a      	mov	sl, r3
 8004a40:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004a44:	b10a      	cbz	r2, 8004a4a <_vfiprintf_r+0xa2>
 8004a46:	2a25      	cmp	r2, #37	; 0x25
 8004a48:	d1f9      	bne.n	8004a3e <_vfiprintf_r+0x96>
 8004a4a:	ebba 0b04 	subs.w	fp, sl, r4
 8004a4e:	d00b      	beq.n	8004a68 <_vfiprintf_r+0xc0>
 8004a50:	465b      	mov	r3, fp
 8004a52:	4622      	mov	r2, r4
 8004a54:	4629      	mov	r1, r5
 8004a56:	4630      	mov	r0, r6
 8004a58:	f7ff ff93 	bl	8004982 <__sfputs_r>
 8004a5c:	3001      	adds	r0, #1
 8004a5e:	f000 80aa 	beq.w	8004bb6 <_vfiprintf_r+0x20e>
 8004a62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a64:	445a      	add	r2, fp
 8004a66:	9209      	str	r2, [sp, #36]	; 0x24
 8004a68:	f89a 3000 	ldrb.w	r3, [sl]
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	f000 80a2 	beq.w	8004bb6 <_vfiprintf_r+0x20e>
 8004a72:	2300      	movs	r3, #0
 8004a74:	f04f 32ff 	mov.w	r2, #4294967295
 8004a78:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004a7c:	f10a 0a01 	add.w	sl, sl, #1
 8004a80:	9304      	str	r3, [sp, #16]
 8004a82:	9307      	str	r3, [sp, #28]
 8004a84:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004a88:	931a      	str	r3, [sp, #104]	; 0x68
 8004a8a:	4654      	mov	r4, sl
 8004a8c:	2205      	movs	r2, #5
 8004a8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004a92:	4858      	ldr	r0, [pc, #352]	; (8004bf4 <_vfiprintf_r+0x24c>)
 8004a94:	f7fb fbb4 	bl	8000200 <memchr>
 8004a98:	9a04      	ldr	r2, [sp, #16]
 8004a9a:	b9d8      	cbnz	r0, 8004ad4 <_vfiprintf_r+0x12c>
 8004a9c:	06d1      	lsls	r1, r2, #27
 8004a9e:	bf44      	itt	mi
 8004aa0:	2320      	movmi	r3, #32
 8004aa2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004aa6:	0713      	lsls	r3, r2, #28
 8004aa8:	bf44      	itt	mi
 8004aaa:	232b      	movmi	r3, #43	; 0x2b
 8004aac:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004ab0:	f89a 3000 	ldrb.w	r3, [sl]
 8004ab4:	2b2a      	cmp	r3, #42	; 0x2a
 8004ab6:	d015      	beq.n	8004ae4 <_vfiprintf_r+0x13c>
 8004ab8:	9a07      	ldr	r2, [sp, #28]
 8004aba:	4654      	mov	r4, sl
 8004abc:	2000      	movs	r0, #0
 8004abe:	f04f 0c0a 	mov.w	ip, #10
 8004ac2:	4621      	mov	r1, r4
 8004ac4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004ac8:	3b30      	subs	r3, #48	; 0x30
 8004aca:	2b09      	cmp	r3, #9
 8004acc:	d94e      	bls.n	8004b6c <_vfiprintf_r+0x1c4>
 8004ace:	b1b0      	cbz	r0, 8004afe <_vfiprintf_r+0x156>
 8004ad0:	9207      	str	r2, [sp, #28]
 8004ad2:	e014      	b.n	8004afe <_vfiprintf_r+0x156>
 8004ad4:	eba0 0308 	sub.w	r3, r0, r8
 8004ad8:	fa09 f303 	lsl.w	r3, r9, r3
 8004adc:	4313      	orrs	r3, r2
 8004ade:	9304      	str	r3, [sp, #16]
 8004ae0:	46a2      	mov	sl, r4
 8004ae2:	e7d2      	b.n	8004a8a <_vfiprintf_r+0xe2>
 8004ae4:	9b03      	ldr	r3, [sp, #12]
 8004ae6:	1d19      	adds	r1, r3, #4
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	9103      	str	r1, [sp, #12]
 8004aec:	2b00      	cmp	r3, #0
 8004aee:	bfbb      	ittet	lt
 8004af0:	425b      	neglt	r3, r3
 8004af2:	f042 0202 	orrlt.w	r2, r2, #2
 8004af6:	9307      	strge	r3, [sp, #28]
 8004af8:	9307      	strlt	r3, [sp, #28]
 8004afa:	bfb8      	it	lt
 8004afc:	9204      	strlt	r2, [sp, #16]
 8004afe:	7823      	ldrb	r3, [r4, #0]
 8004b00:	2b2e      	cmp	r3, #46	; 0x2e
 8004b02:	d10c      	bne.n	8004b1e <_vfiprintf_r+0x176>
 8004b04:	7863      	ldrb	r3, [r4, #1]
 8004b06:	2b2a      	cmp	r3, #42	; 0x2a
 8004b08:	d135      	bne.n	8004b76 <_vfiprintf_r+0x1ce>
 8004b0a:	9b03      	ldr	r3, [sp, #12]
 8004b0c:	1d1a      	adds	r2, r3, #4
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	9203      	str	r2, [sp, #12]
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	bfb8      	it	lt
 8004b16:	f04f 33ff 	movlt.w	r3, #4294967295
 8004b1a:	3402      	adds	r4, #2
 8004b1c:	9305      	str	r3, [sp, #20]
 8004b1e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8004c04 <_vfiprintf_r+0x25c>
 8004b22:	7821      	ldrb	r1, [r4, #0]
 8004b24:	2203      	movs	r2, #3
 8004b26:	4650      	mov	r0, sl
 8004b28:	f7fb fb6a 	bl	8000200 <memchr>
 8004b2c:	b140      	cbz	r0, 8004b40 <_vfiprintf_r+0x198>
 8004b2e:	2340      	movs	r3, #64	; 0x40
 8004b30:	eba0 000a 	sub.w	r0, r0, sl
 8004b34:	fa03 f000 	lsl.w	r0, r3, r0
 8004b38:	9b04      	ldr	r3, [sp, #16]
 8004b3a:	4303      	orrs	r3, r0
 8004b3c:	3401      	adds	r4, #1
 8004b3e:	9304      	str	r3, [sp, #16]
 8004b40:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004b44:	482c      	ldr	r0, [pc, #176]	; (8004bf8 <_vfiprintf_r+0x250>)
 8004b46:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004b4a:	2206      	movs	r2, #6
 8004b4c:	f7fb fb58 	bl	8000200 <memchr>
 8004b50:	2800      	cmp	r0, #0
 8004b52:	d03f      	beq.n	8004bd4 <_vfiprintf_r+0x22c>
 8004b54:	4b29      	ldr	r3, [pc, #164]	; (8004bfc <_vfiprintf_r+0x254>)
 8004b56:	bb1b      	cbnz	r3, 8004ba0 <_vfiprintf_r+0x1f8>
 8004b58:	9b03      	ldr	r3, [sp, #12]
 8004b5a:	3307      	adds	r3, #7
 8004b5c:	f023 0307 	bic.w	r3, r3, #7
 8004b60:	3308      	adds	r3, #8
 8004b62:	9303      	str	r3, [sp, #12]
 8004b64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b66:	443b      	add	r3, r7
 8004b68:	9309      	str	r3, [sp, #36]	; 0x24
 8004b6a:	e767      	b.n	8004a3c <_vfiprintf_r+0x94>
 8004b6c:	fb0c 3202 	mla	r2, ip, r2, r3
 8004b70:	460c      	mov	r4, r1
 8004b72:	2001      	movs	r0, #1
 8004b74:	e7a5      	b.n	8004ac2 <_vfiprintf_r+0x11a>
 8004b76:	2300      	movs	r3, #0
 8004b78:	3401      	adds	r4, #1
 8004b7a:	9305      	str	r3, [sp, #20]
 8004b7c:	4619      	mov	r1, r3
 8004b7e:	f04f 0c0a 	mov.w	ip, #10
 8004b82:	4620      	mov	r0, r4
 8004b84:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004b88:	3a30      	subs	r2, #48	; 0x30
 8004b8a:	2a09      	cmp	r2, #9
 8004b8c:	d903      	bls.n	8004b96 <_vfiprintf_r+0x1ee>
 8004b8e:	2b00      	cmp	r3, #0
 8004b90:	d0c5      	beq.n	8004b1e <_vfiprintf_r+0x176>
 8004b92:	9105      	str	r1, [sp, #20]
 8004b94:	e7c3      	b.n	8004b1e <_vfiprintf_r+0x176>
 8004b96:	fb0c 2101 	mla	r1, ip, r1, r2
 8004b9a:	4604      	mov	r4, r0
 8004b9c:	2301      	movs	r3, #1
 8004b9e:	e7f0      	b.n	8004b82 <_vfiprintf_r+0x1da>
 8004ba0:	ab03      	add	r3, sp, #12
 8004ba2:	9300      	str	r3, [sp, #0]
 8004ba4:	462a      	mov	r2, r5
 8004ba6:	4b16      	ldr	r3, [pc, #88]	; (8004c00 <_vfiprintf_r+0x258>)
 8004ba8:	a904      	add	r1, sp, #16
 8004baa:	4630      	mov	r0, r6
 8004bac:	f7fd fc8c 	bl	80024c8 <_printf_float>
 8004bb0:	4607      	mov	r7, r0
 8004bb2:	1c78      	adds	r0, r7, #1
 8004bb4:	d1d6      	bne.n	8004b64 <_vfiprintf_r+0x1bc>
 8004bb6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8004bb8:	07d9      	lsls	r1, r3, #31
 8004bba:	d405      	bmi.n	8004bc8 <_vfiprintf_r+0x220>
 8004bbc:	89ab      	ldrh	r3, [r5, #12]
 8004bbe:	059a      	lsls	r2, r3, #22
 8004bc0:	d402      	bmi.n	8004bc8 <_vfiprintf_r+0x220>
 8004bc2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8004bc4:	f7ff f9d0 	bl	8003f68 <__retarget_lock_release_recursive>
 8004bc8:	89ab      	ldrh	r3, [r5, #12]
 8004bca:	065b      	lsls	r3, r3, #25
 8004bcc:	f53f af12 	bmi.w	80049f4 <_vfiprintf_r+0x4c>
 8004bd0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004bd2:	e711      	b.n	80049f8 <_vfiprintf_r+0x50>
 8004bd4:	ab03      	add	r3, sp, #12
 8004bd6:	9300      	str	r3, [sp, #0]
 8004bd8:	462a      	mov	r2, r5
 8004bda:	4b09      	ldr	r3, [pc, #36]	; (8004c00 <_vfiprintf_r+0x258>)
 8004bdc:	a904      	add	r1, sp, #16
 8004bde:	4630      	mov	r0, r6
 8004be0:	f7fd ff16 	bl	8002a10 <_printf_i>
 8004be4:	e7e4      	b.n	8004bb0 <_vfiprintf_r+0x208>
 8004be6:	bf00      	nop
 8004be8:	0800502c 	.word	0x0800502c
 8004bec:	0800504c 	.word	0x0800504c
 8004bf0:	0800500c 	.word	0x0800500c
 8004bf4:	080051c4 	.word	0x080051c4
 8004bf8:	080051ce 	.word	0x080051ce
 8004bfc:	080024c9 	.word	0x080024c9
 8004c00:	08004983 	.word	0x08004983
 8004c04:	080051ca 	.word	0x080051ca

08004c08 <_sbrk_r>:
 8004c08:	b538      	push	{r3, r4, r5, lr}
 8004c0a:	4d06      	ldr	r5, [pc, #24]	; (8004c24 <_sbrk_r+0x1c>)
 8004c0c:	2300      	movs	r3, #0
 8004c0e:	4604      	mov	r4, r0
 8004c10:	4608      	mov	r0, r1
 8004c12:	602b      	str	r3, [r5, #0]
 8004c14:	f7fc fbb2 	bl	800137c <_sbrk>
 8004c18:	1c43      	adds	r3, r0, #1
 8004c1a:	d102      	bne.n	8004c22 <_sbrk_r+0x1a>
 8004c1c:	682b      	ldr	r3, [r5, #0]
 8004c1e:	b103      	cbz	r3, 8004c22 <_sbrk_r+0x1a>
 8004c20:	6023      	str	r3, [r4, #0]
 8004c22:	bd38      	pop	{r3, r4, r5, pc}
 8004c24:	200004c0 	.word	0x200004c0

08004c28 <__sread>:
 8004c28:	b510      	push	{r4, lr}
 8004c2a:	460c      	mov	r4, r1
 8004c2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004c30:	f000 f8e2 	bl	8004df8 <_read_r>
 8004c34:	2800      	cmp	r0, #0
 8004c36:	bfab      	itete	ge
 8004c38:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8004c3a:	89a3      	ldrhlt	r3, [r4, #12]
 8004c3c:	181b      	addge	r3, r3, r0
 8004c3e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8004c42:	bfac      	ite	ge
 8004c44:	6563      	strge	r3, [r4, #84]	; 0x54
 8004c46:	81a3      	strhlt	r3, [r4, #12]
 8004c48:	bd10      	pop	{r4, pc}

08004c4a <__swrite>:
 8004c4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004c4e:	461f      	mov	r7, r3
 8004c50:	898b      	ldrh	r3, [r1, #12]
 8004c52:	05db      	lsls	r3, r3, #23
 8004c54:	4605      	mov	r5, r0
 8004c56:	460c      	mov	r4, r1
 8004c58:	4616      	mov	r6, r2
 8004c5a:	d505      	bpl.n	8004c68 <__swrite+0x1e>
 8004c5c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004c60:	2302      	movs	r3, #2
 8004c62:	2200      	movs	r2, #0
 8004c64:	f000 f898 	bl	8004d98 <_lseek_r>
 8004c68:	89a3      	ldrh	r3, [r4, #12]
 8004c6a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004c6e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004c72:	81a3      	strh	r3, [r4, #12]
 8004c74:	4632      	mov	r2, r6
 8004c76:	463b      	mov	r3, r7
 8004c78:	4628      	mov	r0, r5
 8004c7a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004c7e:	f000 b817 	b.w	8004cb0 <_write_r>

08004c82 <__sseek>:
 8004c82:	b510      	push	{r4, lr}
 8004c84:	460c      	mov	r4, r1
 8004c86:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004c8a:	f000 f885 	bl	8004d98 <_lseek_r>
 8004c8e:	1c43      	adds	r3, r0, #1
 8004c90:	89a3      	ldrh	r3, [r4, #12]
 8004c92:	bf15      	itete	ne
 8004c94:	6560      	strne	r0, [r4, #84]	; 0x54
 8004c96:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8004c9a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8004c9e:	81a3      	strheq	r3, [r4, #12]
 8004ca0:	bf18      	it	ne
 8004ca2:	81a3      	strhne	r3, [r4, #12]
 8004ca4:	bd10      	pop	{r4, pc}

08004ca6 <__sclose>:
 8004ca6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004caa:	f000 b831 	b.w	8004d10 <_close_r>
	...

08004cb0 <_write_r>:
 8004cb0:	b538      	push	{r3, r4, r5, lr}
 8004cb2:	4d07      	ldr	r5, [pc, #28]	; (8004cd0 <_write_r+0x20>)
 8004cb4:	4604      	mov	r4, r0
 8004cb6:	4608      	mov	r0, r1
 8004cb8:	4611      	mov	r1, r2
 8004cba:	2200      	movs	r2, #0
 8004cbc:	602a      	str	r2, [r5, #0]
 8004cbe:	461a      	mov	r2, r3
 8004cc0:	f7fc fb0b 	bl	80012da <_write>
 8004cc4:	1c43      	adds	r3, r0, #1
 8004cc6:	d102      	bne.n	8004cce <_write_r+0x1e>
 8004cc8:	682b      	ldr	r3, [r5, #0]
 8004cca:	b103      	cbz	r3, 8004cce <_write_r+0x1e>
 8004ccc:	6023      	str	r3, [r4, #0]
 8004cce:	bd38      	pop	{r3, r4, r5, pc}
 8004cd0:	200004c0 	.word	0x200004c0

08004cd4 <__assert_func>:
 8004cd4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004cd6:	4614      	mov	r4, r2
 8004cd8:	461a      	mov	r2, r3
 8004cda:	4b09      	ldr	r3, [pc, #36]	; (8004d00 <__assert_func+0x2c>)
 8004cdc:	681b      	ldr	r3, [r3, #0]
 8004cde:	4605      	mov	r5, r0
 8004ce0:	68d8      	ldr	r0, [r3, #12]
 8004ce2:	b14c      	cbz	r4, 8004cf8 <__assert_func+0x24>
 8004ce4:	4b07      	ldr	r3, [pc, #28]	; (8004d04 <__assert_func+0x30>)
 8004ce6:	9100      	str	r1, [sp, #0]
 8004ce8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8004cec:	4906      	ldr	r1, [pc, #24]	; (8004d08 <__assert_func+0x34>)
 8004cee:	462b      	mov	r3, r5
 8004cf0:	f000 f81e 	bl	8004d30 <fiprintf>
 8004cf4:	f000 f89f 	bl	8004e36 <abort>
 8004cf8:	4b04      	ldr	r3, [pc, #16]	; (8004d0c <__assert_func+0x38>)
 8004cfa:	461c      	mov	r4, r3
 8004cfc:	e7f3      	b.n	8004ce6 <__assert_func+0x12>
 8004cfe:	bf00      	nop
 8004d00:	20000148 	.word	0x20000148
 8004d04:	080051d5 	.word	0x080051d5
 8004d08:	080051e2 	.word	0x080051e2
 8004d0c:	08005210 	.word	0x08005210

08004d10 <_close_r>:
 8004d10:	b538      	push	{r3, r4, r5, lr}
 8004d12:	4d06      	ldr	r5, [pc, #24]	; (8004d2c <_close_r+0x1c>)
 8004d14:	2300      	movs	r3, #0
 8004d16:	4604      	mov	r4, r0
 8004d18:	4608      	mov	r0, r1
 8004d1a:	602b      	str	r3, [r5, #0]
 8004d1c:	f7fc faf9 	bl	8001312 <_close>
 8004d20:	1c43      	adds	r3, r0, #1
 8004d22:	d102      	bne.n	8004d2a <_close_r+0x1a>
 8004d24:	682b      	ldr	r3, [r5, #0]
 8004d26:	b103      	cbz	r3, 8004d2a <_close_r+0x1a>
 8004d28:	6023      	str	r3, [r4, #0]
 8004d2a:	bd38      	pop	{r3, r4, r5, pc}
 8004d2c:	200004c0 	.word	0x200004c0

08004d30 <fiprintf>:
 8004d30:	b40e      	push	{r1, r2, r3}
 8004d32:	b503      	push	{r0, r1, lr}
 8004d34:	4601      	mov	r1, r0
 8004d36:	ab03      	add	r3, sp, #12
 8004d38:	4805      	ldr	r0, [pc, #20]	; (8004d50 <fiprintf+0x20>)
 8004d3a:	f853 2b04 	ldr.w	r2, [r3], #4
 8004d3e:	6800      	ldr	r0, [r0, #0]
 8004d40:	9301      	str	r3, [sp, #4]
 8004d42:	f7ff fe31 	bl	80049a8 <_vfiprintf_r>
 8004d46:	b002      	add	sp, #8
 8004d48:	f85d eb04 	ldr.w	lr, [sp], #4
 8004d4c:	b003      	add	sp, #12
 8004d4e:	4770      	bx	lr
 8004d50:	20000148 	.word	0x20000148

08004d54 <_fstat_r>:
 8004d54:	b538      	push	{r3, r4, r5, lr}
 8004d56:	4d07      	ldr	r5, [pc, #28]	; (8004d74 <_fstat_r+0x20>)
 8004d58:	2300      	movs	r3, #0
 8004d5a:	4604      	mov	r4, r0
 8004d5c:	4608      	mov	r0, r1
 8004d5e:	4611      	mov	r1, r2
 8004d60:	602b      	str	r3, [r5, #0]
 8004d62:	f7fc fae2 	bl	800132a <_fstat>
 8004d66:	1c43      	adds	r3, r0, #1
 8004d68:	d102      	bne.n	8004d70 <_fstat_r+0x1c>
 8004d6a:	682b      	ldr	r3, [r5, #0]
 8004d6c:	b103      	cbz	r3, 8004d70 <_fstat_r+0x1c>
 8004d6e:	6023      	str	r3, [r4, #0]
 8004d70:	bd38      	pop	{r3, r4, r5, pc}
 8004d72:	bf00      	nop
 8004d74:	200004c0 	.word	0x200004c0

08004d78 <_isatty_r>:
 8004d78:	b538      	push	{r3, r4, r5, lr}
 8004d7a:	4d06      	ldr	r5, [pc, #24]	; (8004d94 <_isatty_r+0x1c>)
 8004d7c:	2300      	movs	r3, #0
 8004d7e:	4604      	mov	r4, r0
 8004d80:	4608      	mov	r0, r1
 8004d82:	602b      	str	r3, [r5, #0]
 8004d84:	f7fc fae1 	bl	800134a <_isatty>
 8004d88:	1c43      	adds	r3, r0, #1
 8004d8a:	d102      	bne.n	8004d92 <_isatty_r+0x1a>
 8004d8c:	682b      	ldr	r3, [r5, #0]
 8004d8e:	b103      	cbz	r3, 8004d92 <_isatty_r+0x1a>
 8004d90:	6023      	str	r3, [r4, #0]
 8004d92:	bd38      	pop	{r3, r4, r5, pc}
 8004d94:	200004c0 	.word	0x200004c0

08004d98 <_lseek_r>:
 8004d98:	b538      	push	{r3, r4, r5, lr}
 8004d9a:	4d07      	ldr	r5, [pc, #28]	; (8004db8 <_lseek_r+0x20>)
 8004d9c:	4604      	mov	r4, r0
 8004d9e:	4608      	mov	r0, r1
 8004da0:	4611      	mov	r1, r2
 8004da2:	2200      	movs	r2, #0
 8004da4:	602a      	str	r2, [r5, #0]
 8004da6:	461a      	mov	r2, r3
 8004da8:	f7fc fada 	bl	8001360 <_lseek>
 8004dac:	1c43      	adds	r3, r0, #1
 8004dae:	d102      	bne.n	8004db6 <_lseek_r+0x1e>
 8004db0:	682b      	ldr	r3, [r5, #0]
 8004db2:	b103      	cbz	r3, 8004db6 <_lseek_r+0x1e>
 8004db4:	6023      	str	r3, [r4, #0]
 8004db6:	bd38      	pop	{r3, r4, r5, pc}
 8004db8:	200004c0 	.word	0x200004c0

08004dbc <__ascii_mbtowc>:
 8004dbc:	b082      	sub	sp, #8
 8004dbe:	b901      	cbnz	r1, 8004dc2 <__ascii_mbtowc+0x6>
 8004dc0:	a901      	add	r1, sp, #4
 8004dc2:	b142      	cbz	r2, 8004dd6 <__ascii_mbtowc+0x1a>
 8004dc4:	b14b      	cbz	r3, 8004dda <__ascii_mbtowc+0x1e>
 8004dc6:	7813      	ldrb	r3, [r2, #0]
 8004dc8:	600b      	str	r3, [r1, #0]
 8004dca:	7812      	ldrb	r2, [r2, #0]
 8004dcc:	1e10      	subs	r0, r2, #0
 8004dce:	bf18      	it	ne
 8004dd0:	2001      	movne	r0, #1
 8004dd2:	b002      	add	sp, #8
 8004dd4:	4770      	bx	lr
 8004dd6:	4610      	mov	r0, r2
 8004dd8:	e7fb      	b.n	8004dd2 <__ascii_mbtowc+0x16>
 8004dda:	f06f 0001 	mvn.w	r0, #1
 8004dde:	e7f8      	b.n	8004dd2 <__ascii_mbtowc+0x16>

08004de0 <__malloc_lock>:
 8004de0:	4801      	ldr	r0, [pc, #4]	; (8004de8 <__malloc_lock+0x8>)
 8004de2:	f7ff b8c0 	b.w	8003f66 <__retarget_lock_acquire_recursive>
 8004de6:	bf00      	nop
 8004de8:	200004b4 	.word	0x200004b4

08004dec <__malloc_unlock>:
 8004dec:	4801      	ldr	r0, [pc, #4]	; (8004df4 <__malloc_unlock+0x8>)
 8004dee:	f7ff b8bb 	b.w	8003f68 <__retarget_lock_release_recursive>
 8004df2:	bf00      	nop
 8004df4:	200004b4 	.word	0x200004b4

08004df8 <_read_r>:
 8004df8:	b538      	push	{r3, r4, r5, lr}
 8004dfa:	4d07      	ldr	r5, [pc, #28]	; (8004e18 <_read_r+0x20>)
 8004dfc:	4604      	mov	r4, r0
 8004dfe:	4608      	mov	r0, r1
 8004e00:	4611      	mov	r1, r2
 8004e02:	2200      	movs	r2, #0
 8004e04:	602a      	str	r2, [r5, #0]
 8004e06:	461a      	mov	r2, r3
 8004e08:	f7fc fa4a 	bl	80012a0 <_read>
 8004e0c:	1c43      	adds	r3, r0, #1
 8004e0e:	d102      	bne.n	8004e16 <_read_r+0x1e>
 8004e10:	682b      	ldr	r3, [r5, #0]
 8004e12:	b103      	cbz	r3, 8004e16 <_read_r+0x1e>
 8004e14:	6023      	str	r3, [r4, #0]
 8004e16:	bd38      	pop	{r3, r4, r5, pc}
 8004e18:	200004c0 	.word	0x200004c0

08004e1c <__ascii_wctomb>:
 8004e1c:	b149      	cbz	r1, 8004e32 <__ascii_wctomb+0x16>
 8004e1e:	2aff      	cmp	r2, #255	; 0xff
 8004e20:	bf85      	ittet	hi
 8004e22:	238a      	movhi	r3, #138	; 0x8a
 8004e24:	6003      	strhi	r3, [r0, #0]
 8004e26:	700a      	strbls	r2, [r1, #0]
 8004e28:	f04f 30ff 	movhi.w	r0, #4294967295
 8004e2c:	bf98      	it	ls
 8004e2e:	2001      	movls	r0, #1
 8004e30:	4770      	bx	lr
 8004e32:	4608      	mov	r0, r1
 8004e34:	4770      	bx	lr

08004e36 <abort>:
 8004e36:	b508      	push	{r3, lr}
 8004e38:	2006      	movs	r0, #6
 8004e3a:	f000 f82b 	bl	8004e94 <raise>
 8004e3e:	2001      	movs	r0, #1
 8004e40:	f7fc fa24 	bl	800128c <_exit>

08004e44 <_raise_r>:
 8004e44:	291f      	cmp	r1, #31
 8004e46:	b538      	push	{r3, r4, r5, lr}
 8004e48:	4604      	mov	r4, r0
 8004e4a:	460d      	mov	r5, r1
 8004e4c:	d904      	bls.n	8004e58 <_raise_r+0x14>
 8004e4e:	2316      	movs	r3, #22
 8004e50:	6003      	str	r3, [r0, #0]
 8004e52:	f04f 30ff 	mov.w	r0, #4294967295
 8004e56:	bd38      	pop	{r3, r4, r5, pc}
 8004e58:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8004e5a:	b112      	cbz	r2, 8004e62 <_raise_r+0x1e>
 8004e5c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004e60:	b94b      	cbnz	r3, 8004e76 <_raise_r+0x32>
 8004e62:	4620      	mov	r0, r4
 8004e64:	f000 f830 	bl	8004ec8 <_getpid_r>
 8004e68:	462a      	mov	r2, r5
 8004e6a:	4601      	mov	r1, r0
 8004e6c:	4620      	mov	r0, r4
 8004e6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004e72:	f000 b817 	b.w	8004ea4 <_kill_r>
 8004e76:	2b01      	cmp	r3, #1
 8004e78:	d00a      	beq.n	8004e90 <_raise_r+0x4c>
 8004e7a:	1c59      	adds	r1, r3, #1
 8004e7c:	d103      	bne.n	8004e86 <_raise_r+0x42>
 8004e7e:	2316      	movs	r3, #22
 8004e80:	6003      	str	r3, [r0, #0]
 8004e82:	2001      	movs	r0, #1
 8004e84:	e7e7      	b.n	8004e56 <_raise_r+0x12>
 8004e86:	2400      	movs	r4, #0
 8004e88:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8004e8c:	4628      	mov	r0, r5
 8004e8e:	4798      	blx	r3
 8004e90:	2000      	movs	r0, #0
 8004e92:	e7e0      	b.n	8004e56 <_raise_r+0x12>

08004e94 <raise>:
 8004e94:	4b02      	ldr	r3, [pc, #8]	; (8004ea0 <raise+0xc>)
 8004e96:	4601      	mov	r1, r0
 8004e98:	6818      	ldr	r0, [r3, #0]
 8004e9a:	f7ff bfd3 	b.w	8004e44 <_raise_r>
 8004e9e:	bf00      	nop
 8004ea0:	20000148 	.word	0x20000148

08004ea4 <_kill_r>:
 8004ea4:	b538      	push	{r3, r4, r5, lr}
 8004ea6:	4d07      	ldr	r5, [pc, #28]	; (8004ec4 <_kill_r+0x20>)
 8004ea8:	2300      	movs	r3, #0
 8004eaa:	4604      	mov	r4, r0
 8004eac:	4608      	mov	r0, r1
 8004eae:	4611      	mov	r1, r2
 8004eb0:	602b      	str	r3, [r5, #0]
 8004eb2:	f7fc f9db 	bl	800126c <_kill>
 8004eb6:	1c43      	adds	r3, r0, #1
 8004eb8:	d102      	bne.n	8004ec0 <_kill_r+0x1c>
 8004eba:	682b      	ldr	r3, [r5, #0]
 8004ebc:	b103      	cbz	r3, 8004ec0 <_kill_r+0x1c>
 8004ebe:	6023      	str	r3, [r4, #0]
 8004ec0:	bd38      	pop	{r3, r4, r5, pc}
 8004ec2:	bf00      	nop
 8004ec4:	200004c0 	.word	0x200004c0

08004ec8 <_getpid_r>:
 8004ec8:	f7fc b9c8 	b.w	800125c <_getpid>

08004ecc <_init>:
 8004ecc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004ece:	bf00      	nop
 8004ed0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004ed2:	bc08      	pop	{r3}
 8004ed4:	469e      	mov	lr, r3
 8004ed6:	4770      	bx	lr

08004ed8 <_fini>:
 8004ed8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004eda:	bf00      	nop
 8004edc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004ede:	bc08      	pop	{r3}
 8004ee0:	469e      	mov	lr, r3
 8004ee2:	4770      	bx	lr
