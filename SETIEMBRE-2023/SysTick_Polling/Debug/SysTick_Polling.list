
SysTick_Polling.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000410  080000b4  080000b4  000100b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080004c4  080004c4  000104c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000504  08000504  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000504  08000504  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000504  08000504  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000504  08000504  00010504  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000508  08000508  00010508  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  0800050c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  08000510  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000510  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002002c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000731  00000000  00000000  0002006f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000272  00000000  00000000  000207a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  00020a18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000053  00000000  00000000  00020a98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000ae61  00000000  00000000  00020aeb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c8a  00000000  00000000  0002b94c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0003ca17  00000000  00000000  0002c5d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000108  00000000  00000000  00068ff0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000080  00000000  00000000  000690f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000b4 <__do_global_dtors_aux>:
 80000b4:	b510      	push	{r4, lr}
 80000b6:	4c06      	ldr	r4, [pc, #24]	; (80000d0 <__do_global_dtors_aux+0x1c>)
 80000b8:	7823      	ldrb	r3, [r4, #0]
 80000ba:	2b00      	cmp	r3, #0
 80000bc:	d107      	bne.n	80000ce <__do_global_dtors_aux+0x1a>
 80000be:	4b05      	ldr	r3, [pc, #20]	; (80000d4 <__do_global_dtors_aux+0x20>)
 80000c0:	2b00      	cmp	r3, #0
 80000c2:	d002      	beq.n	80000ca <__do_global_dtors_aux+0x16>
 80000c4:	4804      	ldr	r0, [pc, #16]	; (80000d8 <__do_global_dtors_aux+0x24>)
 80000c6:	e000      	b.n	80000ca <__do_global_dtors_aux+0x16>
 80000c8:	bf00      	nop
 80000ca:	2301      	movs	r3, #1
 80000cc:	7023      	strb	r3, [r4, #0]
 80000ce:	bd10      	pop	{r4, pc}
 80000d0:	20000004 	.word	0x20000004
 80000d4:	00000000 	.word	0x00000000
 80000d8:	080004ac 	.word	0x080004ac

080000dc <frame_dummy>:
 80000dc:	4b04      	ldr	r3, [pc, #16]	; (80000f0 <frame_dummy+0x14>)
 80000de:	b510      	push	{r4, lr}
 80000e0:	2b00      	cmp	r3, #0
 80000e2:	d003      	beq.n	80000ec <frame_dummy+0x10>
 80000e4:	4903      	ldr	r1, [pc, #12]	; (80000f4 <frame_dummy+0x18>)
 80000e6:	4804      	ldr	r0, [pc, #16]	; (80000f8 <frame_dummy+0x1c>)
 80000e8:	e000      	b.n	80000ec <frame_dummy+0x10>
 80000ea:	bf00      	nop
 80000ec:	bd10      	pop	{r4, pc}
 80000ee:	46c0      	nop			; (mov r8, r8)
 80000f0:	00000000 	.word	0x00000000
 80000f4:	20000008 	.word	0x20000008
 80000f8:	080004ac 	.word	0x080004ac

080000fc <__udivsi3>:
 80000fc:	2200      	movs	r2, #0
 80000fe:	0843      	lsrs	r3, r0, #1
 8000100:	428b      	cmp	r3, r1
 8000102:	d374      	bcc.n	80001ee <__udivsi3+0xf2>
 8000104:	0903      	lsrs	r3, r0, #4
 8000106:	428b      	cmp	r3, r1
 8000108:	d35f      	bcc.n	80001ca <__udivsi3+0xce>
 800010a:	0a03      	lsrs	r3, r0, #8
 800010c:	428b      	cmp	r3, r1
 800010e:	d344      	bcc.n	800019a <__udivsi3+0x9e>
 8000110:	0b03      	lsrs	r3, r0, #12
 8000112:	428b      	cmp	r3, r1
 8000114:	d328      	bcc.n	8000168 <__udivsi3+0x6c>
 8000116:	0c03      	lsrs	r3, r0, #16
 8000118:	428b      	cmp	r3, r1
 800011a:	d30d      	bcc.n	8000138 <__udivsi3+0x3c>
 800011c:	22ff      	movs	r2, #255	; 0xff
 800011e:	0209      	lsls	r1, r1, #8
 8000120:	ba12      	rev	r2, r2
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d302      	bcc.n	800012e <__udivsi3+0x32>
 8000128:	1212      	asrs	r2, r2, #8
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	d065      	beq.n	80001fa <__udivsi3+0xfe>
 800012e:	0b03      	lsrs	r3, r0, #12
 8000130:	428b      	cmp	r3, r1
 8000132:	d319      	bcc.n	8000168 <__udivsi3+0x6c>
 8000134:	e000      	b.n	8000138 <__udivsi3+0x3c>
 8000136:	0a09      	lsrs	r1, r1, #8
 8000138:	0bc3      	lsrs	r3, r0, #15
 800013a:	428b      	cmp	r3, r1
 800013c:	d301      	bcc.n	8000142 <__udivsi3+0x46>
 800013e:	03cb      	lsls	r3, r1, #15
 8000140:	1ac0      	subs	r0, r0, r3
 8000142:	4152      	adcs	r2, r2
 8000144:	0b83      	lsrs	r3, r0, #14
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x52>
 800014a:	038b      	lsls	r3, r1, #14
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b43      	lsrs	r3, r0, #13
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x5e>
 8000156:	034b      	lsls	r3, r1, #13
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b03      	lsrs	r3, r0, #12
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x6a>
 8000162:	030b      	lsls	r3, r1, #12
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0ac3      	lsrs	r3, r0, #11
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x76>
 800016e:	02cb      	lsls	r3, r1, #11
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0a83      	lsrs	r3, r0, #10
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x82>
 800017a:	028b      	lsls	r3, r1, #10
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a43      	lsrs	r3, r0, #9
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x8e>
 8000186:	024b      	lsls	r3, r1, #9
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a03      	lsrs	r3, r0, #8
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x9a>
 8000192:	020b      	lsls	r3, r1, #8
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	d2cd      	bcs.n	8000136 <__udivsi3+0x3a>
 800019a:	09c3      	lsrs	r3, r0, #7
 800019c:	428b      	cmp	r3, r1
 800019e:	d301      	bcc.n	80001a4 <__udivsi3+0xa8>
 80001a0:	01cb      	lsls	r3, r1, #7
 80001a2:	1ac0      	subs	r0, r0, r3
 80001a4:	4152      	adcs	r2, r2
 80001a6:	0983      	lsrs	r3, r0, #6
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xb4>
 80001ac:	018b      	lsls	r3, r1, #6
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0943      	lsrs	r3, r0, #5
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xc0>
 80001b8:	014b      	lsls	r3, r1, #5
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0903      	lsrs	r3, r0, #4
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xcc>
 80001c4:	010b      	lsls	r3, r1, #4
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	08c3      	lsrs	r3, r0, #3
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xd8>
 80001d0:	00cb      	lsls	r3, r1, #3
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0883      	lsrs	r3, r0, #2
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xe4>
 80001dc:	008b      	lsls	r3, r1, #2
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0843      	lsrs	r3, r0, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xf0>
 80001e8:	004b      	lsls	r3, r1, #1
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	1a41      	subs	r1, r0, r1
 80001f0:	d200      	bcs.n	80001f4 <__udivsi3+0xf8>
 80001f2:	4601      	mov	r1, r0
 80001f4:	4152      	adcs	r2, r2
 80001f6:	4610      	mov	r0, r2
 80001f8:	4770      	bx	lr
 80001fa:	e7ff      	b.n	80001fc <__udivsi3+0x100>
 80001fc:	b501      	push	{r0, lr}
 80001fe:	2000      	movs	r0, #0
 8000200:	f000 f806 	bl	8000210 <__aeabi_idiv0>
 8000204:	bd02      	pop	{r1, pc}
 8000206:	46c0      	nop			; (mov r8, r8)

08000208 <__aeabi_uidivmod>:
 8000208:	2900      	cmp	r1, #0
 800020a:	d0f7      	beq.n	80001fc <__udivsi3+0x100>
 800020c:	e776      	b.n	80000fc <__udivsi3>
 800020e:	4770      	bx	lr

08000210 <__aeabi_idiv0>:
 8000210:	4770      	bx	lr
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <main>:
void SysTick_Init(uint32_t ticks);
void delay_ms(uint32_t delay);
/*Main function ----------------------------------------------------------------*/

int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b082      	sub	sp, #8
 8000218:	af00      	add	r7, sp, #0
//	volatile uint32_t *RCC_IOPENR = (volatile uint32_t *)(RCC_IOPENR_ADDR);
//
//	*RCC_IOPENR |= 1;
//	IOPENR |= 1;
	
	RCC->IOPENR |= RCC_IOPENR_GPIOAEN | RCC_IOPENR_GPIOCEN;
 800021a:	4b30      	ldr	r3, [pc, #192]	; (80002dc <main+0xc8>)
 800021c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800021e:	4b2f      	ldr	r3, [pc, #188]	; (80002dc <main+0xc8>)
 8000220:	2105      	movs	r1, #5
 8000222:	430a      	orrs	r2, r1
 8000224:	635a      	str	r2, [r3, #52]	; 0x34
	//LED - PA5
	//SWITCH -> PC13
	//MODER
	GPIOA->MODER &=~ (GPIO_MODER_MODE5); //reset (MODER5)
 8000226:	23a0      	movs	r3, #160	; 0xa0
 8000228:	05db      	lsls	r3, r3, #23
 800022a:	681a      	ldr	r2, [r3, #0]
 800022c:	23a0      	movs	r3, #160	; 0xa0
 800022e:	05db      	lsls	r3, r3, #23
 8000230:	492b      	ldr	r1, [pc, #172]	; (80002e0 <main+0xcc>)
 8000232:	400a      	ands	r2, r1
 8000234:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= GPIO_MODER_MODE5_0; 	//Salida de proposito general ;
 8000236:	23a0      	movs	r3, #160	; 0xa0
 8000238:	05db      	lsls	r3, r3, #23
 800023a:	681a      	ldr	r2, [r3, #0]
 800023c:	23a0      	movs	r3, #160	; 0xa0
 800023e:	05db      	lsls	r3, r3, #23
 8000240:	2180      	movs	r1, #128	; 0x80
 8000242:	00c9      	lsls	r1, r1, #3
 8000244:	430a      	orrs	r2, r1
 8000246:	601a      	str	r2, [r3, #0]

	GPIOC->MODER &=~ GPIO_MODER_MODE13;		//Reset (MODER13) Entrada
 8000248:	4b26      	ldr	r3, [pc, #152]	; (80002e4 <main+0xd0>)
 800024a:	681a      	ldr	r2, [r3, #0]
 800024c:	4b25      	ldr	r3, [pc, #148]	; (80002e4 <main+0xd0>)
 800024e:	4926      	ldr	r1, [pc, #152]	; (80002e8 <main+0xd4>)
 8000250:	400a      	ands	r2, r1
 8000252:	601a      	str	r2, [r3, #0]
	//OTYPER
	GPIOA->OTYPER &=~ GPIO_OTYPER_OT5;
 8000254:	23a0      	movs	r3, #160	; 0xa0
 8000256:	05db      	lsls	r3, r3, #23
 8000258:	685a      	ldr	r2, [r3, #4]
 800025a:	23a0      	movs	r3, #160	; 0xa0
 800025c:	05db      	lsls	r3, r3, #23
 800025e:	2120      	movs	r1, #32
 8000260:	438a      	bics	r2, r1
 8000262:	605a      	str	r2, [r3, #4]
	//OSPEEDR
	GPIOA->OSPEEDR &=~ GPIO_OSPEEDR_OSPEED5;
 8000264:	23a0      	movs	r3, #160	; 0xa0
 8000266:	05db      	lsls	r3, r3, #23
 8000268:	689a      	ldr	r2, [r3, #8]
 800026a:	23a0      	movs	r3, #160	; 0xa0
 800026c:	05db      	lsls	r3, r3, #23
 800026e:	491c      	ldr	r1, [pc, #112]	; (80002e0 <main+0xcc>)
 8000270:	400a      	ands	r2, r1
 8000272:	609a      	str	r2, [r3, #8]
	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED5_1;//High speed
 8000274:	23a0      	movs	r3, #160	; 0xa0
 8000276:	05db      	lsls	r3, r3, #23
 8000278:	689a      	ldr	r2, [r3, #8]
 800027a:	23a0      	movs	r3, #160	; 0xa0
 800027c:	05db      	lsls	r3, r3, #23
 800027e:	2180      	movs	r1, #128	; 0x80
 8000280:	0109      	lsls	r1, r1, #4
 8000282:	430a      	orrs	r2, r1
 8000284:	609a      	str	r2, [r3, #8]

	//PUPDR
	GPIOA->PUPDR &=~ GPIO_PUPDR_PUPD5;
 8000286:	23a0      	movs	r3, #160	; 0xa0
 8000288:	05db      	lsls	r3, r3, #23
 800028a:	68da      	ldr	r2, [r3, #12]
 800028c:	23a0      	movs	r3, #160	; 0xa0
 800028e:	05db      	lsls	r3, r3, #23
 8000290:	4913      	ldr	r1, [pc, #76]	; (80002e0 <main+0xcc>)
 8000292:	400a      	ands	r2, r1
 8000294:	60da      	str	r2, [r3, #12]
	GPIOC->PUPDR &=~ GPIO_PUPDR_PUPD13;
 8000296:	4b13      	ldr	r3, [pc, #76]	; (80002e4 <main+0xd0>)
 8000298:	68da      	ldr	r2, [r3, #12]
 800029a:	4b12      	ldr	r3, [pc, #72]	; (80002e4 <main+0xd0>)
 800029c:	4912      	ldr	r1, [pc, #72]	; (80002e8 <main+0xd4>)
 800029e:	400a      	ands	r2, r1
 80002a0:	60da      	str	r2, [r3, #12]

	/*Systick init ---------------------------------------*/
	uint32_t ticks = 0;
 80002a2:	2300      	movs	r3, #0
 80002a4:	607b      	str	r3, [r7, #4]
	 * LOAD = Freq * T
	 * LOAD =  48MHZ * 100 * 10^(-3)
	 * LOAD = 48MHZ /(10)
	 * LOAD  = 4800 0000
	 */
	SystemCoreClockUpdate();
 80002a6:	f000 f869 	bl	800037c <SystemCoreClockUpdate>
	ticks = SystemCoreClock / 1000;
 80002aa:	4b10      	ldr	r3, [pc, #64]	; (80002ec <main+0xd8>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	22fa      	movs	r2, #250	; 0xfa
 80002b0:	0091      	lsls	r1, r2, #2
 80002b2:	0018      	movs	r0, r3
 80002b4:	f7ff ff22 	bl	80000fc <__udivsi3>
 80002b8:	0003      	movs	r3, r0
 80002ba:	607b      	str	r3, [r7, #4]
	SysTick_Init(ticks);
 80002bc:	687b      	ldr	r3, [r7, #4]
 80002be:	0018      	movs	r0, r3
 80002c0:	f000 f816 	bl	80002f0 <SysTick_Init>
	
	for(;;){
//		if(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk){ //update event
//			GPIOA->ODR ^= 1<<5;
//		}
		GPIOA->ODR ^= 1<<5;
 80002c4:	23a0      	movs	r3, #160	; 0xa0
 80002c6:	05db      	lsls	r3, r3, #23
 80002c8:	695a      	ldr	r2, [r3, #20]
 80002ca:	23a0      	movs	r3, #160	; 0xa0
 80002cc:	05db      	lsls	r3, r3, #23
 80002ce:	2120      	movs	r1, #32
 80002d0:	404a      	eors	r2, r1
 80002d2:	615a      	str	r2, [r3, #20]
		delay_ms(10);
 80002d4:	200a      	movs	r0, #10
 80002d6:	f000 f825 	bl	8000324 <delay_ms>
		GPIOA->ODR ^= 1<<5;
 80002da:	e7f3      	b.n	80002c4 <main+0xb0>
 80002dc:	40021000 	.word	0x40021000
 80002e0:	fffff3ff 	.word	0xfffff3ff
 80002e4:	50000800 	.word	0x50000800
 80002e8:	f3ffffff 	.word	0xf3ffffff
 80002ec:	20000000 	.word	0x20000000

080002f0 <SysTick_Init>:
	}
}

/*Function definition ----------------------------------------------------*/
void SysTick_Init(uint32_t ticks){
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b082      	sub	sp, #8
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
	SysTick->CTRL = 0;
 80002f8:	4b09      	ldr	r3, [pc, #36]	; (8000320 <SysTick_Init+0x30>)
 80002fa:	2200      	movs	r2, #0
 80002fc:	601a      	str	r2, [r3, #0]
	SysTick->LOAD = ticks - 1;
 80002fe:	4b08      	ldr	r3, [pc, #32]	; (8000320 <SysTick_Init+0x30>)
 8000300:	687a      	ldr	r2, [r7, #4]
 8000302:	3a01      	subs	r2, #1
 8000304:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 8000306:	4b06      	ldr	r3, [pc, #24]	; (8000320 <SysTick_Init+0x30>)
 8000308:	2200      	movs	r2, #0
 800030a:	609a      	str	r2, [r3, #8]

	SysTick->CTRL |= SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
 800030c:	4b04      	ldr	r3, [pc, #16]	; (8000320 <SysTick_Init+0x30>)
 800030e:	681a      	ldr	r2, [r3, #0]
 8000310:	4b03      	ldr	r3, [pc, #12]	; (8000320 <SysTick_Init+0x30>)
 8000312:	2105      	movs	r1, #5
 8000314:	430a      	orrs	r2, r1
 8000316:	601a      	str	r2, [r3, #0]

	return;
 8000318:	46c0      	nop			; (mov r8, r8)
}
 800031a:	46bd      	mov	sp, r7
 800031c:	b002      	add	sp, #8
 800031e:	bd80      	pop	{r7, pc}
 8000320:	e000e010 	.word	0xe000e010

08000324 <delay_ms>:

void delay_ms(uint32_t delay){
 8000324:	b580      	push	{r7, lr}
 8000326:	b084      	sub	sp, #16
 8000328:	af00      	add	r7, sp, #0
 800032a:	6078      	str	r0, [r7, #4]
	SysTick->VAL = 0;
 800032c:	4b0c      	ldr	r3, [pc, #48]	; (8000360 <delay_ms+0x3c>)
 800032e:	2200      	movs	r2, #0
 8000330:	609a      	str	r2, [r3, #8]
	for(uint32_t i = 0; i < delay; i++){
 8000332:	2300      	movs	r3, #0
 8000334:	60fb      	str	r3, [r7, #12]
 8000336:	e009      	b.n	800034c <delay_ms+0x28>
		while(!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk));
 8000338:	46c0      	nop			; (mov r8, r8)
 800033a:	4b09      	ldr	r3, [pc, #36]	; (8000360 <delay_ms+0x3c>)
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	2380      	movs	r3, #128	; 0x80
 8000340:	025b      	lsls	r3, r3, #9
 8000342:	4013      	ands	r3, r2
 8000344:	d0f9      	beq.n	800033a <delay_ms+0x16>
	for(uint32_t i = 0; i < delay; i++){
 8000346:	68fb      	ldr	r3, [r7, #12]
 8000348:	3301      	adds	r3, #1
 800034a:	60fb      	str	r3, [r7, #12]
 800034c:	68fa      	ldr	r2, [r7, #12]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	429a      	cmp	r2, r3
 8000352:	d3f1      	bcc.n	8000338 <delay_ms+0x14>

	}
}
 8000354:	46c0      	nop			; (mov r8, r8)
 8000356:	46c0      	nop			; (mov r8, r8)
 8000358:	46bd      	mov	sp, r7
 800035a:	b004      	add	sp, #16
 800035c:	bd80      	pop	{r7, pc}
 800035e:	46c0      	nop			; (mov r8, r8)
 8000360:	e000e010 	.word	0xe000e010

08000364 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000364:	b580      	push	{r7, lr}
 8000366:	af00      	add	r7, sp, #0
  
  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8000368:	4b03      	ldr	r3, [pc, #12]	; (8000378 <SystemInit+0x14>)
 800036a:	2280      	movs	r2, #128	; 0x80
 800036c:	0512      	lsls	r2, r2, #20
 800036e:	609a      	str	r2, [r3, #8]
#endif
}
 8000370:	46c0      	nop			; (mov r8, r8)
 8000372:	46bd      	mov	sp, r7
 8000374:	bd80      	pop	{r7, pc}
 8000376:	46c0      	nop			; (mov r8, r8)
 8000378:	e000ed00 	.word	0xe000ed00

0800037c <SystemCoreClockUpdate>:
  *
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 800037c:	b580      	push	{r7, lr}
 800037e:	b082      	sub	sp, #8
 8000380:	af00      	add	r7, sp, #0
  uint32_t tmp;
  uint32_t hsidiv;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8000382:	4b1f      	ldr	r3, [pc, #124]	; (8000400 <SystemCoreClockUpdate+0x84>)
 8000384:	689b      	ldr	r3, [r3, #8]
 8000386:	2238      	movs	r2, #56	; 0x38
 8000388:	4013      	ands	r3, r2
 800038a:	2b20      	cmp	r3, #32
 800038c:	d00e      	beq.n	80003ac <SystemCoreClockUpdate+0x30>
 800038e:	d812      	bhi.n	80003b6 <SystemCoreClockUpdate+0x3a>
 8000390:	2b08      	cmp	r3, #8
 8000392:	d002      	beq.n	800039a <SystemCoreClockUpdate+0x1e>
 8000394:	2b18      	cmp	r3, #24
 8000396:	d004      	beq.n	80003a2 <SystemCoreClockUpdate+0x26>
 8000398:	e00d      	b.n	80003b6 <SystemCoreClockUpdate+0x3a>
  {
    case RCC_CFGR_SWS_0:                /* HSE used as system clock */
      SystemCoreClock = HSE_VALUE;
 800039a:	4b1a      	ldr	r3, [pc, #104]	; (8000404 <SystemCoreClockUpdate+0x88>)
 800039c:	4a1a      	ldr	r2, [pc, #104]	; (8000408 <SystemCoreClockUpdate+0x8c>)
 800039e:	601a      	str	r2, [r3, #0]
      break;
 80003a0:	e01b      	b.n	80003da <SystemCoreClockUpdate+0x5e>

    case (RCC_CFGR_SWS_1 | RCC_CFGR_SWS_0):  /* LSI used as system clock */
      SystemCoreClock = LSI_VALUE;
 80003a2:	4b18      	ldr	r3, [pc, #96]	; (8000404 <SystemCoreClockUpdate+0x88>)
 80003a4:	22fa      	movs	r2, #250	; 0xfa
 80003a6:	01d2      	lsls	r2, r2, #7
 80003a8:	601a      	str	r2, [r3, #0]
      break;
 80003aa:	e016      	b.n	80003da <SystemCoreClockUpdate+0x5e>

    case RCC_CFGR_SWS_2:                /* LSE used as system clock */
      SystemCoreClock = LSE_VALUE;
 80003ac:	4b15      	ldr	r3, [pc, #84]	; (8000404 <SystemCoreClockUpdate+0x88>)
 80003ae:	2280      	movs	r2, #128	; 0x80
 80003b0:	0212      	lsls	r2, r2, #8
 80003b2:	601a      	str	r2, [r3, #0]
      break;
 80003b4:	e011      	b.n	80003da <SystemCoreClockUpdate+0x5e>

    case 0x00000000U:                   /* HSI used as system clock */
    default:                            /* HSI used as system clock */
      hsidiv = (1UL << ((READ_BIT(RCC->CR, RCC_CR_HSIDIV))>> RCC_CR_HSIDIV_Pos));
 80003b6:	4b12      	ldr	r3, [pc, #72]	; (8000400 <SystemCoreClockUpdate+0x84>)
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	0adb      	lsrs	r3, r3, #11
 80003bc:	2207      	movs	r2, #7
 80003be:	4013      	ands	r3, r2
 80003c0:	2201      	movs	r2, #1
 80003c2:	409a      	lsls	r2, r3
 80003c4:	0013      	movs	r3, r2
 80003c6:	607b      	str	r3, [r7, #4]
      SystemCoreClock = (HSI_VALUE/hsidiv);
 80003c8:	6879      	ldr	r1, [r7, #4]
 80003ca:	480f      	ldr	r0, [pc, #60]	; (8000408 <SystemCoreClockUpdate+0x8c>)
 80003cc:	f7ff fe96 	bl	80000fc <__udivsi3>
 80003d0:	0003      	movs	r3, r0
 80003d2:	001a      	movs	r2, r3
 80003d4:	4b0b      	ldr	r3, [pc, #44]	; (8000404 <SystemCoreClockUpdate+0x88>)
 80003d6:	601a      	str	r2, [r3, #0]
      break;
 80003d8:	46c0      	nop			; (mov r8, r8)
  }
  /* Compute HCLK clock frequency --------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 80003da:	4b09      	ldr	r3, [pc, #36]	; (8000400 <SystemCoreClockUpdate+0x84>)
 80003dc:	689b      	ldr	r3, [r3, #8]
 80003de:	0a1b      	lsrs	r3, r3, #8
 80003e0:	220f      	movs	r2, #15
 80003e2:	401a      	ands	r2, r3
 80003e4:	4b09      	ldr	r3, [pc, #36]	; (800040c <SystemCoreClockUpdate+0x90>)
 80003e6:	0092      	lsls	r2, r2, #2
 80003e8:	58d3      	ldr	r3, [r2, r3]
 80003ea:	603b      	str	r3, [r7, #0]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;
 80003ec:	4b05      	ldr	r3, [pc, #20]	; (8000404 <SystemCoreClockUpdate+0x88>)
 80003ee:	681a      	ldr	r2, [r3, #0]
 80003f0:	683b      	ldr	r3, [r7, #0]
 80003f2:	40da      	lsrs	r2, r3
 80003f4:	4b03      	ldr	r3, [pc, #12]	; (8000404 <SystemCoreClockUpdate+0x88>)
 80003f6:	601a      	str	r2, [r3, #0]
}
 80003f8:	46c0      	nop			; (mov r8, r8)
 80003fa:	46bd      	mov	sp, r7
 80003fc:	b002      	add	sp, #8
 80003fe:	bd80      	pop	{r7, pc}
 8000400:	40021000 	.word	0x40021000
 8000404:	20000000 	.word	0x20000000
 8000408:	02dc6c00 	.word	0x02dc6c00
 800040c:	080004c4 	.word	0x080004c4

08000410 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000410:	480d      	ldr	r0, [pc, #52]	; (8000448 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000412:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000414:	f7ff ffa6 	bl	8000364 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000418:	480c      	ldr	r0, [pc, #48]	; (800044c <LoopForever+0x6>)
  ldr r1, =_edata
 800041a:	490d      	ldr	r1, [pc, #52]	; (8000450 <LoopForever+0xa>)
  ldr r2, =_sidata
 800041c:	4a0d      	ldr	r2, [pc, #52]	; (8000454 <LoopForever+0xe>)
  movs r3, #0
 800041e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000420:	e002      	b.n	8000428 <LoopCopyDataInit>

08000422 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000422:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000424:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000426:	3304      	adds	r3, #4

08000428 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000428:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800042a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800042c:	d3f9      	bcc.n	8000422 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800042e:	4a0a      	ldr	r2, [pc, #40]	; (8000458 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000430:	4c0a      	ldr	r4, [pc, #40]	; (800045c <LoopForever+0x16>)
  movs r3, #0
 8000432:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000434:	e001      	b.n	800043a <LoopFillZerobss>

08000436 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000436:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000438:	3204      	adds	r2, #4

0800043a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800043a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800043c:	d3fb      	bcc.n	8000436 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800043e:	f000 f811 	bl	8000464 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000442:	f7ff fee7 	bl	8000214 <main>

08000446 <LoopForever>:

LoopForever:
  b LoopForever
 8000446:	e7fe      	b.n	8000446 <LoopForever>
  ldr   r0, =_estack
 8000448:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 800044c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000450:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000454:	0800050c 	.word	0x0800050c
  ldr r2, =_sbss
 8000458:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 800045c:	20000020 	.word	0x20000020

08000460 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000460:	e7fe      	b.n	8000460 <ADC_IRQHandler>
	...

08000464 <__libc_init_array>:
 8000464:	b570      	push	{r4, r5, r6, lr}
 8000466:	2600      	movs	r6, #0
 8000468:	4c0c      	ldr	r4, [pc, #48]	; (800049c <__libc_init_array+0x38>)
 800046a:	4d0d      	ldr	r5, [pc, #52]	; (80004a0 <__libc_init_array+0x3c>)
 800046c:	1b64      	subs	r4, r4, r5
 800046e:	10a4      	asrs	r4, r4, #2
 8000470:	42a6      	cmp	r6, r4
 8000472:	d109      	bne.n	8000488 <__libc_init_array+0x24>
 8000474:	2600      	movs	r6, #0
 8000476:	f000 f819 	bl	80004ac <_init>
 800047a:	4c0a      	ldr	r4, [pc, #40]	; (80004a4 <__libc_init_array+0x40>)
 800047c:	4d0a      	ldr	r5, [pc, #40]	; (80004a8 <__libc_init_array+0x44>)
 800047e:	1b64      	subs	r4, r4, r5
 8000480:	10a4      	asrs	r4, r4, #2
 8000482:	42a6      	cmp	r6, r4
 8000484:	d105      	bne.n	8000492 <__libc_init_array+0x2e>
 8000486:	bd70      	pop	{r4, r5, r6, pc}
 8000488:	00b3      	lsls	r3, r6, #2
 800048a:	58eb      	ldr	r3, [r5, r3]
 800048c:	4798      	blx	r3
 800048e:	3601      	adds	r6, #1
 8000490:	e7ee      	b.n	8000470 <__libc_init_array+0xc>
 8000492:	00b3      	lsls	r3, r6, #2
 8000494:	58eb      	ldr	r3, [r5, r3]
 8000496:	4798      	blx	r3
 8000498:	3601      	adds	r6, #1
 800049a:	e7f2      	b.n	8000482 <__libc_init_array+0x1e>
 800049c:	08000504 	.word	0x08000504
 80004a0:	08000504 	.word	0x08000504
 80004a4:	08000508 	.word	0x08000508
 80004a8:	08000504 	.word	0x08000504

080004ac <_init>:
 80004ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ae:	46c0      	nop			; (mov r8, r8)
 80004b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004b2:	bc08      	pop	{r3}
 80004b4:	469e      	mov	lr, r3
 80004b6:	4770      	bx	lr

080004b8 <_fini>:
 80004b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ba:	46c0      	nop			; (mov r8, r8)
 80004bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004be:	bc08      	pop	{r3}
 80004c0:	469e      	mov	lr, r3
 80004c2:	4770      	bx	lr
