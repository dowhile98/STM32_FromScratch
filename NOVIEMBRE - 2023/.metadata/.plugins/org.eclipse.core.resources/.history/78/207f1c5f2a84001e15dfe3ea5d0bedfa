/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>

/**
 * VAR = 0xFAB  -> BIT7 es  1
 * 1000 0000->0x80
 * &  -> (VAR & 0x80)  -> (VAR & 1<<7)
 * 						-> (VAR>>7 & 1)
 * |
 * ~

 * >>   Significa  una division de 2 ^ n
 * 0b10000>>2  -> 0b100 = 4
 * 16/2^2 = 4
 * 3<<2 -> 3 * 2^2 -> 11<<2  -> 1100 -> 12
 *         2 * 4 -> 12
 */
#define GPIOA_BASE 0x40020000
#define GPIOA_MODER (*(volatile uint32_t*)(GPIOA_BASE))


int sum(int x, int y){
	int z = x + y;
	return z;
}

int main(void)
{
	volatile uint32_t *p = (volatile uint32_t*)GPIOA_BASE;
	GPIOA_MODER |= 1<<3;

	*p |= 1<<3;
    /* Loop forever */

	sum(3, 4);
	for(;;);
}
