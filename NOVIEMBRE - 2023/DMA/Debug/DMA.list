
DMA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004070  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000394  08004220  08004220  00014220  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080045b4  080045b4  00020210  2**0
                  CONTENTS
  4 .ARM          00000000  080045b4  080045b4  00020210  2**0
                  CONTENTS
  5 .preinit_array 00000000  080045b4  080045b4  00020210  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080045b4  080045b4  000145b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080045b8  080045b8  000145b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000210  20000000  080045bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020210  2**0
                  CONTENTS
 10 .bss          000002fc  20000210  20000210  00020210  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000050c  2000050c  00020210  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020210  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020240  2**0
                  CONTENTS, READONLY
 14 .debug_info   00002825  00000000  00000000  00020283  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000b12  00000000  00000000  00022aa8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000228  00000000  00000000  000235c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000185  00000000  00000000  000237e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  0001ae85  00000000  00000000  0002396d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00003c80  00000000  00000000  0003e7f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0009a832  00000000  00000000  00042472  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000172c  00000000  00000000  000dcca4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000076  00000000  00000000  000de3d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000210 	.word	0x20000210
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08004208 	.word	0x08004208

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000214 	.word	0x20000214
 80001ec:	08004208 	.word	0x08004208

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <strlen>:
 8000290:	4603      	mov	r3, r0
 8000292:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000296:	2a00      	cmp	r2, #0
 8000298:	d1fb      	bne.n	8000292 <strlen+0x2>
 800029a:	1a18      	subs	r0, r3, r0
 800029c:	3801      	subs	r0, #1
 800029e:	4770      	bx	lr

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <arm_biquad_cascade_df1_f32>:
void arm_biquad_cascade_df1_f32(
  const arm_biquad_casd_df1_inst_f32 * S,
  float32_t * pSrc,
  float32_t * pDst,
  uint32_t blockSize)
{
 8000bc8:	b480      	push	{r7}
 8000bca:	b097      	sub	sp, #92	; 0x5c
 8000bcc:	af00      	add	r7, sp, #0
 8000bce:	60f8      	str	r0, [r7, #12]
 8000bd0:	60b9      	str	r1, [r7, #8]
 8000bd2:	607a      	str	r2, [r7, #4]
 8000bd4:	603b      	str	r3, [r7, #0]
  float32_t *pIn = pSrc;                         /*  source pointer            */
 8000bd6:	68bb      	ldr	r3, [r7, #8]
 8000bd8:	657b      	str	r3, [r7, #84]	; 0x54
  float32_t *pOut = pDst;                        /*  destination pointer       */
 8000bda:	687b      	ldr	r3, [r7, #4]
 8000bdc:	653b      	str	r3, [r7, #80]	; 0x50
  float32_t *pState = S->pState;                 /*  pState pointer            */
 8000bde:	68fb      	ldr	r3, [r7, #12]
 8000be0:	685b      	ldr	r3, [r3, #4]
 8000be2:	64fb      	str	r3, [r7, #76]	; 0x4c
  float32_t *pCoeffs = S->pCoeffs;               /*  coefficient pointer       */
 8000be4:	68fb      	ldr	r3, [r7, #12]
 8000be6:	689b      	ldr	r3, [r3, #8]
 8000be8:	64bb      	str	r3, [r7, #72]	; 0x48
  float32_t acc;                                 /*  Simulates the accumulator */
  float32_t b0, b1, b2, a1, a2;                  /*  Filter coefficients       */
  float32_t Xn1, Xn2, Yn1, Yn2;                  /*  Filter pState variables   */
  float32_t Xn;                                  /*  temporary input           */
  uint32_t sample, stage = S->numStages;         /*  loop counters             */
 8000bea:	68fb      	ldr	r3, [r7, #12]
 8000bec:	681b      	ldr	r3, [r3, #0]
 8000bee:	633b      	str	r3, [r7, #48]	; 0x30
  /* Run the below code for Cortex-M4 and Cortex-M3 */

  do
  {
    /* Reading the coefficients */
    b0 = *pCoeffs++;
 8000bf0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000bf2:	1d1a      	adds	r2, r3, #4
 8000bf4:	64ba      	str	r2, [r7, #72]	; 0x48
 8000bf6:	681b      	ldr	r3, [r3, #0]
 8000bf8:	62fb      	str	r3, [r7, #44]	; 0x2c
    b1 = *pCoeffs++;
 8000bfa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000bfc:	1d1a      	adds	r2, r3, #4
 8000bfe:	64ba      	str	r2, [r7, #72]	; 0x48
 8000c00:	681b      	ldr	r3, [r3, #0]
 8000c02:	62bb      	str	r3, [r7, #40]	; 0x28
    b2 = *pCoeffs++;
 8000c04:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000c06:	1d1a      	adds	r2, r3, #4
 8000c08:	64ba      	str	r2, [r7, #72]	; 0x48
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	627b      	str	r3, [r7, #36]	; 0x24
    a1 = *pCoeffs++;
 8000c0e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000c10:	1d1a      	adds	r2, r3, #4
 8000c12:	64ba      	str	r2, [r7, #72]	; 0x48
 8000c14:	681b      	ldr	r3, [r3, #0]
 8000c16:	623b      	str	r3, [r7, #32]
    a2 = *pCoeffs++;
 8000c18:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8000c1a:	1d1a      	adds	r2, r3, #4
 8000c1c:	64ba      	str	r2, [r7, #72]	; 0x48
 8000c1e:	681b      	ldr	r3, [r3, #0]
 8000c20:	61fb      	str	r3, [r7, #28]

    /* Reading the pState values */
    Xn1 = pState[0];
 8000c22:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	647b      	str	r3, [r7, #68]	; 0x44
    Xn2 = pState[1];
 8000c28:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000c2a:	685b      	ldr	r3, [r3, #4]
 8000c2c:	643b      	str	r3, [r7, #64]	; 0x40
    Yn1 = pState[2];
 8000c2e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000c30:	689b      	ldr	r3, [r3, #8]
 8000c32:	63fb      	str	r3, [r7, #60]	; 0x3c
    Yn2 = pState[3];
 8000c34:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000c36:	68db      	ldr	r3, [r3, #12]
 8000c38:	63bb      	str	r3, [r7, #56]	; 0x38
     *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
     *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
     *    acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1]   + a2 * y[n-2]
     */

    sample = blockSize >> 2U;
 8000c3a:	683b      	ldr	r3, [r7, #0]
 8000c3c:	089b      	lsrs	r3, r3, #2
 8000c3e:	637b      	str	r3, [r7, #52]	; 0x34

    /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
     ** a second loop below computes the remaining 1 to 3 samples. */
    while (sample > 0U)
 8000c40:	e0ce      	b.n	8000de0 <arm_biquad_cascade_df1_f32+0x218>
    {
      /* Read the first input */
      Xn = *pIn++;
 8000c42:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000c44:	1d1a      	adds	r2, r3, #4
 8000c46:	657a      	str	r2, [r7, #84]	; 0x54
 8000c48:	681b      	ldr	r3, [r3, #0]
 8000c4a:	61bb      	str	r3, [r7, #24]

      /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
      Yn2 = (b0 * Xn) + (b1 * Xn1) + (b2 * Xn2) + (a1 * Yn1) + (a2 * Yn2);
 8000c4c:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8000c50:	edd7 7a06 	vldr	s15, [r7, #24]
 8000c54:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000c58:	edd7 6a0a 	vldr	s13, [r7, #40]	; 0x28
 8000c5c:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000c60:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000c64:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000c68:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 8000c6c:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000c70:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000c74:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000c78:	edd7 6a08 	vldr	s13, [r7, #32]
 8000c7c:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000c80:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000c84:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000c88:	edd7 6a07 	vldr	s13, [r7, #28]
 8000c8c:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000c90:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000c94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000c98:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38

      /* Store the result in the accumulator in the destination buffer. */
      *pOut++ = Yn2;
 8000c9c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000c9e:	1d1a      	adds	r2, r3, #4
 8000ca0:	653a      	str	r2, [r7, #80]	; 0x50
 8000ca2:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8000ca4:	601a      	str	r2, [r3, #0]
      /* Xn1 = Xn     */
      /* Yn2 = Yn1    */
      /* Yn1 = acc   */

      /* Read the second input */
      Xn2 = *pIn++;
 8000ca6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000ca8:	1d1a      	adds	r2, r3, #4
 8000caa:	657a      	str	r2, [r7, #84]	; 0x54
 8000cac:	681b      	ldr	r3, [r3, #0]
 8000cae:	643b      	str	r3, [r7, #64]	; 0x40

      /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
      Yn1 = (b0 * Xn2) + (b1 * Xn) + (b2 * Xn1) + (a1 * Yn2) + (a2 * Yn1);
 8000cb0:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8000cb4:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000cb8:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000cbc:	edd7 6a0a 	vldr	s13, [r7, #40]	; 0x28
 8000cc0:	edd7 7a06 	vldr	s15, [r7, #24]
 8000cc4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000cc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000ccc:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 8000cd0:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000cd4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000cd8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000cdc:	edd7 6a08 	vldr	s13, [r7, #32]
 8000ce0:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000ce4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000ce8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000cec:	edd7 6a07 	vldr	s13, [r7, #28]
 8000cf0:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000cf4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000cf8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000cfc:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c

      /* Store the result in the accumulator in the destination buffer. */
      *pOut++ = Yn1;
 8000d00:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000d02:	1d1a      	adds	r2, r3, #4
 8000d04:	653a      	str	r2, [r7, #80]	; 0x50
 8000d06:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8000d08:	601a      	str	r2, [r3, #0]
      /* Xn1 = Xn     */
      /* Yn2 = Yn1    */
      /* Yn1 = acc   */

      /* Read the third input */
      Xn1 = *pIn++;
 8000d0a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000d0c:	1d1a      	adds	r2, r3, #4
 8000d0e:	657a      	str	r2, [r7, #84]	; 0x54
 8000d10:	681b      	ldr	r3, [r3, #0]
 8000d12:	647b      	str	r3, [r7, #68]	; 0x44

      /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
      Yn2 = (b0 * Xn1) + (b1 * Xn2) + (b2 * Xn) + (a1 * Yn1) + (a2 * Yn2);
 8000d14:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8000d18:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000d1c:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000d20:	edd7 6a0a 	vldr	s13, [r7, #40]	; 0x28
 8000d24:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000d28:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000d2c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000d30:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 8000d34:	edd7 7a06 	vldr	s15, [r7, #24]
 8000d38:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000d3c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000d40:	edd7 6a08 	vldr	s13, [r7, #32]
 8000d44:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000d48:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000d4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000d50:	edd7 6a07 	vldr	s13, [r7, #28]
 8000d54:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000d58:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000d5c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000d60:	edc7 7a0e 	vstr	s15, [r7, #56]	; 0x38

      /* Store the result in the accumulator in the destination buffer. */
      *pOut++ = Yn2;
 8000d64:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000d66:	1d1a      	adds	r2, r3, #4
 8000d68:	653a      	str	r2, [r7, #80]	; 0x50
 8000d6a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8000d6c:	601a      	str	r2, [r3, #0]
      /* Xn1 = Xn     */
      /* Yn2 = Yn1    */
      /* Yn1 = acc   */

      /* Read the forth input */
      Xn = *pIn++;
 8000d6e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000d70:	1d1a      	adds	r2, r3, #4
 8000d72:	657a      	str	r2, [r7, #84]	; 0x54
 8000d74:	681b      	ldr	r3, [r3, #0]
 8000d76:	61bb      	str	r3, [r7, #24]

      /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
      Yn1 = (b0 * Xn) + (b1 * Xn1) + (b2 * Xn2) + (a1 * Yn2) + (a2 * Yn1);
 8000d78:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8000d7c:	edd7 7a06 	vldr	s15, [r7, #24]
 8000d80:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000d84:	edd7 6a0a 	vldr	s13, [r7, #40]	; 0x28
 8000d88:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000d8c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000d90:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000d94:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 8000d98:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000d9c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000da0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000da4:	edd7 6a08 	vldr	s13, [r7, #32]
 8000da8:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000dac:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000db0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000db4:	edd7 6a07 	vldr	s13, [r7, #28]
 8000db8:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000dbc:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000dc0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000dc4:	edc7 7a0f 	vstr	s15, [r7, #60]	; 0x3c

      /* Store the result in the accumulator in the destination buffer. */
      *pOut++ = Yn1;
 8000dc8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000dca:	1d1a      	adds	r2, r3, #4
 8000dcc:	653a      	str	r2, [r7, #80]	; 0x50
 8000dce:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8000dd0:	601a      	str	r2, [r3, #0]
      /* The states should be updated as:  */
      /* Xn2 = Xn1    */
      /* Xn1 = Xn     */
      /* Yn2 = Yn1    */
      /* Yn1 = acc   */
      Xn2 = Xn1;
 8000dd2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000dd4:	643b      	str	r3, [r7, #64]	; 0x40
      Xn1 = Xn;
 8000dd6:	69bb      	ldr	r3, [r7, #24]
 8000dd8:	647b      	str	r3, [r7, #68]	; 0x44

      /* decrement the loop counter */
      sample--;
 8000dda:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000ddc:	3b01      	subs	r3, #1
 8000dde:	637b      	str	r3, [r7, #52]	; 0x34
    while (sample > 0U)
 8000de0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	f47f af2d 	bne.w	8000c42 <arm_biquad_cascade_df1_f32+0x7a>

    }

    /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
     ** No loop unrolling is used. */
    sample = blockSize & 0x3U;
 8000de8:	683b      	ldr	r3, [r7, #0]
 8000dea:	f003 0303 	and.w	r3, r3, #3
 8000dee:	637b      	str	r3, [r7, #52]	; 0x34

    while (sample > 0U)
 8000df0:	e03c      	b.n	8000e6c <arm_biquad_cascade_df1_f32+0x2a4>
    {
      /* Read the input */
      Xn = *pIn++;
 8000df2:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8000df4:	1d1a      	adds	r2, r3, #4
 8000df6:	657a      	str	r2, [r7, #84]	; 0x54
 8000df8:	681b      	ldr	r3, [r3, #0]
 8000dfa:	61bb      	str	r3, [r7, #24]

      /* acc =  b0 * x[n] + b1 * x[n-1] + b2 * x[n-2] + a1 * y[n-1] + a2 * y[n-2] */
      acc = (b0 * Xn) + (b1 * Xn1) + (b2 * Xn2) + (a1 * Yn1) + (a2 * Yn2);
 8000dfc:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 8000e00:	edd7 7a06 	vldr	s15, [r7, #24]
 8000e04:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000e08:	edd7 6a0a 	vldr	s13, [r7, #40]	; 0x28
 8000e0c:	edd7 7a11 	vldr	s15, [r7, #68]	; 0x44
 8000e10:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e14:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000e18:	edd7 6a09 	vldr	s13, [r7, #36]	; 0x24
 8000e1c:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8000e20:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e24:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000e28:	edd7 6a08 	vldr	s13, [r7, #32]
 8000e2c:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 8000e30:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e34:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000e38:	edd7 6a07 	vldr	s13, [r7, #28]
 8000e3c:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8000e40:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000e44:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000e48:	edc7 7a05 	vstr	s15, [r7, #20]

      /* Store the result in the accumulator in the destination buffer. */
      *pOut++ = acc;
 8000e4c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000e4e:	1d1a      	adds	r2, r3, #4
 8000e50:	653a      	str	r2, [r7, #80]	; 0x50
 8000e52:	697a      	ldr	r2, [r7, #20]
 8000e54:	601a      	str	r2, [r3, #0]
      /* The states should be updated as:    */
      /* Xn2 = Xn1    */
      /* Xn1 = Xn     */
      /* Yn2 = Yn1    */
      /* Yn1 = acc   */
      Xn2 = Xn1;
 8000e56:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000e58:	643b      	str	r3, [r7, #64]	; 0x40
      Xn1 = Xn;
 8000e5a:	69bb      	ldr	r3, [r7, #24]
 8000e5c:	647b      	str	r3, [r7, #68]	; 0x44
      Yn2 = Yn1;
 8000e5e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000e60:	63bb      	str	r3, [r7, #56]	; 0x38
      Yn1 = acc;
 8000e62:	697b      	ldr	r3, [r7, #20]
 8000e64:	63fb      	str	r3, [r7, #60]	; 0x3c

      /* decrement the loop counter */
      sample--;
 8000e66:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000e68:	3b01      	subs	r3, #1
 8000e6a:	637b      	str	r3, [r7, #52]	; 0x34
    while (sample > 0U)
 8000e6c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000e6e:	2b00      	cmp	r3, #0
 8000e70:	d1bf      	bne.n	8000df2 <arm_biquad_cascade_df1_f32+0x22a>

    }

    /*  Store the updated state variables back into the pState array */
    *pState++ = Xn1;
 8000e72:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000e74:	1d1a      	adds	r2, r3, #4
 8000e76:	64fa      	str	r2, [r7, #76]	; 0x4c
 8000e78:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8000e7a:	601a      	str	r2, [r3, #0]
    *pState++ = Xn2;
 8000e7c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000e7e:	1d1a      	adds	r2, r3, #4
 8000e80:	64fa      	str	r2, [r7, #76]	; 0x4c
 8000e82:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8000e84:	601a      	str	r2, [r3, #0]
    *pState++ = Yn1;
 8000e86:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000e88:	1d1a      	adds	r2, r3, #4
 8000e8a:	64fa      	str	r2, [r7, #76]	; 0x4c
 8000e8c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8000e8e:	601a      	str	r2, [r3, #0]
    *pState++ = Yn2;
 8000e90:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8000e92:	1d1a      	adds	r2, r3, #4
 8000e94:	64fa      	str	r2, [r7, #76]	; 0x4c
 8000e96:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8000e98:	601a      	str	r2, [r3, #0]

    /*  The first stage goes from the input buffer to the output buffer. */
    /*  Subsequent numStages  occur in-place in the output buffer */
    pIn = pDst;
 8000e9a:	687b      	ldr	r3, [r7, #4]
 8000e9c:	657b      	str	r3, [r7, #84]	; 0x54

    /* Reset the output pointer */
    pOut = pDst;
 8000e9e:	687b      	ldr	r3, [r7, #4]
 8000ea0:	653b      	str	r3, [r7, #80]	; 0x50

    /* decrement the loop counter */
    stage--;
 8000ea2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000ea4:	3b01      	subs	r3, #1
 8000ea6:	633b      	str	r3, [r7, #48]	; 0x30

  } while (stage > 0U);
 8000ea8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	f47f aea0 	bne.w	8000bf0 <arm_biquad_cascade_df1_f32+0x28>

  } while (stage > 0U);

#endif /* #if defined (ARM_MATH_DSP) */

}
 8000eb0:	bf00      	nop
 8000eb2:	bf00      	nop
 8000eb4:	375c      	adds	r7, #92	; 0x5c
 8000eb6:	46bd      	mov	sp, r7
 8000eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ebc:	4770      	bx	lr

08000ebe <arm_biquad_cascade_df1_init_f32>:
void arm_biquad_cascade_df1_init_f32(
  arm_biquad_casd_df1_inst_f32 * S,
  uint8_t numStages,
  float32_t * pCoeffs,
  float32_t * pState)
{
 8000ebe:	b580      	push	{r7, lr}
 8000ec0:	b084      	sub	sp, #16
 8000ec2:	af00      	add	r7, sp, #0
 8000ec4:	60f8      	str	r0, [r7, #12]
 8000ec6:	607a      	str	r2, [r7, #4]
 8000ec8:	603b      	str	r3, [r7, #0]
 8000eca:	460b      	mov	r3, r1
 8000ecc:	72fb      	strb	r3, [r7, #11]
  /* Assign filter stages */
  S->numStages = numStages;
 8000ece:	7afa      	ldrb	r2, [r7, #11]
 8000ed0:	68fb      	ldr	r3, [r7, #12]
 8000ed2:	601a      	str	r2, [r3, #0]

  /* Assign coefficient pointer */
  S->pCoeffs = pCoeffs;
 8000ed4:	68fb      	ldr	r3, [r7, #12]
 8000ed6:	687a      	ldr	r2, [r7, #4]
 8000ed8:	609a      	str	r2, [r3, #8]

  /* Clear state buffer and size is always 4 * numStages */
  memset(pState, 0, (4U * (uint32_t) numStages) * sizeof(float32_t));
 8000eda:	7afb      	ldrb	r3, [r7, #11]
 8000edc:	011b      	lsls	r3, r3, #4
 8000ede:	461a      	mov	r2, r3
 8000ee0:	2100      	movs	r1, #0
 8000ee2:	6838      	ldr	r0, [r7, #0]
 8000ee4:	f001 fad2 	bl	800248c <memset>

  /* Assign state pointer */
  S->pState = pState;
 8000ee8:	68fb      	ldr	r3, [r7, #12]
 8000eea:	683a      	ldr	r2, [r7, #0]
 8000eec:	605a      	str	r2, [r3, #4]
}
 8000eee:	bf00      	nop
 8000ef0:	3710      	adds	r7, #16
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	bd80      	pop	{r7, pc}
	...

08000ef8 <tickInc>:
 */
#include "delay.h"

volatile uint32_t ticks = 0;

void tickInc(uint32_t i){
 8000ef8:	b480      	push	{r7}
 8000efa:	b083      	sub	sp, #12
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
    ticks += i;
 8000f00:	4b05      	ldr	r3, [pc, #20]	; (8000f18 <tickInc+0x20>)
 8000f02:	681a      	ldr	r2, [r3, #0]
 8000f04:	687b      	ldr	r3, [r7, #4]
 8000f06:	4413      	add	r3, r2
 8000f08:	4a03      	ldr	r2, [pc, #12]	; (8000f18 <tickInc+0x20>)
 8000f0a:	6013      	str	r3, [r2, #0]
}
 8000f0c:	bf00      	nop
 8000f0e:	370c      	adds	r7, #12
 8000f10:	46bd      	mov	sp, r7
 8000f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f16:	4770      	bx	lr
 8000f18:	2000022c 	.word	0x2000022c

08000f1c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000f1c:	b480      	push	{r7}
 8000f1e:	b083      	sub	sp, #12
 8000f20:	af00      	add	r7, sp, #0
 8000f22:	4603      	mov	r3, r0
 8000f24:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f26:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f2a:	2b00      	cmp	r3, #0
 8000f2c:	db0b      	blt.n	8000f46 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f2e:	79fb      	ldrb	r3, [r7, #7]
 8000f30:	f003 021f 	and.w	r2, r3, #31
 8000f34:	4907      	ldr	r1, [pc, #28]	; (8000f54 <__NVIC_EnableIRQ+0x38>)
 8000f36:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f3a:	095b      	lsrs	r3, r3, #5
 8000f3c:	2001      	movs	r0, #1
 8000f3e:	fa00 f202 	lsl.w	r2, r0, r2
 8000f42:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000f46:	bf00      	nop
 8000f48:	370c      	adds	r7, #12
 8000f4a:	46bd      	mov	sp, r7
 8000f4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f50:	4770      	bx	lr
 8000f52:	bf00      	nop
 8000f54:	e000e100 	.word	0xe000e100

08000f58 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000f58:	b480      	push	{r7}
 8000f5a:	b083      	sub	sp, #12
 8000f5c:	af00      	add	r7, sp, #0
 8000f5e:	4603      	mov	r3, r0
 8000f60:	6039      	str	r1, [r7, #0]
 8000f62:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000f64:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f68:	2b00      	cmp	r3, #0
 8000f6a:	db0a      	blt.n	8000f82 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f6c:	683b      	ldr	r3, [r7, #0]
 8000f6e:	b2da      	uxtb	r2, r3
 8000f70:	490c      	ldr	r1, [pc, #48]	; (8000fa4 <__NVIC_SetPriority+0x4c>)
 8000f72:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f76:	0112      	lsls	r2, r2, #4
 8000f78:	b2d2      	uxtb	r2, r2
 8000f7a:	440b      	add	r3, r1
 8000f7c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000f80:	e00a      	b.n	8000f98 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f82:	683b      	ldr	r3, [r7, #0]
 8000f84:	b2da      	uxtb	r2, r3
 8000f86:	4908      	ldr	r1, [pc, #32]	; (8000fa8 <__NVIC_SetPriority+0x50>)
 8000f88:	79fb      	ldrb	r3, [r7, #7]
 8000f8a:	f003 030f 	and.w	r3, r3, #15
 8000f8e:	3b04      	subs	r3, #4
 8000f90:	0112      	lsls	r2, r2, #4
 8000f92:	b2d2      	uxtb	r2, r2
 8000f94:	440b      	add	r3, r1
 8000f96:	761a      	strb	r2, [r3, #24]
}
 8000f98:	bf00      	nop
 8000f9a:	370c      	adds	r7, #12
 8000f9c:	46bd      	mov	sp, r7
 8000f9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fa2:	4770      	bx	lr
 8000fa4:	e000e100 	.word	0xe000e100
 8000fa8:	e000ed00 	.word	0xe000ed00

08000fac <iir_coeff_reorder>:
{1.00000000E+00, -1.83423322E+00, 8.44544382E-01},
{1.00000000E+00, -8.98143671E-01, 0.00000000E+00} };



__STATIC_INLINE void iir_coeff_reorder(float32_t b[][3],float32_t a[][3], float32_t h[], uint32_t numStage){
 8000fac:	b480      	push	{r7}
 8000fae:	b089      	sub	sp, #36	; 0x24
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	60f8      	str	r0, [r7, #12]
 8000fb4:	60b9      	str	r1, [r7, #8]
 8000fb6:	607a      	str	r2, [r7, #4]
 8000fb8:	603b      	str	r3, [r7, #0]
	uint32_t i, j;
	uint32_t n = 0;
 8000fba:	2300      	movs	r3, #0
 8000fbc:	617b      	str	r3, [r7, #20]
	//reordena los coeficientes bn0, bn1,b2
	for( i = 0; i<numStage; i++){
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	61fb      	str	r3, [r7, #28]
 8000fc2:	e040      	b.n	8001046 <iir_coeff_reorder+0x9a>
		for(j = 0; j<3;j++){
 8000fc4:	2300      	movs	r3, #0
 8000fc6:	61bb      	str	r3, [r7, #24]
 8000fc8:	e016      	b.n	8000ff8 <iir_coeff_reorder+0x4c>
			h[n] = b[i][j];
 8000fca:	69fa      	ldr	r2, [r7, #28]
 8000fcc:	4613      	mov	r3, r2
 8000fce:	005b      	lsls	r3, r3, #1
 8000fd0:	4413      	add	r3, r2
 8000fd2:	009b      	lsls	r3, r3, #2
 8000fd4:	461a      	mov	r2, r3
 8000fd6:	68fb      	ldr	r3, [r7, #12]
 8000fd8:	1899      	adds	r1, r3, r2
 8000fda:	697b      	ldr	r3, [r7, #20]
 8000fdc:	009b      	lsls	r3, r3, #2
 8000fde:	687a      	ldr	r2, [r7, #4]
 8000fe0:	4413      	add	r3, r2
 8000fe2:	69ba      	ldr	r2, [r7, #24]
 8000fe4:	0092      	lsls	r2, r2, #2
 8000fe6:	440a      	add	r2, r1
 8000fe8:	6812      	ldr	r2, [r2, #0]
 8000fea:	601a      	str	r2, [r3, #0]
			n++;
 8000fec:	697b      	ldr	r3, [r7, #20]
 8000fee:	3301      	adds	r3, #1
 8000ff0:	617b      	str	r3, [r7, #20]
		for(j = 0; j<3;j++){
 8000ff2:	69bb      	ldr	r3, [r7, #24]
 8000ff4:	3301      	adds	r3, #1
 8000ff6:	61bb      	str	r3, [r7, #24]
 8000ff8:	69bb      	ldr	r3, [r7, #24]
 8000ffa:	2b02      	cmp	r3, #2
 8000ffc:	d9e5      	bls.n	8000fca <iir_coeff_reorder+0x1e>
		}
		//reordena los coeficientes an1,an2   -> se obvia an0
		for(j = 1; j<3;j++){
 8000ffe:	2301      	movs	r3, #1
 8001000:	61bb      	str	r3, [r7, #24]
 8001002:	e01a      	b.n	800103a <iir_coeff_reorder+0x8e>
			h[n] = -1 * a[i][j];  //se niega los coeficientes
 8001004:	69fa      	ldr	r2, [r7, #28]
 8001006:	4613      	mov	r3, r2
 8001008:	005b      	lsls	r3, r3, #1
 800100a:	4413      	add	r3, r2
 800100c:	009b      	lsls	r3, r3, #2
 800100e:	461a      	mov	r2, r3
 8001010:	68bb      	ldr	r3, [r7, #8]
 8001012:	441a      	add	r2, r3
 8001014:	69bb      	ldr	r3, [r7, #24]
 8001016:	009b      	lsls	r3, r3, #2
 8001018:	4413      	add	r3, r2
 800101a:	edd3 7a00 	vldr	s15, [r3]
 800101e:	697b      	ldr	r3, [r7, #20]
 8001020:	009b      	lsls	r3, r3, #2
 8001022:	687a      	ldr	r2, [r7, #4]
 8001024:	4413      	add	r3, r2
 8001026:	eef1 7a67 	vneg.f32	s15, s15
 800102a:	edc3 7a00 	vstr	s15, [r3]
			n++;
 800102e:	697b      	ldr	r3, [r7, #20]
 8001030:	3301      	adds	r3, #1
 8001032:	617b      	str	r3, [r7, #20]
		for(j = 1; j<3;j++){
 8001034:	69bb      	ldr	r3, [r7, #24]
 8001036:	3301      	adds	r3, #1
 8001038:	61bb      	str	r3, [r7, #24]
 800103a:	69bb      	ldr	r3, [r7, #24]
 800103c:	2b02      	cmp	r3, #2
 800103e:	d9e1      	bls.n	8001004 <iir_coeff_reorder+0x58>
	for( i = 0; i<numStage; i++){
 8001040:	69fb      	ldr	r3, [r7, #28]
 8001042:	3301      	adds	r3, #1
 8001044:	61fb      	str	r3, [r7, #28]
 8001046:	69fa      	ldr	r2, [r7, #28]
 8001048:	683b      	ldr	r3, [r7, #0]
 800104a:	429a      	cmp	r2, r3
 800104c:	d3ba      	bcc.n	8000fc4 <iir_coeff_reorder+0x18>
		}
	}
}
 800104e:	bf00      	nop
 8001050:	bf00      	nop
 8001052:	3724      	adds	r7, #36	; 0x24
 8001054:	46bd      	mov	sp, r7
 8001056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800105a:	4770      	bx	lr

0800105c <__io_putchar>:
float32_t iirState0[NUM_SECTIONS *4];
float32_t coeff[5*NUM_SECTIONS];
uint16_t adcData[3];
/*Function prototype ---------------------------------------------------------*/
void USART1_Config(void);
int __io_putchar(int ch){
 800105c:	b480      	push	{r7}
 800105e:	b083      	sub	sp, #12
 8001060:	af00      	add	r7, sp, #0
 8001062:	6078      	str	r0, [r7, #4]
	while(!(USART1->SR & USART_SR_TXE));
 8001064:	bf00      	nop
 8001066:	4b08      	ldr	r3, [pc, #32]	; (8001088 <__io_putchar+0x2c>)
 8001068:	681b      	ldr	r3, [r3, #0]
 800106a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800106e:	2b00      	cmp	r3, #0
 8001070:	d0f9      	beq.n	8001066 <__io_putchar+0xa>
	//TDR
	//RDR
	USART1->DR = (uint8_t)(ch & 0xFF);
 8001072:	687b      	ldr	r3, [r7, #4]
 8001074:	b2da      	uxtb	r2, r3
 8001076:	4b04      	ldr	r3, [pc, #16]	; (8001088 <__io_putchar+0x2c>)
 8001078:	605a      	str	r2, [r3, #4]
	return ch;
 800107a:	687b      	ldr	r3, [r7, #4]
}
 800107c:	4618      	mov	r0, r3
 800107e:	370c      	adds	r7, #12
 8001080:	46bd      	mov	sp, r7
 8001082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001086:	4770      	bx	lr
 8001088:	40011000 	.word	0x40011000

0800108c <main>:
	return flag;
}
uint8_t uart_send_data(USART_TypeDef *USART, uint8_t *pData, uint32_t len, uint32_t timeout);
/*Main function --------------------------------------------------------------*/
int main(void)
{
 800108c:	b580      	push	{r7, lr}
 800108e:	af00      	add	r7, sp, #0
	USART1_Config();
 8001090:	f000 f934 	bl	80012fc <USART1_Config>
	//habilitar la interrupcion para la recepcion
	USART1->CR1 |= USART_CR1_RXNEIE;
 8001094:	4b88      	ldr	r3, [pc, #544]	; (80012b8 <main+0x22c>)
 8001096:	68db      	ldr	r3, [r3, #12]
 8001098:	4a87      	ldr	r2, [pc, #540]	; (80012b8 <main+0x22c>)
 800109a:	f043 0320 	orr.w	r3, r3, #32
 800109e:	60d3      	str	r3, [r2, #12]
	NVIC_EnableIRQ(USART1_IRQn);
 80010a0:	2025      	movs	r0, #37	; 0x25
 80010a2:	f7ff ff3b 	bl	8000f1c <__NVIC_EnableIRQ>
	NVIC_SetPriority(USART1_IRQn, 2);
 80010a6:	2102      	movs	r1, #2
 80010a8:	2025      	movs	r0, #37	; 0x25
 80010aa:	f7ff ff55 	bl	8000f58 <__NVIC_SetPriority>

	printf("USART1 Init OK!\r\n");
 80010ae:	4883      	ldr	r0, [pc, #524]	; (80012bc <main+0x230>)
 80010b0:	f001 f90c 	bl	80022cc <puts>
	/**
	 * PG12
	 */
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOGEN;
 80010b4:	4b82      	ldr	r3, [pc, #520]	; (80012c0 <main+0x234>)
 80010b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80010b8:	4a81      	ldr	r2, [pc, #516]	; (80012c0 <main+0x234>)
 80010ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010be:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOG->MODER &=~ GPIO_MODER_MODE12;
 80010c0:	4b80      	ldr	r3, [pc, #512]	; (80012c4 <main+0x238>)
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	4a7f      	ldr	r2, [pc, #508]	; (80012c4 <main+0x238>)
 80010c6:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 80010ca:	6013      	str	r3, [r2, #0]
	GPIOG->MODER |= GPIO_MODER_MODE12_0;
 80010cc:	4b7d      	ldr	r3, [pc, #500]	; (80012c4 <main+0x238>)
 80010ce:	681b      	ldr	r3, [r3, #0]
 80010d0:	4a7c      	ldr	r2, [pc, #496]	; (80012c4 <main+0x238>)
 80010d2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80010d6:	6013      	str	r3, [r2, #0]
	/**
	 * GENERACION DE BASE DE TIEMPO
	 */
	RCC->APB1ENR |= RCC_APB1ENR_TIM6EN;
 80010d8:	4b79      	ldr	r3, [pc, #484]	; (80012c0 <main+0x234>)
 80010da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80010dc:	4a78      	ldr	r2, [pc, #480]	; (80012c0 <main+0x234>)
 80010de:	f043 0310 	orr.w	r3, r3, #16
 80010e2:	6413      	str	r3, [r2, #64]	; 0x40
	TIM6->CR1 = 0;
 80010e4:	4b78      	ldr	r3, [pc, #480]	; (80012c8 <main+0x23c>)
 80010e6:	2200      	movs	r2, #0
 80010e8:	601a      	str	r2, [r3, #0]
	 * F = 16MHZ
	 * UPDATE  = 1KHZ
	 * PSC = 16 - 1
	 * ARR = F /(PSC + 1)(UPDATE) - 1
	 */
	TIM6->PSC = 16 - 1;
 80010ea:	4b77      	ldr	r3, [pc, #476]	; (80012c8 <main+0x23c>)
 80010ec:	220f      	movs	r2, #15
 80010ee:	629a      	str	r2, [r3, #40]	; 0x28
	TIM6->ARR = 1000 - 1;
 80010f0:	4b75      	ldr	r3, [pc, #468]	; (80012c8 <main+0x23c>)
 80010f2:	f240 32e7 	movw	r2, #999	; 0x3e7
 80010f6:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM6->DIER |= TIM_DIER_UIE;
 80010f8:	4b73      	ldr	r3, [pc, #460]	; (80012c8 <main+0x23c>)
 80010fa:	68db      	ldr	r3, [r3, #12]
 80010fc:	4a72      	ldr	r2, [pc, #456]	; (80012c8 <main+0x23c>)
 80010fe:	f043 0301 	orr.w	r3, r3, #1
 8001102:	60d3      	str	r3, [r2, #12]
	NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001104:	2036      	movs	r0, #54	; 0x36
 8001106:	f7ff ff09 	bl	8000f1c <__NVIC_EnableIRQ>
	NVIC_SetPriority(TIM6_DAC_IRQn, 0xF);
 800110a:	210f      	movs	r1, #15
 800110c:	2036      	movs	r0, #54	; 0x36
 800110e:	f7ff ff23 	bl	8000f58 <__NVIC_SetPriority>

	TIM6->CR1 |= TIM_CR1_CEN;
 8001112:	4b6d      	ldr	r3, [pc, #436]	; (80012c8 <main+0x23c>)
 8001114:	681b      	ldr	r3, [r3, #0]
 8001116:	4a6c      	ldr	r2, [pc, #432]	; (80012c8 <main+0x23c>)
 8001118:	f043 0301 	orr.w	r3, r3, #1
 800111c:	6013      	str	r3, [r2, #0]
	/**
	 * GENERACION DE SEÑAL
	 */
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
 800111e:	4b68      	ldr	r3, [pc, #416]	; (80012c0 <main+0x234>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	4a67      	ldr	r2, [pc, #412]	; (80012c0 <main+0x234>)
 8001124:	f043 0302 	orr.w	r3, r3, #2
 8001128:	6413      	str	r3, [r2, #64]	; 0x40
	 * Fpwm = Ftim/(ARR + 1)(PSC + 1)
	 * ARR = Ftim /(PSC +1)Fpwm - 1
	 * ARR = 16MHZ/(15 + 1)1000 - 1
	 * ARR = 1000 - 1
	 */
	TIM3->CR1 = 0;
 800112a:	4b68      	ldr	r3, [pc, #416]	; (80012cc <main+0x240>)
 800112c:	2200      	movs	r2, #0
 800112e:	601a      	str	r2, [r3, #0]
	TIM3->PSC = 160 - 1;
 8001130:	4b66      	ldr	r3, [pc, #408]	; (80012cc <main+0x240>)
 8001132:	229f      	movs	r2, #159	; 0x9f
 8001134:	629a      	str	r2, [r3, #40]	; 0x28
	TIM3->ARR = 1000 - 1;
 8001136:	4b65      	ldr	r3, [pc, #404]	; (80012cc <main+0x240>)
 8001138:	f240 32e7 	movw	r2, #999	; 0x3e7
 800113c:	62da      	str	r2, [r3, #44]	; 0x2c

	TIM3->CR2 &=~ TIM_CR2_MMS;
 800113e:	4b63      	ldr	r3, [pc, #396]	; (80012cc <main+0x240>)
 8001140:	685b      	ldr	r3, [r3, #4]
 8001142:	4a62      	ldr	r2, [pc, #392]	; (80012cc <main+0x240>)
 8001144:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001148:	6053      	str	r3, [r2, #4]
	TIM3->CR2 |= TIM_CR2_MMS_1;
 800114a:	4b60      	ldr	r3, [pc, #384]	; (80012cc <main+0x240>)
 800114c:	685b      	ldr	r3, [r3, #4]
 800114e:	4a5f      	ldr	r2, [pc, #380]	; (80012cc <main+0x240>)
 8001150:	f043 0320 	orr.w	r3, r3, #32
 8001154:	6053      	str	r3, [r2, #4]
	/*HABILITAR EL CONTEO DEL TIMER*/
	TIM3->CR1 |= TIM_CR1_CEN;
 8001156:	4b5d      	ldr	r3, [pc, #372]	; (80012cc <main+0x240>)
 8001158:	681b      	ldr	r3, [r3, #0]
 800115a:	4a5c      	ldr	r2, [pc, #368]	; (80012cc <main+0x240>)
 800115c:	f043 0301 	orr.w	r3, r3, #1
 8001160:	6013      	str	r3, [r2, #0]

	/**
	 * ADC
	 */
	RCC->APB2ENR |= RCC_APB2ENR_ADC2EN;
 8001162:	4b57      	ldr	r3, [pc, #348]	; (80012c0 <main+0x234>)
 8001164:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001166:	4a56      	ldr	r2, [pc, #344]	; (80012c0 <main+0x234>)
 8001168:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800116c:	6453      	str	r3, [r2, #68]	; 0x44
	ADC->CCR &=~ (ADC_CCR_ADCPRE);
 800116e:	4b58      	ldr	r3, [pc, #352]	; (80012d0 <main+0x244>)
 8001170:	685b      	ldr	r3, [r3, #4]
 8001172:	4a57      	ldr	r2, [pc, #348]	; (80012d0 <main+0x244>)
 8001174:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001178:	6053      	str	r3, [r2, #4]

	ADC2->CR1 = 0;
 800117a:	4b56      	ldr	r3, [pc, #344]	; (80012d4 <main+0x248>)
 800117c:	2200      	movs	r2, #0
 800117e:	605a      	str	r2, [r3, #4]
	ADC2->CR1 |= ADC_CR1_OVRIE;
 8001180:	4b54      	ldr	r3, [pc, #336]	; (80012d4 <main+0x248>)
 8001182:	685b      	ldr	r3, [r3, #4]
 8001184:	4a53      	ldr	r2, [pc, #332]	; (80012d4 <main+0x248>)
 8001186:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800118a:	6053      	str	r3, [r2, #4]

	ADC2->CR2 |= ADC_CR2_EXTEN_0;
 800118c:	4b51      	ldr	r3, [pc, #324]	; (80012d4 <main+0x248>)
 800118e:	689b      	ldr	r3, [r3, #8]
 8001190:	4a50      	ldr	r2, [pc, #320]	; (80012d4 <main+0x248>)
 8001192:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001196:	6093      	str	r3, [r2, #8]
	ADC2->CR2 |= ADC_CR2_EXTSEL_3; //TIMER 3 TRGO
 8001198:	4b4e      	ldr	r3, [pc, #312]	; (80012d4 <main+0x248>)
 800119a:	689b      	ldr	r3, [r3, #8]
 800119c:	4a4d      	ldr	r2, [pc, #308]	; (80012d4 <main+0x248>)
 800119e:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80011a2:	6093      	str	r3, [r2, #8]

	NVIC_EnableIRQ(ADC_IRQn);
 80011a4:	2012      	movs	r0, #18
 80011a6:	f7ff feb9 	bl	8000f1c <__NVIC_EnableIRQ>

	/**
	 * CONFIGURACION DE LOS CANALES ADC Y CANTIDAD DE CONVERSIONES
	 */
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
 80011aa:	4b45      	ldr	r3, [pc, #276]	; (80012c0 <main+0x234>)
 80011ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011ae:	4a44      	ldr	r2, [pc, #272]	; (80012c0 <main+0x234>)
 80011b0:	f043 0304 	orr.w	r3, r3, #4
 80011b4:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOC->MODER |= GPIO_MODER_MODE0;			//ANALOG
 80011b6:	4b48      	ldr	r3, [pc, #288]	; (80012d8 <main+0x24c>)
 80011b8:	681b      	ldr	r3, [r3, #0]
 80011ba:	4a47      	ldr	r2, [pc, #284]	; (80012d8 <main+0x24c>)
 80011bc:	f043 0303 	orr.w	r3, r3, #3
 80011c0:	6013      	str	r3, [r2, #0]
	GPIOC->PUPDR &=~ GPIO_PUPDR_PUPD0;			//no pull/down
 80011c2:	4b45      	ldr	r3, [pc, #276]	; (80012d8 <main+0x24c>)
 80011c4:	68db      	ldr	r3, [r3, #12]
 80011c6:	4a44      	ldr	r2, [pc, #272]	; (80012d8 <main+0x24c>)
 80011c8:	f023 0303 	bic.w	r3, r3, #3
 80011cc:	60d3      	str	r3, [r2, #12]
	//secuencia de conversion
	ADC2->SQR3 &=~ ADC_SQR3_SQ1;
 80011ce:	4b41      	ldr	r3, [pc, #260]	; (80012d4 <main+0x248>)
 80011d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80011d2:	4a40      	ldr	r2, [pc, #256]	; (80012d4 <main+0x248>)
 80011d4:	f023 031f 	bic.w	r3, r3, #31
 80011d8:	6353      	str	r3, [r2, #52]	; 0x34
	ADC2->SQR3 |= 10 <<ADC_SQR3_SQ3_Pos  |10 <<ADC_SQR3_SQ2_Pos |10<<ADC_SQR3_SQ1_Pos;			//conversion del canal 10
 80011da:	4b3e      	ldr	r3, [pc, #248]	; (80012d4 <main+0x248>)
 80011dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80011de:	4a3d      	ldr	r2, [pc, #244]	; (80012d4 <main+0x248>)
 80011e0:	f443 5325 	orr.w	r3, r3, #10560	; 0x2940
 80011e4:	f043 030a 	orr.w	r3, r3, #10
 80011e8:	6353      	str	r3, [r2, #52]	; 0x34
	ADC2->SQR1 &=~ ADC_SQR1_L;
 80011ea:	4b3a      	ldr	r3, [pc, #232]	; (80012d4 <main+0x248>)
 80011ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80011ee:	4a39      	ldr	r2, [pc, #228]	; (80012d4 <main+0x248>)
 80011f0:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80011f4:	62d3      	str	r3, [r2, #44]	; 0x2c
	ADC2->SQR1 |= (3 - 1)<<ADC_SQR1_L_Pos;		//3 Conversiones
 80011f6:	4b37      	ldr	r3, [pc, #220]	; (80012d4 <main+0x248>)
 80011f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80011fa:	4a36      	ldr	r2, [pc, #216]	; (80012d4 <main+0x248>)
 80011fc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001200:	62d3      	str	r3, [r2, #44]	; 0x2c

	ADC2->SMPR1 |= ADC_SMPR1_SMP10_0; 			//010: 28 cycles
 8001202:	4b34      	ldr	r3, [pc, #208]	; (80012d4 <main+0x248>)
 8001204:	68db      	ldr	r3, [r3, #12]
 8001206:	4a33      	ldr	r2, [pc, #204]	; (80012d4 <main+0x248>)
 8001208:	f043 0301 	orr.w	r3, r3, #1
 800120c:	60d3      	str	r3, [r2, #12]


	/**
	 *
	 */
	iir_coeff_reorder(b,a,coeff,NUM_SECTIONS); //se reordena los coeficientes del filtro iir
 800120e:	2303      	movs	r3, #3
 8001210:	4a32      	ldr	r2, [pc, #200]	; (80012dc <main+0x250>)
 8001212:	4933      	ldr	r1, [pc, #204]	; (80012e0 <main+0x254>)
 8001214:	4833      	ldr	r0, [pc, #204]	; (80012e4 <main+0x258>)
 8001216:	f7ff fec9 	bl	8000fac <iir_coeff_reorder>
	arm_biquad_cascade_df1_init_f32(&IIR0,NUM_SECTIONS,coeff,iirState0);
 800121a:	4b33      	ldr	r3, [pc, #204]	; (80012e8 <main+0x25c>)
 800121c:	4a2f      	ldr	r2, [pc, #188]	; (80012dc <main+0x250>)
 800121e:	2103      	movs	r1, #3
 8001220:	4832      	ldr	r0, [pc, #200]	; (80012ec <main+0x260>)
 8001222:	f7ff fe4c 	bl	8000ebe <arm_biquad_cascade_df1_init_f32>
	/**
	 * DMA
	 */
	RCC->AHB1ENR |= RCC_AHB1ENR_DMA2EN;
 8001226:	4b26      	ldr	r3, [pc, #152]	; (80012c0 <main+0x234>)
 8001228:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800122a:	4a25      	ldr	r2, [pc, #148]	; (80012c0 <main+0x234>)
 800122c:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001230:	6313      	str	r3, [r2, #48]	; 0x30
	//CONFIGURAR PAR
	DMA2_Stream3->PAR = (uint32_t)&ADC2->DR;
 8001232:	4b2f      	ldr	r3, [pc, #188]	; (80012f0 <main+0x264>)
 8001234:	4a2f      	ldr	r2, [pc, #188]	; (80012f4 <main+0x268>)
 8001236:	609a      	str	r2, [r3, #8]
	//CONFIGURAR EL MAR
	DMA2_Stream3->M0AR = (uint32_t)adcData;
 8001238:	4b2d      	ldr	r3, [pc, #180]	; (80012f0 <main+0x264>)
 800123a:	4a2f      	ldr	r2, [pc, #188]	; (80012f8 <main+0x26c>)
 800123c:	60da      	str	r2, [r3, #12]
	//configurar la longitud de datos
	DMA2_Stream3->NDTR = 3;
 800123e:	4b2c      	ldr	r3, [pc, #176]	; (80012f0 <main+0x264>)
 8001240:	2203      	movs	r2, #3
 8001242:	605a      	str	r2, [r3, #4]
	//Configurar el registro de control
	DMA2_Stream3->CR = 0;
 8001244:	4b2a      	ldr	r3, [pc, #168]	; (80012f0 <main+0x264>)
 8001246:	2200      	movs	r2, #0
 8001248:	601a      	str	r2, [r3, #0]

	DMA2_Stream3->CR |= DMA_SxCR_CIRC; //modo circular
 800124a:	4b29      	ldr	r3, [pc, #164]	; (80012f0 <main+0x264>)
 800124c:	681b      	ldr	r3, [r3, #0]
 800124e:	4a28      	ldr	r2, [pc, #160]	; (80012f0 <main+0x264>)
 8001250:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001254:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR |= DMA_SxCR_PSIZE_0 | DMA_SxCR_MSIZE_0; //16BITS
 8001256:	4b26      	ldr	r3, [pc, #152]	; (80012f0 <main+0x264>)
 8001258:	681b      	ldr	r3, [r3, #0]
 800125a:	4a25      	ldr	r2, [pc, #148]	; (80012f0 <main+0x264>)
 800125c:	f443 5320 	orr.w	r3, r3, #10240	; 0x2800
 8001260:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR |= DMA_SxCR_MINC;		//memory address increment
 8001262:	4b23      	ldr	r3, [pc, #140]	; (80012f0 <main+0x264>)
 8001264:	681b      	ldr	r3, [r3, #0]
 8001266:	4a22      	ldr	r2, [pc, #136]	; (80012f0 <main+0x264>)
 8001268:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800126c:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR |= DMA_SxCR_CHSEL_0;	//adc2
 800126e:	4b20      	ldr	r3, [pc, #128]	; (80012f0 <main+0x264>)
 8001270:	681b      	ldr	r3, [r3, #0]
 8001272:	4a1f      	ldr	r2, [pc, #124]	; (80012f0 <main+0x264>)
 8001274:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001278:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->CR |= DMA_SxCR_TCIE | DMA_SxCR_TEIE;
 800127a:	4b1d      	ldr	r3, [pc, #116]	; (80012f0 <main+0x264>)
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	4a1c      	ldr	r2, [pc, #112]	; (80012f0 <main+0x264>)
 8001280:	f043 0314 	orr.w	r3, r3, #20
 8001284:	6013      	str	r3, [r2, #0]
	DMA2_Stream3->FCR = 0;
 8001286:	4b1a      	ldr	r3, [pc, #104]	; (80012f0 <main+0x264>)
 8001288:	2200      	movs	r2, #0
 800128a:	615a      	str	r2, [r3, #20]
	DMA2_Stream3->CR |= DMA_SxCR_EN;
 800128c:	4b18      	ldr	r3, [pc, #96]	; (80012f0 <main+0x264>)
 800128e:	681b      	ldr	r3, [r3, #0]
 8001290:	4a17      	ldr	r2, [pc, #92]	; (80012f0 <main+0x264>)
 8001292:	f043 0301 	orr.w	r3, r3, #1
 8001296:	6013      	str	r3, [r2, #0]
	NVIC_EnableIRQ(DMA2_Stream3_IRQn);
 8001298:	203b      	movs	r0, #59	; 0x3b
 800129a:	f7ff fe3f 	bl	8000f1c <__NVIC_EnableIRQ>
	//ADC
	ADC2->CR2 |= ADC_CR2_DMA | ADC_CR2_DDS;
 800129e:	4b0d      	ldr	r3, [pc, #52]	; (80012d4 <main+0x248>)
 80012a0:	689b      	ldr	r3, [r3, #8]
 80012a2:	4a0c      	ldr	r2, [pc, #48]	; (80012d4 <main+0x248>)
 80012a4:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 80012a8:	6093      	str	r3, [r2, #8]
	ADC2->CR2 |= ADC_CR2_ADON;
 80012aa:	4b0a      	ldr	r3, [pc, #40]	; (80012d4 <main+0x248>)
 80012ac:	689b      	ldr	r3, [r3, #8]
 80012ae:	4a09      	ldr	r2, [pc, #36]	; (80012d4 <main+0x248>)
 80012b0:	f043 0301 	orr.w	r3, r3, #1
 80012b4:	6093      	str	r3, [r2, #8]

    /* Loop forever */
	for(;;){
 80012b6:	e7fe      	b.n	80012b6 <main+0x22a>
 80012b8:	40011000 	.word	0x40011000
 80012bc:	08004220 	.word	0x08004220
 80012c0:	40023800 	.word	0x40023800
 80012c4:	40021800 	.word	0x40021800
 80012c8:	40001000 	.word	0x40001000
 80012cc:	40000400 	.word	0x40000400
 80012d0:	40012300 	.word	0x40012300
 80012d4:	40012100 	.word	0x40012100
 80012d8:	40020800 	.word	0x40020800
 80012dc:	20000370 	.word	0x20000370
 80012e0:	20000024 	.word	0x20000024
 80012e4:	20000000 	.word	0x20000000
 80012e8:	20000340 	.word	0x20000340
 80012ec:	20000334 	.word	0x20000334
 80012f0:	40026458 	.word	0x40026458
 80012f4:	4001214c 	.word	0x4001214c
 80012f8:	200003ac 	.word	0x200003ac

080012fc <USART1_Config>:


	}
}
/*Function definition --------------------------------------------------------*/
void USART1_Config(void){
 80012fc:	b480      	push	{r7}
 80012fe:	af00      	add	r7, sp, #0
	//1. configurar los pines
	//PA9 y PA10
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001300:	4b20      	ldr	r3, [pc, #128]	; (8001384 <USART1_Config+0x88>)
 8001302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001304:	4a1f      	ldr	r2, [pc, #124]	; (8001384 <USART1_Config+0x88>)
 8001306:	f043 0301 	orr.w	r3, r3, #1
 800130a:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA->MODER &=~ (GPIO_MODER_MODE9 | GPIO_MODER_MODE10);
 800130c:	4b1e      	ldr	r3, [pc, #120]	; (8001388 <USART1_Config+0x8c>)
 800130e:	681b      	ldr	r3, [r3, #0]
 8001310:	4a1d      	ldr	r2, [pc, #116]	; (8001388 <USART1_Config+0x8c>)
 8001312:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 8001316:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= GPIO_MODER_MODE9_1 | GPIO_MODER_MODE10_1; //FA
 8001318:	4b1b      	ldr	r3, [pc, #108]	; (8001388 <USART1_Config+0x8c>)
 800131a:	681b      	ldr	r3, [r3, #0]
 800131c:	4a1a      	ldr	r2, [pc, #104]	; (8001388 <USART1_Config+0x8c>)
 800131e:	f443 1320 	orr.w	r3, r3, #2621440	; 0x280000
 8001322:	6013      	str	r3, [r2, #0]

	GPIOA->OSPEEDR |= GPIO_OSPEEDR_OSPEED9 | GPIO_OSPEEDR_OSPEED10;  //Very high speed
 8001324:	4b18      	ldr	r3, [pc, #96]	; (8001388 <USART1_Config+0x8c>)
 8001326:	689b      	ldr	r3, [r3, #8]
 8001328:	4a17      	ldr	r2, [pc, #92]	; (8001388 <USART1_Config+0x8c>)
 800132a:	f443 1370 	orr.w	r3, r3, #3932160	; 0x3c0000
 800132e:	6093      	str	r3, [r2, #8]
	//Asignacion de funcion alternativa
	GPIOA->AFR[1] &=~(GPIO_AFRH_AFSEL9 | GPIO_AFRH_AFSEL10);
 8001330:	4b15      	ldr	r3, [pc, #84]	; (8001388 <USART1_Config+0x8c>)
 8001332:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001334:	4a14      	ldr	r2, [pc, #80]	; (8001388 <USART1_Config+0x8c>)
 8001336:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 800133a:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1] |= 0x7<<GPIO_AFRH_AFSEL9_Pos | 0x7<<GPIO_AFRH_AFSEL10_Pos;
 800133c:	4b12      	ldr	r3, [pc, #72]	; (8001388 <USART1_Config+0x8c>)
 800133e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001340:	4a11      	ldr	r2, [pc, #68]	; (8001388 <USART1_Config+0x8c>)
 8001342:	f443 63ee 	orr.w	r3, r3, #1904	; 0x770
 8001346:	6253      	str	r3, [r2, #36]	; 0x24
	//2. habilitar el reloj
	RCC->APB2ENR |= RCC_APB2ENR_USART1EN;
 8001348:	4b0e      	ldr	r3, [pc, #56]	; (8001384 <USART1_Config+0x88>)
 800134a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800134c:	4a0d      	ldr	r2, [pc, #52]	; (8001384 <USART1_Config+0x88>)
 800134e:	f043 0310 	orr.w	r3, r3, #16
 8001352:	6453      	str	r3, [r2, #68]	; 0x44
	//3. Deshabilitar
	USART1->CR1 = 0;
 8001354:	4b0d      	ldr	r3, [pc, #52]	; (800138c <USART1_Config+0x90>)
 8001356:	2200      	movs	r2, #0
 8001358:	60da      	str	r2, [r3, #12]
	 * MANTISA = 0x8
	 * fraction = 0.6805 * 16 = 10.88 -> 11
	 * FRACTION = 0xB
	 * BRR = 0x8B;
	 */
	USART1->BRR = 0x8B;
 800135a:	4b0c      	ldr	r3, [pc, #48]	; (800138c <USART1_Config+0x90>)
 800135c:	228b      	movs	r2, #139	; 0x8b
 800135e:	609a      	str	r2, [r3, #8]

	USART1->CR1 |= USART_CR1_TE | USART_CR1_RE;
 8001360:	4b0a      	ldr	r3, [pc, #40]	; (800138c <USART1_Config+0x90>)
 8001362:	68db      	ldr	r3, [r3, #12]
 8001364:	4a09      	ldr	r2, [pc, #36]	; (800138c <USART1_Config+0x90>)
 8001366:	f043 030c 	orr.w	r3, r3, #12
 800136a:	60d3      	str	r3, [r2, #12]

	//habilitar
	USART1->CR1 |= USART_CR1_UE;
 800136c:	4b07      	ldr	r3, [pc, #28]	; (800138c <USART1_Config+0x90>)
 800136e:	68db      	ldr	r3, [r3, #12]
 8001370:	4a06      	ldr	r2, [pc, #24]	; (800138c <USART1_Config+0x90>)
 8001372:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001376:	60d3      	str	r3, [r2, #12]
	return;
 8001378:	bf00      	nop
}
 800137a:	46bd      	mov	sp, r7
 800137c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001380:	4770      	bx	lr
 8001382:	bf00      	nop
 8001384:	40023800 	.word	0x40023800
 8001388:	40020000 	.word	0x40020000
 800138c:	40011000 	.word	0x40011000

08001390 <ADC_IRQHandler>:
#include <string.h>
/**
 *
 */

void ADC_IRQHandler(void){
 8001390:	b480      	push	{r7}
 8001392:	af00      	add	r7, sp, #0
	if(ADC2->SR & ADC_SR_OVR){
 8001394:	4b08      	ldr	r3, [pc, #32]	; (80013b8 <ADC_IRQHandler+0x28>)
 8001396:	681b      	ldr	r3, [r3, #0]
 8001398:	f003 0320 	and.w	r3, r3, #32
 800139c:	2b00      	cmp	r3, #0
 800139e:	d005      	beq.n	80013ac <ADC_IRQHandler+0x1c>
		ADC2->SR &=~ADC_SR_OVR;
 80013a0:	4b05      	ldr	r3, [pc, #20]	; (80013b8 <ADC_IRQHandler+0x28>)
 80013a2:	681b      	ldr	r3, [r3, #0]
 80013a4:	4a04      	ldr	r2, [pc, #16]	; (80013b8 <ADC_IRQHandler+0x28>)
 80013a6:	f023 0320 	bic.w	r3, r3, #32
 80013aa:	6013      	str	r3, [r2, #0]
	}

}
 80013ac:	bf00      	nop
 80013ae:	46bd      	mov	sp, r7
 80013b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013b4:	4770      	bx	lr
 80013b6:	bf00      	nop
 80013b8:	40012100 	.word	0x40012100

080013bc <DMA2_Stream3_IRQHandler>:

void DMA2_Stream3_IRQHandler(void){
 80013bc:	b5b0      	push	{r4, r5, r7, lr}
 80013be:	b084      	sub	sp, #16
 80013c0:	af02      	add	r7, sp, #8
	float x;
	float y;
	if(DMA2->LISR & DMA_LISR_TCIF3){ //transferencia completa
 80013c2:	4b1e      	ldr	r3, [pc, #120]	; (800143c <DMA2_Stream3_IRQHandler+0x80>)
 80013c4:	681b      	ldr	r3, [r3, #0]
 80013c6:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80013ca:	2b00      	cmp	r3, #0
 80013cc:	d026      	beq.n	800141c <DMA2_Stream3_IRQHandler+0x60>
		DMA2->LIFCR |= DMA_LIFCR_CTCIF3;
 80013ce:	4b1b      	ldr	r3, [pc, #108]	; (800143c <DMA2_Stream3_IRQHandler+0x80>)
 80013d0:	689b      	ldr	r3, [r3, #8]
 80013d2:	4a1a      	ldr	r2, [pc, #104]	; (800143c <DMA2_Stream3_IRQHandler+0x80>)
 80013d4:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80013d8:	6093      	str	r3, [r2, #8]
		//printf("%d, %d, %d\r\n", (int)adcData[0], (int)adcData[1], (int)adcData[2]);
		//todo
		x = adcData[0];
 80013da:	4b19      	ldr	r3, [pc, #100]	; (8001440 <DMA2_Stream3_IRQHandler+0x84>)
 80013dc:	881b      	ldrh	r3, [r3, #0]
 80013de:	ee07 3a90 	vmov	s15, r3
 80013e2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80013e6:	edc7 7a01 	vstr	s15, [r7, #4]
		arm_biquad_cascade_df1_f32(&IIR0, &x, &y, 1);
 80013ea:	463a      	mov	r2, r7
 80013ec:	1d39      	adds	r1, r7, #4
 80013ee:	2301      	movs	r3, #1
 80013f0:	4814      	ldr	r0, [pc, #80]	; (8001444 <DMA2_Stream3_IRQHandler+0x88>)
 80013f2:	f7ff fbe9 	bl	8000bc8 <arm_biquad_cascade_df1_f32>
		printf("%.2f, %.2f\r\n", x, y);
 80013f6:	687b      	ldr	r3, [r7, #4]
 80013f8:	4618      	mov	r0, r3
 80013fa:	f7ff f8b5 	bl	8000568 <__aeabi_f2d>
 80013fe:	4604      	mov	r4, r0
 8001400:	460d      	mov	r5, r1
 8001402:	683b      	ldr	r3, [r7, #0]
 8001404:	4618      	mov	r0, r3
 8001406:	f7ff f8af 	bl	8000568 <__aeabi_f2d>
 800140a:	4602      	mov	r2, r0
 800140c:	460b      	mov	r3, r1
 800140e:	e9cd 2300 	strd	r2, r3, [sp]
 8001412:	4622      	mov	r2, r4
 8001414:	462b      	mov	r3, r5
 8001416:	480c      	ldr	r0, [pc, #48]	; (8001448 <DMA2_Stream3_IRQHandler+0x8c>)
 8001418:	f000 fef2 	bl	8002200 <iprintf>
		//pid

	}
	if(DMA2->LISR & DMA_LISR_TEIF3){	//error en la transferencia
 800141c:	4b07      	ldr	r3, [pc, #28]	; (800143c <DMA2_Stream3_IRQHandler+0x80>)
 800141e:	681b      	ldr	r3, [r3, #0]
 8001420:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001424:	2b00      	cmp	r3, #0
 8001426:	d005      	beq.n	8001434 <DMA2_Stream3_IRQHandler+0x78>
		DMA2->LIFCR |= DMA_LIFCR_CTEIF3;
 8001428:	4b04      	ldr	r3, [pc, #16]	; (800143c <DMA2_Stream3_IRQHandler+0x80>)
 800142a:	689b      	ldr	r3, [r3, #8]
 800142c:	4a03      	ldr	r2, [pc, #12]	; (800143c <DMA2_Stream3_IRQHandler+0x80>)
 800142e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8001432:	6093      	str	r3, [r2, #8]
	}
}
 8001434:	bf00      	nop
 8001436:	3708      	adds	r7, #8
 8001438:	46bd      	mov	sp, r7
 800143a:	bdb0      	pop	{r4, r5, r7, pc}
 800143c:	40026400 	.word	0x40026400
 8001440:	200003ac 	.word	0x200003ac
 8001444:	20000334 	.word	0x20000334
 8001448:	08004234 	.word	0x08004234

0800144c <SysTick_Handler>:



void SysTick_Handler(void){
 800144c:	b480      	push	{r7}
 800144e:	af00      	add	r7, sp, #0
    if(SysTick->CTRL & 1<<16){
 8001450:	4b03      	ldr	r3, [pc, #12]	; (8001460 <SysTick_Handler+0x14>)
 8001452:	681b      	ldr	r3, [r3, #0]
        //todo

    }
}
 8001454:	bf00      	nop
 8001456:	46bd      	mov	sp, r7
 8001458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145c:	4770      	bx	lr
 800145e:	bf00      	nop
 8001460:	e000e010 	.word	0xe000e010

08001464 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void){
 8001464:	b580      	push	{r7, lr}
 8001466:	af00      	add	r7, sp, #0
	if(TIM6->SR & TIM_SR_UIF){
 8001468:	4b08      	ldr	r3, [pc, #32]	; (800148c <TIM6_DAC_IRQHandler+0x28>)
 800146a:	691b      	ldr	r3, [r3, #16]
 800146c:	f003 0301 	and.w	r3, r3, #1
 8001470:	2b00      	cmp	r3, #0
 8001472:	d008      	beq.n	8001486 <TIM6_DAC_IRQHandler+0x22>
		TIM6->SR &=~TIM_SR_UIF;
 8001474:	4b05      	ldr	r3, [pc, #20]	; (800148c <TIM6_DAC_IRQHandler+0x28>)
 8001476:	691b      	ldr	r3, [r3, #16]
 8001478:	4a04      	ldr	r2, [pc, #16]	; (800148c <TIM6_DAC_IRQHandler+0x28>)
 800147a:	f023 0301 	bic.w	r3, r3, #1
 800147e:	6113      	str	r3, [r2, #16]
		//Todo
		tickInc(1);
 8001480:	2001      	movs	r0, #1
 8001482:	f7ff fd39 	bl	8000ef8 <tickInc>
	}
}
 8001486:	bf00      	nop
 8001488:	bd80      	pop	{r7, pc}
 800148a:	bf00      	nop
 800148c:	40001000 	.word	0x40001000

08001490 <TIM2_IRQHandler>:

void TIM2_IRQHandler(void){
 8001490:	b480      	push	{r7}
 8001492:	af00      	add	r7, sp, #0
	static uint32_t ccr2;
	if(TIM2->SR & TIM_SR_CC2IF){
 8001494:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8001498:	691b      	ldr	r3, [r3, #16]
 800149a:	f003 0304 	and.w	r3, r3, #4
 800149e:	2b00      	cmp	r3, #0
 80014a0:	d013      	beq.n	80014ca <TIM2_IRQHandler+0x3a>
		TIM2->SR &=~ TIM_SR_CC2IF;
 80014a2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80014a6:	691b      	ldr	r3, [r3, #16]
 80014a8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80014ac:	f023 0304 	bic.w	r3, r3, #4
 80014b0:	6113      	str	r3, [r2, #16]
		//Todo
		ccr2 = TIM2->CCR2 + 16000;
 80014b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80014b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80014b8:	f503 537a 	add.w	r3, r3, #16000	; 0x3e80
 80014bc:	4a05      	ldr	r2, [pc, #20]	; (80014d4 <TIM2_IRQHandler+0x44>)
 80014be:	6013      	str	r3, [r2, #0]
		TIM2->CCR2 = ccr2;
 80014c0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80014c4:	4b03      	ldr	r3, [pc, #12]	; (80014d4 <TIM2_IRQHandler+0x44>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	6393      	str	r3, [r2, #56]	; 0x38
	}
}
 80014ca:	bf00      	nop
 80014cc:	46bd      	mov	sp, r7
 80014ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014d2:	4770      	bx	lr
 80014d4:	200003b4 	.word	0x200003b4

080014d8 <USART1_IRQHandler>:
 * count = 0;
 *
 * data.rx[0] ->primero
 * data.rx[2] ->ultimo
 */
void USART1_IRQHandler(void){
 80014d8:	b580      	push	{r7, lr}
 80014da:	b082      	sub	sp, #8
 80014dc:	af00      	add	r7, sp, #0
	static uint8_t state = 0;
	static uint8_t count = 0;
	if(USART1->SR & USART_SR_RXNE){
 80014de:	4b2e      	ldr	r3, [pc, #184]	; (8001598 <USART1_IRQHandler+0xc0>)
 80014e0:	681b      	ldr	r3, [r3, #0]
 80014e2:	f003 0320 	and.w	r3, r3, #32
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d052      	beq.n	8001590 <USART1_IRQHandler+0xb8>
		uint8_t byte = USART1->DR;
 80014ea:	4b2b      	ldr	r3, [pc, #172]	; (8001598 <USART1_IRQHandler+0xc0>)
 80014ec:	685b      	ldr	r3, [r3, #4]
 80014ee:	71fb      	strb	r3, [r7, #7]
//      start...dato1, dato2, dato3, dato5, daton..end
		//entero -> atoi
		//float -> atof
		//sscanf
		//strcmp
		switch(state){
 80014f0:	4b2a      	ldr	r3, [pc, #168]	; (800159c <USART1_IRQHandler+0xc4>)
 80014f2:	781b      	ldrb	r3, [r3, #0]
 80014f4:	2b00      	cmp	r3, #0
 80014f6:	d002      	beq.n	80014fe <USART1_IRQHandler+0x26>
 80014f8:	2b01      	cmp	r3, #1
 80014fa:	d018      	beq.n	800152e <USART1_IRQHandler+0x56>
			count = 0;
			state = 0;
			break;
		}
	}
}
 80014fc:	e048      	b.n	8001590 <USART1_IRQHandler+0xb8>
			data.rx[count] = byte;
 80014fe:	4b28      	ldr	r3, [pc, #160]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001500:	781b      	ldrb	r3, [r3, #0]
 8001502:	4619      	mov	r1, r3
 8001504:	4a27      	ldr	r2, [pc, #156]	; (80015a4 <USART1_IRQHandler+0xcc>)
 8001506:	79fb      	ldrb	r3, [r7, #7]
 8001508:	5453      	strb	r3, [r2, r1]
			count += 1;
 800150a:	4b25      	ldr	r3, [pc, #148]	; (80015a0 <USART1_IRQHandler+0xc8>)
 800150c:	781b      	ldrb	r3, [r3, #0]
 800150e:	3301      	adds	r3, #1
 8001510:	b2da      	uxtb	r2, r3
 8001512:	4b23      	ldr	r3, [pc, #140]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001514:	701a      	strb	r2, [r3, #0]
			data.len = count;
 8001516:	4b22      	ldr	r3, [pc, #136]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001518:	781a      	ldrb	r2, [r3, #0]
 800151a:	4b22      	ldr	r3, [pc, #136]	; (80015a4 <USART1_IRQHandler+0xcc>)
 800151c:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
			if(byte == '\r'){
 8001520:	79fb      	ldrb	r3, [r7, #7]
 8001522:	2b0d      	cmp	r3, #13
 8001524:	d133      	bne.n	800158e <USART1_IRQHandler+0xb6>
				state = 1;
 8001526:	4b1d      	ldr	r3, [pc, #116]	; (800159c <USART1_IRQHandler+0xc4>)
 8001528:	2201      	movs	r2, #1
 800152a:	701a      	strb	r2, [r3, #0]
			break;
 800152c:	e02f      	b.n	800158e <USART1_IRQHandler+0xb6>
			if((byte == '\n') && (data.rx[count - 1] == '\r')){
 800152e:	79fb      	ldrb	r3, [r7, #7]
 8001530:	2b0a      	cmp	r3, #10
 8001532:	d11b      	bne.n	800156c <USART1_IRQHandler+0x94>
 8001534:	4b1a      	ldr	r3, [pc, #104]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001536:	781b      	ldrb	r3, [r3, #0]
 8001538:	3b01      	subs	r3, #1
 800153a:	4a1a      	ldr	r2, [pc, #104]	; (80015a4 <USART1_IRQHandler+0xcc>)
 800153c:	5cd3      	ldrb	r3, [r2, r3]
 800153e:	2b0d      	cmp	r3, #13
 8001540:	d114      	bne.n	800156c <USART1_IRQHandler+0x94>
				data.rx[count] = byte;
 8001542:	4b17      	ldr	r3, [pc, #92]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001544:	781b      	ldrb	r3, [r3, #0]
 8001546:	4619      	mov	r1, r3
 8001548:	4a16      	ldr	r2, [pc, #88]	; (80015a4 <USART1_IRQHandler+0xcc>)
 800154a:	79fb      	ldrb	r3, [r7, #7]
 800154c:	5453      	strb	r3, [r2, r1]
				count += 1;
 800154e:	4b14      	ldr	r3, [pc, #80]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001550:	781b      	ldrb	r3, [r3, #0]
 8001552:	3301      	adds	r3, #1
 8001554:	b2da      	uxtb	r2, r3
 8001556:	4b12      	ldr	r3, [pc, #72]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001558:	701a      	strb	r2, [r3, #0]
				data.len = count;
 800155a:	4b11      	ldr	r3, [pc, #68]	; (80015a0 <USART1_IRQHandler+0xc8>)
 800155c:	781a      	ldrb	r2, [r3, #0]
 800155e:	4b11      	ldr	r3, [pc, #68]	; (80015a4 <USART1_IRQHandler+0xcc>)
 8001560:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
				rxFlag = true;
 8001564:	4b10      	ldr	r3, [pc, #64]	; (80015a8 <USART1_IRQHandler+0xd0>)
 8001566:	2201      	movs	r2, #1
 8001568:	701a      	strb	r2, [r3, #0]
 800156a:	e009      	b.n	8001580 <USART1_IRQHandler+0xa8>
				memset(data.rx, 0, sizeof(RxData_t));
 800156c:	f240 1201 	movw	r2, #257	; 0x101
 8001570:	2100      	movs	r1, #0
 8001572:	480c      	ldr	r0, [pc, #48]	; (80015a4 <USART1_IRQHandler+0xcc>)
 8001574:	f000 ff8a 	bl	800248c <memset>
				data.len = 0;
 8001578:	4b0a      	ldr	r3, [pc, #40]	; (80015a4 <USART1_IRQHandler+0xcc>)
 800157a:	2200      	movs	r2, #0
 800157c:	f883 2100 	strb.w	r2, [r3, #256]	; 0x100
			count = 0;
 8001580:	4b07      	ldr	r3, [pc, #28]	; (80015a0 <USART1_IRQHandler+0xc8>)
 8001582:	2200      	movs	r2, #0
 8001584:	701a      	strb	r2, [r3, #0]
			state = 0;
 8001586:	4b05      	ldr	r3, [pc, #20]	; (800159c <USART1_IRQHandler+0xc4>)
 8001588:	2200      	movs	r2, #0
 800158a:	701a      	strb	r2, [r3, #0]
			break;
 800158c:	e000      	b.n	8001590 <USART1_IRQHandler+0xb8>
			break;
 800158e:	bf00      	nop
}
 8001590:	bf00      	nop
 8001592:	3708      	adds	r7, #8
 8001594:	46bd      	mov	sp, r7
 8001596:	bd80      	pop	{r7, pc}
 8001598:	40011000 	.word	0x40011000
 800159c:	200003b8 	.word	0x200003b8
 80015a0:	200003b9 	.word	0x200003b9
 80015a4:	20000230 	.word	0x20000230
 80015a8:	20000331 	.word	0x20000331

080015ac <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80015ac:	b480      	push	{r7}
 80015ae:	af00      	add	r7, sp, #0
  return 1;
 80015b0:	2301      	movs	r3, #1
}
 80015b2:	4618      	mov	r0, r3
 80015b4:	46bd      	mov	sp, r7
 80015b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ba:	4770      	bx	lr

080015bc <_kill>:

int _kill(int pid, int sig)
{
 80015bc:	b580      	push	{r7, lr}
 80015be:	b082      	sub	sp, #8
 80015c0:	af00      	add	r7, sp, #0
 80015c2:	6078      	str	r0, [r7, #4]
 80015c4:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80015c6:	f000 ffb3 	bl	8002530 <__errno>
 80015ca:	4603      	mov	r3, r0
 80015cc:	2216      	movs	r2, #22
 80015ce:	601a      	str	r2, [r3, #0]
  return -1;
 80015d0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80015d4:	4618      	mov	r0, r3
 80015d6:	3708      	adds	r7, #8
 80015d8:	46bd      	mov	sp, r7
 80015da:	bd80      	pop	{r7, pc}

080015dc <_exit>:

void _exit (int status)
{
 80015dc:	b580      	push	{r7, lr}
 80015de:	b082      	sub	sp, #8
 80015e0:	af00      	add	r7, sp, #0
 80015e2:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80015e4:	f04f 31ff 	mov.w	r1, #4294967295
 80015e8:	6878      	ldr	r0, [r7, #4]
 80015ea:	f7ff ffe7 	bl	80015bc <_kill>
  while (1) {}    /* Make sure we hang here */
 80015ee:	e7fe      	b.n	80015ee <_exit+0x12>

080015f0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b086      	sub	sp, #24
 80015f4:	af00      	add	r7, sp, #0
 80015f6:	60f8      	str	r0, [r7, #12]
 80015f8:	60b9      	str	r1, [r7, #8]
 80015fa:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80015fc:	2300      	movs	r3, #0
 80015fe:	617b      	str	r3, [r7, #20]
 8001600:	e00a      	b.n	8001618 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001602:	f3af 8000 	nop.w
 8001606:	4601      	mov	r1, r0
 8001608:	68bb      	ldr	r3, [r7, #8]
 800160a:	1c5a      	adds	r2, r3, #1
 800160c:	60ba      	str	r2, [r7, #8]
 800160e:	b2ca      	uxtb	r2, r1
 8001610:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001612:	697b      	ldr	r3, [r7, #20]
 8001614:	3301      	adds	r3, #1
 8001616:	617b      	str	r3, [r7, #20]
 8001618:	697a      	ldr	r2, [r7, #20]
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	429a      	cmp	r2, r3
 800161e:	dbf0      	blt.n	8001602 <_read+0x12>
  }

  return len;
 8001620:	687b      	ldr	r3, [r7, #4]
}
 8001622:	4618      	mov	r0, r3
 8001624:	3718      	adds	r7, #24
 8001626:	46bd      	mov	sp, r7
 8001628:	bd80      	pop	{r7, pc}

0800162a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800162a:	b580      	push	{r7, lr}
 800162c:	b086      	sub	sp, #24
 800162e:	af00      	add	r7, sp, #0
 8001630:	60f8      	str	r0, [r7, #12]
 8001632:	60b9      	str	r1, [r7, #8]
 8001634:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001636:	2300      	movs	r3, #0
 8001638:	617b      	str	r3, [r7, #20]
 800163a:	e009      	b.n	8001650 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800163c:	68bb      	ldr	r3, [r7, #8]
 800163e:	1c5a      	adds	r2, r3, #1
 8001640:	60ba      	str	r2, [r7, #8]
 8001642:	781b      	ldrb	r3, [r3, #0]
 8001644:	4618      	mov	r0, r3
 8001646:	f7ff fd09 	bl	800105c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800164a:	697b      	ldr	r3, [r7, #20]
 800164c:	3301      	adds	r3, #1
 800164e:	617b      	str	r3, [r7, #20]
 8001650:	697a      	ldr	r2, [r7, #20]
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	429a      	cmp	r2, r3
 8001656:	dbf1      	blt.n	800163c <_write+0x12>
  }
  return len;
 8001658:	687b      	ldr	r3, [r7, #4]
}
 800165a:	4618      	mov	r0, r3
 800165c:	3718      	adds	r7, #24
 800165e:	46bd      	mov	sp, r7
 8001660:	bd80      	pop	{r7, pc}

08001662 <_close>:

int _close(int file)
{
 8001662:	b480      	push	{r7}
 8001664:	b083      	sub	sp, #12
 8001666:	af00      	add	r7, sp, #0
 8001668:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800166a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800166e:	4618      	mov	r0, r3
 8001670:	370c      	adds	r7, #12
 8001672:	46bd      	mov	sp, r7
 8001674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001678:	4770      	bx	lr

0800167a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800167a:	b480      	push	{r7}
 800167c:	b083      	sub	sp, #12
 800167e:	af00      	add	r7, sp, #0
 8001680:	6078      	str	r0, [r7, #4]
 8001682:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001684:	683b      	ldr	r3, [r7, #0]
 8001686:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800168a:	605a      	str	r2, [r3, #4]
  return 0;
 800168c:	2300      	movs	r3, #0
}
 800168e:	4618      	mov	r0, r3
 8001690:	370c      	adds	r7, #12
 8001692:	46bd      	mov	sp, r7
 8001694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001698:	4770      	bx	lr

0800169a <_isatty>:

int _isatty(int file)
{
 800169a:	b480      	push	{r7}
 800169c:	b083      	sub	sp, #12
 800169e:	af00      	add	r7, sp, #0
 80016a0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80016a2:	2301      	movs	r3, #1
}
 80016a4:	4618      	mov	r0, r3
 80016a6:	370c      	adds	r7, #12
 80016a8:	46bd      	mov	sp, r7
 80016aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016ae:	4770      	bx	lr

080016b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80016b0:	b480      	push	{r7}
 80016b2:	b085      	sub	sp, #20
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	60f8      	str	r0, [r7, #12]
 80016b8:	60b9      	str	r1, [r7, #8]
 80016ba:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80016bc:	2300      	movs	r3, #0
}
 80016be:	4618      	mov	r0, r3
 80016c0:	3714      	adds	r7, #20
 80016c2:	46bd      	mov	sp, r7
 80016c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016c8:	4770      	bx	lr
	...

080016cc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80016cc:	b580      	push	{r7, lr}
 80016ce:	b086      	sub	sp, #24
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80016d4:	4a14      	ldr	r2, [pc, #80]	; (8001728 <_sbrk+0x5c>)
 80016d6:	4b15      	ldr	r3, [pc, #84]	; (800172c <_sbrk+0x60>)
 80016d8:	1ad3      	subs	r3, r2, r3
 80016da:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80016dc:	697b      	ldr	r3, [r7, #20]
 80016de:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80016e0:	4b13      	ldr	r3, [pc, #76]	; (8001730 <_sbrk+0x64>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d102      	bne.n	80016ee <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80016e8:	4b11      	ldr	r3, [pc, #68]	; (8001730 <_sbrk+0x64>)
 80016ea:	4a12      	ldr	r2, [pc, #72]	; (8001734 <_sbrk+0x68>)
 80016ec:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80016ee:	4b10      	ldr	r3, [pc, #64]	; (8001730 <_sbrk+0x64>)
 80016f0:	681a      	ldr	r2, [r3, #0]
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	4413      	add	r3, r2
 80016f6:	693a      	ldr	r2, [r7, #16]
 80016f8:	429a      	cmp	r2, r3
 80016fa:	d207      	bcs.n	800170c <_sbrk+0x40>
  {
    errno = ENOMEM;
 80016fc:	f000 ff18 	bl	8002530 <__errno>
 8001700:	4603      	mov	r3, r0
 8001702:	220c      	movs	r2, #12
 8001704:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001706:	f04f 33ff 	mov.w	r3, #4294967295
 800170a:	e009      	b.n	8001720 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800170c:	4b08      	ldr	r3, [pc, #32]	; (8001730 <_sbrk+0x64>)
 800170e:	681b      	ldr	r3, [r3, #0]
 8001710:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001712:	4b07      	ldr	r3, [pc, #28]	; (8001730 <_sbrk+0x64>)
 8001714:	681a      	ldr	r2, [r3, #0]
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	4413      	add	r3, r2
 800171a:	4a05      	ldr	r2, [pc, #20]	; (8001730 <_sbrk+0x64>)
 800171c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800171e:	68fb      	ldr	r3, [r7, #12]
}
 8001720:	4618      	mov	r0, r3
 8001722:	3718      	adds	r7, #24
 8001724:	46bd      	mov	sp, r7
 8001726:	bd80      	pop	{r7, pc}
 8001728:	20030000 	.word	0x20030000
 800172c:	00000400 	.word	0x00000400
 8001730:	200003bc 	.word	0x200003bc
 8001734:	20000510 	.word	0x20000510

08001738 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001738:	b480      	push	{r7}
 800173a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800173c:	4b06      	ldr	r3, [pc, #24]	; (8001758 <SystemInit+0x20>)
 800173e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001742:	4a05      	ldr	r2, [pc, #20]	; (8001758 <SystemInit+0x20>)
 8001744:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001748:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800174c:	bf00      	nop
 800174e:	46bd      	mov	sp, r7
 8001750:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001754:	4770      	bx	lr
 8001756:	bf00      	nop
 8001758:	e000ed00 	.word	0xe000ed00

0800175c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800175c:	480d      	ldr	r0, [pc, #52]	; (8001794 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800175e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001760:	f7ff ffea 	bl	8001738 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001764:	480c      	ldr	r0, [pc, #48]	; (8001798 <LoopForever+0x6>)
  ldr r1, =_edata
 8001766:	490d      	ldr	r1, [pc, #52]	; (800179c <LoopForever+0xa>)
  ldr r2, =_sidata
 8001768:	4a0d      	ldr	r2, [pc, #52]	; (80017a0 <LoopForever+0xe>)
  movs r3, #0
 800176a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800176c:	e002      	b.n	8001774 <LoopCopyDataInit>

0800176e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800176e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001770:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001772:	3304      	adds	r3, #4

08001774 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001774:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001776:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001778:	d3f9      	bcc.n	800176e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800177a:	4a0a      	ldr	r2, [pc, #40]	; (80017a4 <LoopForever+0x12>)
  ldr r4, =_ebss
 800177c:	4c0a      	ldr	r4, [pc, #40]	; (80017a8 <LoopForever+0x16>)
  movs r3, #0
 800177e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001780:	e001      	b.n	8001786 <LoopFillZerobss>

08001782 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001782:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001784:	3204      	adds	r2, #4

08001786 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001786:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001788:	d3fb      	bcc.n	8001782 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800178a:	f000 fed7 	bl	800253c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800178e:	f7ff fc7d 	bl	800108c <main>

08001792 <LoopForever>:

LoopForever:
  b LoopForever
 8001792:	e7fe      	b.n	8001792 <LoopForever>
  ldr   r0, =_estack
 8001794:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8001798:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800179c:	20000210 	.word	0x20000210
  ldr r2, =_sidata
 80017a0:	080045bc 	.word	0x080045bc
  ldr r2, =_sbss
 80017a4:	20000210 	.word	0x20000210
  ldr r4, =_ebss
 80017a8:	2000050c 	.word	0x2000050c

080017ac <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80017ac:	e7fe      	b.n	80017ac <BusFault_Handler>

080017ae <__cvt>:
 80017ae:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80017b2:	ec55 4b10 	vmov	r4, r5, d0
 80017b6:	2d00      	cmp	r5, #0
 80017b8:	460e      	mov	r6, r1
 80017ba:	4619      	mov	r1, r3
 80017bc:	462b      	mov	r3, r5
 80017be:	bfbb      	ittet	lt
 80017c0:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80017c4:	461d      	movlt	r5, r3
 80017c6:	2300      	movge	r3, #0
 80017c8:	232d      	movlt	r3, #45	; 0x2d
 80017ca:	700b      	strb	r3, [r1, #0]
 80017cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80017ce:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80017d2:	4691      	mov	r9, r2
 80017d4:	f023 0820 	bic.w	r8, r3, #32
 80017d8:	bfbc      	itt	lt
 80017da:	4622      	movlt	r2, r4
 80017dc:	4614      	movlt	r4, r2
 80017de:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80017e2:	d005      	beq.n	80017f0 <__cvt+0x42>
 80017e4:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80017e8:	d100      	bne.n	80017ec <__cvt+0x3e>
 80017ea:	3601      	adds	r6, #1
 80017ec:	2102      	movs	r1, #2
 80017ee:	e000      	b.n	80017f2 <__cvt+0x44>
 80017f0:	2103      	movs	r1, #3
 80017f2:	ab03      	add	r3, sp, #12
 80017f4:	9301      	str	r3, [sp, #4]
 80017f6:	ab02      	add	r3, sp, #8
 80017f8:	9300      	str	r3, [sp, #0]
 80017fa:	ec45 4b10 	vmov	d0, r4, r5
 80017fe:	4653      	mov	r3, sl
 8001800:	4632      	mov	r2, r6
 8001802:	f000 ff4d 	bl	80026a0 <_dtoa_r>
 8001806:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800180a:	4607      	mov	r7, r0
 800180c:	d102      	bne.n	8001814 <__cvt+0x66>
 800180e:	f019 0f01 	tst.w	r9, #1
 8001812:	d022      	beq.n	800185a <__cvt+0xac>
 8001814:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001818:	eb07 0906 	add.w	r9, r7, r6
 800181c:	d110      	bne.n	8001840 <__cvt+0x92>
 800181e:	783b      	ldrb	r3, [r7, #0]
 8001820:	2b30      	cmp	r3, #48	; 0x30
 8001822:	d10a      	bne.n	800183a <__cvt+0x8c>
 8001824:	2200      	movs	r2, #0
 8001826:	2300      	movs	r3, #0
 8001828:	4620      	mov	r0, r4
 800182a:	4629      	mov	r1, r5
 800182c:	f7ff f95c 	bl	8000ae8 <__aeabi_dcmpeq>
 8001830:	b918      	cbnz	r0, 800183a <__cvt+0x8c>
 8001832:	f1c6 0601 	rsb	r6, r6, #1
 8001836:	f8ca 6000 	str.w	r6, [sl]
 800183a:	f8da 3000 	ldr.w	r3, [sl]
 800183e:	4499      	add	r9, r3
 8001840:	2200      	movs	r2, #0
 8001842:	2300      	movs	r3, #0
 8001844:	4620      	mov	r0, r4
 8001846:	4629      	mov	r1, r5
 8001848:	f7ff f94e 	bl	8000ae8 <__aeabi_dcmpeq>
 800184c:	b108      	cbz	r0, 8001852 <__cvt+0xa4>
 800184e:	f8cd 900c 	str.w	r9, [sp, #12]
 8001852:	2230      	movs	r2, #48	; 0x30
 8001854:	9b03      	ldr	r3, [sp, #12]
 8001856:	454b      	cmp	r3, r9
 8001858:	d307      	bcc.n	800186a <__cvt+0xbc>
 800185a:	9b03      	ldr	r3, [sp, #12]
 800185c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800185e:	1bdb      	subs	r3, r3, r7
 8001860:	4638      	mov	r0, r7
 8001862:	6013      	str	r3, [r2, #0]
 8001864:	b004      	add	sp, #16
 8001866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800186a:	1c59      	adds	r1, r3, #1
 800186c:	9103      	str	r1, [sp, #12]
 800186e:	701a      	strb	r2, [r3, #0]
 8001870:	e7f0      	b.n	8001854 <__cvt+0xa6>

08001872 <__exponent>:
 8001872:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001874:	4603      	mov	r3, r0
 8001876:	2900      	cmp	r1, #0
 8001878:	bfb8      	it	lt
 800187a:	4249      	neglt	r1, r1
 800187c:	f803 2b02 	strb.w	r2, [r3], #2
 8001880:	bfb4      	ite	lt
 8001882:	222d      	movlt	r2, #45	; 0x2d
 8001884:	222b      	movge	r2, #43	; 0x2b
 8001886:	2909      	cmp	r1, #9
 8001888:	7042      	strb	r2, [r0, #1]
 800188a:	dd2a      	ble.n	80018e2 <__exponent+0x70>
 800188c:	f10d 0207 	add.w	r2, sp, #7
 8001890:	4617      	mov	r7, r2
 8001892:	260a      	movs	r6, #10
 8001894:	4694      	mov	ip, r2
 8001896:	fb91 f5f6 	sdiv	r5, r1, r6
 800189a:	fb06 1415 	mls	r4, r6, r5, r1
 800189e:	3430      	adds	r4, #48	; 0x30
 80018a0:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80018a4:	460c      	mov	r4, r1
 80018a6:	2c63      	cmp	r4, #99	; 0x63
 80018a8:	f102 32ff 	add.w	r2, r2, #4294967295
 80018ac:	4629      	mov	r1, r5
 80018ae:	dcf1      	bgt.n	8001894 <__exponent+0x22>
 80018b0:	3130      	adds	r1, #48	; 0x30
 80018b2:	f1ac 0402 	sub.w	r4, ip, #2
 80018b6:	f802 1c01 	strb.w	r1, [r2, #-1]
 80018ba:	1c41      	adds	r1, r0, #1
 80018bc:	4622      	mov	r2, r4
 80018be:	42ba      	cmp	r2, r7
 80018c0:	d30a      	bcc.n	80018d8 <__exponent+0x66>
 80018c2:	f10d 0209 	add.w	r2, sp, #9
 80018c6:	eba2 020c 	sub.w	r2, r2, ip
 80018ca:	42bc      	cmp	r4, r7
 80018cc:	bf88      	it	hi
 80018ce:	2200      	movhi	r2, #0
 80018d0:	4413      	add	r3, r2
 80018d2:	1a18      	subs	r0, r3, r0
 80018d4:	b003      	add	sp, #12
 80018d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018d8:	f812 5b01 	ldrb.w	r5, [r2], #1
 80018dc:	f801 5f01 	strb.w	r5, [r1, #1]!
 80018e0:	e7ed      	b.n	80018be <__exponent+0x4c>
 80018e2:	2330      	movs	r3, #48	; 0x30
 80018e4:	3130      	adds	r1, #48	; 0x30
 80018e6:	7083      	strb	r3, [r0, #2]
 80018e8:	70c1      	strb	r1, [r0, #3]
 80018ea:	1d03      	adds	r3, r0, #4
 80018ec:	e7f1      	b.n	80018d2 <__exponent+0x60>
	...

080018f0 <_printf_float>:
 80018f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80018f4:	ed2d 8b02 	vpush	{d8}
 80018f8:	b08d      	sub	sp, #52	; 0x34
 80018fa:	460c      	mov	r4, r1
 80018fc:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001900:	4616      	mov	r6, r2
 8001902:	461f      	mov	r7, r3
 8001904:	4605      	mov	r5, r0
 8001906:	f000 fdc9 	bl	800249c <_localeconv_r>
 800190a:	f8d0 a000 	ldr.w	sl, [r0]
 800190e:	4650      	mov	r0, sl
 8001910:	f7fe fcbe 	bl	8000290 <strlen>
 8001914:	2300      	movs	r3, #0
 8001916:	930a      	str	r3, [sp, #40]	; 0x28
 8001918:	6823      	ldr	r3, [r4, #0]
 800191a:	9305      	str	r3, [sp, #20]
 800191c:	f8d8 3000 	ldr.w	r3, [r8]
 8001920:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001924:	3307      	adds	r3, #7
 8001926:	f023 0307 	bic.w	r3, r3, #7
 800192a:	f103 0208 	add.w	r2, r3, #8
 800192e:	f8c8 2000 	str.w	r2, [r8]
 8001932:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001936:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800193a:	9307      	str	r3, [sp, #28]
 800193c:	f8cd 8018 	str.w	r8, [sp, #24]
 8001940:	ee08 0a10 	vmov	s16, r0
 8001944:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001948:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800194c:	4b9e      	ldr	r3, [pc, #632]	; (8001bc8 <_printf_float+0x2d8>)
 800194e:	f04f 32ff 	mov.w	r2, #4294967295
 8001952:	f7ff f8fb 	bl	8000b4c <__aeabi_dcmpun>
 8001956:	bb88      	cbnz	r0, 80019bc <_printf_float+0xcc>
 8001958:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800195c:	4b9a      	ldr	r3, [pc, #616]	; (8001bc8 <_printf_float+0x2d8>)
 800195e:	f04f 32ff 	mov.w	r2, #4294967295
 8001962:	f7ff f8d5 	bl	8000b10 <__aeabi_dcmple>
 8001966:	bb48      	cbnz	r0, 80019bc <_printf_float+0xcc>
 8001968:	2200      	movs	r2, #0
 800196a:	2300      	movs	r3, #0
 800196c:	4640      	mov	r0, r8
 800196e:	4649      	mov	r1, r9
 8001970:	f7ff f8c4 	bl	8000afc <__aeabi_dcmplt>
 8001974:	b110      	cbz	r0, 800197c <_printf_float+0x8c>
 8001976:	232d      	movs	r3, #45	; 0x2d
 8001978:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800197c:	4a93      	ldr	r2, [pc, #588]	; (8001bcc <_printf_float+0x2dc>)
 800197e:	4b94      	ldr	r3, [pc, #592]	; (8001bd0 <_printf_float+0x2e0>)
 8001980:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8001984:	bf94      	ite	ls
 8001986:	4690      	movls	r8, r2
 8001988:	4698      	movhi	r8, r3
 800198a:	2303      	movs	r3, #3
 800198c:	6123      	str	r3, [r4, #16]
 800198e:	9b05      	ldr	r3, [sp, #20]
 8001990:	f023 0304 	bic.w	r3, r3, #4
 8001994:	6023      	str	r3, [r4, #0]
 8001996:	f04f 0900 	mov.w	r9, #0
 800199a:	9700      	str	r7, [sp, #0]
 800199c:	4633      	mov	r3, r6
 800199e:	aa0b      	add	r2, sp, #44	; 0x2c
 80019a0:	4621      	mov	r1, r4
 80019a2:	4628      	mov	r0, r5
 80019a4:	f000 f9da 	bl	8001d5c <_printf_common>
 80019a8:	3001      	adds	r0, #1
 80019aa:	f040 8090 	bne.w	8001ace <_printf_float+0x1de>
 80019ae:	f04f 30ff 	mov.w	r0, #4294967295
 80019b2:	b00d      	add	sp, #52	; 0x34
 80019b4:	ecbd 8b02 	vpop	{d8}
 80019b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80019bc:	4642      	mov	r2, r8
 80019be:	464b      	mov	r3, r9
 80019c0:	4640      	mov	r0, r8
 80019c2:	4649      	mov	r1, r9
 80019c4:	f7ff f8c2 	bl	8000b4c <__aeabi_dcmpun>
 80019c8:	b140      	cbz	r0, 80019dc <_printf_float+0xec>
 80019ca:	464b      	mov	r3, r9
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	bfbc      	itt	lt
 80019d0:	232d      	movlt	r3, #45	; 0x2d
 80019d2:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80019d6:	4a7f      	ldr	r2, [pc, #508]	; (8001bd4 <_printf_float+0x2e4>)
 80019d8:	4b7f      	ldr	r3, [pc, #508]	; (8001bd8 <_printf_float+0x2e8>)
 80019da:	e7d1      	b.n	8001980 <_printf_float+0x90>
 80019dc:	6863      	ldr	r3, [r4, #4]
 80019de:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80019e2:	9206      	str	r2, [sp, #24]
 80019e4:	1c5a      	adds	r2, r3, #1
 80019e6:	d13f      	bne.n	8001a68 <_printf_float+0x178>
 80019e8:	2306      	movs	r3, #6
 80019ea:	6063      	str	r3, [r4, #4]
 80019ec:	9b05      	ldr	r3, [sp, #20]
 80019ee:	6861      	ldr	r1, [r4, #4]
 80019f0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80019f4:	2300      	movs	r3, #0
 80019f6:	9303      	str	r3, [sp, #12]
 80019f8:	ab0a      	add	r3, sp, #40	; 0x28
 80019fa:	e9cd b301 	strd	fp, r3, [sp, #4]
 80019fe:	ab09      	add	r3, sp, #36	; 0x24
 8001a00:	ec49 8b10 	vmov	d0, r8, r9
 8001a04:	9300      	str	r3, [sp, #0]
 8001a06:	6022      	str	r2, [r4, #0]
 8001a08:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001a0c:	4628      	mov	r0, r5
 8001a0e:	f7ff fece 	bl	80017ae <__cvt>
 8001a12:	9b06      	ldr	r3, [sp, #24]
 8001a14:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001a16:	2b47      	cmp	r3, #71	; 0x47
 8001a18:	4680      	mov	r8, r0
 8001a1a:	d108      	bne.n	8001a2e <_printf_float+0x13e>
 8001a1c:	1cc8      	adds	r0, r1, #3
 8001a1e:	db02      	blt.n	8001a26 <_printf_float+0x136>
 8001a20:	6863      	ldr	r3, [r4, #4]
 8001a22:	4299      	cmp	r1, r3
 8001a24:	dd41      	ble.n	8001aaa <_printf_float+0x1ba>
 8001a26:	f1ab 0302 	sub.w	r3, fp, #2
 8001a2a:	fa5f fb83 	uxtb.w	fp, r3
 8001a2e:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001a32:	d820      	bhi.n	8001a76 <_printf_float+0x186>
 8001a34:	3901      	subs	r1, #1
 8001a36:	465a      	mov	r2, fp
 8001a38:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001a3c:	9109      	str	r1, [sp, #36]	; 0x24
 8001a3e:	f7ff ff18 	bl	8001872 <__exponent>
 8001a42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001a44:	1813      	adds	r3, r2, r0
 8001a46:	2a01      	cmp	r2, #1
 8001a48:	4681      	mov	r9, r0
 8001a4a:	6123      	str	r3, [r4, #16]
 8001a4c:	dc02      	bgt.n	8001a54 <_printf_float+0x164>
 8001a4e:	6822      	ldr	r2, [r4, #0]
 8001a50:	07d2      	lsls	r2, r2, #31
 8001a52:	d501      	bpl.n	8001a58 <_printf_float+0x168>
 8001a54:	3301      	adds	r3, #1
 8001a56:	6123      	str	r3, [r4, #16]
 8001a58:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d09c      	beq.n	800199a <_printf_float+0xaa>
 8001a60:	232d      	movs	r3, #45	; 0x2d
 8001a62:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001a66:	e798      	b.n	800199a <_printf_float+0xaa>
 8001a68:	9a06      	ldr	r2, [sp, #24]
 8001a6a:	2a47      	cmp	r2, #71	; 0x47
 8001a6c:	d1be      	bne.n	80019ec <_printf_float+0xfc>
 8001a6e:	2b00      	cmp	r3, #0
 8001a70:	d1bc      	bne.n	80019ec <_printf_float+0xfc>
 8001a72:	2301      	movs	r3, #1
 8001a74:	e7b9      	b.n	80019ea <_printf_float+0xfa>
 8001a76:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8001a7a:	d118      	bne.n	8001aae <_printf_float+0x1be>
 8001a7c:	2900      	cmp	r1, #0
 8001a7e:	6863      	ldr	r3, [r4, #4]
 8001a80:	dd0b      	ble.n	8001a9a <_printf_float+0x1aa>
 8001a82:	6121      	str	r1, [r4, #16]
 8001a84:	b913      	cbnz	r3, 8001a8c <_printf_float+0x19c>
 8001a86:	6822      	ldr	r2, [r4, #0]
 8001a88:	07d0      	lsls	r0, r2, #31
 8001a8a:	d502      	bpl.n	8001a92 <_printf_float+0x1a2>
 8001a8c:	3301      	adds	r3, #1
 8001a8e:	440b      	add	r3, r1
 8001a90:	6123      	str	r3, [r4, #16]
 8001a92:	65a1      	str	r1, [r4, #88]	; 0x58
 8001a94:	f04f 0900 	mov.w	r9, #0
 8001a98:	e7de      	b.n	8001a58 <_printf_float+0x168>
 8001a9a:	b913      	cbnz	r3, 8001aa2 <_printf_float+0x1b2>
 8001a9c:	6822      	ldr	r2, [r4, #0]
 8001a9e:	07d2      	lsls	r2, r2, #31
 8001aa0:	d501      	bpl.n	8001aa6 <_printf_float+0x1b6>
 8001aa2:	3302      	adds	r3, #2
 8001aa4:	e7f4      	b.n	8001a90 <_printf_float+0x1a0>
 8001aa6:	2301      	movs	r3, #1
 8001aa8:	e7f2      	b.n	8001a90 <_printf_float+0x1a0>
 8001aaa:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8001aae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001ab0:	4299      	cmp	r1, r3
 8001ab2:	db05      	blt.n	8001ac0 <_printf_float+0x1d0>
 8001ab4:	6823      	ldr	r3, [r4, #0]
 8001ab6:	6121      	str	r1, [r4, #16]
 8001ab8:	07d8      	lsls	r0, r3, #31
 8001aba:	d5ea      	bpl.n	8001a92 <_printf_float+0x1a2>
 8001abc:	1c4b      	adds	r3, r1, #1
 8001abe:	e7e7      	b.n	8001a90 <_printf_float+0x1a0>
 8001ac0:	2900      	cmp	r1, #0
 8001ac2:	bfd4      	ite	le
 8001ac4:	f1c1 0202 	rsble	r2, r1, #2
 8001ac8:	2201      	movgt	r2, #1
 8001aca:	4413      	add	r3, r2
 8001acc:	e7e0      	b.n	8001a90 <_printf_float+0x1a0>
 8001ace:	6823      	ldr	r3, [r4, #0]
 8001ad0:	055a      	lsls	r2, r3, #21
 8001ad2:	d407      	bmi.n	8001ae4 <_printf_float+0x1f4>
 8001ad4:	6923      	ldr	r3, [r4, #16]
 8001ad6:	4642      	mov	r2, r8
 8001ad8:	4631      	mov	r1, r6
 8001ada:	4628      	mov	r0, r5
 8001adc:	47b8      	blx	r7
 8001ade:	3001      	adds	r0, #1
 8001ae0:	d12c      	bne.n	8001b3c <_printf_float+0x24c>
 8001ae2:	e764      	b.n	80019ae <_printf_float+0xbe>
 8001ae4:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001ae8:	f240 80e0 	bls.w	8001cac <_printf_float+0x3bc>
 8001aec:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001af0:	2200      	movs	r2, #0
 8001af2:	2300      	movs	r3, #0
 8001af4:	f7fe fff8 	bl	8000ae8 <__aeabi_dcmpeq>
 8001af8:	2800      	cmp	r0, #0
 8001afa:	d034      	beq.n	8001b66 <_printf_float+0x276>
 8001afc:	4a37      	ldr	r2, [pc, #220]	; (8001bdc <_printf_float+0x2ec>)
 8001afe:	2301      	movs	r3, #1
 8001b00:	4631      	mov	r1, r6
 8001b02:	4628      	mov	r0, r5
 8001b04:	47b8      	blx	r7
 8001b06:	3001      	adds	r0, #1
 8001b08:	f43f af51 	beq.w	80019ae <_printf_float+0xbe>
 8001b0c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001b10:	429a      	cmp	r2, r3
 8001b12:	db02      	blt.n	8001b1a <_printf_float+0x22a>
 8001b14:	6823      	ldr	r3, [r4, #0]
 8001b16:	07d8      	lsls	r0, r3, #31
 8001b18:	d510      	bpl.n	8001b3c <_printf_float+0x24c>
 8001b1a:	ee18 3a10 	vmov	r3, s16
 8001b1e:	4652      	mov	r2, sl
 8001b20:	4631      	mov	r1, r6
 8001b22:	4628      	mov	r0, r5
 8001b24:	47b8      	blx	r7
 8001b26:	3001      	adds	r0, #1
 8001b28:	f43f af41 	beq.w	80019ae <_printf_float+0xbe>
 8001b2c:	f04f 0800 	mov.w	r8, #0
 8001b30:	f104 091a 	add.w	r9, r4, #26
 8001b34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001b36:	3b01      	subs	r3, #1
 8001b38:	4543      	cmp	r3, r8
 8001b3a:	dc09      	bgt.n	8001b50 <_printf_float+0x260>
 8001b3c:	6823      	ldr	r3, [r4, #0]
 8001b3e:	079b      	lsls	r3, r3, #30
 8001b40:	f100 8107 	bmi.w	8001d52 <_printf_float+0x462>
 8001b44:	68e0      	ldr	r0, [r4, #12]
 8001b46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001b48:	4298      	cmp	r0, r3
 8001b4a:	bfb8      	it	lt
 8001b4c:	4618      	movlt	r0, r3
 8001b4e:	e730      	b.n	80019b2 <_printf_float+0xc2>
 8001b50:	2301      	movs	r3, #1
 8001b52:	464a      	mov	r2, r9
 8001b54:	4631      	mov	r1, r6
 8001b56:	4628      	mov	r0, r5
 8001b58:	47b8      	blx	r7
 8001b5a:	3001      	adds	r0, #1
 8001b5c:	f43f af27 	beq.w	80019ae <_printf_float+0xbe>
 8001b60:	f108 0801 	add.w	r8, r8, #1
 8001b64:	e7e6      	b.n	8001b34 <_printf_float+0x244>
 8001b66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	dc39      	bgt.n	8001be0 <_printf_float+0x2f0>
 8001b6c:	4a1b      	ldr	r2, [pc, #108]	; (8001bdc <_printf_float+0x2ec>)
 8001b6e:	2301      	movs	r3, #1
 8001b70:	4631      	mov	r1, r6
 8001b72:	4628      	mov	r0, r5
 8001b74:	47b8      	blx	r7
 8001b76:	3001      	adds	r0, #1
 8001b78:	f43f af19 	beq.w	80019ae <_printf_float+0xbe>
 8001b7c:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001b80:	4313      	orrs	r3, r2
 8001b82:	d102      	bne.n	8001b8a <_printf_float+0x29a>
 8001b84:	6823      	ldr	r3, [r4, #0]
 8001b86:	07d9      	lsls	r1, r3, #31
 8001b88:	d5d8      	bpl.n	8001b3c <_printf_float+0x24c>
 8001b8a:	ee18 3a10 	vmov	r3, s16
 8001b8e:	4652      	mov	r2, sl
 8001b90:	4631      	mov	r1, r6
 8001b92:	4628      	mov	r0, r5
 8001b94:	47b8      	blx	r7
 8001b96:	3001      	adds	r0, #1
 8001b98:	f43f af09 	beq.w	80019ae <_printf_float+0xbe>
 8001b9c:	f04f 0900 	mov.w	r9, #0
 8001ba0:	f104 0a1a 	add.w	sl, r4, #26
 8001ba4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001ba6:	425b      	negs	r3, r3
 8001ba8:	454b      	cmp	r3, r9
 8001baa:	dc01      	bgt.n	8001bb0 <_printf_float+0x2c0>
 8001bac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001bae:	e792      	b.n	8001ad6 <_printf_float+0x1e6>
 8001bb0:	2301      	movs	r3, #1
 8001bb2:	4652      	mov	r2, sl
 8001bb4:	4631      	mov	r1, r6
 8001bb6:	4628      	mov	r0, r5
 8001bb8:	47b8      	blx	r7
 8001bba:	3001      	adds	r0, #1
 8001bbc:	f43f aef7 	beq.w	80019ae <_printf_float+0xbe>
 8001bc0:	f109 0901 	add.w	r9, r9, #1
 8001bc4:	e7ee      	b.n	8001ba4 <_printf_float+0x2b4>
 8001bc6:	bf00      	nop
 8001bc8:	7fefffff 	.word	0x7fefffff
 8001bcc:	08004241 	.word	0x08004241
 8001bd0:	08004245 	.word	0x08004245
 8001bd4:	08004249 	.word	0x08004249
 8001bd8:	0800424d 	.word	0x0800424d
 8001bdc:	08004251 	.word	0x08004251
 8001be0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001be2:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001be4:	429a      	cmp	r2, r3
 8001be6:	bfa8      	it	ge
 8001be8:	461a      	movge	r2, r3
 8001bea:	2a00      	cmp	r2, #0
 8001bec:	4691      	mov	r9, r2
 8001bee:	dc37      	bgt.n	8001c60 <_printf_float+0x370>
 8001bf0:	f04f 0b00 	mov.w	fp, #0
 8001bf4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001bf8:	f104 021a 	add.w	r2, r4, #26
 8001bfc:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001bfe:	9305      	str	r3, [sp, #20]
 8001c00:	eba3 0309 	sub.w	r3, r3, r9
 8001c04:	455b      	cmp	r3, fp
 8001c06:	dc33      	bgt.n	8001c70 <_printf_float+0x380>
 8001c08:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001c0c:	429a      	cmp	r2, r3
 8001c0e:	db3b      	blt.n	8001c88 <_printf_float+0x398>
 8001c10:	6823      	ldr	r3, [r4, #0]
 8001c12:	07da      	lsls	r2, r3, #31
 8001c14:	d438      	bmi.n	8001c88 <_printf_float+0x398>
 8001c16:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001c1a:	eba2 0903 	sub.w	r9, r2, r3
 8001c1e:	9b05      	ldr	r3, [sp, #20]
 8001c20:	1ad2      	subs	r2, r2, r3
 8001c22:	4591      	cmp	r9, r2
 8001c24:	bfa8      	it	ge
 8001c26:	4691      	movge	r9, r2
 8001c28:	f1b9 0f00 	cmp.w	r9, #0
 8001c2c:	dc35      	bgt.n	8001c9a <_printf_float+0x3aa>
 8001c2e:	f04f 0800 	mov.w	r8, #0
 8001c32:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001c36:	f104 0a1a 	add.w	sl, r4, #26
 8001c3a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001c3e:	1a9b      	subs	r3, r3, r2
 8001c40:	eba3 0309 	sub.w	r3, r3, r9
 8001c44:	4543      	cmp	r3, r8
 8001c46:	f77f af79 	ble.w	8001b3c <_printf_float+0x24c>
 8001c4a:	2301      	movs	r3, #1
 8001c4c:	4652      	mov	r2, sl
 8001c4e:	4631      	mov	r1, r6
 8001c50:	4628      	mov	r0, r5
 8001c52:	47b8      	blx	r7
 8001c54:	3001      	adds	r0, #1
 8001c56:	f43f aeaa 	beq.w	80019ae <_printf_float+0xbe>
 8001c5a:	f108 0801 	add.w	r8, r8, #1
 8001c5e:	e7ec      	b.n	8001c3a <_printf_float+0x34a>
 8001c60:	4613      	mov	r3, r2
 8001c62:	4631      	mov	r1, r6
 8001c64:	4642      	mov	r2, r8
 8001c66:	4628      	mov	r0, r5
 8001c68:	47b8      	blx	r7
 8001c6a:	3001      	adds	r0, #1
 8001c6c:	d1c0      	bne.n	8001bf0 <_printf_float+0x300>
 8001c6e:	e69e      	b.n	80019ae <_printf_float+0xbe>
 8001c70:	2301      	movs	r3, #1
 8001c72:	4631      	mov	r1, r6
 8001c74:	4628      	mov	r0, r5
 8001c76:	9205      	str	r2, [sp, #20]
 8001c78:	47b8      	blx	r7
 8001c7a:	3001      	adds	r0, #1
 8001c7c:	f43f ae97 	beq.w	80019ae <_printf_float+0xbe>
 8001c80:	9a05      	ldr	r2, [sp, #20]
 8001c82:	f10b 0b01 	add.w	fp, fp, #1
 8001c86:	e7b9      	b.n	8001bfc <_printf_float+0x30c>
 8001c88:	ee18 3a10 	vmov	r3, s16
 8001c8c:	4652      	mov	r2, sl
 8001c8e:	4631      	mov	r1, r6
 8001c90:	4628      	mov	r0, r5
 8001c92:	47b8      	blx	r7
 8001c94:	3001      	adds	r0, #1
 8001c96:	d1be      	bne.n	8001c16 <_printf_float+0x326>
 8001c98:	e689      	b.n	80019ae <_printf_float+0xbe>
 8001c9a:	9a05      	ldr	r2, [sp, #20]
 8001c9c:	464b      	mov	r3, r9
 8001c9e:	4442      	add	r2, r8
 8001ca0:	4631      	mov	r1, r6
 8001ca2:	4628      	mov	r0, r5
 8001ca4:	47b8      	blx	r7
 8001ca6:	3001      	adds	r0, #1
 8001ca8:	d1c1      	bne.n	8001c2e <_printf_float+0x33e>
 8001caa:	e680      	b.n	80019ae <_printf_float+0xbe>
 8001cac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001cae:	2a01      	cmp	r2, #1
 8001cb0:	dc01      	bgt.n	8001cb6 <_printf_float+0x3c6>
 8001cb2:	07db      	lsls	r3, r3, #31
 8001cb4:	d53a      	bpl.n	8001d2c <_printf_float+0x43c>
 8001cb6:	2301      	movs	r3, #1
 8001cb8:	4642      	mov	r2, r8
 8001cba:	4631      	mov	r1, r6
 8001cbc:	4628      	mov	r0, r5
 8001cbe:	47b8      	blx	r7
 8001cc0:	3001      	adds	r0, #1
 8001cc2:	f43f ae74 	beq.w	80019ae <_printf_float+0xbe>
 8001cc6:	ee18 3a10 	vmov	r3, s16
 8001cca:	4652      	mov	r2, sl
 8001ccc:	4631      	mov	r1, r6
 8001cce:	4628      	mov	r0, r5
 8001cd0:	47b8      	blx	r7
 8001cd2:	3001      	adds	r0, #1
 8001cd4:	f43f ae6b 	beq.w	80019ae <_printf_float+0xbe>
 8001cd8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001cdc:	2200      	movs	r2, #0
 8001cde:	2300      	movs	r3, #0
 8001ce0:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001ce4:	f7fe ff00 	bl	8000ae8 <__aeabi_dcmpeq>
 8001ce8:	b9d8      	cbnz	r0, 8001d22 <_printf_float+0x432>
 8001cea:	f10a 33ff 	add.w	r3, sl, #4294967295
 8001cee:	f108 0201 	add.w	r2, r8, #1
 8001cf2:	4631      	mov	r1, r6
 8001cf4:	4628      	mov	r0, r5
 8001cf6:	47b8      	blx	r7
 8001cf8:	3001      	adds	r0, #1
 8001cfa:	d10e      	bne.n	8001d1a <_printf_float+0x42a>
 8001cfc:	e657      	b.n	80019ae <_printf_float+0xbe>
 8001cfe:	2301      	movs	r3, #1
 8001d00:	4652      	mov	r2, sl
 8001d02:	4631      	mov	r1, r6
 8001d04:	4628      	mov	r0, r5
 8001d06:	47b8      	blx	r7
 8001d08:	3001      	adds	r0, #1
 8001d0a:	f43f ae50 	beq.w	80019ae <_printf_float+0xbe>
 8001d0e:	f108 0801 	add.w	r8, r8, #1
 8001d12:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001d14:	3b01      	subs	r3, #1
 8001d16:	4543      	cmp	r3, r8
 8001d18:	dcf1      	bgt.n	8001cfe <_printf_float+0x40e>
 8001d1a:	464b      	mov	r3, r9
 8001d1c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001d20:	e6da      	b.n	8001ad8 <_printf_float+0x1e8>
 8001d22:	f04f 0800 	mov.w	r8, #0
 8001d26:	f104 0a1a 	add.w	sl, r4, #26
 8001d2a:	e7f2      	b.n	8001d12 <_printf_float+0x422>
 8001d2c:	2301      	movs	r3, #1
 8001d2e:	4642      	mov	r2, r8
 8001d30:	e7df      	b.n	8001cf2 <_printf_float+0x402>
 8001d32:	2301      	movs	r3, #1
 8001d34:	464a      	mov	r2, r9
 8001d36:	4631      	mov	r1, r6
 8001d38:	4628      	mov	r0, r5
 8001d3a:	47b8      	blx	r7
 8001d3c:	3001      	adds	r0, #1
 8001d3e:	f43f ae36 	beq.w	80019ae <_printf_float+0xbe>
 8001d42:	f108 0801 	add.w	r8, r8, #1
 8001d46:	68e3      	ldr	r3, [r4, #12]
 8001d48:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001d4a:	1a5b      	subs	r3, r3, r1
 8001d4c:	4543      	cmp	r3, r8
 8001d4e:	dcf0      	bgt.n	8001d32 <_printf_float+0x442>
 8001d50:	e6f8      	b.n	8001b44 <_printf_float+0x254>
 8001d52:	f04f 0800 	mov.w	r8, #0
 8001d56:	f104 0919 	add.w	r9, r4, #25
 8001d5a:	e7f4      	b.n	8001d46 <_printf_float+0x456>

08001d5c <_printf_common>:
 8001d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d60:	4616      	mov	r6, r2
 8001d62:	4699      	mov	r9, r3
 8001d64:	688a      	ldr	r2, [r1, #8]
 8001d66:	690b      	ldr	r3, [r1, #16]
 8001d68:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001d6c:	4293      	cmp	r3, r2
 8001d6e:	bfb8      	it	lt
 8001d70:	4613      	movlt	r3, r2
 8001d72:	6033      	str	r3, [r6, #0]
 8001d74:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001d78:	4607      	mov	r7, r0
 8001d7a:	460c      	mov	r4, r1
 8001d7c:	b10a      	cbz	r2, 8001d82 <_printf_common+0x26>
 8001d7e:	3301      	adds	r3, #1
 8001d80:	6033      	str	r3, [r6, #0]
 8001d82:	6823      	ldr	r3, [r4, #0]
 8001d84:	0699      	lsls	r1, r3, #26
 8001d86:	bf42      	ittt	mi
 8001d88:	6833      	ldrmi	r3, [r6, #0]
 8001d8a:	3302      	addmi	r3, #2
 8001d8c:	6033      	strmi	r3, [r6, #0]
 8001d8e:	6825      	ldr	r5, [r4, #0]
 8001d90:	f015 0506 	ands.w	r5, r5, #6
 8001d94:	d106      	bne.n	8001da4 <_printf_common+0x48>
 8001d96:	f104 0a19 	add.w	sl, r4, #25
 8001d9a:	68e3      	ldr	r3, [r4, #12]
 8001d9c:	6832      	ldr	r2, [r6, #0]
 8001d9e:	1a9b      	subs	r3, r3, r2
 8001da0:	42ab      	cmp	r3, r5
 8001da2:	dc26      	bgt.n	8001df2 <_printf_common+0x96>
 8001da4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001da8:	1e13      	subs	r3, r2, #0
 8001daa:	6822      	ldr	r2, [r4, #0]
 8001dac:	bf18      	it	ne
 8001dae:	2301      	movne	r3, #1
 8001db0:	0692      	lsls	r2, r2, #26
 8001db2:	d42b      	bmi.n	8001e0c <_printf_common+0xb0>
 8001db4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001db8:	4649      	mov	r1, r9
 8001dba:	4638      	mov	r0, r7
 8001dbc:	47c0      	blx	r8
 8001dbe:	3001      	adds	r0, #1
 8001dc0:	d01e      	beq.n	8001e00 <_printf_common+0xa4>
 8001dc2:	6823      	ldr	r3, [r4, #0]
 8001dc4:	6922      	ldr	r2, [r4, #16]
 8001dc6:	f003 0306 	and.w	r3, r3, #6
 8001dca:	2b04      	cmp	r3, #4
 8001dcc:	bf02      	ittt	eq
 8001dce:	68e5      	ldreq	r5, [r4, #12]
 8001dd0:	6833      	ldreq	r3, [r6, #0]
 8001dd2:	1aed      	subeq	r5, r5, r3
 8001dd4:	68a3      	ldr	r3, [r4, #8]
 8001dd6:	bf0c      	ite	eq
 8001dd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001ddc:	2500      	movne	r5, #0
 8001dde:	4293      	cmp	r3, r2
 8001de0:	bfc4      	itt	gt
 8001de2:	1a9b      	subgt	r3, r3, r2
 8001de4:	18ed      	addgt	r5, r5, r3
 8001de6:	2600      	movs	r6, #0
 8001de8:	341a      	adds	r4, #26
 8001dea:	42b5      	cmp	r5, r6
 8001dec:	d11a      	bne.n	8001e24 <_printf_common+0xc8>
 8001dee:	2000      	movs	r0, #0
 8001df0:	e008      	b.n	8001e04 <_printf_common+0xa8>
 8001df2:	2301      	movs	r3, #1
 8001df4:	4652      	mov	r2, sl
 8001df6:	4649      	mov	r1, r9
 8001df8:	4638      	mov	r0, r7
 8001dfa:	47c0      	blx	r8
 8001dfc:	3001      	adds	r0, #1
 8001dfe:	d103      	bne.n	8001e08 <_printf_common+0xac>
 8001e00:	f04f 30ff 	mov.w	r0, #4294967295
 8001e04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e08:	3501      	adds	r5, #1
 8001e0a:	e7c6      	b.n	8001d9a <_printf_common+0x3e>
 8001e0c:	18e1      	adds	r1, r4, r3
 8001e0e:	1c5a      	adds	r2, r3, #1
 8001e10:	2030      	movs	r0, #48	; 0x30
 8001e12:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001e16:	4422      	add	r2, r4
 8001e18:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001e1c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001e20:	3302      	adds	r3, #2
 8001e22:	e7c7      	b.n	8001db4 <_printf_common+0x58>
 8001e24:	2301      	movs	r3, #1
 8001e26:	4622      	mov	r2, r4
 8001e28:	4649      	mov	r1, r9
 8001e2a:	4638      	mov	r0, r7
 8001e2c:	47c0      	blx	r8
 8001e2e:	3001      	adds	r0, #1
 8001e30:	d0e6      	beq.n	8001e00 <_printf_common+0xa4>
 8001e32:	3601      	adds	r6, #1
 8001e34:	e7d9      	b.n	8001dea <_printf_common+0x8e>
	...

08001e38 <_printf_i>:
 8001e38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e3c:	7e0f      	ldrb	r7, [r1, #24]
 8001e3e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001e40:	2f78      	cmp	r7, #120	; 0x78
 8001e42:	4691      	mov	r9, r2
 8001e44:	4680      	mov	r8, r0
 8001e46:	460c      	mov	r4, r1
 8001e48:	469a      	mov	sl, r3
 8001e4a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001e4e:	d807      	bhi.n	8001e60 <_printf_i+0x28>
 8001e50:	2f62      	cmp	r7, #98	; 0x62
 8001e52:	d80a      	bhi.n	8001e6a <_printf_i+0x32>
 8001e54:	2f00      	cmp	r7, #0
 8001e56:	f000 80d4 	beq.w	8002002 <_printf_i+0x1ca>
 8001e5a:	2f58      	cmp	r7, #88	; 0x58
 8001e5c:	f000 80c0 	beq.w	8001fe0 <_printf_i+0x1a8>
 8001e60:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001e64:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001e68:	e03a      	b.n	8001ee0 <_printf_i+0xa8>
 8001e6a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001e6e:	2b15      	cmp	r3, #21
 8001e70:	d8f6      	bhi.n	8001e60 <_printf_i+0x28>
 8001e72:	a101      	add	r1, pc, #4	; (adr r1, 8001e78 <_printf_i+0x40>)
 8001e74:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001e78:	08001ed1 	.word	0x08001ed1
 8001e7c:	08001ee5 	.word	0x08001ee5
 8001e80:	08001e61 	.word	0x08001e61
 8001e84:	08001e61 	.word	0x08001e61
 8001e88:	08001e61 	.word	0x08001e61
 8001e8c:	08001e61 	.word	0x08001e61
 8001e90:	08001ee5 	.word	0x08001ee5
 8001e94:	08001e61 	.word	0x08001e61
 8001e98:	08001e61 	.word	0x08001e61
 8001e9c:	08001e61 	.word	0x08001e61
 8001ea0:	08001e61 	.word	0x08001e61
 8001ea4:	08001fe9 	.word	0x08001fe9
 8001ea8:	08001f11 	.word	0x08001f11
 8001eac:	08001fa3 	.word	0x08001fa3
 8001eb0:	08001e61 	.word	0x08001e61
 8001eb4:	08001e61 	.word	0x08001e61
 8001eb8:	0800200b 	.word	0x0800200b
 8001ebc:	08001e61 	.word	0x08001e61
 8001ec0:	08001f11 	.word	0x08001f11
 8001ec4:	08001e61 	.word	0x08001e61
 8001ec8:	08001e61 	.word	0x08001e61
 8001ecc:	08001fab 	.word	0x08001fab
 8001ed0:	682b      	ldr	r3, [r5, #0]
 8001ed2:	1d1a      	adds	r2, r3, #4
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	602a      	str	r2, [r5, #0]
 8001ed8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001edc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001ee0:	2301      	movs	r3, #1
 8001ee2:	e09f      	b.n	8002024 <_printf_i+0x1ec>
 8001ee4:	6820      	ldr	r0, [r4, #0]
 8001ee6:	682b      	ldr	r3, [r5, #0]
 8001ee8:	0607      	lsls	r7, r0, #24
 8001eea:	f103 0104 	add.w	r1, r3, #4
 8001eee:	6029      	str	r1, [r5, #0]
 8001ef0:	d501      	bpl.n	8001ef6 <_printf_i+0xbe>
 8001ef2:	681e      	ldr	r6, [r3, #0]
 8001ef4:	e003      	b.n	8001efe <_printf_i+0xc6>
 8001ef6:	0646      	lsls	r6, r0, #25
 8001ef8:	d5fb      	bpl.n	8001ef2 <_printf_i+0xba>
 8001efa:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001efe:	2e00      	cmp	r6, #0
 8001f00:	da03      	bge.n	8001f0a <_printf_i+0xd2>
 8001f02:	232d      	movs	r3, #45	; 0x2d
 8001f04:	4276      	negs	r6, r6
 8001f06:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001f0a:	485a      	ldr	r0, [pc, #360]	; (8002074 <_printf_i+0x23c>)
 8001f0c:	230a      	movs	r3, #10
 8001f0e:	e012      	b.n	8001f36 <_printf_i+0xfe>
 8001f10:	682b      	ldr	r3, [r5, #0]
 8001f12:	6820      	ldr	r0, [r4, #0]
 8001f14:	1d19      	adds	r1, r3, #4
 8001f16:	6029      	str	r1, [r5, #0]
 8001f18:	0605      	lsls	r5, r0, #24
 8001f1a:	d501      	bpl.n	8001f20 <_printf_i+0xe8>
 8001f1c:	681e      	ldr	r6, [r3, #0]
 8001f1e:	e002      	b.n	8001f26 <_printf_i+0xee>
 8001f20:	0641      	lsls	r1, r0, #25
 8001f22:	d5fb      	bpl.n	8001f1c <_printf_i+0xe4>
 8001f24:	881e      	ldrh	r6, [r3, #0]
 8001f26:	4853      	ldr	r0, [pc, #332]	; (8002074 <_printf_i+0x23c>)
 8001f28:	2f6f      	cmp	r7, #111	; 0x6f
 8001f2a:	bf0c      	ite	eq
 8001f2c:	2308      	moveq	r3, #8
 8001f2e:	230a      	movne	r3, #10
 8001f30:	2100      	movs	r1, #0
 8001f32:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001f36:	6865      	ldr	r5, [r4, #4]
 8001f38:	60a5      	str	r5, [r4, #8]
 8001f3a:	2d00      	cmp	r5, #0
 8001f3c:	bfa2      	ittt	ge
 8001f3e:	6821      	ldrge	r1, [r4, #0]
 8001f40:	f021 0104 	bicge.w	r1, r1, #4
 8001f44:	6021      	strge	r1, [r4, #0]
 8001f46:	b90e      	cbnz	r6, 8001f4c <_printf_i+0x114>
 8001f48:	2d00      	cmp	r5, #0
 8001f4a:	d04b      	beq.n	8001fe4 <_printf_i+0x1ac>
 8001f4c:	4615      	mov	r5, r2
 8001f4e:	fbb6 f1f3 	udiv	r1, r6, r3
 8001f52:	fb03 6711 	mls	r7, r3, r1, r6
 8001f56:	5dc7      	ldrb	r7, [r0, r7]
 8001f58:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001f5c:	4637      	mov	r7, r6
 8001f5e:	42bb      	cmp	r3, r7
 8001f60:	460e      	mov	r6, r1
 8001f62:	d9f4      	bls.n	8001f4e <_printf_i+0x116>
 8001f64:	2b08      	cmp	r3, #8
 8001f66:	d10b      	bne.n	8001f80 <_printf_i+0x148>
 8001f68:	6823      	ldr	r3, [r4, #0]
 8001f6a:	07de      	lsls	r6, r3, #31
 8001f6c:	d508      	bpl.n	8001f80 <_printf_i+0x148>
 8001f6e:	6923      	ldr	r3, [r4, #16]
 8001f70:	6861      	ldr	r1, [r4, #4]
 8001f72:	4299      	cmp	r1, r3
 8001f74:	bfde      	ittt	le
 8001f76:	2330      	movle	r3, #48	; 0x30
 8001f78:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001f7c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001f80:	1b52      	subs	r2, r2, r5
 8001f82:	6122      	str	r2, [r4, #16]
 8001f84:	f8cd a000 	str.w	sl, [sp]
 8001f88:	464b      	mov	r3, r9
 8001f8a:	aa03      	add	r2, sp, #12
 8001f8c:	4621      	mov	r1, r4
 8001f8e:	4640      	mov	r0, r8
 8001f90:	f7ff fee4 	bl	8001d5c <_printf_common>
 8001f94:	3001      	adds	r0, #1
 8001f96:	d14a      	bne.n	800202e <_printf_i+0x1f6>
 8001f98:	f04f 30ff 	mov.w	r0, #4294967295
 8001f9c:	b004      	add	sp, #16
 8001f9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001fa2:	6823      	ldr	r3, [r4, #0]
 8001fa4:	f043 0320 	orr.w	r3, r3, #32
 8001fa8:	6023      	str	r3, [r4, #0]
 8001faa:	4833      	ldr	r0, [pc, #204]	; (8002078 <_printf_i+0x240>)
 8001fac:	2778      	movs	r7, #120	; 0x78
 8001fae:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001fb2:	6823      	ldr	r3, [r4, #0]
 8001fb4:	6829      	ldr	r1, [r5, #0]
 8001fb6:	061f      	lsls	r7, r3, #24
 8001fb8:	f851 6b04 	ldr.w	r6, [r1], #4
 8001fbc:	d402      	bmi.n	8001fc4 <_printf_i+0x18c>
 8001fbe:	065f      	lsls	r7, r3, #25
 8001fc0:	bf48      	it	mi
 8001fc2:	b2b6      	uxthmi	r6, r6
 8001fc4:	07df      	lsls	r7, r3, #31
 8001fc6:	bf48      	it	mi
 8001fc8:	f043 0320 	orrmi.w	r3, r3, #32
 8001fcc:	6029      	str	r1, [r5, #0]
 8001fce:	bf48      	it	mi
 8001fd0:	6023      	strmi	r3, [r4, #0]
 8001fd2:	b91e      	cbnz	r6, 8001fdc <_printf_i+0x1a4>
 8001fd4:	6823      	ldr	r3, [r4, #0]
 8001fd6:	f023 0320 	bic.w	r3, r3, #32
 8001fda:	6023      	str	r3, [r4, #0]
 8001fdc:	2310      	movs	r3, #16
 8001fde:	e7a7      	b.n	8001f30 <_printf_i+0xf8>
 8001fe0:	4824      	ldr	r0, [pc, #144]	; (8002074 <_printf_i+0x23c>)
 8001fe2:	e7e4      	b.n	8001fae <_printf_i+0x176>
 8001fe4:	4615      	mov	r5, r2
 8001fe6:	e7bd      	b.n	8001f64 <_printf_i+0x12c>
 8001fe8:	682b      	ldr	r3, [r5, #0]
 8001fea:	6826      	ldr	r6, [r4, #0]
 8001fec:	6961      	ldr	r1, [r4, #20]
 8001fee:	1d18      	adds	r0, r3, #4
 8001ff0:	6028      	str	r0, [r5, #0]
 8001ff2:	0635      	lsls	r5, r6, #24
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	d501      	bpl.n	8001ffc <_printf_i+0x1c4>
 8001ff8:	6019      	str	r1, [r3, #0]
 8001ffa:	e002      	b.n	8002002 <_printf_i+0x1ca>
 8001ffc:	0670      	lsls	r0, r6, #25
 8001ffe:	d5fb      	bpl.n	8001ff8 <_printf_i+0x1c0>
 8002000:	8019      	strh	r1, [r3, #0]
 8002002:	2300      	movs	r3, #0
 8002004:	6123      	str	r3, [r4, #16]
 8002006:	4615      	mov	r5, r2
 8002008:	e7bc      	b.n	8001f84 <_printf_i+0x14c>
 800200a:	682b      	ldr	r3, [r5, #0]
 800200c:	1d1a      	adds	r2, r3, #4
 800200e:	602a      	str	r2, [r5, #0]
 8002010:	681d      	ldr	r5, [r3, #0]
 8002012:	6862      	ldr	r2, [r4, #4]
 8002014:	2100      	movs	r1, #0
 8002016:	4628      	mov	r0, r5
 8002018:	f7fe f8ea 	bl	80001f0 <memchr>
 800201c:	b108      	cbz	r0, 8002022 <_printf_i+0x1ea>
 800201e:	1b40      	subs	r0, r0, r5
 8002020:	6060      	str	r0, [r4, #4]
 8002022:	6863      	ldr	r3, [r4, #4]
 8002024:	6123      	str	r3, [r4, #16]
 8002026:	2300      	movs	r3, #0
 8002028:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800202c:	e7aa      	b.n	8001f84 <_printf_i+0x14c>
 800202e:	6923      	ldr	r3, [r4, #16]
 8002030:	462a      	mov	r2, r5
 8002032:	4649      	mov	r1, r9
 8002034:	4640      	mov	r0, r8
 8002036:	47d0      	blx	sl
 8002038:	3001      	adds	r0, #1
 800203a:	d0ad      	beq.n	8001f98 <_printf_i+0x160>
 800203c:	6823      	ldr	r3, [r4, #0]
 800203e:	079b      	lsls	r3, r3, #30
 8002040:	d413      	bmi.n	800206a <_printf_i+0x232>
 8002042:	68e0      	ldr	r0, [r4, #12]
 8002044:	9b03      	ldr	r3, [sp, #12]
 8002046:	4298      	cmp	r0, r3
 8002048:	bfb8      	it	lt
 800204a:	4618      	movlt	r0, r3
 800204c:	e7a6      	b.n	8001f9c <_printf_i+0x164>
 800204e:	2301      	movs	r3, #1
 8002050:	4632      	mov	r2, r6
 8002052:	4649      	mov	r1, r9
 8002054:	4640      	mov	r0, r8
 8002056:	47d0      	blx	sl
 8002058:	3001      	adds	r0, #1
 800205a:	d09d      	beq.n	8001f98 <_printf_i+0x160>
 800205c:	3501      	adds	r5, #1
 800205e:	68e3      	ldr	r3, [r4, #12]
 8002060:	9903      	ldr	r1, [sp, #12]
 8002062:	1a5b      	subs	r3, r3, r1
 8002064:	42ab      	cmp	r3, r5
 8002066:	dcf2      	bgt.n	800204e <_printf_i+0x216>
 8002068:	e7eb      	b.n	8002042 <_printf_i+0x20a>
 800206a:	2500      	movs	r5, #0
 800206c:	f104 0619 	add.w	r6, r4, #25
 8002070:	e7f5      	b.n	800205e <_printf_i+0x226>
 8002072:	bf00      	nop
 8002074:	08004253 	.word	0x08004253
 8002078:	08004264 	.word	0x08004264

0800207c <std>:
 800207c:	2300      	movs	r3, #0
 800207e:	b510      	push	{r4, lr}
 8002080:	4604      	mov	r4, r0
 8002082:	e9c0 3300 	strd	r3, r3, [r0]
 8002086:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800208a:	6083      	str	r3, [r0, #8]
 800208c:	8181      	strh	r1, [r0, #12]
 800208e:	6643      	str	r3, [r0, #100]	; 0x64
 8002090:	81c2      	strh	r2, [r0, #14]
 8002092:	6183      	str	r3, [r0, #24]
 8002094:	4619      	mov	r1, r3
 8002096:	2208      	movs	r2, #8
 8002098:	305c      	adds	r0, #92	; 0x5c
 800209a:	f000 f9f7 	bl	800248c <memset>
 800209e:	4b0d      	ldr	r3, [pc, #52]	; (80020d4 <std+0x58>)
 80020a0:	6263      	str	r3, [r4, #36]	; 0x24
 80020a2:	4b0d      	ldr	r3, [pc, #52]	; (80020d8 <std+0x5c>)
 80020a4:	62a3      	str	r3, [r4, #40]	; 0x28
 80020a6:	4b0d      	ldr	r3, [pc, #52]	; (80020dc <std+0x60>)
 80020a8:	62e3      	str	r3, [r4, #44]	; 0x2c
 80020aa:	4b0d      	ldr	r3, [pc, #52]	; (80020e0 <std+0x64>)
 80020ac:	6323      	str	r3, [r4, #48]	; 0x30
 80020ae:	4b0d      	ldr	r3, [pc, #52]	; (80020e4 <std+0x68>)
 80020b0:	6224      	str	r4, [r4, #32]
 80020b2:	429c      	cmp	r4, r3
 80020b4:	d006      	beq.n	80020c4 <std+0x48>
 80020b6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80020ba:	4294      	cmp	r4, r2
 80020bc:	d002      	beq.n	80020c4 <std+0x48>
 80020be:	33d0      	adds	r3, #208	; 0xd0
 80020c0:	429c      	cmp	r4, r3
 80020c2:	d105      	bne.n	80020d0 <std+0x54>
 80020c4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80020c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80020cc:	f000 ba5a 	b.w	8002584 <__retarget_lock_init_recursive>
 80020d0:	bd10      	pop	{r4, pc}
 80020d2:	bf00      	nop
 80020d4:	080022dd 	.word	0x080022dd
 80020d8:	080022ff 	.word	0x080022ff
 80020dc:	08002337 	.word	0x08002337
 80020e0:	0800235b 	.word	0x0800235b
 80020e4:	200003c0 	.word	0x200003c0

080020e8 <stdio_exit_handler>:
 80020e8:	4a02      	ldr	r2, [pc, #8]	; (80020f4 <stdio_exit_handler+0xc>)
 80020ea:	4903      	ldr	r1, [pc, #12]	; (80020f8 <stdio_exit_handler+0x10>)
 80020ec:	4803      	ldr	r0, [pc, #12]	; (80020fc <stdio_exit_handler+0x14>)
 80020ee:	f000 b869 	b.w	80021c4 <_fwalk_sglue>
 80020f2:	bf00      	nop
 80020f4:	20000048 	.word	0x20000048
 80020f8:	08003f11 	.word	0x08003f11
 80020fc:	20000054 	.word	0x20000054

08002100 <cleanup_stdio>:
 8002100:	6841      	ldr	r1, [r0, #4]
 8002102:	4b0c      	ldr	r3, [pc, #48]	; (8002134 <cleanup_stdio+0x34>)
 8002104:	4299      	cmp	r1, r3
 8002106:	b510      	push	{r4, lr}
 8002108:	4604      	mov	r4, r0
 800210a:	d001      	beq.n	8002110 <cleanup_stdio+0x10>
 800210c:	f001 ff00 	bl	8003f10 <_fflush_r>
 8002110:	68a1      	ldr	r1, [r4, #8]
 8002112:	4b09      	ldr	r3, [pc, #36]	; (8002138 <cleanup_stdio+0x38>)
 8002114:	4299      	cmp	r1, r3
 8002116:	d002      	beq.n	800211e <cleanup_stdio+0x1e>
 8002118:	4620      	mov	r0, r4
 800211a:	f001 fef9 	bl	8003f10 <_fflush_r>
 800211e:	68e1      	ldr	r1, [r4, #12]
 8002120:	4b06      	ldr	r3, [pc, #24]	; (800213c <cleanup_stdio+0x3c>)
 8002122:	4299      	cmp	r1, r3
 8002124:	d004      	beq.n	8002130 <cleanup_stdio+0x30>
 8002126:	4620      	mov	r0, r4
 8002128:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800212c:	f001 bef0 	b.w	8003f10 <_fflush_r>
 8002130:	bd10      	pop	{r4, pc}
 8002132:	bf00      	nop
 8002134:	200003c0 	.word	0x200003c0
 8002138:	20000428 	.word	0x20000428
 800213c:	20000490 	.word	0x20000490

08002140 <global_stdio_init.part.0>:
 8002140:	b510      	push	{r4, lr}
 8002142:	4b0b      	ldr	r3, [pc, #44]	; (8002170 <global_stdio_init.part.0+0x30>)
 8002144:	4c0b      	ldr	r4, [pc, #44]	; (8002174 <global_stdio_init.part.0+0x34>)
 8002146:	4a0c      	ldr	r2, [pc, #48]	; (8002178 <global_stdio_init.part.0+0x38>)
 8002148:	601a      	str	r2, [r3, #0]
 800214a:	4620      	mov	r0, r4
 800214c:	2200      	movs	r2, #0
 800214e:	2104      	movs	r1, #4
 8002150:	f7ff ff94 	bl	800207c <std>
 8002154:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002158:	2201      	movs	r2, #1
 800215a:	2109      	movs	r1, #9
 800215c:	f7ff ff8e 	bl	800207c <std>
 8002160:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8002164:	2202      	movs	r2, #2
 8002166:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800216a:	2112      	movs	r1, #18
 800216c:	f7ff bf86 	b.w	800207c <std>
 8002170:	200004f8 	.word	0x200004f8
 8002174:	200003c0 	.word	0x200003c0
 8002178:	080020e9 	.word	0x080020e9

0800217c <__sfp_lock_acquire>:
 800217c:	4801      	ldr	r0, [pc, #4]	; (8002184 <__sfp_lock_acquire+0x8>)
 800217e:	f000 ba02 	b.w	8002586 <__retarget_lock_acquire_recursive>
 8002182:	bf00      	nop
 8002184:	20000501 	.word	0x20000501

08002188 <__sfp_lock_release>:
 8002188:	4801      	ldr	r0, [pc, #4]	; (8002190 <__sfp_lock_release+0x8>)
 800218a:	f000 b9fd 	b.w	8002588 <__retarget_lock_release_recursive>
 800218e:	bf00      	nop
 8002190:	20000501 	.word	0x20000501

08002194 <__sinit>:
 8002194:	b510      	push	{r4, lr}
 8002196:	4604      	mov	r4, r0
 8002198:	f7ff fff0 	bl	800217c <__sfp_lock_acquire>
 800219c:	6a23      	ldr	r3, [r4, #32]
 800219e:	b11b      	cbz	r3, 80021a8 <__sinit+0x14>
 80021a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021a4:	f7ff bff0 	b.w	8002188 <__sfp_lock_release>
 80021a8:	4b04      	ldr	r3, [pc, #16]	; (80021bc <__sinit+0x28>)
 80021aa:	6223      	str	r3, [r4, #32]
 80021ac:	4b04      	ldr	r3, [pc, #16]	; (80021c0 <__sinit+0x2c>)
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	2b00      	cmp	r3, #0
 80021b2:	d1f5      	bne.n	80021a0 <__sinit+0xc>
 80021b4:	f7ff ffc4 	bl	8002140 <global_stdio_init.part.0>
 80021b8:	e7f2      	b.n	80021a0 <__sinit+0xc>
 80021ba:	bf00      	nop
 80021bc:	08002101 	.word	0x08002101
 80021c0:	200004f8 	.word	0x200004f8

080021c4 <_fwalk_sglue>:
 80021c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80021c8:	4607      	mov	r7, r0
 80021ca:	4688      	mov	r8, r1
 80021cc:	4614      	mov	r4, r2
 80021ce:	2600      	movs	r6, #0
 80021d0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80021d4:	f1b9 0901 	subs.w	r9, r9, #1
 80021d8:	d505      	bpl.n	80021e6 <_fwalk_sglue+0x22>
 80021da:	6824      	ldr	r4, [r4, #0]
 80021dc:	2c00      	cmp	r4, #0
 80021de:	d1f7      	bne.n	80021d0 <_fwalk_sglue+0xc>
 80021e0:	4630      	mov	r0, r6
 80021e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80021e6:	89ab      	ldrh	r3, [r5, #12]
 80021e8:	2b01      	cmp	r3, #1
 80021ea:	d907      	bls.n	80021fc <_fwalk_sglue+0x38>
 80021ec:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80021f0:	3301      	adds	r3, #1
 80021f2:	d003      	beq.n	80021fc <_fwalk_sglue+0x38>
 80021f4:	4629      	mov	r1, r5
 80021f6:	4638      	mov	r0, r7
 80021f8:	47c0      	blx	r8
 80021fa:	4306      	orrs	r6, r0
 80021fc:	3568      	adds	r5, #104	; 0x68
 80021fe:	e7e9      	b.n	80021d4 <_fwalk_sglue+0x10>

08002200 <iprintf>:
 8002200:	b40f      	push	{r0, r1, r2, r3}
 8002202:	b507      	push	{r0, r1, r2, lr}
 8002204:	4906      	ldr	r1, [pc, #24]	; (8002220 <iprintf+0x20>)
 8002206:	ab04      	add	r3, sp, #16
 8002208:	6808      	ldr	r0, [r1, #0]
 800220a:	f853 2b04 	ldr.w	r2, [r3], #4
 800220e:	6881      	ldr	r1, [r0, #8]
 8002210:	9301      	str	r3, [sp, #4]
 8002212:	f001 fcdd 	bl	8003bd0 <_vfiprintf_r>
 8002216:	b003      	add	sp, #12
 8002218:	f85d eb04 	ldr.w	lr, [sp], #4
 800221c:	b004      	add	sp, #16
 800221e:	4770      	bx	lr
 8002220:	200000a0 	.word	0x200000a0

08002224 <_puts_r>:
 8002224:	6a03      	ldr	r3, [r0, #32]
 8002226:	b570      	push	{r4, r5, r6, lr}
 8002228:	6884      	ldr	r4, [r0, #8]
 800222a:	4605      	mov	r5, r0
 800222c:	460e      	mov	r6, r1
 800222e:	b90b      	cbnz	r3, 8002234 <_puts_r+0x10>
 8002230:	f7ff ffb0 	bl	8002194 <__sinit>
 8002234:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002236:	07db      	lsls	r3, r3, #31
 8002238:	d405      	bmi.n	8002246 <_puts_r+0x22>
 800223a:	89a3      	ldrh	r3, [r4, #12]
 800223c:	0598      	lsls	r0, r3, #22
 800223e:	d402      	bmi.n	8002246 <_puts_r+0x22>
 8002240:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002242:	f000 f9a0 	bl	8002586 <__retarget_lock_acquire_recursive>
 8002246:	89a3      	ldrh	r3, [r4, #12]
 8002248:	0719      	lsls	r1, r3, #28
 800224a:	d513      	bpl.n	8002274 <_puts_r+0x50>
 800224c:	6923      	ldr	r3, [r4, #16]
 800224e:	b18b      	cbz	r3, 8002274 <_puts_r+0x50>
 8002250:	3e01      	subs	r6, #1
 8002252:	68a3      	ldr	r3, [r4, #8]
 8002254:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8002258:	3b01      	subs	r3, #1
 800225a:	60a3      	str	r3, [r4, #8]
 800225c:	b9e9      	cbnz	r1, 800229a <_puts_r+0x76>
 800225e:	2b00      	cmp	r3, #0
 8002260:	da2e      	bge.n	80022c0 <_puts_r+0x9c>
 8002262:	4622      	mov	r2, r4
 8002264:	210a      	movs	r1, #10
 8002266:	4628      	mov	r0, r5
 8002268:	f000 f87b 	bl	8002362 <__swbuf_r>
 800226c:	3001      	adds	r0, #1
 800226e:	d007      	beq.n	8002280 <_puts_r+0x5c>
 8002270:	250a      	movs	r5, #10
 8002272:	e007      	b.n	8002284 <_puts_r+0x60>
 8002274:	4621      	mov	r1, r4
 8002276:	4628      	mov	r0, r5
 8002278:	f000 f8b0 	bl	80023dc <__swsetup_r>
 800227c:	2800      	cmp	r0, #0
 800227e:	d0e7      	beq.n	8002250 <_puts_r+0x2c>
 8002280:	f04f 35ff 	mov.w	r5, #4294967295
 8002284:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002286:	07da      	lsls	r2, r3, #31
 8002288:	d405      	bmi.n	8002296 <_puts_r+0x72>
 800228a:	89a3      	ldrh	r3, [r4, #12]
 800228c:	059b      	lsls	r3, r3, #22
 800228e:	d402      	bmi.n	8002296 <_puts_r+0x72>
 8002290:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002292:	f000 f979 	bl	8002588 <__retarget_lock_release_recursive>
 8002296:	4628      	mov	r0, r5
 8002298:	bd70      	pop	{r4, r5, r6, pc}
 800229a:	2b00      	cmp	r3, #0
 800229c:	da04      	bge.n	80022a8 <_puts_r+0x84>
 800229e:	69a2      	ldr	r2, [r4, #24]
 80022a0:	429a      	cmp	r2, r3
 80022a2:	dc06      	bgt.n	80022b2 <_puts_r+0x8e>
 80022a4:	290a      	cmp	r1, #10
 80022a6:	d004      	beq.n	80022b2 <_puts_r+0x8e>
 80022a8:	6823      	ldr	r3, [r4, #0]
 80022aa:	1c5a      	adds	r2, r3, #1
 80022ac:	6022      	str	r2, [r4, #0]
 80022ae:	7019      	strb	r1, [r3, #0]
 80022b0:	e7cf      	b.n	8002252 <_puts_r+0x2e>
 80022b2:	4622      	mov	r2, r4
 80022b4:	4628      	mov	r0, r5
 80022b6:	f000 f854 	bl	8002362 <__swbuf_r>
 80022ba:	3001      	adds	r0, #1
 80022bc:	d1c9      	bne.n	8002252 <_puts_r+0x2e>
 80022be:	e7df      	b.n	8002280 <_puts_r+0x5c>
 80022c0:	6823      	ldr	r3, [r4, #0]
 80022c2:	250a      	movs	r5, #10
 80022c4:	1c5a      	adds	r2, r3, #1
 80022c6:	6022      	str	r2, [r4, #0]
 80022c8:	701d      	strb	r5, [r3, #0]
 80022ca:	e7db      	b.n	8002284 <_puts_r+0x60>

080022cc <puts>:
 80022cc:	4b02      	ldr	r3, [pc, #8]	; (80022d8 <puts+0xc>)
 80022ce:	4601      	mov	r1, r0
 80022d0:	6818      	ldr	r0, [r3, #0]
 80022d2:	f7ff bfa7 	b.w	8002224 <_puts_r>
 80022d6:	bf00      	nop
 80022d8:	200000a0 	.word	0x200000a0

080022dc <__sread>:
 80022dc:	b510      	push	{r4, lr}
 80022de:	460c      	mov	r4, r1
 80022e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80022e4:	f000 f900 	bl	80024e8 <_read_r>
 80022e8:	2800      	cmp	r0, #0
 80022ea:	bfab      	itete	ge
 80022ec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80022ee:	89a3      	ldrhlt	r3, [r4, #12]
 80022f0:	181b      	addge	r3, r3, r0
 80022f2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80022f6:	bfac      	ite	ge
 80022f8:	6563      	strge	r3, [r4, #84]	; 0x54
 80022fa:	81a3      	strhlt	r3, [r4, #12]
 80022fc:	bd10      	pop	{r4, pc}

080022fe <__swrite>:
 80022fe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002302:	461f      	mov	r7, r3
 8002304:	898b      	ldrh	r3, [r1, #12]
 8002306:	05db      	lsls	r3, r3, #23
 8002308:	4605      	mov	r5, r0
 800230a:	460c      	mov	r4, r1
 800230c:	4616      	mov	r6, r2
 800230e:	d505      	bpl.n	800231c <__swrite+0x1e>
 8002310:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002314:	2302      	movs	r3, #2
 8002316:	2200      	movs	r2, #0
 8002318:	f000 f8d4 	bl	80024c4 <_lseek_r>
 800231c:	89a3      	ldrh	r3, [r4, #12]
 800231e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002322:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002326:	81a3      	strh	r3, [r4, #12]
 8002328:	4632      	mov	r2, r6
 800232a:	463b      	mov	r3, r7
 800232c:	4628      	mov	r0, r5
 800232e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002332:	f000 b8eb 	b.w	800250c <_write_r>

08002336 <__sseek>:
 8002336:	b510      	push	{r4, lr}
 8002338:	460c      	mov	r4, r1
 800233a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800233e:	f000 f8c1 	bl	80024c4 <_lseek_r>
 8002342:	1c43      	adds	r3, r0, #1
 8002344:	89a3      	ldrh	r3, [r4, #12]
 8002346:	bf15      	itete	ne
 8002348:	6560      	strne	r0, [r4, #84]	; 0x54
 800234a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800234e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002352:	81a3      	strheq	r3, [r4, #12]
 8002354:	bf18      	it	ne
 8002356:	81a3      	strhne	r3, [r4, #12]
 8002358:	bd10      	pop	{r4, pc}

0800235a <__sclose>:
 800235a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800235e:	f000 b8a1 	b.w	80024a4 <_close_r>

08002362 <__swbuf_r>:
 8002362:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002364:	460e      	mov	r6, r1
 8002366:	4614      	mov	r4, r2
 8002368:	4605      	mov	r5, r0
 800236a:	b118      	cbz	r0, 8002374 <__swbuf_r+0x12>
 800236c:	6a03      	ldr	r3, [r0, #32]
 800236e:	b90b      	cbnz	r3, 8002374 <__swbuf_r+0x12>
 8002370:	f7ff ff10 	bl	8002194 <__sinit>
 8002374:	69a3      	ldr	r3, [r4, #24]
 8002376:	60a3      	str	r3, [r4, #8]
 8002378:	89a3      	ldrh	r3, [r4, #12]
 800237a:	071a      	lsls	r2, r3, #28
 800237c:	d525      	bpl.n	80023ca <__swbuf_r+0x68>
 800237e:	6923      	ldr	r3, [r4, #16]
 8002380:	b31b      	cbz	r3, 80023ca <__swbuf_r+0x68>
 8002382:	6823      	ldr	r3, [r4, #0]
 8002384:	6922      	ldr	r2, [r4, #16]
 8002386:	1a98      	subs	r0, r3, r2
 8002388:	6963      	ldr	r3, [r4, #20]
 800238a:	b2f6      	uxtb	r6, r6
 800238c:	4283      	cmp	r3, r0
 800238e:	4637      	mov	r7, r6
 8002390:	dc04      	bgt.n	800239c <__swbuf_r+0x3a>
 8002392:	4621      	mov	r1, r4
 8002394:	4628      	mov	r0, r5
 8002396:	f001 fdbb 	bl	8003f10 <_fflush_r>
 800239a:	b9e0      	cbnz	r0, 80023d6 <__swbuf_r+0x74>
 800239c:	68a3      	ldr	r3, [r4, #8]
 800239e:	3b01      	subs	r3, #1
 80023a0:	60a3      	str	r3, [r4, #8]
 80023a2:	6823      	ldr	r3, [r4, #0]
 80023a4:	1c5a      	adds	r2, r3, #1
 80023a6:	6022      	str	r2, [r4, #0]
 80023a8:	701e      	strb	r6, [r3, #0]
 80023aa:	6962      	ldr	r2, [r4, #20]
 80023ac:	1c43      	adds	r3, r0, #1
 80023ae:	429a      	cmp	r2, r3
 80023b0:	d004      	beq.n	80023bc <__swbuf_r+0x5a>
 80023b2:	89a3      	ldrh	r3, [r4, #12]
 80023b4:	07db      	lsls	r3, r3, #31
 80023b6:	d506      	bpl.n	80023c6 <__swbuf_r+0x64>
 80023b8:	2e0a      	cmp	r6, #10
 80023ba:	d104      	bne.n	80023c6 <__swbuf_r+0x64>
 80023bc:	4621      	mov	r1, r4
 80023be:	4628      	mov	r0, r5
 80023c0:	f001 fda6 	bl	8003f10 <_fflush_r>
 80023c4:	b938      	cbnz	r0, 80023d6 <__swbuf_r+0x74>
 80023c6:	4638      	mov	r0, r7
 80023c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80023ca:	4621      	mov	r1, r4
 80023cc:	4628      	mov	r0, r5
 80023ce:	f000 f805 	bl	80023dc <__swsetup_r>
 80023d2:	2800      	cmp	r0, #0
 80023d4:	d0d5      	beq.n	8002382 <__swbuf_r+0x20>
 80023d6:	f04f 37ff 	mov.w	r7, #4294967295
 80023da:	e7f4      	b.n	80023c6 <__swbuf_r+0x64>

080023dc <__swsetup_r>:
 80023dc:	b538      	push	{r3, r4, r5, lr}
 80023de:	4b2a      	ldr	r3, [pc, #168]	; (8002488 <__swsetup_r+0xac>)
 80023e0:	4605      	mov	r5, r0
 80023e2:	6818      	ldr	r0, [r3, #0]
 80023e4:	460c      	mov	r4, r1
 80023e6:	b118      	cbz	r0, 80023f0 <__swsetup_r+0x14>
 80023e8:	6a03      	ldr	r3, [r0, #32]
 80023ea:	b90b      	cbnz	r3, 80023f0 <__swsetup_r+0x14>
 80023ec:	f7ff fed2 	bl	8002194 <__sinit>
 80023f0:	89a3      	ldrh	r3, [r4, #12]
 80023f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80023f6:	0718      	lsls	r0, r3, #28
 80023f8:	d422      	bmi.n	8002440 <__swsetup_r+0x64>
 80023fa:	06d9      	lsls	r1, r3, #27
 80023fc:	d407      	bmi.n	800240e <__swsetup_r+0x32>
 80023fe:	2309      	movs	r3, #9
 8002400:	602b      	str	r3, [r5, #0]
 8002402:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8002406:	81a3      	strh	r3, [r4, #12]
 8002408:	f04f 30ff 	mov.w	r0, #4294967295
 800240c:	e034      	b.n	8002478 <__swsetup_r+0x9c>
 800240e:	0758      	lsls	r0, r3, #29
 8002410:	d512      	bpl.n	8002438 <__swsetup_r+0x5c>
 8002412:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002414:	b141      	cbz	r1, 8002428 <__swsetup_r+0x4c>
 8002416:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800241a:	4299      	cmp	r1, r3
 800241c:	d002      	beq.n	8002424 <__swsetup_r+0x48>
 800241e:	4628      	mov	r0, r5
 8002420:	f000 ff30 	bl	8003284 <_free_r>
 8002424:	2300      	movs	r3, #0
 8002426:	6363      	str	r3, [r4, #52]	; 0x34
 8002428:	89a3      	ldrh	r3, [r4, #12]
 800242a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800242e:	81a3      	strh	r3, [r4, #12]
 8002430:	2300      	movs	r3, #0
 8002432:	6063      	str	r3, [r4, #4]
 8002434:	6923      	ldr	r3, [r4, #16]
 8002436:	6023      	str	r3, [r4, #0]
 8002438:	89a3      	ldrh	r3, [r4, #12]
 800243a:	f043 0308 	orr.w	r3, r3, #8
 800243e:	81a3      	strh	r3, [r4, #12]
 8002440:	6923      	ldr	r3, [r4, #16]
 8002442:	b94b      	cbnz	r3, 8002458 <__swsetup_r+0x7c>
 8002444:	89a3      	ldrh	r3, [r4, #12]
 8002446:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800244a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800244e:	d003      	beq.n	8002458 <__swsetup_r+0x7c>
 8002450:	4621      	mov	r1, r4
 8002452:	4628      	mov	r0, r5
 8002454:	f001 fdaa 	bl	8003fac <__smakebuf_r>
 8002458:	89a0      	ldrh	r0, [r4, #12]
 800245a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800245e:	f010 0301 	ands.w	r3, r0, #1
 8002462:	d00a      	beq.n	800247a <__swsetup_r+0x9e>
 8002464:	2300      	movs	r3, #0
 8002466:	60a3      	str	r3, [r4, #8]
 8002468:	6963      	ldr	r3, [r4, #20]
 800246a:	425b      	negs	r3, r3
 800246c:	61a3      	str	r3, [r4, #24]
 800246e:	6923      	ldr	r3, [r4, #16]
 8002470:	b943      	cbnz	r3, 8002484 <__swsetup_r+0xa8>
 8002472:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8002476:	d1c4      	bne.n	8002402 <__swsetup_r+0x26>
 8002478:	bd38      	pop	{r3, r4, r5, pc}
 800247a:	0781      	lsls	r1, r0, #30
 800247c:	bf58      	it	pl
 800247e:	6963      	ldrpl	r3, [r4, #20]
 8002480:	60a3      	str	r3, [r4, #8]
 8002482:	e7f4      	b.n	800246e <__swsetup_r+0x92>
 8002484:	2000      	movs	r0, #0
 8002486:	e7f7      	b.n	8002478 <__swsetup_r+0x9c>
 8002488:	200000a0 	.word	0x200000a0

0800248c <memset>:
 800248c:	4402      	add	r2, r0
 800248e:	4603      	mov	r3, r0
 8002490:	4293      	cmp	r3, r2
 8002492:	d100      	bne.n	8002496 <memset+0xa>
 8002494:	4770      	bx	lr
 8002496:	f803 1b01 	strb.w	r1, [r3], #1
 800249a:	e7f9      	b.n	8002490 <memset+0x4>

0800249c <_localeconv_r>:
 800249c:	4800      	ldr	r0, [pc, #0]	; (80024a0 <_localeconv_r+0x4>)
 800249e:	4770      	bx	lr
 80024a0:	20000194 	.word	0x20000194

080024a4 <_close_r>:
 80024a4:	b538      	push	{r3, r4, r5, lr}
 80024a6:	4d06      	ldr	r5, [pc, #24]	; (80024c0 <_close_r+0x1c>)
 80024a8:	2300      	movs	r3, #0
 80024aa:	4604      	mov	r4, r0
 80024ac:	4608      	mov	r0, r1
 80024ae:	602b      	str	r3, [r5, #0]
 80024b0:	f7ff f8d7 	bl	8001662 <_close>
 80024b4:	1c43      	adds	r3, r0, #1
 80024b6:	d102      	bne.n	80024be <_close_r+0x1a>
 80024b8:	682b      	ldr	r3, [r5, #0]
 80024ba:	b103      	cbz	r3, 80024be <_close_r+0x1a>
 80024bc:	6023      	str	r3, [r4, #0]
 80024be:	bd38      	pop	{r3, r4, r5, pc}
 80024c0:	200004fc 	.word	0x200004fc

080024c4 <_lseek_r>:
 80024c4:	b538      	push	{r3, r4, r5, lr}
 80024c6:	4d07      	ldr	r5, [pc, #28]	; (80024e4 <_lseek_r+0x20>)
 80024c8:	4604      	mov	r4, r0
 80024ca:	4608      	mov	r0, r1
 80024cc:	4611      	mov	r1, r2
 80024ce:	2200      	movs	r2, #0
 80024d0:	602a      	str	r2, [r5, #0]
 80024d2:	461a      	mov	r2, r3
 80024d4:	f7ff f8ec 	bl	80016b0 <_lseek>
 80024d8:	1c43      	adds	r3, r0, #1
 80024da:	d102      	bne.n	80024e2 <_lseek_r+0x1e>
 80024dc:	682b      	ldr	r3, [r5, #0]
 80024de:	b103      	cbz	r3, 80024e2 <_lseek_r+0x1e>
 80024e0:	6023      	str	r3, [r4, #0]
 80024e2:	bd38      	pop	{r3, r4, r5, pc}
 80024e4:	200004fc 	.word	0x200004fc

080024e8 <_read_r>:
 80024e8:	b538      	push	{r3, r4, r5, lr}
 80024ea:	4d07      	ldr	r5, [pc, #28]	; (8002508 <_read_r+0x20>)
 80024ec:	4604      	mov	r4, r0
 80024ee:	4608      	mov	r0, r1
 80024f0:	4611      	mov	r1, r2
 80024f2:	2200      	movs	r2, #0
 80024f4:	602a      	str	r2, [r5, #0]
 80024f6:	461a      	mov	r2, r3
 80024f8:	f7ff f87a 	bl	80015f0 <_read>
 80024fc:	1c43      	adds	r3, r0, #1
 80024fe:	d102      	bne.n	8002506 <_read_r+0x1e>
 8002500:	682b      	ldr	r3, [r5, #0]
 8002502:	b103      	cbz	r3, 8002506 <_read_r+0x1e>
 8002504:	6023      	str	r3, [r4, #0]
 8002506:	bd38      	pop	{r3, r4, r5, pc}
 8002508:	200004fc 	.word	0x200004fc

0800250c <_write_r>:
 800250c:	b538      	push	{r3, r4, r5, lr}
 800250e:	4d07      	ldr	r5, [pc, #28]	; (800252c <_write_r+0x20>)
 8002510:	4604      	mov	r4, r0
 8002512:	4608      	mov	r0, r1
 8002514:	4611      	mov	r1, r2
 8002516:	2200      	movs	r2, #0
 8002518:	602a      	str	r2, [r5, #0]
 800251a:	461a      	mov	r2, r3
 800251c:	f7ff f885 	bl	800162a <_write>
 8002520:	1c43      	adds	r3, r0, #1
 8002522:	d102      	bne.n	800252a <_write_r+0x1e>
 8002524:	682b      	ldr	r3, [r5, #0]
 8002526:	b103      	cbz	r3, 800252a <_write_r+0x1e>
 8002528:	6023      	str	r3, [r4, #0]
 800252a:	bd38      	pop	{r3, r4, r5, pc}
 800252c:	200004fc 	.word	0x200004fc

08002530 <__errno>:
 8002530:	4b01      	ldr	r3, [pc, #4]	; (8002538 <__errno+0x8>)
 8002532:	6818      	ldr	r0, [r3, #0]
 8002534:	4770      	bx	lr
 8002536:	bf00      	nop
 8002538:	200000a0 	.word	0x200000a0

0800253c <__libc_init_array>:
 800253c:	b570      	push	{r4, r5, r6, lr}
 800253e:	4d0d      	ldr	r5, [pc, #52]	; (8002574 <__libc_init_array+0x38>)
 8002540:	4c0d      	ldr	r4, [pc, #52]	; (8002578 <__libc_init_array+0x3c>)
 8002542:	1b64      	subs	r4, r4, r5
 8002544:	10a4      	asrs	r4, r4, #2
 8002546:	2600      	movs	r6, #0
 8002548:	42a6      	cmp	r6, r4
 800254a:	d109      	bne.n	8002560 <__libc_init_array+0x24>
 800254c:	4d0b      	ldr	r5, [pc, #44]	; (800257c <__libc_init_array+0x40>)
 800254e:	4c0c      	ldr	r4, [pc, #48]	; (8002580 <__libc_init_array+0x44>)
 8002550:	f001 fe5a 	bl	8004208 <_init>
 8002554:	1b64      	subs	r4, r4, r5
 8002556:	10a4      	asrs	r4, r4, #2
 8002558:	2600      	movs	r6, #0
 800255a:	42a6      	cmp	r6, r4
 800255c:	d105      	bne.n	800256a <__libc_init_array+0x2e>
 800255e:	bd70      	pop	{r4, r5, r6, pc}
 8002560:	f855 3b04 	ldr.w	r3, [r5], #4
 8002564:	4798      	blx	r3
 8002566:	3601      	adds	r6, #1
 8002568:	e7ee      	b.n	8002548 <__libc_init_array+0xc>
 800256a:	f855 3b04 	ldr.w	r3, [r5], #4
 800256e:	4798      	blx	r3
 8002570:	3601      	adds	r6, #1
 8002572:	e7f2      	b.n	800255a <__libc_init_array+0x1e>
 8002574:	080045b4 	.word	0x080045b4
 8002578:	080045b4 	.word	0x080045b4
 800257c:	080045b4 	.word	0x080045b4
 8002580:	080045b8 	.word	0x080045b8

08002584 <__retarget_lock_init_recursive>:
 8002584:	4770      	bx	lr

08002586 <__retarget_lock_acquire_recursive>:
 8002586:	4770      	bx	lr

08002588 <__retarget_lock_release_recursive>:
 8002588:	4770      	bx	lr

0800258a <quorem>:
 800258a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800258e:	6903      	ldr	r3, [r0, #16]
 8002590:	690c      	ldr	r4, [r1, #16]
 8002592:	42a3      	cmp	r3, r4
 8002594:	4607      	mov	r7, r0
 8002596:	db7e      	blt.n	8002696 <quorem+0x10c>
 8002598:	3c01      	subs	r4, #1
 800259a:	f101 0814 	add.w	r8, r1, #20
 800259e:	f100 0514 	add.w	r5, r0, #20
 80025a2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80025a6:	9301      	str	r3, [sp, #4]
 80025a8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80025ac:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80025b0:	3301      	adds	r3, #1
 80025b2:	429a      	cmp	r2, r3
 80025b4:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80025b8:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80025bc:	fbb2 f6f3 	udiv	r6, r2, r3
 80025c0:	d331      	bcc.n	8002626 <quorem+0x9c>
 80025c2:	f04f 0e00 	mov.w	lr, #0
 80025c6:	4640      	mov	r0, r8
 80025c8:	46ac      	mov	ip, r5
 80025ca:	46f2      	mov	sl, lr
 80025cc:	f850 2b04 	ldr.w	r2, [r0], #4
 80025d0:	b293      	uxth	r3, r2
 80025d2:	fb06 e303 	mla	r3, r6, r3, lr
 80025d6:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80025da:	0c1a      	lsrs	r2, r3, #16
 80025dc:	b29b      	uxth	r3, r3
 80025de:	ebaa 0303 	sub.w	r3, sl, r3
 80025e2:	f8dc a000 	ldr.w	sl, [ip]
 80025e6:	fa13 f38a 	uxtah	r3, r3, sl
 80025ea:	fb06 220e 	mla	r2, r6, lr, r2
 80025ee:	9300      	str	r3, [sp, #0]
 80025f0:	9b00      	ldr	r3, [sp, #0]
 80025f2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80025f6:	b292      	uxth	r2, r2
 80025f8:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80025fc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002600:	f8bd 3000 	ldrh.w	r3, [sp]
 8002604:	4581      	cmp	r9, r0
 8002606:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800260a:	f84c 3b04 	str.w	r3, [ip], #4
 800260e:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002612:	d2db      	bcs.n	80025cc <quorem+0x42>
 8002614:	f855 300b 	ldr.w	r3, [r5, fp]
 8002618:	b92b      	cbnz	r3, 8002626 <quorem+0x9c>
 800261a:	9b01      	ldr	r3, [sp, #4]
 800261c:	3b04      	subs	r3, #4
 800261e:	429d      	cmp	r5, r3
 8002620:	461a      	mov	r2, r3
 8002622:	d32c      	bcc.n	800267e <quorem+0xf4>
 8002624:	613c      	str	r4, [r7, #16]
 8002626:	4638      	mov	r0, r7
 8002628:	f001 f9a8 	bl	800397c <__mcmp>
 800262c:	2800      	cmp	r0, #0
 800262e:	db22      	blt.n	8002676 <quorem+0xec>
 8002630:	3601      	adds	r6, #1
 8002632:	4629      	mov	r1, r5
 8002634:	2000      	movs	r0, #0
 8002636:	f858 2b04 	ldr.w	r2, [r8], #4
 800263a:	f8d1 c000 	ldr.w	ip, [r1]
 800263e:	b293      	uxth	r3, r2
 8002640:	1ac3      	subs	r3, r0, r3
 8002642:	0c12      	lsrs	r2, r2, #16
 8002644:	fa13 f38c 	uxtah	r3, r3, ip
 8002648:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800264c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002650:	b29b      	uxth	r3, r3
 8002652:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002656:	45c1      	cmp	r9, r8
 8002658:	f841 3b04 	str.w	r3, [r1], #4
 800265c:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002660:	d2e9      	bcs.n	8002636 <quorem+0xac>
 8002662:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002666:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800266a:	b922      	cbnz	r2, 8002676 <quorem+0xec>
 800266c:	3b04      	subs	r3, #4
 800266e:	429d      	cmp	r5, r3
 8002670:	461a      	mov	r2, r3
 8002672:	d30a      	bcc.n	800268a <quorem+0x100>
 8002674:	613c      	str	r4, [r7, #16]
 8002676:	4630      	mov	r0, r6
 8002678:	b003      	add	sp, #12
 800267a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800267e:	6812      	ldr	r2, [r2, #0]
 8002680:	3b04      	subs	r3, #4
 8002682:	2a00      	cmp	r2, #0
 8002684:	d1ce      	bne.n	8002624 <quorem+0x9a>
 8002686:	3c01      	subs	r4, #1
 8002688:	e7c9      	b.n	800261e <quorem+0x94>
 800268a:	6812      	ldr	r2, [r2, #0]
 800268c:	3b04      	subs	r3, #4
 800268e:	2a00      	cmp	r2, #0
 8002690:	d1f0      	bne.n	8002674 <quorem+0xea>
 8002692:	3c01      	subs	r4, #1
 8002694:	e7eb      	b.n	800266e <quorem+0xe4>
 8002696:	2000      	movs	r0, #0
 8002698:	e7ee      	b.n	8002678 <quorem+0xee>
 800269a:	0000      	movs	r0, r0
 800269c:	0000      	movs	r0, r0
	...

080026a0 <_dtoa_r>:
 80026a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026a4:	ed2d 8b04 	vpush	{d8-d9}
 80026a8:	69c5      	ldr	r5, [r0, #28]
 80026aa:	b093      	sub	sp, #76	; 0x4c
 80026ac:	ed8d 0b02 	vstr	d0, [sp, #8]
 80026b0:	ec57 6b10 	vmov	r6, r7, d0
 80026b4:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 80026b8:	9107      	str	r1, [sp, #28]
 80026ba:	4604      	mov	r4, r0
 80026bc:	920a      	str	r2, [sp, #40]	; 0x28
 80026be:	930d      	str	r3, [sp, #52]	; 0x34
 80026c0:	b975      	cbnz	r5, 80026e0 <_dtoa_r+0x40>
 80026c2:	2010      	movs	r0, #16
 80026c4:	f000 fe2a 	bl	800331c <malloc>
 80026c8:	4602      	mov	r2, r0
 80026ca:	61e0      	str	r0, [r4, #28]
 80026cc:	b920      	cbnz	r0, 80026d8 <_dtoa_r+0x38>
 80026ce:	4bae      	ldr	r3, [pc, #696]	; (8002988 <_dtoa_r+0x2e8>)
 80026d0:	21ef      	movs	r1, #239	; 0xef
 80026d2:	48ae      	ldr	r0, [pc, #696]	; (800298c <_dtoa_r+0x2ec>)
 80026d4:	f001 fce6 	bl	80040a4 <__assert_func>
 80026d8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80026dc:	6005      	str	r5, [r0, #0]
 80026de:	60c5      	str	r5, [r0, #12]
 80026e0:	69e3      	ldr	r3, [r4, #28]
 80026e2:	6819      	ldr	r1, [r3, #0]
 80026e4:	b151      	cbz	r1, 80026fc <_dtoa_r+0x5c>
 80026e6:	685a      	ldr	r2, [r3, #4]
 80026e8:	604a      	str	r2, [r1, #4]
 80026ea:	2301      	movs	r3, #1
 80026ec:	4093      	lsls	r3, r2
 80026ee:	608b      	str	r3, [r1, #8]
 80026f0:	4620      	mov	r0, r4
 80026f2:	f000 ff07 	bl	8003504 <_Bfree>
 80026f6:	69e3      	ldr	r3, [r4, #28]
 80026f8:	2200      	movs	r2, #0
 80026fa:	601a      	str	r2, [r3, #0]
 80026fc:	1e3b      	subs	r3, r7, #0
 80026fe:	bfbb      	ittet	lt
 8002700:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002704:	9303      	strlt	r3, [sp, #12]
 8002706:	2300      	movge	r3, #0
 8002708:	2201      	movlt	r2, #1
 800270a:	bfac      	ite	ge
 800270c:	f8c8 3000 	strge.w	r3, [r8]
 8002710:	f8c8 2000 	strlt.w	r2, [r8]
 8002714:	4b9e      	ldr	r3, [pc, #632]	; (8002990 <_dtoa_r+0x2f0>)
 8002716:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800271a:	ea33 0308 	bics.w	r3, r3, r8
 800271e:	d11b      	bne.n	8002758 <_dtoa_r+0xb8>
 8002720:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002722:	f242 730f 	movw	r3, #9999	; 0x270f
 8002726:	6013      	str	r3, [r2, #0]
 8002728:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800272c:	4333      	orrs	r3, r6
 800272e:	f000 8593 	beq.w	8003258 <_dtoa_r+0xbb8>
 8002732:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002734:	b963      	cbnz	r3, 8002750 <_dtoa_r+0xb0>
 8002736:	4b97      	ldr	r3, [pc, #604]	; (8002994 <_dtoa_r+0x2f4>)
 8002738:	e027      	b.n	800278a <_dtoa_r+0xea>
 800273a:	4b97      	ldr	r3, [pc, #604]	; (8002998 <_dtoa_r+0x2f8>)
 800273c:	9300      	str	r3, [sp, #0]
 800273e:	3308      	adds	r3, #8
 8002740:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002742:	6013      	str	r3, [r2, #0]
 8002744:	9800      	ldr	r0, [sp, #0]
 8002746:	b013      	add	sp, #76	; 0x4c
 8002748:	ecbd 8b04 	vpop	{d8-d9}
 800274c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002750:	4b90      	ldr	r3, [pc, #576]	; (8002994 <_dtoa_r+0x2f4>)
 8002752:	9300      	str	r3, [sp, #0]
 8002754:	3303      	adds	r3, #3
 8002756:	e7f3      	b.n	8002740 <_dtoa_r+0xa0>
 8002758:	ed9d 7b02 	vldr	d7, [sp, #8]
 800275c:	2200      	movs	r2, #0
 800275e:	ec51 0b17 	vmov	r0, r1, d7
 8002762:	eeb0 8a47 	vmov.f32	s16, s14
 8002766:	eef0 8a67 	vmov.f32	s17, s15
 800276a:	2300      	movs	r3, #0
 800276c:	f7fe f9bc 	bl	8000ae8 <__aeabi_dcmpeq>
 8002770:	4681      	mov	r9, r0
 8002772:	b160      	cbz	r0, 800278e <_dtoa_r+0xee>
 8002774:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002776:	2301      	movs	r3, #1
 8002778:	6013      	str	r3, [r2, #0]
 800277a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800277c:	2b00      	cmp	r3, #0
 800277e:	f000 8568 	beq.w	8003252 <_dtoa_r+0xbb2>
 8002782:	4b86      	ldr	r3, [pc, #536]	; (800299c <_dtoa_r+0x2fc>)
 8002784:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002786:	6013      	str	r3, [r2, #0]
 8002788:	3b01      	subs	r3, #1
 800278a:	9300      	str	r3, [sp, #0]
 800278c:	e7da      	b.n	8002744 <_dtoa_r+0xa4>
 800278e:	aa10      	add	r2, sp, #64	; 0x40
 8002790:	a911      	add	r1, sp, #68	; 0x44
 8002792:	4620      	mov	r0, r4
 8002794:	eeb0 0a48 	vmov.f32	s0, s16
 8002798:	eef0 0a68 	vmov.f32	s1, s17
 800279c:	f001 f994 	bl	8003ac8 <__d2b>
 80027a0:	f3c8 550a 	ubfx	r5, r8, #20, #11
 80027a4:	4682      	mov	sl, r0
 80027a6:	2d00      	cmp	r5, #0
 80027a8:	d07f      	beq.n	80028aa <_dtoa_r+0x20a>
 80027aa:	ee18 3a90 	vmov	r3, s17
 80027ae:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80027b2:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 80027b6:	ec51 0b18 	vmov	r0, r1, d8
 80027ba:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 80027be:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80027c2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80027c6:	4619      	mov	r1, r3
 80027c8:	2200      	movs	r2, #0
 80027ca:	4b75      	ldr	r3, [pc, #468]	; (80029a0 <_dtoa_r+0x300>)
 80027cc:	f7fd fd6c 	bl	80002a8 <__aeabi_dsub>
 80027d0:	a367      	add	r3, pc, #412	; (adr r3, 8002970 <_dtoa_r+0x2d0>)
 80027d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027d6:	f7fd ff1f 	bl	8000618 <__aeabi_dmul>
 80027da:	a367      	add	r3, pc, #412	; (adr r3, 8002978 <_dtoa_r+0x2d8>)
 80027dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027e0:	f7fd fd64 	bl	80002ac <__adddf3>
 80027e4:	4606      	mov	r6, r0
 80027e6:	4628      	mov	r0, r5
 80027e8:	460f      	mov	r7, r1
 80027ea:	f7fd feab 	bl	8000544 <__aeabi_i2d>
 80027ee:	a364      	add	r3, pc, #400	; (adr r3, 8002980 <_dtoa_r+0x2e0>)
 80027f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027f4:	f7fd ff10 	bl	8000618 <__aeabi_dmul>
 80027f8:	4602      	mov	r2, r0
 80027fa:	460b      	mov	r3, r1
 80027fc:	4630      	mov	r0, r6
 80027fe:	4639      	mov	r1, r7
 8002800:	f7fd fd54 	bl	80002ac <__adddf3>
 8002804:	4606      	mov	r6, r0
 8002806:	460f      	mov	r7, r1
 8002808:	f7fe f9b6 	bl	8000b78 <__aeabi_d2iz>
 800280c:	2200      	movs	r2, #0
 800280e:	4683      	mov	fp, r0
 8002810:	2300      	movs	r3, #0
 8002812:	4630      	mov	r0, r6
 8002814:	4639      	mov	r1, r7
 8002816:	f7fe f971 	bl	8000afc <__aeabi_dcmplt>
 800281a:	b148      	cbz	r0, 8002830 <_dtoa_r+0x190>
 800281c:	4658      	mov	r0, fp
 800281e:	f7fd fe91 	bl	8000544 <__aeabi_i2d>
 8002822:	4632      	mov	r2, r6
 8002824:	463b      	mov	r3, r7
 8002826:	f7fe f95f 	bl	8000ae8 <__aeabi_dcmpeq>
 800282a:	b908      	cbnz	r0, 8002830 <_dtoa_r+0x190>
 800282c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002830:	f1bb 0f16 	cmp.w	fp, #22
 8002834:	d857      	bhi.n	80028e6 <_dtoa_r+0x246>
 8002836:	4b5b      	ldr	r3, [pc, #364]	; (80029a4 <_dtoa_r+0x304>)
 8002838:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800283c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002840:	ec51 0b18 	vmov	r0, r1, d8
 8002844:	f7fe f95a 	bl	8000afc <__aeabi_dcmplt>
 8002848:	2800      	cmp	r0, #0
 800284a:	d04e      	beq.n	80028ea <_dtoa_r+0x24a>
 800284c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002850:	2300      	movs	r3, #0
 8002852:	930c      	str	r3, [sp, #48]	; 0x30
 8002854:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002856:	1b5b      	subs	r3, r3, r5
 8002858:	1e5a      	subs	r2, r3, #1
 800285a:	bf45      	ittet	mi
 800285c:	f1c3 0301 	rsbmi	r3, r3, #1
 8002860:	9305      	strmi	r3, [sp, #20]
 8002862:	2300      	movpl	r3, #0
 8002864:	2300      	movmi	r3, #0
 8002866:	9206      	str	r2, [sp, #24]
 8002868:	bf54      	ite	pl
 800286a:	9305      	strpl	r3, [sp, #20]
 800286c:	9306      	strmi	r3, [sp, #24]
 800286e:	f1bb 0f00 	cmp.w	fp, #0
 8002872:	db3c      	blt.n	80028ee <_dtoa_r+0x24e>
 8002874:	9b06      	ldr	r3, [sp, #24]
 8002876:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800287a:	445b      	add	r3, fp
 800287c:	9306      	str	r3, [sp, #24]
 800287e:	2300      	movs	r3, #0
 8002880:	9308      	str	r3, [sp, #32]
 8002882:	9b07      	ldr	r3, [sp, #28]
 8002884:	2b09      	cmp	r3, #9
 8002886:	d868      	bhi.n	800295a <_dtoa_r+0x2ba>
 8002888:	2b05      	cmp	r3, #5
 800288a:	bfc4      	itt	gt
 800288c:	3b04      	subgt	r3, #4
 800288e:	9307      	strgt	r3, [sp, #28]
 8002890:	9b07      	ldr	r3, [sp, #28]
 8002892:	f1a3 0302 	sub.w	r3, r3, #2
 8002896:	bfcc      	ite	gt
 8002898:	2500      	movgt	r5, #0
 800289a:	2501      	movle	r5, #1
 800289c:	2b03      	cmp	r3, #3
 800289e:	f200 8085 	bhi.w	80029ac <_dtoa_r+0x30c>
 80028a2:	e8df f003 	tbb	[pc, r3]
 80028a6:	3b2e      	.short	0x3b2e
 80028a8:	5839      	.short	0x5839
 80028aa:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 80028ae:	441d      	add	r5, r3
 80028b0:	f205 4332 	addw	r3, r5, #1074	; 0x432
 80028b4:	2b20      	cmp	r3, #32
 80028b6:	bfc1      	itttt	gt
 80028b8:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80028bc:	fa08 f803 	lslgt.w	r8, r8, r3
 80028c0:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 80028c4:	fa26 f303 	lsrgt.w	r3, r6, r3
 80028c8:	bfd6      	itet	le
 80028ca:	f1c3 0320 	rsble	r3, r3, #32
 80028ce:	ea48 0003 	orrgt.w	r0, r8, r3
 80028d2:	fa06 f003 	lslle.w	r0, r6, r3
 80028d6:	f7fd fe25 	bl	8000524 <__aeabi_ui2d>
 80028da:	2201      	movs	r2, #1
 80028dc:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80028e0:	3d01      	subs	r5, #1
 80028e2:	920e      	str	r2, [sp, #56]	; 0x38
 80028e4:	e76f      	b.n	80027c6 <_dtoa_r+0x126>
 80028e6:	2301      	movs	r3, #1
 80028e8:	e7b3      	b.n	8002852 <_dtoa_r+0x1b2>
 80028ea:	900c      	str	r0, [sp, #48]	; 0x30
 80028ec:	e7b2      	b.n	8002854 <_dtoa_r+0x1b4>
 80028ee:	9b05      	ldr	r3, [sp, #20]
 80028f0:	eba3 030b 	sub.w	r3, r3, fp
 80028f4:	9305      	str	r3, [sp, #20]
 80028f6:	f1cb 0300 	rsb	r3, fp, #0
 80028fa:	9308      	str	r3, [sp, #32]
 80028fc:	2300      	movs	r3, #0
 80028fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8002900:	e7bf      	b.n	8002882 <_dtoa_r+0x1e2>
 8002902:	2300      	movs	r3, #0
 8002904:	9309      	str	r3, [sp, #36]	; 0x24
 8002906:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002908:	2b00      	cmp	r3, #0
 800290a:	dc52      	bgt.n	80029b2 <_dtoa_r+0x312>
 800290c:	2301      	movs	r3, #1
 800290e:	9301      	str	r3, [sp, #4]
 8002910:	9304      	str	r3, [sp, #16]
 8002912:	461a      	mov	r2, r3
 8002914:	920a      	str	r2, [sp, #40]	; 0x28
 8002916:	e00b      	b.n	8002930 <_dtoa_r+0x290>
 8002918:	2301      	movs	r3, #1
 800291a:	e7f3      	b.n	8002904 <_dtoa_r+0x264>
 800291c:	2300      	movs	r3, #0
 800291e:	9309      	str	r3, [sp, #36]	; 0x24
 8002920:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002922:	445b      	add	r3, fp
 8002924:	9301      	str	r3, [sp, #4]
 8002926:	3301      	adds	r3, #1
 8002928:	2b01      	cmp	r3, #1
 800292a:	9304      	str	r3, [sp, #16]
 800292c:	bfb8      	it	lt
 800292e:	2301      	movlt	r3, #1
 8002930:	69e0      	ldr	r0, [r4, #28]
 8002932:	2100      	movs	r1, #0
 8002934:	2204      	movs	r2, #4
 8002936:	f102 0614 	add.w	r6, r2, #20
 800293a:	429e      	cmp	r6, r3
 800293c:	d93d      	bls.n	80029ba <_dtoa_r+0x31a>
 800293e:	6041      	str	r1, [r0, #4]
 8002940:	4620      	mov	r0, r4
 8002942:	f000 fd9f 	bl	8003484 <_Balloc>
 8002946:	9000      	str	r0, [sp, #0]
 8002948:	2800      	cmp	r0, #0
 800294a:	d139      	bne.n	80029c0 <_dtoa_r+0x320>
 800294c:	4b16      	ldr	r3, [pc, #88]	; (80029a8 <_dtoa_r+0x308>)
 800294e:	4602      	mov	r2, r0
 8002950:	f240 11af 	movw	r1, #431	; 0x1af
 8002954:	e6bd      	b.n	80026d2 <_dtoa_r+0x32>
 8002956:	2301      	movs	r3, #1
 8002958:	e7e1      	b.n	800291e <_dtoa_r+0x27e>
 800295a:	2501      	movs	r5, #1
 800295c:	2300      	movs	r3, #0
 800295e:	9307      	str	r3, [sp, #28]
 8002960:	9509      	str	r5, [sp, #36]	; 0x24
 8002962:	f04f 33ff 	mov.w	r3, #4294967295
 8002966:	9301      	str	r3, [sp, #4]
 8002968:	9304      	str	r3, [sp, #16]
 800296a:	2200      	movs	r2, #0
 800296c:	2312      	movs	r3, #18
 800296e:	e7d1      	b.n	8002914 <_dtoa_r+0x274>
 8002970:	636f4361 	.word	0x636f4361
 8002974:	3fd287a7 	.word	0x3fd287a7
 8002978:	8b60c8b3 	.word	0x8b60c8b3
 800297c:	3fc68a28 	.word	0x3fc68a28
 8002980:	509f79fb 	.word	0x509f79fb
 8002984:	3fd34413 	.word	0x3fd34413
 8002988:	08004282 	.word	0x08004282
 800298c:	08004299 	.word	0x08004299
 8002990:	7ff00000 	.word	0x7ff00000
 8002994:	0800427e 	.word	0x0800427e
 8002998:	08004275 	.word	0x08004275
 800299c:	08004252 	.word	0x08004252
 80029a0:	3ff80000 	.word	0x3ff80000
 80029a4:	08004388 	.word	0x08004388
 80029a8:	080042f1 	.word	0x080042f1
 80029ac:	2301      	movs	r3, #1
 80029ae:	9309      	str	r3, [sp, #36]	; 0x24
 80029b0:	e7d7      	b.n	8002962 <_dtoa_r+0x2c2>
 80029b2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80029b4:	9301      	str	r3, [sp, #4]
 80029b6:	9304      	str	r3, [sp, #16]
 80029b8:	e7ba      	b.n	8002930 <_dtoa_r+0x290>
 80029ba:	3101      	adds	r1, #1
 80029bc:	0052      	lsls	r2, r2, #1
 80029be:	e7ba      	b.n	8002936 <_dtoa_r+0x296>
 80029c0:	69e3      	ldr	r3, [r4, #28]
 80029c2:	9a00      	ldr	r2, [sp, #0]
 80029c4:	601a      	str	r2, [r3, #0]
 80029c6:	9b04      	ldr	r3, [sp, #16]
 80029c8:	2b0e      	cmp	r3, #14
 80029ca:	f200 80a8 	bhi.w	8002b1e <_dtoa_r+0x47e>
 80029ce:	2d00      	cmp	r5, #0
 80029d0:	f000 80a5 	beq.w	8002b1e <_dtoa_r+0x47e>
 80029d4:	f1bb 0f00 	cmp.w	fp, #0
 80029d8:	dd38      	ble.n	8002a4c <_dtoa_r+0x3ac>
 80029da:	4bc0      	ldr	r3, [pc, #768]	; (8002cdc <_dtoa_r+0x63c>)
 80029dc:	f00b 020f 	and.w	r2, fp, #15
 80029e0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80029e4:	f41b 7f80 	tst.w	fp, #256	; 0x100
 80029e8:	e9d3 6700 	ldrd	r6, r7, [r3]
 80029ec:	ea4f 182b 	mov.w	r8, fp, asr #4
 80029f0:	d019      	beq.n	8002a26 <_dtoa_r+0x386>
 80029f2:	4bbb      	ldr	r3, [pc, #748]	; (8002ce0 <_dtoa_r+0x640>)
 80029f4:	ec51 0b18 	vmov	r0, r1, d8
 80029f8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80029fc:	f7fd ff36 	bl	800086c <__aeabi_ddiv>
 8002a00:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a04:	f008 080f 	and.w	r8, r8, #15
 8002a08:	2503      	movs	r5, #3
 8002a0a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8002ce0 <_dtoa_r+0x640>
 8002a0e:	f1b8 0f00 	cmp.w	r8, #0
 8002a12:	d10a      	bne.n	8002a2a <_dtoa_r+0x38a>
 8002a14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a18:	4632      	mov	r2, r6
 8002a1a:	463b      	mov	r3, r7
 8002a1c:	f7fd ff26 	bl	800086c <__aeabi_ddiv>
 8002a20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a24:	e02b      	b.n	8002a7e <_dtoa_r+0x3de>
 8002a26:	2502      	movs	r5, #2
 8002a28:	e7ef      	b.n	8002a0a <_dtoa_r+0x36a>
 8002a2a:	f018 0f01 	tst.w	r8, #1
 8002a2e:	d008      	beq.n	8002a42 <_dtoa_r+0x3a2>
 8002a30:	4630      	mov	r0, r6
 8002a32:	4639      	mov	r1, r7
 8002a34:	e9d9 2300 	ldrd	r2, r3, [r9]
 8002a38:	f7fd fdee 	bl	8000618 <__aeabi_dmul>
 8002a3c:	3501      	adds	r5, #1
 8002a3e:	4606      	mov	r6, r0
 8002a40:	460f      	mov	r7, r1
 8002a42:	ea4f 0868 	mov.w	r8, r8, asr #1
 8002a46:	f109 0908 	add.w	r9, r9, #8
 8002a4a:	e7e0      	b.n	8002a0e <_dtoa_r+0x36e>
 8002a4c:	f000 809f 	beq.w	8002b8e <_dtoa_r+0x4ee>
 8002a50:	f1cb 0600 	rsb	r6, fp, #0
 8002a54:	4ba1      	ldr	r3, [pc, #644]	; (8002cdc <_dtoa_r+0x63c>)
 8002a56:	4fa2      	ldr	r7, [pc, #648]	; (8002ce0 <_dtoa_r+0x640>)
 8002a58:	f006 020f 	and.w	r2, r6, #15
 8002a5c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002a60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a64:	ec51 0b18 	vmov	r0, r1, d8
 8002a68:	f7fd fdd6 	bl	8000618 <__aeabi_dmul>
 8002a6c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002a70:	1136      	asrs	r6, r6, #4
 8002a72:	2300      	movs	r3, #0
 8002a74:	2502      	movs	r5, #2
 8002a76:	2e00      	cmp	r6, #0
 8002a78:	d17e      	bne.n	8002b78 <_dtoa_r+0x4d8>
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d1d0      	bne.n	8002a20 <_dtoa_r+0x380>
 8002a7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a80:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002a84:	2b00      	cmp	r3, #0
 8002a86:	f000 8084 	beq.w	8002b92 <_dtoa_r+0x4f2>
 8002a8a:	4b96      	ldr	r3, [pc, #600]	; (8002ce4 <_dtoa_r+0x644>)
 8002a8c:	2200      	movs	r2, #0
 8002a8e:	4640      	mov	r0, r8
 8002a90:	4649      	mov	r1, r9
 8002a92:	f7fe f833 	bl	8000afc <__aeabi_dcmplt>
 8002a96:	2800      	cmp	r0, #0
 8002a98:	d07b      	beq.n	8002b92 <_dtoa_r+0x4f2>
 8002a9a:	9b04      	ldr	r3, [sp, #16]
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d078      	beq.n	8002b92 <_dtoa_r+0x4f2>
 8002aa0:	9b01      	ldr	r3, [sp, #4]
 8002aa2:	2b00      	cmp	r3, #0
 8002aa4:	dd39      	ble.n	8002b1a <_dtoa_r+0x47a>
 8002aa6:	4b90      	ldr	r3, [pc, #576]	; (8002ce8 <_dtoa_r+0x648>)
 8002aa8:	2200      	movs	r2, #0
 8002aaa:	4640      	mov	r0, r8
 8002aac:	4649      	mov	r1, r9
 8002aae:	f7fd fdb3 	bl	8000618 <__aeabi_dmul>
 8002ab2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ab6:	9e01      	ldr	r6, [sp, #4]
 8002ab8:	f10b 37ff 	add.w	r7, fp, #4294967295
 8002abc:	3501      	adds	r5, #1
 8002abe:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002ac2:	4628      	mov	r0, r5
 8002ac4:	f7fd fd3e 	bl	8000544 <__aeabi_i2d>
 8002ac8:	4642      	mov	r2, r8
 8002aca:	464b      	mov	r3, r9
 8002acc:	f7fd fda4 	bl	8000618 <__aeabi_dmul>
 8002ad0:	4b86      	ldr	r3, [pc, #536]	; (8002cec <_dtoa_r+0x64c>)
 8002ad2:	2200      	movs	r2, #0
 8002ad4:	f7fd fbea 	bl	80002ac <__adddf3>
 8002ad8:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8002adc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ae0:	9303      	str	r3, [sp, #12]
 8002ae2:	2e00      	cmp	r6, #0
 8002ae4:	d158      	bne.n	8002b98 <_dtoa_r+0x4f8>
 8002ae6:	4b82      	ldr	r3, [pc, #520]	; (8002cf0 <_dtoa_r+0x650>)
 8002ae8:	2200      	movs	r2, #0
 8002aea:	4640      	mov	r0, r8
 8002aec:	4649      	mov	r1, r9
 8002aee:	f7fd fbdb 	bl	80002a8 <__aeabi_dsub>
 8002af2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002af6:	4680      	mov	r8, r0
 8002af8:	4689      	mov	r9, r1
 8002afa:	f7fe f81d 	bl	8000b38 <__aeabi_dcmpgt>
 8002afe:	2800      	cmp	r0, #0
 8002b00:	f040 8296 	bne.w	8003030 <_dtoa_r+0x990>
 8002b04:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002b08:	4640      	mov	r0, r8
 8002b0a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002b0e:	4649      	mov	r1, r9
 8002b10:	f7fd fff4 	bl	8000afc <__aeabi_dcmplt>
 8002b14:	2800      	cmp	r0, #0
 8002b16:	f040 8289 	bne.w	800302c <_dtoa_r+0x98c>
 8002b1a:	ed8d 8b02 	vstr	d8, [sp, #8]
 8002b1e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002b20:	2b00      	cmp	r3, #0
 8002b22:	f2c0 814e 	blt.w	8002dc2 <_dtoa_r+0x722>
 8002b26:	f1bb 0f0e 	cmp.w	fp, #14
 8002b2a:	f300 814a 	bgt.w	8002dc2 <_dtoa_r+0x722>
 8002b2e:	4b6b      	ldr	r3, [pc, #428]	; (8002cdc <_dtoa_r+0x63c>)
 8002b30:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002b34:	e9d3 8900 	ldrd	r8, r9, [r3]
 8002b38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b3a:	2b00      	cmp	r3, #0
 8002b3c:	f280 80dc 	bge.w	8002cf8 <_dtoa_r+0x658>
 8002b40:	9b04      	ldr	r3, [sp, #16]
 8002b42:	2b00      	cmp	r3, #0
 8002b44:	f300 80d8 	bgt.w	8002cf8 <_dtoa_r+0x658>
 8002b48:	f040 826f 	bne.w	800302a <_dtoa_r+0x98a>
 8002b4c:	4b68      	ldr	r3, [pc, #416]	; (8002cf0 <_dtoa_r+0x650>)
 8002b4e:	2200      	movs	r2, #0
 8002b50:	4640      	mov	r0, r8
 8002b52:	4649      	mov	r1, r9
 8002b54:	f7fd fd60 	bl	8000618 <__aeabi_dmul>
 8002b58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b5c:	f7fd ffe2 	bl	8000b24 <__aeabi_dcmpge>
 8002b60:	9e04      	ldr	r6, [sp, #16]
 8002b62:	4637      	mov	r7, r6
 8002b64:	2800      	cmp	r0, #0
 8002b66:	f040 8245 	bne.w	8002ff4 <_dtoa_r+0x954>
 8002b6a:	9d00      	ldr	r5, [sp, #0]
 8002b6c:	2331      	movs	r3, #49	; 0x31
 8002b6e:	f805 3b01 	strb.w	r3, [r5], #1
 8002b72:	f10b 0b01 	add.w	fp, fp, #1
 8002b76:	e241      	b.n	8002ffc <_dtoa_r+0x95c>
 8002b78:	07f2      	lsls	r2, r6, #31
 8002b7a:	d505      	bpl.n	8002b88 <_dtoa_r+0x4e8>
 8002b7c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002b80:	f7fd fd4a 	bl	8000618 <__aeabi_dmul>
 8002b84:	3501      	adds	r5, #1
 8002b86:	2301      	movs	r3, #1
 8002b88:	1076      	asrs	r6, r6, #1
 8002b8a:	3708      	adds	r7, #8
 8002b8c:	e773      	b.n	8002a76 <_dtoa_r+0x3d6>
 8002b8e:	2502      	movs	r5, #2
 8002b90:	e775      	b.n	8002a7e <_dtoa_r+0x3de>
 8002b92:	9e04      	ldr	r6, [sp, #16]
 8002b94:	465f      	mov	r7, fp
 8002b96:	e792      	b.n	8002abe <_dtoa_r+0x41e>
 8002b98:	9900      	ldr	r1, [sp, #0]
 8002b9a:	4b50      	ldr	r3, [pc, #320]	; (8002cdc <_dtoa_r+0x63c>)
 8002b9c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002ba0:	4431      	add	r1, r6
 8002ba2:	9102      	str	r1, [sp, #8]
 8002ba4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002ba6:	eeb0 9a47 	vmov.f32	s18, s14
 8002baa:	eef0 9a67 	vmov.f32	s19, s15
 8002bae:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002bb2:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002bb6:	2900      	cmp	r1, #0
 8002bb8:	d044      	beq.n	8002c44 <_dtoa_r+0x5a4>
 8002bba:	494e      	ldr	r1, [pc, #312]	; (8002cf4 <_dtoa_r+0x654>)
 8002bbc:	2000      	movs	r0, #0
 8002bbe:	f7fd fe55 	bl	800086c <__aeabi_ddiv>
 8002bc2:	ec53 2b19 	vmov	r2, r3, d9
 8002bc6:	f7fd fb6f 	bl	80002a8 <__aeabi_dsub>
 8002bca:	9d00      	ldr	r5, [sp, #0]
 8002bcc:	ec41 0b19 	vmov	d9, r0, r1
 8002bd0:	4649      	mov	r1, r9
 8002bd2:	4640      	mov	r0, r8
 8002bd4:	f7fd ffd0 	bl	8000b78 <__aeabi_d2iz>
 8002bd8:	4606      	mov	r6, r0
 8002bda:	f7fd fcb3 	bl	8000544 <__aeabi_i2d>
 8002bde:	4602      	mov	r2, r0
 8002be0:	460b      	mov	r3, r1
 8002be2:	4640      	mov	r0, r8
 8002be4:	4649      	mov	r1, r9
 8002be6:	f7fd fb5f 	bl	80002a8 <__aeabi_dsub>
 8002bea:	3630      	adds	r6, #48	; 0x30
 8002bec:	f805 6b01 	strb.w	r6, [r5], #1
 8002bf0:	ec53 2b19 	vmov	r2, r3, d9
 8002bf4:	4680      	mov	r8, r0
 8002bf6:	4689      	mov	r9, r1
 8002bf8:	f7fd ff80 	bl	8000afc <__aeabi_dcmplt>
 8002bfc:	2800      	cmp	r0, #0
 8002bfe:	d164      	bne.n	8002cca <_dtoa_r+0x62a>
 8002c00:	4642      	mov	r2, r8
 8002c02:	464b      	mov	r3, r9
 8002c04:	4937      	ldr	r1, [pc, #220]	; (8002ce4 <_dtoa_r+0x644>)
 8002c06:	2000      	movs	r0, #0
 8002c08:	f7fd fb4e 	bl	80002a8 <__aeabi_dsub>
 8002c0c:	ec53 2b19 	vmov	r2, r3, d9
 8002c10:	f7fd ff74 	bl	8000afc <__aeabi_dcmplt>
 8002c14:	2800      	cmp	r0, #0
 8002c16:	f040 80b6 	bne.w	8002d86 <_dtoa_r+0x6e6>
 8002c1a:	9b02      	ldr	r3, [sp, #8]
 8002c1c:	429d      	cmp	r5, r3
 8002c1e:	f43f af7c 	beq.w	8002b1a <_dtoa_r+0x47a>
 8002c22:	4b31      	ldr	r3, [pc, #196]	; (8002ce8 <_dtoa_r+0x648>)
 8002c24:	ec51 0b19 	vmov	r0, r1, d9
 8002c28:	2200      	movs	r2, #0
 8002c2a:	f7fd fcf5 	bl	8000618 <__aeabi_dmul>
 8002c2e:	4b2e      	ldr	r3, [pc, #184]	; (8002ce8 <_dtoa_r+0x648>)
 8002c30:	ec41 0b19 	vmov	d9, r0, r1
 8002c34:	2200      	movs	r2, #0
 8002c36:	4640      	mov	r0, r8
 8002c38:	4649      	mov	r1, r9
 8002c3a:	f7fd fced 	bl	8000618 <__aeabi_dmul>
 8002c3e:	4680      	mov	r8, r0
 8002c40:	4689      	mov	r9, r1
 8002c42:	e7c5      	b.n	8002bd0 <_dtoa_r+0x530>
 8002c44:	ec51 0b17 	vmov	r0, r1, d7
 8002c48:	f7fd fce6 	bl	8000618 <__aeabi_dmul>
 8002c4c:	9b02      	ldr	r3, [sp, #8]
 8002c4e:	9d00      	ldr	r5, [sp, #0]
 8002c50:	930f      	str	r3, [sp, #60]	; 0x3c
 8002c52:	ec41 0b19 	vmov	d9, r0, r1
 8002c56:	4649      	mov	r1, r9
 8002c58:	4640      	mov	r0, r8
 8002c5a:	f7fd ff8d 	bl	8000b78 <__aeabi_d2iz>
 8002c5e:	4606      	mov	r6, r0
 8002c60:	f7fd fc70 	bl	8000544 <__aeabi_i2d>
 8002c64:	3630      	adds	r6, #48	; 0x30
 8002c66:	4602      	mov	r2, r0
 8002c68:	460b      	mov	r3, r1
 8002c6a:	4640      	mov	r0, r8
 8002c6c:	4649      	mov	r1, r9
 8002c6e:	f7fd fb1b 	bl	80002a8 <__aeabi_dsub>
 8002c72:	f805 6b01 	strb.w	r6, [r5], #1
 8002c76:	9b02      	ldr	r3, [sp, #8]
 8002c78:	429d      	cmp	r5, r3
 8002c7a:	4680      	mov	r8, r0
 8002c7c:	4689      	mov	r9, r1
 8002c7e:	f04f 0200 	mov.w	r2, #0
 8002c82:	d124      	bne.n	8002cce <_dtoa_r+0x62e>
 8002c84:	4b1b      	ldr	r3, [pc, #108]	; (8002cf4 <_dtoa_r+0x654>)
 8002c86:	ec51 0b19 	vmov	r0, r1, d9
 8002c8a:	f7fd fb0f 	bl	80002ac <__adddf3>
 8002c8e:	4602      	mov	r2, r0
 8002c90:	460b      	mov	r3, r1
 8002c92:	4640      	mov	r0, r8
 8002c94:	4649      	mov	r1, r9
 8002c96:	f7fd ff4f 	bl	8000b38 <__aeabi_dcmpgt>
 8002c9a:	2800      	cmp	r0, #0
 8002c9c:	d173      	bne.n	8002d86 <_dtoa_r+0x6e6>
 8002c9e:	ec53 2b19 	vmov	r2, r3, d9
 8002ca2:	4914      	ldr	r1, [pc, #80]	; (8002cf4 <_dtoa_r+0x654>)
 8002ca4:	2000      	movs	r0, #0
 8002ca6:	f7fd faff 	bl	80002a8 <__aeabi_dsub>
 8002caa:	4602      	mov	r2, r0
 8002cac:	460b      	mov	r3, r1
 8002cae:	4640      	mov	r0, r8
 8002cb0:	4649      	mov	r1, r9
 8002cb2:	f7fd ff23 	bl	8000afc <__aeabi_dcmplt>
 8002cb6:	2800      	cmp	r0, #0
 8002cb8:	f43f af2f 	beq.w	8002b1a <_dtoa_r+0x47a>
 8002cbc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002cbe:	1e6b      	subs	r3, r5, #1
 8002cc0:	930f      	str	r3, [sp, #60]	; 0x3c
 8002cc2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002cc6:	2b30      	cmp	r3, #48	; 0x30
 8002cc8:	d0f8      	beq.n	8002cbc <_dtoa_r+0x61c>
 8002cca:	46bb      	mov	fp, r7
 8002ccc:	e04a      	b.n	8002d64 <_dtoa_r+0x6c4>
 8002cce:	4b06      	ldr	r3, [pc, #24]	; (8002ce8 <_dtoa_r+0x648>)
 8002cd0:	f7fd fca2 	bl	8000618 <__aeabi_dmul>
 8002cd4:	4680      	mov	r8, r0
 8002cd6:	4689      	mov	r9, r1
 8002cd8:	e7bd      	b.n	8002c56 <_dtoa_r+0x5b6>
 8002cda:	bf00      	nop
 8002cdc:	08004388 	.word	0x08004388
 8002ce0:	08004360 	.word	0x08004360
 8002ce4:	3ff00000 	.word	0x3ff00000
 8002ce8:	40240000 	.word	0x40240000
 8002cec:	401c0000 	.word	0x401c0000
 8002cf0:	40140000 	.word	0x40140000
 8002cf4:	3fe00000 	.word	0x3fe00000
 8002cf8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002cfc:	9d00      	ldr	r5, [sp, #0]
 8002cfe:	4642      	mov	r2, r8
 8002d00:	464b      	mov	r3, r9
 8002d02:	4630      	mov	r0, r6
 8002d04:	4639      	mov	r1, r7
 8002d06:	f7fd fdb1 	bl	800086c <__aeabi_ddiv>
 8002d0a:	f7fd ff35 	bl	8000b78 <__aeabi_d2iz>
 8002d0e:	9001      	str	r0, [sp, #4]
 8002d10:	f7fd fc18 	bl	8000544 <__aeabi_i2d>
 8002d14:	4642      	mov	r2, r8
 8002d16:	464b      	mov	r3, r9
 8002d18:	f7fd fc7e 	bl	8000618 <__aeabi_dmul>
 8002d1c:	4602      	mov	r2, r0
 8002d1e:	460b      	mov	r3, r1
 8002d20:	4630      	mov	r0, r6
 8002d22:	4639      	mov	r1, r7
 8002d24:	f7fd fac0 	bl	80002a8 <__aeabi_dsub>
 8002d28:	9e01      	ldr	r6, [sp, #4]
 8002d2a:	9f04      	ldr	r7, [sp, #16]
 8002d2c:	3630      	adds	r6, #48	; 0x30
 8002d2e:	f805 6b01 	strb.w	r6, [r5], #1
 8002d32:	9e00      	ldr	r6, [sp, #0]
 8002d34:	1bae      	subs	r6, r5, r6
 8002d36:	42b7      	cmp	r7, r6
 8002d38:	4602      	mov	r2, r0
 8002d3a:	460b      	mov	r3, r1
 8002d3c:	d134      	bne.n	8002da8 <_dtoa_r+0x708>
 8002d3e:	f7fd fab5 	bl	80002ac <__adddf3>
 8002d42:	4642      	mov	r2, r8
 8002d44:	464b      	mov	r3, r9
 8002d46:	4606      	mov	r6, r0
 8002d48:	460f      	mov	r7, r1
 8002d4a:	f7fd fef5 	bl	8000b38 <__aeabi_dcmpgt>
 8002d4e:	b9c8      	cbnz	r0, 8002d84 <_dtoa_r+0x6e4>
 8002d50:	4642      	mov	r2, r8
 8002d52:	464b      	mov	r3, r9
 8002d54:	4630      	mov	r0, r6
 8002d56:	4639      	mov	r1, r7
 8002d58:	f7fd fec6 	bl	8000ae8 <__aeabi_dcmpeq>
 8002d5c:	b110      	cbz	r0, 8002d64 <_dtoa_r+0x6c4>
 8002d5e:	9b01      	ldr	r3, [sp, #4]
 8002d60:	07db      	lsls	r3, r3, #31
 8002d62:	d40f      	bmi.n	8002d84 <_dtoa_r+0x6e4>
 8002d64:	4651      	mov	r1, sl
 8002d66:	4620      	mov	r0, r4
 8002d68:	f000 fbcc 	bl	8003504 <_Bfree>
 8002d6c:	2300      	movs	r3, #0
 8002d6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002d70:	702b      	strb	r3, [r5, #0]
 8002d72:	f10b 0301 	add.w	r3, fp, #1
 8002d76:	6013      	str	r3, [r2, #0]
 8002d78:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	f43f ace2 	beq.w	8002744 <_dtoa_r+0xa4>
 8002d80:	601d      	str	r5, [r3, #0]
 8002d82:	e4df      	b.n	8002744 <_dtoa_r+0xa4>
 8002d84:	465f      	mov	r7, fp
 8002d86:	462b      	mov	r3, r5
 8002d88:	461d      	mov	r5, r3
 8002d8a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002d8e:	2a39      	cmp	r2, #57	; 0x39
 8002d90:	d106      	bne.n	8002da0 <_dtoa_r+0x700>
 8002d92:	9a00      	ldr	r2, [sp, #0]
 8002d94:	429a      	cmp	r2, r3
 8002d96:	d1f7      	bne.n	8002d88 <_dtoa_r+0x6e8>
 8002d98:	9900      	ldr	r1, [sp, #0]
 8002d9a:	2230      	movs	r2, #48	; 0x30
 8002d9c:	3701      	adds	r7, #1
 8002d9e:	700a      	strb	r2, [r1, #0]
 8002da0:	781a      	ldrb	r2, [r3, #0]
 8002da2:	3201      	adds	r2, #1
 8002da4:	701a      	strb	r2, [r3, #0]
 8002da6:	e790      	b.n	8002cca <_dtoa_r+0x62a>
 8002da8:	4ba3      	ldr	r3, [pc, #652]	; (8003038 <_dtoa_r+0x998>)
 8002daa:	2200      	movs	r2, #0
 8002dac:	f7fd fc34 	bl	8000618 <__aeabi_dmul>
 8002db0:	2200      	movs	r2, #0
 8002db2:	2300      	movs	r3, #0
 8002db4:	4606      	mov	r6, r0
 8002db6:	460f      	mov	r7, r1
 8002db8:	f7fd fe96 	bl	8000ae8 <__aeabi_dcmpeq>
 8002dbc:	2800      	cmp	r0, #0
 8002dbe:	d09e      	beq.n	8002cfe <_dtoa_r+0x65e>
 8002dc0:	e7d0      	b.n	8002d64 <_dtoa_r+0x6c4>
 8002dc2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002dc4:	2a00      	cmp	r2, #0
 8002dc6:	f000 80ca 	beq.w	8002f5e <_dtoa_r+0x8be>
 8002dca:	9a07      	ldr	r2, [sp, #28]
 8002dcc:	2a01      	cmp	r2, #1
 8002dce:	f300 80ad 	bgt.w	8002f2c <_dtoa_r+0x88c>
 8002dd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002dd4:	2a00      	cmp	r2, #0
 8002dd6:	f000 80a5 	beq.w	8002f24 <_dtoa_r+0x884>
 8002dda:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002dde:	9e08      	ldr	r6, [sp, #32]
 8002de0:	9d05      	ldr	r5, [sp, #20]
 8002de2:	9a05      	ldr	r2, [sp, #20]
 8002de4:	441a      	add	r2, r3
 8002de6:	9205      	str	r2, [sp, #20]
 8002de8:	9a06      	ldr	r2, [sp, #24]
 8002dea:	2101      	movs	r1, #1
 8002dec:	441a      	add	r2, r3
 8002dee:	4620      	mov	r0, r4
 8002df0:	9206      	str	r2, [sp, #24]
 8002df2:	f000 fc3d 	bl	8003670 <__i2b>
 8002df6:	4607      	mov	r7, r0
 8002df8:	b165      	cbz	r5, 8002e14 <_dtoa_r+0x774>
 8002dfa:	9b06      	ldr	r3, [sp, #24]
 8002dfc:	2b00      	cmp	r3, #0
 8002dfe:	dd09      	ble.n	8002e14 <_dtoa_r+0x774>
 8002e00:	42ab      	cmp	r3, r5
 8002e02:	9a05      	ldr	r2, [sp, #20]
 8002e04:	bfa8      	it	ge
 8002e06:	462b      	movge	r3, r5
 8002e08:	1ad2      	subs	r2, r2, r3
 8002e0a:	9205      	str	r2, [sp, #20]
 8002e0c:	9a06      	ldr	r2, [sp, #24]
 8002e0e:	1aed      	subs	r5, r5, r3
 8002e10:	1ad3      	subs	r3, r2, r3
 8002e12:	9306      	str	r3, [sp, #24]
 8002e14:	9b08      	ldr	r3, [sp, #32]
 8002e16:	b1f3      	cbz	r3, 8002e56 <_dtoa_r+0x7b6>
 8002e18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	f000 80a3 	beq.w	8002f66 <_dtoa_r+0x8c6>
 8002e20:	2e00      	cmp	r6, #0
 8002e22:	dd10      	ble.n	8002e46 <_dtoa_r+0x7a6>
 8002e24:	4639      	mov	r1, r7
 8002e26:	4632      	mov	r2, r6
 8002e28:	4620      	mov	r0, r4
 8002e2a:	f000 fce1 	bl	80037f0 <__pow5mult>
 8002e2e:	4652      	mov	r2, sl
 8002e30:	4601      	mov	r1, r0
 8002e32:	4607      	mov	r7, r0
 8002e34:	4620      	mov	r0, r4
 8002e36:	f000 fc31 	bl	800369c <__multiply>
 8002e3a:	4651      	mov	r1, sl
 8002e3c:	4680      	mov	r8, r0
 8002e3e:	4620      	mov	r0, r4
 8002e40:	f000 fb60 	bl	8003504 <_Bfree>
 8002e44:	46c2      	mov	sl, r8
 8002e46:	9b08      	ldr	r3, [sp, #32]
 8002e48:	1b9a      	subs	r2, r3, r6
 8002e4a:	d004      	beq.n	8002e56 <_dtoa_r+0x7b6>
 8002e4c:	4651      	mov	r1, sl
 8002e4e:	4620      	mov	r0, r4
 8002e50:	f000 fcce 	bl	80037f0 <__pow5mult>
 8002e54:	4682      	mov	sl, r0
 8002e56:	2101      	movs	r1, #1
 8002e58:	4620      	mov	r0, r4
 8002e5a:	f000 fc09 	bl	8003670 <__i2b>
 8002e5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002e60:	2b00      	cmp	r3, #0
 8002e62:	4606      	mov	r6, r0
 8002e64:	f340 8081 	ble.w	8002f6a <_dtoa_r+0x8ca>
 8002e68:	461a      	mov	r2, r3
 8002e6a:	4601      	mov	r1, r0
 8002e6c:	4620      	mov	r0, r4
 8002e6e:	f000 fcbf 	bl	80037f0 <__pow5mult>
 8002e72:	9b07      	ldr	r3, [sp, #28]
 8002e74:	2b01      	cmp	r3, #1
 8002e76:	4606      	mov	r6, r0
 8002e78:	dd7a      	ble.n	8002f70 <_dtoa_r+0x8d0>
 8002e7a:	f04f 0800 	mov.w	r8, #0
 8002e7e:	6933      	ldr	r3, [r6, #16]
 8002e80:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002e84:	6918      	ldr	r0, [r3, #16]
 8002e86:	f000 fba5 	bl	80035d4 <__hi0bits>
 8002e8a:	f1c0 0020 	rsb	r0, r0, #32
 8002e8e:	9b06      	ldr	r3, [sp, #24]
 8002e90:	4418      	add	r0, r3
 8002e92:	f010 001f 	ands.w	r0, r0, #31
 8002e96:	f000 8094 	beq.w	8002fc2 <_dtoa_r+0x922>
 8002e9a:	f1c0 0320 	rsb	r3, r0, #32
 8002e9e:	2b04      	cmp	r3, #4
 8002ea0:	f340 8085 	ble.w	8002fae <_dtoa_r+0x90e>
 8002ea4:	9b05      	ldr	r3, [sp, #20]
 8002ea6:	f1c0 001c 	rsb	r0, r0, #28
 8002eaa:	4403      	add	r3, r0
 8002eac:	9305      	str	r3, [sp, #20]
 8002eae:	9b06      	ldr	r3, [sp, #24]
 8002eb0:	4403      	add	r3, r0
 8002eb2:	4405      	add	r5, r0
 8002eb4:	9306      	str	r3, [sp, #24]
 8002eb6:	9b05      	ldr	r3, [sp, #20]
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	dd05      	ble.n	8002ec8 <_dtoa_r+0x828>
 8002ebc:	4651      	mov	r1, sl
 8002ebe:	461a      	mov	r2, r3
 8002ec0:	4620      	mov	r0, r4
 8002ec2:	f000 fcef 	bl	80038a4 <__lshift>
 8002ec6:	4682      	mov	sl, r0
 8002ec8:	9b06      	ldr	r3, [sp, #24]
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	dd05      	ble.n	8002eda <_dtoa_r+0x83a>
 8002ece:	4631      	mov	r1, r6
 8002ed0:	461a      	mov	r2, r3
 8002ed2:	4620      	mov	r0, r4
 8002ed4:	f000 fce6 	bl	80038a4 <__lshift>
 8002ed8:	4606      	mov	r6, r0
 8002eda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002edc:	2b00      	cmp	r3, #0
 8002ede:	d072      	beq.n	8002fc6 <_dtoa_r+0x926>
 8002ee0:	4631      	mov	r1, r6
 8002ee2:	4650      	mov	r0, sl
 8002ee4:	f000 fd4a 	bl	800397c <__mcmp>
 8002ee8:	2800      	cmp	r0, #0
 8002eea:	da6c      	bge.n	8002fc6 <_dtoa_r+0x926>
 8002eec:	2300      	movs	r3, #0
 8002eee:	4651      	mov	r1, sl
 8002ef0:	220a      	movs	r2, #10
 8002ef2:	4620      	mov	r0, r4
 8002ef4:	f000 fb28 	bl	8003548 <__multadd>
 8002ef8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002efa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002efe:	4682      	mov	sl, r0
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	f000 81b0 	beq.w	8003266 <_dtoa_r+0xbc6>
 8002f06:	2300      	movs	r3, #0
 8002f08:	4639      	mov	r1, r7
 8002f0a:	220a      	movs	r2, #10
 8002f0c:	4620      	mov	r0, r4
 8002f0e:	f000 fb1b 	bl	8003548 <__multadd>
 8002f12:	9b01      	ldr	r3, [sp, #4]
 8002f14:	2b00      	cmp	r3, #0
 8002f16:	4607      	mov	r7, r0
 8002f18:	f300 8096 	bgt.w	8003048 <_dtoa_r+0x9a8>
 8002f1c:	9b07      	ldr	r3, [sp, #28]
 8002f1e:	2b02      	cmp	r3, #2
 8002f20:	dc59      	bgt.n	8002fd6 <_dtoa_r+0x936>
 8002f22:	e091      	b.n	8003048 <_dtoa_r+0x9a8>
 8002f24:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002f26:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002f2a:	e758      	b.n	8002dde <_dtoa_r+0x73e>
 8002f2c:	9b04      	ldr	r3, [sp, #16]
 8002f2e:	1e5e      	subs	r6, r3, #1
 8002f30:	9b08      	ldr	r3, [sp, #32]
 8002f32:	42b3      	cmp	r3, r6
 8002f34:	bfbf      	itttt	lt
 8002f36:	9b08      	ldrlt	r3, [sp, #32]
 8002f38:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8002f3a:	9608      	strlt	r6, [sp, #32]
 8002f3c:	1af3      	sublt	r3, r6, r3
 8002f3e:	bfb4      	ite	lt
 8002f40:	18d2      	addlt	r2, r2, r3
 8002f42:	1b9e      	subge	r6, r3, r6
 8002f44:	9b04      	ldr	r3, [sp, #16]
 8002f46:	bfbc      	itt	lt
 8002f48:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8002f4a:	2600      	movlt	r6, #0
 8002f4c:	2b00      	cmp	r3, #0
 8002f4e:	bfb7      	itett	lt
 8002f50:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8002f54:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8002f58:	1a9d      	sublt	r5, r3, r2
 8002f5a:	2300      	movlt	r3, #0
 8002f5c:	e741      	b.n	8002de2 <_dtoa_r+0x742>
 8002f5e:	9e08      	ldr	r6, [sp, #32]
 8002f60:	9d05      	ldr	r5, [sp, #20]
 8002f62:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002f64:	e748      	b.n	8002df8 <_dtoa_r+0x758>
 8002f66:	9a08      	ldr	r2, [sp, #32]
 8002f68:	e770      	b.n	8002e4c <_dtoa_r+0x7ac>
 8002f6a:	9b07      	ldr	r3, [sp, #28]
 8002f6c:	2b01      	cmp	r3, #1
 8002f6e:	dc19      	bgt.n	8002fa4 <_dtoa_r+0x904>
 8002f70:	9b02      	ldr	r3, [sp, #8]
 8002f72:	b9bb      	cbnz	r3, 8002fa4 <_dtoa_r+0x904>
 8002f74:	9b03      	ldr	r3, [sp, #12]
 8002f76:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002f7a:	b99b      	cbnz	r3, 8002fa4 <_dtoa_r+0x904>
 8002f7c:	9b03      	ldr	r3, [sp, #12]
 8002f7e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002f82:	0d1b      	lsrs	r3, r3, #20
 8002f84:	051b      	lsls	r3, r3, #20
 8002f86:	b183      	cbz	r3, 8002faa <_dtoa_r+0x90a>
 8002f88:	9b05      	ldr	r3, [sp, #20]
 8002f8a:	3301      	adds	r3, #1
 8002f8c:	9305      	str	r3, [sp, #20]
 8002f8e:	9b06      	ldr	r3, [sp, #24]
 8002f90:	3301      	adds	r3, #1
 8002f92:	9306      	str	r3, [sp, #24]
 8002f94:	f04f 0801 	mov.w	r8, #1
 8002f98:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	f47f af6f 	bne.w	8002e7e <_dtoa_r+0x7de>
 8002fa0:	2001      	movs	r0, #1
 8002fa2:	e774      	b.n	8002e8e <_dtoa_r+0x7ee>
 8002fa4:	f04f 0800 	mov.w	r8, #0
 8002fa8:	e7f6      	b.n	8002f98 <_dtoa_r+0x8f8>
 8002faa:	4698      	mov	r8, r3
 8002fac:	e7f4      	b.n	8002f98 <_dtoa_r+0x8f8>
 8002fae:	d082      	beq.n	8002eb6 <_dtoa_r+0x816>
 8002fb0:	9a05      	ldr	r2, [sp, #20]
 8002fb2:	331c      	adds	r3, #28
 8002fb4:	441a      	add	r2, r3
 8002fb6:	9205      	str	r2, [sp, #20]
 8002fb8:	9a06      	ldr	r2, [sp, #24]
 8002fba:	441a      	add	r2, r3
 8002fbc:	441d      	add	r5, r3
 8002fbe:	9206      	str	r2, [sp, #24]
 8002fc0:	e779      	b.n	8002eb6 <_dtoa_r+0x816>
 8002fc2:	4603      	mov	r3, r0
 8002fc4:	e7f4      	b.n	8002fb0 <_dtoa_r+0x910>
 8002fc6:	9b04      	ldr	r3, [sp, #16]
 8002fc8:	2b00      	cmp	r3, #0
 8002fca:	dc37      	bgt.n	800303c <_dtoa_r+0x99c>
 8002fcc:	9b07      	ldr	r3, [sp, #28]
 8002fce:	2b02      	cmp	r3, #2
 8002fd0:	dd34      	ble.n	800303c <_dtoa_r+0x99c>
 8002fd2:	9b04      	ldr	r3, [sp, #16]
 8002fd4:	9301      	str	r3, [sp, #4]
 8002fd6:	9b01      	ldr	r3, [sp, #4]
 8002fd8:	b963      	cbnz	r3, 8002ff4 <_dtoa_r+0x954>
 8002fda:	4631      	mov	r1, r6
 8002fdc:	2205      	movs	r2, #5
 8002fde:	4620      	mov	r0, r4
 8002fe0:	f000 fab2 	bl	8003548 <__multadd>
 8002fe4:	4601      	mov	r1, r0
 8002fe6:	4606      	mov	r6, r0
 8002fe8:	4650      	mov	r0, sl
 8002fea:	f000 fcc7 	bl	800397c <__mcmp>
 8002fee:	2800      	cmp	r0, #0
 8002ff0:	f73f adbb 	bgt.w	8002b6a <_dtoa_r+0x4ca>
 8002ff4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002ff6:	9d00      	ldr	r5, [sp, #0]
 8002ff8:	ea6f 0b03 	mvn.w	fp, r3
 8002ffc:	f04f 0800 	mov.w	r8, #0
 8003000:	4631      	mov	r1, r6
 8003002:	4620      	mov	r0, r4
 8003004:	f000 fa7e 	bl	8003504 <_Bfree>
 8003008:	2f00      	cmp	r7, #0
 800300a:	f43f aeab 	beq.w	8002d64 <_dtoa_r+0x6c4>
 800300e:	f1b8 0f00 	cmp.w	r8, #0
 8003012:	d005      	beq.n	8003020 <_dtoa_r+0x980>
 8003014:	45b8      	cmp	r8, r7
 8003016:	d003      	beq.n	8003020 <_dtoa_r+0x980>
 8003018:	4641      	mov	r1, r8
 800301a:	4620      	mov	r0, r4
 800301c:	f000 fa72 	bl	8003504 <_Bfree>
 8003020:	4639      	mov	r1, r7
 8003022:	4620      	mov	r0, r4
 8003024:	f000 fa6e 	bl	8003504 <_Bfree>
 8003028:	e69c      	b.n	8002d64 <_dtoa_r+0x6c4>
 800302a:	2600      	movs	r6, #0
 800302c:	4637      	mov	r7, r6
 800302e:	e7e1      	b.n	8002ff4 <_dtoa_r+0x954>
 8003030:	46bb      	mov	fp, r7
 8003032:	4637      	mov	r7, r6
 8003034:	e599      	b.n	8002b6a <_dtoa_r+0x4ca>
 8003036:	bf00      	nop
 8003038:	40240000 	.word	0x40240000
 800303c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800303e:	2b00      	cmp	r3, #0
 8003040:	f000 80c8 	beq.w	80031d4 <_dtoa_r+0xb34>
 8003044:	9b04      	ldr	r3, [sp, #16]
 8003046:	9301      	str	r3, [sp, #4]
 8003048:	2d00      	cmp	r5, #0
 800304a:	dd05      	ble.n	8003058 <_dtoa_r+0x9b8>
 800304c:	4639      	mov	r1, r7
 800304e:	462a      	mov	r2, r5
 8003050:	4620      	mov	r0, r4
 8003052:	f000 fc27 	bl	80038a4 <__lshift>
 8003056:	4607      	mov	r7, r0
 8003058:	f1b8 0f00 	cmp.w	r8, #0
 800305c:	d05b      	beq.n	8003116 <_dtoa_r+0xa76>
 800305e:	6879      	ldr	r1, [r7, #4]
 8003060:	4620      	mov	r0, r4
 8003062:	f000 fa0f 	bl	8003484 <_Balloc>
 8003066:	4605      	mov	r5, r0
 8003068:	b928      	cbnz	r0, 8003076 <_dtoa_r+0x9d6>
 800306a:	4b83      	ldr	r3, [pc, #524]	; (8003278 <_dtoa_r+0xbd8>)
 800306c:	4602      	mov	r2, r0
 800306e:	f240 21ef 	movw	r1, #751	; 0x2ef
 8003072:	f7ff bb2e 	b.w	80026d2 <_dtoa_r+0x32>
 8003076:	693a      	ldr	r2, [r7, #16]
 8003078:	3202      	adds	r2, #2
 800307a:	0092      	lsls	r2, r2, #2
 800307c:	f107 010c 	add.w	r1, r7, #12
 8003080:	300c      	adds	r0, #12
 8003082:	f001 f801 	bl	8004088 <memcpy>
 8003086:	2201      	movs	r2, #1
 8003088:	4629      	mov	r1, r5
 800308a:	4620      	mov	r0, r4
 800308c:	f000 fc0a 	bl	80038a4 <__lshift>
 8003090:	9b00      	ldr	r3, [sp, #0]
 8003092:	3301      	adds	r3, #1
 8003094:	9304      	str	r3, [sp, #16]
 8003096:	e9dd 2300 	ldrd	r2, r3, [sp]
 800309a:	4413      	add	r3, r2
 800309c:	9308      	str	r3, [sp, #32]
 800309e:	9b02      	ldr	r3, [sp, #8]
 80030a0:	f003 0301 	and.w	r3, r3, #1
 80030a4:	46b8      	mov	r8, r7
 80030a6:	9306      	str	r3, [sp, #24]
 80030a8:	4607      	mov	r7, r0
 80030aa:	9b04      	ldr	r3, [sp, #16]
 80030ac:	4631      	mov	r1, r6
 80030ae:	3b01      	subs	r3, #1
 80030b0:	4650      	mov	r0, sl
 80030b2:	9301      	str	r3, [sp, #4]
 80030b4:	f7ff fa69 	bl	800258a <quorem>
 80030b8:	4641      	mov	r1, r8
 80030ba:	9002      	str	r0, [sp, #8]
 80030bc:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80030c0:	4650      	mov	r0, sl
 80030c2:	f000 fc5b 	bl	800397c <__mcmp>
 80030c6:	463a      	mov	r2, r7
 80030c8:	9005      	str	r0, [sp, #20]
 80030ca:	4631      	mov	r1, r6
 80030cc:	4620      	mov	r0, r4
 80030ce:	f000 fc71 	bl	80039b4 <__mdiff>
 80030d2:	68c2      	ldr	r2, [r0, #12]
 80030d4:	4605      	mov	r5, r0
 80030d6:	bb02      	cbnz	r2, 800311a <_dtoa_r+0xa7a>
 80030d8:	4601      	mov	r1, r0
 80030da:	4650      	mov	r0, sl
 80030dc:	f000 fc4e 	bl	800397c <__mcmp>
 80030e0:	4602      	mov	r2, r0
 80030e2:	4629      	mov	r1, r5
 80030e4:	4620      	mov	r0, r4
 80030e6:	9209      	str	r2, [sp, #36]	; 0x24
 80030e8:	f000 fa0c 	bl	8003504 <_Bfree>
 80030ec:	9b07      	ldr	r3, [sp, #28]
 80030ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80030f0:	9d04      	ldr	r5, [sp, #16]
 80030f2:	ea43 0102 	orr.w	r1, r3, r2
 80030f6:	9b06      	ldr	r3, [sp, #24]
 80030f8:	4319      	orrs	r1, r3
 80030fa:	d110      	bne.n	800311e <_dtoa_r+0xa7e>
 80030fc:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003100:	d029      	beq.n	8003156 <_dtoa_r+0xab6>
 8003102:	9b05      	ldr	r3, [sp, #20]
 8003104:	2b00      	cmp	r3, #0
 8003106:	dd02      	ble.n	800310e <_dtoa_r+0xa6e>
 8003108:	9b02      	ldr	r3, [sp, #8]
 800310a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 800310e:	9b01      	ldr	r3, [sp, #4]
 8003110:	f883 9000 	strb.w	r9, [r3]
 8003114:	e774      	b.n	8003000 <_dtoa_r+0x960>
 8003116:	4638      	mov	r0, r7
 8003118:	e7ba      	b.n	8003090 <_dtoa_r+0x9f0>
 800311a:	2201      	movs	r2, #1
 800311c:	e7e1      	b.n	80030e2 <_dtoa_r+0xa42>
 800311e:	9b05      	ldr	r3, [sp, #20]
 8003120:	2b00      	cmp	r3, #0
 8003122:	db04      	blt.n	800312e <_dtoa_r+0xa8e>
 8003124:	9907      	ldr	r1, [sp, #28]
 8003126:	430b      	orrs	r3, r1
 8003128:	9906      	ldr	r1, [sp, #24]
 800312a:	430b      	orrs	r3, r1
 800312c:	d120      	bne.n	8003170 <_dtoa_r+0xad0>
 800312e:	2a00      	cmp	r2, #0
 8003130:	dded      	ble.n	800310e <_dtoa_r+0xa6e>
 8003132:	4651      	mov	r1, sl
 8003134:	2201      	movs	r2, #1
 8003136:	4620      	mov	r0, r4
 8003138:	f000 fbb4 	bl	80038a4 <__lshift>
 800313c:	4631      	mov	r1, r6
 800313e:	4682      	mov	sl, r0
 8003140:	f000 fc1c 	bl	800397c <__mcmp>
 8003144:	2800      	cmp	r0, #0
 8003146:	dc03      	bgt.n	8003150 <_dtoa_r+0xab0>
 8003148:	d1e1      	bne.n	800310e <_dtoa_r+0xa6e>
 800314a:	f019 0f01 	tst.w	r9, #1
 800314e:	d0de      	beq.n	800310e <_dtoa_r+0xa6e>
 8003150:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003154:	d1d8      	bne.n	8003108 <_dtoa_r+0xa68>
 8003156:	9a01      	ldr	r2, [sp, #4]
 8003158:	2339      	movs	r3, #57	; 0x39
 800315a:	7013      	strb	r3, [r2, #0]
 800315c:	462b      	mov	r3, r5
 800315e:	461d      	mov	r5, r3
 8003160:	3b01      	subs	r3, #1
 8003162:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8003166:	2a39      	cmp	r2, #57	; 0x39
 8003168:	d06c      	beq.n	8003244 <_dtoa_r+0xba4>
 800316a:	3201      	adds	r2, #1
 800316c:	701a      	strb	r2, [r3, #0]
 800316e:	e747      	b.n	8003000 <_dtoa_r+0x960>
 8003170:	2a00      	cmp	r2, #0
 8003172:	dd07      	ble.n	8003184 <_dtoa_r+0xae4>
 8003174:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003178:	d0ed      	beq.n	8003156 <_dtoa_r+0xab6>
 800317a:	9a01      	ldr	r2, [sp, #4]
 800317c:	f109 0301 	add.w	r3, r9, #1
 8003180:	7013      	strb	r3, [r2, #0]
 8003182:	e73d      	b.n	8003000 <_dtoa_r+0x960>
 8003184:	9b04      	ldr	r3, [sp, #16]
 8003186:	9a08      	ldr	r2, [sp, #32]
 8003188:	f803 9c01 	strb.w	r9, [r3, #-1]
 800318c:	4293      	cmp	r3, r2
 800318e:	d043      	beq.n	8003218 <_dtoa_r+0xb78>
 8003190:	4651      	mov	r1, sl
 8003192:	2300      	movs	r3, #0
 8003194:	220a      	movs	r2, #10
 8003196:	4620      	mov	r0, r4
 8003198:	f000 f9d6 	bl	8003548 <__multadd>
 800319c:	45b8      	cmp	r8, r7
 800319e:	4682      	mov	sl, r0
 80031a0:	f04f 0300 	mov.w	r3, #0
 80031a4:	f04f 020a 	mov.w	r2, #10
 80031a8:	4641      	mov	r1, r8
 80031aa:	4620      	mov	r0, r4
 80031ac:	d107      	bne.n	80031be <_dtoa_r+0xb1e>
 80031ae:	f000 f9cb 	bl	8003548 <__multadd>
 80031b2:	4680      	mov	r8, r0
 80031b4:	4607      	mov	r7, r0
 80031b6:	9b04      	ldr	r3, [sp, #16]
 80031b8:	3301      	adds	r3, #1
 80031ba:	9304      	str	r3, [sp, #16]
 80031bc:	e775      	b.n	80030aa <_dtoa_r+0xa0a>
 80031be:	f000 f9c3 	bl	8003548 <__multadd>
 80031c2:	4639      	mov	r1, r7
 80031c4:	4680      	mov	r8, r0
 80031c6:	2300      	movs	r3, #0
 80031c8:	220a      	movs	r2, #10
 80031ca:	4620      	mov	r0, r4
 80031cc:	f000 f9bc 	bl	8003548 <__multadd>
 80031d0:	4607      	mov	r7, r0
 80031d2:	e7f0      	b.n	80031b6 <_dtoa_r+0xb16>
 80031d4:	9b04      	ldr	r3, [sp, #16]
 80031d6:	9301      	str	r3, [sp, #4]
 80031d8:	9d00      	ldr	r5, [sp, #0]
 80031da:	4631      	mov	r1, r6
 80031dc:	4650      	mov	r0, sl
 80031de:	f7ff f9d4 	bl	800258a <quorem>
 80031e2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80031e6:	9b00      	ldr	r3, [sp, #0]
 80031e8:	f805 9b01 	strb.w	r9, [r5], #1
 80031ec:	1aea      	subs	r2, r5, r3
 80031ee:	9b01      	ldr	r3, [sp, #4]
 80031f0:	4293      	cmp	r3, r2
 80031f2:	dd07      	ble.n	8003204 <_dtoa_r+0xb64>
 80031f4:	4651      	mov	r1, sl
 80031f6:	2300      	movs	r3, #0
 80031f8:	220a      	movs	r2, #10
 80031fa:	4620      	mov	r0, r4
 80031fc:	f000 f9a4 	bl	8003548 <__multadd>
 8003200:	4682      	mov	sl, r0
 8003202:	e7ea      	b.n	80031da <_dtoa_r+0xb3a>
 8003204:	9b01      	ldr	r3, [sp, #4]
 8003206:	2b00      	cmp	r3, #0
 8003208:	bfc8      	it	gt
 800320a:	461d      	movgt	r5, r3
 800320c:	9b00      	ldr	r3, [sp, #0]
 800320e:	bfd8      	it	le
 8003210:	2501      	movle	r5, #1
 8003212:	441d      	add	r5, r3
 8003214:	f04f 0800 	mov.w	r8, #0
 8003218:	4651      	mov	r1, sl
 800321a:	2201      	movs	r2, #1
 800321c:	4620      	mov	r0, r4
 800321e:	f000 fb41 	bl	80038a4 <__lshift>
 8003222:	4631      	mov	r1, r6
 8003224:	4682      	mov	sl, r0
 8003226:	f000 fba9 	bl	800397c <__mcmp>
 800322a:	2800      	cmp	r0, #0
 800322c:	dc96      	bgt.n	800315c <_dtoa_r+0xabc>
 800322e:	d102      	bne.n	8003236 <_dtoa_r+0xb96>
 8003230:	f019 0f01 	tst.w	r9, #1
 8003234:	d192      	bne.n	800315c <_dtoa_r+0xabc>
 8003236:	462b      	mov	r3, r5
 8003238:	461d      	mov	r5, r3
 800323a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800323e:	2a30      	cmp	r2, #48	; 0x30
 8003240:	d0fa      	beq.n	8003238 <_dtoa_r+0xb98>
 8003242:	e6dd      	b.n	8003000 <_dtoa_r+0x960>
 8003244:	9a00      	ldr	r2, [sp, #0]
 8003246:	429a      	cmp	r2, r3
 8003248:	d189      	bne.n	800315e <_dtoa_r+0xabe>
 800324a:	f10b 0b01 	add.w	fp, fp, #1
 800324e:	2331      	movs	r3, #49	; 0x31
 8003250:	e796      	b.n	8003180 <_dtoa_r+0xae0>
 8003252:	4b0a      	ldr	r3, [pc, #40]	; (800327c <_dtoa_r+0xbdc>)
 8003254:	f7ff ba99 	b.w	800278a <_dtoa_r+0xea>
 8003258:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800325a:	2b00      	cmp	r3, #0
 800325c:	f47f aa6d 	bne.w	800273a <_dtoa_r+0x9a>
 8003260:	4b07      	ldr	r3, [pc, #28]	; (8003280 <_dtoa_r+0xbe0>)
 8003262:	f7ff ba92 	b.w	800278a <_dtoa_r+0xea>
 8003266:	9b01      	ldr	r3, [sp, #4]
 8003268:	2b00      	cmp	r3, #0
 800326a:	dcb5      	bgt.n	80031d8 <_dtoa_r+0xb38>
 800326c:	9b07      	ldr	r3, [sp, #28]
 800326e:	2b02      	cmp	r3, #2
 8003270:	f73f aeb1 	bgt.w	8002fd6 <_dtoa_r+0x936>
 8003274:	e7b0      	b.n	80031d8 <_dtoa_r+0xb38>
 8003276:	bf00      	nop
 8003278:	080042f1 	.word	0x080042f1
 800327c:	08004251 	.word	0x08004251
 8003280:	08004275 	.word	0x08004275

08003284 <_free_r>:
 8003284:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003286:	2900      	cmp	r1, #0
 8003288:	d044      	beq.n	8003314 <_free_r+0x90>
 800328a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800328e:	9001      	str	r0, [sp, #4]
 8003290:	2b00      	cmp	r3, #0
 8003292:	f1a1 0404 	sub.w	r4, r1, #4
 8003296:	bfb8      	it	lt
 8003298:	18e4      	addlt	r4, r4, r3
 800329a:	f000 f8e7 	bl	800346c <__malloc_lock>
 800329e:	4a1e      	ldr	r2, [pc, #120]	; (8003318 <_free_r+0x94>)
 80032a0:	9801      	ldr	r0, [sp, #4]
 80032a2:	6813      	ldr	r3, [r2, #0]
 80032a4:	b933      	cbnz	r3, 80032b4 <_free_r+0x30>
 80032a6:	6063      	str	r3, [r4, #4]
 80032a8:	6014      	str	r4, [r2, #0]
 80032aa:	b003      	add	sp, #12
 80032ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80032b0:	f000 b8e2 	b.w	8003478 <__malloc_unlock>
 80032b4:	42a3      	cmp	r3, r4
 80032b6:	d908      	bls.n	80032ca <_free_r+0x46>
 80032b8:	6825      	ldr	r5, [r4, #0]
 80032ba:	1961      	adds	r1, r4, r5
 80032bc:	428b      	cmp	r3, r1
 80032be:	bf01      	itttt	eq
 80032c0:	6819      	ldreq	r1, [r3, #0]
 80032c2:	685b      	ldreq	r3, [r3, #4]
 80032c4:	1949      	addeq	r1, r1, r5
 80032c6:	6021      	streq	r1, [r4, #0]
 80032c8:	e7ed      	b.n	80032a6 <_free_r+0x22>
 80032ca:	461a      	mov	r2, r3
 80032cc:	685b      	ldr	r3, [r3, #4]
 80032ce:	b10b      	cbz	r3, 80032d4 <_free_r+0x50>
 80032d0:	42a3      	cmp	r3, r4
 80032d2:	d9fa      	bls.n	80032ca <_free_r+0x46>
 80032d4:	6811      	ldr	r1, [r2, #0]
 80032d6:	1855      	adds	r5, r2, r1
 80032d8:	42a5      	cmp	r5, r4
 80032da:	d10b      	bne.n	80032f4 <_free_r+0x70>
 80032dc:	6824      	ldr	r4, [r4, #0]
 80032de:	4421      	add	r1, r4
 80032e0:	1854      	adds	r4, r2, r1
 80032e2:	42a3      	cmp	r3, r4
 80032e4:	6011      	str	r1, [r2, #0]
 80032e6:	d1e0      	bne.n	80032aa <_free_r+0x26>
 80032e8:	681c      	ldr	r4, [r3, #0]
 80032ea:	685b      	ldr	r3, [r3, #4]
 80032ec:	6053      	str	r3, [r2, #4]
 80032ee:	440c      	add	r4, r1
 80032f0:	6014      	str	r4, [r2, #0]
 80032f2:	e7da      	b.n	80032aa <_free_r+0x26>
 80032f4:	d902      	bls.n	80032fc <_free_r+0x78>
 80032f6:	230c      	movs	r3, #12
 80032f8:	6003      	str	r3, [r0, #0]
 80032fa:	e7d6      	b.n	80032aa <_free_r+0x26>
 80032fc:	6825      	ldr	r5, [r4, #0]
 80032fe:	1961      	adds	r1, r4, r5
 8003300:	428b      	cmp	r3, r1
 8003302:	bf04      	itt	eq
 8003304:	6819      	ldreq	r1, [r3, #0]
 8003306:	685b      	ldreq	r3, [r3, #4]
 8003308:	6063      	str	r3, [r4, #4]
 800330a:	bf04      	itt	eq
 800330c:	1949      	addeq	r1, r1, r5
 800330e:	6021      	streq	r1, [r4, #0]
 8003310:	6054      	str	r4, [r2, #4]
 8003312:	e7ca      	b.n	80032aa <_free_r+0x26>
 8003314:	b003      	add	sp, #12
 8003316:	bd30      	pop	{r4, r5, pc}
 8003318:	20000504 	.word	0x20000504

0800331c <malloc>:
 800331c:	4b02      	ldr	r3, [pc, #8]	; (8003328 <malloc+0xc>)
 800331e:	4601      	mov	r1, r0
 8003320:	6818      	ldr	r0, [r3, #0]
 8003322:	f000 b823 	b.w	800336c <_malloc_r>
 8003326:	bf00      	nop
 8003328:	200000a0 	.word	0x200000a0

0800332c <sbrk_aligned>:
 800332c:	b570      	push	{r4, r5, r6, lr}
 800332e:	4e0e      	ldr	r6, [pc, #56]	; (8003368 <sbrk_aligned+0x3c>)
 8003330:	460c      	mov	r4, r1
 8003332:	6831      	ldr	r1, [r6, #0]
 8003334:	4605      	mov	r5, r0
 8003336:	b911      	cbnz	r1, 800333e <sbrk_aligned+0x12>
 8003338:	f000 fe96 	bl	8004068 <_sbrk_r>
 800333c:	6030      	str	r0, [r6, #0]
 800333e:	4621      	mov	r1, r4
 8003340:	4628      	mov	r0, r5
 8003342:	f000 fe91 	bl	8004068 <_sbrk_r>
 8003346:	1c43      	adds	r3, r0, #1
 8003348:	d00a      	beq.n	8003360 <sbrk_aligned+0x34>
 800334a:	1cc4      	adds	r4, r0, #3
 800334c:	f024 0403 	bic.w	r4, r4, #3
 8003350:	42a0      	cmp	r0, r4
 8003352:	d007      	beq.n	8003364 <sbrk_aligned+0x38>
 8003354:	1a21      	subs	r1, r4, r0
 8003356:	4628      	mov	r0, r5
 8003358:	f000 fe86 	bl	8004068 <_sbrk_r>
 800335c:	3001      	adds	r0, #1
 800335e:	d101      	bne.n	8003364 <sbrk_aligned+0x38>
 8003360:	f04f 34ff 	mov.w	r4, #4294967295
 8003364:	4620      	mov	r0, r4
 8003366:	bd70      	pop	{r4, r5, r6, pc}
 8003368:	20000508 	.word	0x20000508

0800336c <_malloc_r>:
 800336c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003370:	1ccd      	adds	r5, r1, #3
 8003372:	f025 0503 	bic.w	r5, r5, #3
 8003376:	3508      	adds	r5, #8
 8003378:	2d0c      	cmp	r5, #12
 800337a:	bf38      	it	cc
 800337c:	250c      	movcc	r5, #12
 800337e:	2d00      	cmp	r5, #0
 8003380:	4607      	mov	r7, r0
 8003382:	db01      	blt.n	8003388 <_malloc_r+0x1c>
 8003384:	42a9      	cmp	r1, r5
 8003386:	d905      	bls.n	8003394 <_malloc_r+0x28>
 8003388:	230c      	movs	r3, #12
 800338a:	603b      	str	r3, [r7, #0]
 800338c:	2600      	movs	r6, #0
 800338e:	4630      	mov	r0, r6
 8003390:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003394:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003468 <_malloc_r+0xfc>
 8003398:	f000 f868 	bl	800346c <__malloc_lock>
 800339c:	f8d8 3000 	ldr.w	r3, [r8]
 80033a0:	461c      	mov	r4, r3
 80033a2:	bb5c      	cbnz	r4, 80033fc <_malloc_r+0x90>
 80033a4:	4629      	mov	r1, r5
 80033a6:	4638      	mov	r0, r7
 80033a8:	f7ff ffc0 	bl	800332c <sbrk_aligned>
 80033ac:	1c43      	adds	r3, r0, #1
 80033ae:	4604      	mov	r4, r0
 80033b0:	d155      	bne.n	800345e <_malloc_r+0xf2>
 80033b2:	f8d8 4000 	ldr.w	r4, [r8]
 80033b6:	4626      	mov	r6, r4
 80033b8:	2e00      	cmp	r6, #0
 80033ba:	d145      	bne.n	8003448 <_malloc_r+0xdc>
 80033bc:	2c00      	cmp	r4, #0
 80033be:	d048      	beq.n	8003452 <_malloc_r+0xe6>
 80033c0:	6823      	ldr	r3, [r4, #0]
 80033c2:	4631      	mov	r1, r6
 80033c4:	4638      	mov	r0, r7
 80033c6:	eb04 0903 	add.w	r9, r4, r3
 80033ca:	f000 fe4d 	bl	8004068 <_sbrk_r>
 80033ce:	4581      	cmp	r9, r0
 80033d0:	d13f      	bne.n	8003452 <_malloc_r+0xe6>
 80033d2:	6821      	ldr	r1, [r4, #0]
 80033d4:	1a6d      	subs	r5, r5, r1
 80033d6:	4629      	mov	r1, r5
 80033d8:	4638      	mov	r0, r7
 80033da:	f7ff ffa7 	bl	800332c <sbrk_aligned>
 80033de:	3001      	adds	r0, #1
 80033e0:	d037      	beq.n	8003452 <_malloc_r+0xe6>
 80033e2:	6823      	ldr	r3, [r4, #0]
 80033e4:	442b      	add	r3, r5
 80033e6:	6023      	str	r3, [r4, #0]
 80033e8:	f8d8 3000 	ldr.w	r3, [r8]
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d038      	beq.n	8003462 <_malloc_r+0xf6>
 80033f0:	685a      	ldr	r2, [r3, #4]
 80033f2:	42a2      	cmp	r2, r4
 80033f4:	d12b      	bne.n	800344e <_malloc_r+0xe2>
 80033f6:	2200      	movs	r2, #0
 80033f8:	605a      	str	r2, [r3, #4]
 80033fa:	e00f      	b.n	800341c <_malloc_r+0xb0>
 80033fc:	6822      	ldr	r2, [r4, #0]
 80033fe:	1b52      	subs	r2, r2, r5
 8003400:	d41f      	bmi.n	8003442 <_malloc_r+0xd6>
 8003402:	2a0b      	cmp	r2, #11
 8003404:	d917      	bls.n	8003436 <_malloc_r+0xca>
 8003406:	1961      	adds	r1, r4, r5
 8003408:	42a3      	cmp	r3, r4
 800340a:	6025      	str	r5, [r4, #0]
 800340c:	bf18      	it	ne
 800340e:	6059      	strne	r1, [r3, #4]
 8003410:	6863      	ldr	r3, [r4, #4]
 8003412:	bf08      	it	eq
 8003414:	f8c8 1000 	streq.w	r1, [r8]
 8003418:	5162      	str	r2, [r4, r5]
 800341a:	604b      	str	r3, [r1, #4]
 800341c:	4638      	mov	r0, r7
 800341e:	f104 060b 	add.w	r6, r4, #11
 8003422:	f000 f829 	bl	8003478 <__malloc_unlock>
 8003426:	f026 0607 	bic.w	r6, r6, #7
 800342a:	1d23      	adds	r3, r4, #4
 800342c:	1af2      	subs	r2, r6, r3
 800342e:	d0ae      	beq.n	800338e <_malloc_r+0x22>
 8003430:	1b9b      	subs	r3, r3, r6
 8003432:	50a3      	str	r3, [r4, r2]
 8003434:	e7ab      	b.n	800338e <_malloc_r+0x22>
 8003436:	42a3      	cmp	r3, r4
 8003438:	6862      	ldr	r2, [r4, #4]
 800343a:	d1dd      	bne.n	80033f8 <_malloc_r+0x8c>
 800343c:	f8c8 2000 	str.w	r2, [r8]
 8003440:	e7ec      	b.n	800341c <_malloc_r+0xb0>
 8003442:	4623      	mov	r3, r4
 8003444:	6864      	ldr	r4, [r4, #4]
 8003446:	e7ac      	b.n	80033a2 <_malloc_r+0x36>
 8003448:	4634      	mov	r4, r6
 800344a:	6876      	ldr	r6, [r6, #4]
 800344c:	e7b4      	b.n	80033b8 <_malloc_r+0x4c>
 800344e:	4613      	mov	r3, r2
 8003450:	e7cc      	b.n	80033ec <_malloc_r+0x80>
 8003452:	230c      	movs	r3, #12
 8003454:	603b      	str	r3, [r7, #0]
 8003456:	4638      	mov	r0, r7
 8003458:	f000 f80e 	bl	8003478 <__malloc_unlock>
 800345c:	e797      	b.n	800338e <_malloc_r+0x22>
 800345e:	6025      	str	r5, [r4, #0]
 8003460:	e7dc      	b.n	800341c <_malloc_r+0xb0>
 8003462:	605b      	str	r3, [r3, #4]
 8003464:	deff      	udf	#255	; 0xff
 8003466:	bf00      	nop
 8003468:	20000504 	.word	0x20000504

0800346c <__malloc_lock>:
 800346c:	4801      	ldr	r0, [pc, #4]	; (8003474 <__malloc_lock+0x8>)
 800346e:	f7ff b88a 	b.w	8002586 <__retarget_lock_acquire_recursive>
 8003472:	bf00      	nop
 8003474:	20000500 	.word	0x20000500

08003478 <__malloc_unlock>:
 8003478:	4801      	ldr	r0, [pc, #4]	; (8003480 <__malloc_unlock+0x8>)
 800347a:	f7ff b885 	b.w	8002588 <__retarget_lock_release_recursive>
 800347e:	bf00      	nop
 8003480:	20000500 	.word	0x20000500

08003484 <_Balloc>:
 8003484:	b570      	push	{r4, r5, r6, lr}
 8003486:	69c6      	ldr	r6, [r0, #28]
 8003488:	4604      	mov	r4, r0
 800348a:	460d      	mov	r5, r1
 800348c:	b976      	cbnz	r6, 80034ac <_Balloc+0x28>
 800348e:	2010      	movs	r0, #16
 8003490:	f7ff ff44 	bl	800331c <malloc>
 8003494:	4602      	mov	r2, r0
 8003496:	61e0      	str	r0, [r4, #28]
 8003498:	b920      	cbnz	r0, 80034a4 <_Balloc+0x20>
 800349a:	4b18      	ldr	r3, [pc, #96]	; (80034fc <_Balloc+0x78>)
 800349c:	4818      	ldr	r0, [pc, #96]	; (8003500 <_Balloc+0x7c>)
 800349e:	216b      	movs	r1, #107	; 0x6b
 80034a0:	f000 fe00 	bl	80040a4 <__assert_func>
 80034a4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80034a8:	6006      	str	r6, [r0, #0]
 80034aa:	60c6      	str	r6, [r0, #12]
 80034ac:	69e6      	ldr	r6, [r4, #28]
 80034ae:	68f3      	ldr	r3, [r6, #12]
 80034b0:	b183      	cbz	r3, 80034d4 <_Balloc+0x50>
 80034b2:	69e3      	ldr	r3, [r4, #28]
 80034b4:	68db      	ldr	r3, [r3, #12]
 80034b6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80034ba:	b9b8      	cbnz	r0, 80034ec <_Balloc+0x68>
 80034bc:	2101      	movs	r1, #1
 80034be:	fa01 f605 	lsl.w	r6, r1, r5
 80034c2:	1d72      	adds	r2, r6, #5
 80034c4:	0092      	lsls	r2, r2, #2
 80034c6:	4620      	mov	r0, r4
 80034c8:	f000 fe0a 	bl	80040e0 <_calloc_r>
 80034cc:	b160      	cbz	r0, 80034e8 <_Balloc+0x64>
 80034ce:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80034d2:	e00e      	b.n	80034f2 <_Balloc+0x6e>
 80034d4:	2221      	movs	r2, #33	; 0x21
 80034d6:	2104      	movs	r1, #4
 80034d8:	4620      	mov	r0, r4
 80034da:	f000 fe01 	bl	80040e0 <_calloc_r>
 80034de:	69e3      	ldr	r3, [r4, #28]
 80034e0:	60f0      	str	r0, [r6, #12]
 80034e2:	68db      	ldr	r3, [r3, #12]
 80034e4:	2b00      	cmp	r3, #0
 80034e6:	d1e4      	bne.n	80034b2 <_Balloc+0x2e>
 80034e8:	2000      	movs	r0, #0
 80034ea:	bd70      	pop	{r4, r5, r6, pc}
 80034ec:	6802      	ldr	r2, [r0, #0]
 80034ee:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80034f2:	2300      	movs	r3, #0
 80034f4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80034f8:	e7f7      	b.n	80034ea <_Balloc+0x66>
 80034fa:	bf00      	nop
 80034fc:	08004282 	.word	0x08004282
 8003500:	08004302 	.word	0x08004302

08003504 <_Bfree>:
 8003504:	b570      	push	{r4, r5, r6, lr}
 8003506:	69c6      	ldr	r6, [r0, #28]
 8003508:	4605      	mov	r5, r0
 800350a:	460c      	mov	r4, r1
 800350c:	b976      	cbnz	r6, 800352c <_Bfree+0x28>
 800350e:	2010      	movs	r0, #16
 8003510:	f7ff ff04 	bl	800331c <malloc>
 8003514:	4602      	mov	r2, r0
 8003516:	61e8      	str	r0, [r5, #28]
 8003518:	b920      	cbnz	r0, 8003524 <_Bfree+0x20>
 800351a:	4b09      	ldr	r3, [pc, #36]	; (8003540 <_Bfree+0x3c>)
 800351c:	4809      	ldr	r0, [pc, #36]	; (8003544 <_Bfree+0x40>)
 800351e:	218f      	movs	r1, #143	; 0x8f
 8003520:	f000 fdc0 	bl	80040a4 <__assert_func>
 8003524:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003528:	6006      	str	r6, [r0, #0]
 800352a:	60c6      	str	r6, [r0, #12]
 800352c:	b13c      	cbz	r4, 800353e <_Bfree+0x3a>
 800352e:	69eb      	ldr	r3, [r5, #28]
 8003530:	6862      	ldr	r2, [r4, #4]
 8003532:	68db      	ldr	r3, [r3, #12]
 8003534:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003538:	6021      	str	r1, [r4, #0]
 800353a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800353e:	bd70      	pop	{r4, r5, r6, pc}
 8003540:	08004282 	.word	0x08004282
 8003544:	08004302 	.word	0x08004302

08003548 <__multadd>:
 8003548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800354c:	690d      	ldr	r5, [r1, #16]
 800354e:	4607      	mov	r7, r0
 8003550:	460c      	mov	r4, r1
 8003552:	461e      	mov	r6, r3
 8003554:	f101 0c14 	add.w	ip, r1, #20
 8003558:	2000      	movs	r0, #0
 800355a:	f8dc 3000 	ldr.w	r3, [ip]
 800355e:	b299      	uxth	r1, r3
 8003560:	fb02 6101 	mla	r1, r2, r1, r6
 8003564:	0c1e      	lsrs	r6, r3, #16
 8003566:	0c0b      	lsrs	r3, r1, #16
 8003568:	fb02 3306 	mla	r3, r2, r6, r3
 800356c:	b289      	uxth	r1, r1
 800356e:	3001      	adds	r0, #1
 8003570:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003574:	4285      	cmp	r5, r0
 8003576:	f84c 1b04 	str.w	r1, [ip], #4
 800357a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800357e:	dcec      	bgt.n	800355a <__multadd+0x12>
 8003580:	b30e      	cbz	r6, 80035c6 <__multadd+0x7e>
 8003582:	68a3      	ldr	r3, [r4, #8]
 8003584:	42ab      	cmp	r3, r5
 8003586:	dc19      	bgt.n	80035bc <__multadd+0x74>
 8003588:	6861      	ldr	r1, [r4, #4]
 800358a:	4638      	mov	r0, r7
 800358c:	3101      	adds	r1, #1
 800358e:	f7ff ff79 	bl	8003484 <_Balloc>
 8003592:	4680      	mov	r8, r0
 8003594:	b928      	cbnz	r0, 80035a2 <__multadd+0x5a>
 8003596:	4602      	mov	r2, r0
 8003598:	4b0c      	ldr	r3, [pc, #48]	; (80035cc <__multadd+0x84>)
 800359a:	480d      	ldr	r0, [pc, #52]	; (80035d0 <__multadd+0x88>)
 800359c:	21ba      	movs	r1, #186	; 0xba
 800359e:	f000 fd81 	bl	80040a4 <__assert_func>
 80035a2:	6922      	ldr	r2, [r4, #16]
 80035a4:	3202      	adds	r2, #2
 80035a6:	f104 010c 	add.w	r1, r4, #12
 80035aa:	0092      	lsls	r2, r2, #2
 80035ac:	300c      	adds	r0, #12
 80035ae:	f000 fd6b 	bl	8004088 <memcpy>
 80035b2:	4621      	mov	r1, r4
 80035b4:	4638      	mov	r0, r7
 80035b6:	f7ff ffa5 	bl	8003504 <_Bfree>
 80035ba:	4644      	mov	r4, r8
 80035bc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80035c0:	3501      	adds	r5, #1
 80035c2:	615e      	str	r6, [r3, #20]
 80035c4:	6125      	str	r5, [r4, #16]
 80035c6:	4620      	mov	r0, r4
 80035c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80035cc:	080042f1 	.word	0x080042f1
 80035d0:	08004302 	.word	0x08004302

080035d4 <__hi0bits>:
 80035d4:	0c03      	lsrs	r3, r0, #16
 80035d6:	041b      	lsls	r3, r3, #16
 80035d8:	b9d3      	cbnz	r3, 8003610 <__hi0bits+0x3c>
 80035da:	0400      	lsls	r0, r0, #16
 80035dc:	2310      	movs	r3, #16
 80035de:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 80035e2:	bf04      	itt	eq
 80035e4:	0200      	lsleq	r0, r0, #8
 80035e6:	3308      	addeq	r3, #8
 80035e8:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 80035ec:	bf04      	itt	eq
 80035ee:	0100      	lsleq	r0, r0, #4
 80035f0:	3304      	addeq	r3, #4
 80035f2:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 80035f6:	bf04      	itt	eq
 80035f8:	0080      	lsleq	r0, r0, #2
 80035fa:	3302      	addeq	r3, #2
 80035fc:	2800      	cmp	r0, #0
 80035fe:	db05      	blt.n	800360c <__hi0bits+0x38>
 8003600:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003604:	f103 0301 	add.w	r3, r3, #1
 8003608:	bf08      	it	eq
 800360a:	2320      	moveq	r3, #32
 800360c:	4618      	mov	r0, r3
 800360e:	4770      	bx	lr
 8003610:	2300      	movs	r3, #0
 8003612:	e7e4      	b.n	80035de <__hi0bits+0xa>

08003614 <__lo0bits>:
 8003614:	6803      	ldr	r3, [r0, #0]
 8003616:	f013 0207 	ands.w	r2, r3, #7
 800361a:	d00c      	beq.n	8003636 <__lo0bits+0x22>
 800361c:	07d9      	lsls	r1, r3, #31
 800361e:	d422      	bmi.n	8003666 <__lo0bits+0x52>
 8003620:	079a      	lsls	r2, r3, #30
 8003622:	bf49      	itett	mi
 8003624:	085b      	lsrmi	r3, r3, #1
 8003626:	089b      	lsrpl	r3, r3, #2
 8003628:	6003      	strmi	r3, [r0, #0]
 800362a:	2201      	movmi	r2, #1
 800362c:	bf5c      	itt	pl
 800362e:	6003      	strpl	r3, [r0, #0]
 8003630:	2202      	movpl	r2, #2
 8003632:	4610      	mov	r0, r2
 8003634:	4770      	bx	lr
 8003636:	b299      	uxth	r1, r3
 8003638:	b909      	cbnz	r1, 800363e <__lo0bits+0x2a>
 800363a:	0c1b      	lsrs	r3, r3, #16
 800363c:	2210      	movs	r2, #16
 800363e:	b2d9      	uxtb	r1, r3
 8003640:	b909      	cbnz	r1, 8003646 <__lo0bits+0x32>
 8003642:	3208      	adds	r2, #8
 8003644:	0a1b      	lsrs	r3, r3, #8
 8003646:	0719      	lsls	r1, r3, #28
 8003648:	bf04      	itt	eq
 800364a:	091b      	lsreq	r3, r3, #4
 800364c:	3204      	addeq	r2, #4
 800364e:	0799      	lsls	r1, r3, #30
 8003650:	bf04      	itt	eq
 8003652:	089b      	lsreq	r3, r3, #2
 8003654:	3202      	addeq	r2, #2
 8003656:	07d9      	lsls	r1, r3, #31
 8003658:	d403      	bmi.n	8003662 <__lo0bits+0x4e>
 800365a:	085b      	lsrs	r3, r3, #1
 800365c:	f102 0201 	add.w	r2, r2, #1
 8003660:	d003      	beq.n	800366a <__lo0bits+0x56>
 8003662:	6003      	str	r3, [r0, #0]
 8003664:	e7e5      	b.n	8003632 <__lo0bits+0x1e>
 8003666:	2200      	movs	r2, #0
 8003668:	e7e3      	b.n	8003632 <__lo0bits+0x1e>
 800366a:	2220      	movs	r2, #32
 800366c:	e7e1      	b.n	8003632 <__lo0bits+0x1e>
	...

08003670 <__i2b>:
 8003670:	b510      	push	{r4, lr}
 8003672:	460c      	mov	r4, r1
 8003674:	2101      	movs	r1, #1
 8003676:	f7ff ff05 	bl	8003484 <_Balloc>
 800367a:	4602      	mov	r2, r0
 800367c:	b928      	cbnz	r0, 800368a <__i2b+0x1a>
 800367e:	4b05      	ldr	r3, [pc, #20]	; (8003694 <__i2b+0x24>)
 8003680:	4805      	ldr	r0, [pc, #20]	; (8003698 <__i2b+0x28>)
 8003682:	f240 1145 	movw	r1, #325	; 0x145
 8003686:	f000 fd0d 	bl	80040a4 <__assert_func>
 800368a:	2301      	movs	r3, #1
 800368c:	6144      	str	r4, [r0, #20]
 800368e:	6103      	str	r3, [r0, #16]
 8003690:	bd10      	pop	{r4, pc}
 8003692:	bf00      	nop
 8003694:	080042f1 	.word	0x080042f1
 8003698:	08004302 	.word	0x08004302

0800369c <__multiply>:
 800369c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036a0:	4691      	mov	r9, r2
 80036a2:	690a      	ldr	r2, [r1, #16]
 80036a4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80036a8:	429a      	cmp	r2, r3
 80036aa:	bfb8      	it	lt
 80036ac:	460b      	movlt	r3, r1
 80036ae:	460c      	mov	r4, r1
 80036b0:	bfbc      	itt	lt
 80036b2:	464c      	movlt	r4, r9
 80036b4:	4699      	movlt	r9, r3
 80036b6:	6927      	ldr	r7, [r4, #16]
 80036b8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80036bc:	68a3      	ldr	r3, [r4, #8]
 80036be:	6861      	ldr	r1, [r4, #4]
 80036c0:	eb07 060a 	add.w	r6, r7, sl
 80036c4:	42b3      	cmp	r3, r6
 80036c6:	b085      	sub	sp, #20
 80036c8:	bfb8      	it	lt
 80036ca:	3101      	addlt	r1, #1
 80036cc:	f7ff feda 	bl	8003484 <_Balloc>
 80036d0:	b930      	cbnz	r0, 80036e0 <__multiply+0x44>
 80036d2:	4602      	mov	r2, r0
 80036d4:	4b44      	ldr	r3, [pc, #272]	; (80037e8 <__multiply+0x14c>)
 80036d6:	4845      	ldr	r0, [pc, #276]	; (80037ec <__multiply+0x150>)
 80036d8:	f44f 71b1 	mov.w	r1, #354	; 0x162
 80036dc:	f000 fce2 	bl	80040a4 <__assert_func>
 80036e0:	f100 0514 	add.w	r5, r0, #20
 80036e4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80036e8:	462b      	mov	r3, r5
 80036ea:	2200      	movs	r2, #0
 80036ec:	4543      	cmp	r3, r8
 80036ee:	d321      	bcc.n	8003734 <__multiply+0x98>
 80036f0:	f104 0314 	add.w	r3, r4, #20
 80036f4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80036f8:	f109 0314 	add.w	r3, r9, #20
 80036fc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8003700:	9202      	str	r2, [sp, #8]
 8003702:	1b3a      	subs	r2, r7, r4
 8003704:	3a15      	subs	r2, #21
 8003706:	f022 0203 	bic.w	r2, r2, #3
 800370a:	3204      	adds	r2, #4
 800370c:	f104 0115 	add.w	r1, r4, #21
 8003710:	428f      	cmp	r7, r1
 8003712:	bf38      	it	cc
 8003714:	2204      	movcc	r2, #4
 8003716:	9201      	str	r2, [sp, #4]
 8003718:	9a02      	ldr	r2, [sp, #8]
 800371a:	9303      	str	r3, [sp, #12]
 800371c:	429a      	cmp	r2, r3
 800371e:	d80c      	bhi.n	800373a <__multiply+0x9e>
 8003720:	2e00      	cmp	r6, #0
 8003722:	dd03      	ble.n	800372c <__multiply+0x90>
 8003724:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003728:	2b00      	cmp	r3, #0
 800372a:	d05b      	beq.n	80037e4 <__multiply+0x148>
 800372c:	6106      	str	r6, [r0, #16]
 800372e:	b005      	add	sp, #20
 8003730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003734:	f843 2b04 	str.w	r2, [r3], #4
 8003738:	e7d8      	b.n	80036ec <__multiply+0x50>
 800373a:	f8b3 a000 	ldrh.w	sl, [r3]
 800373e:	f1ba 0f00 	cmp.w	sl, #0
 8003742:	d024      	beq.n	800378e <__multiply+0xf2>
 8003744:	f104 0e14 	add.w	lr, r4, #20
 8003748:	46a9      	mov	r9, r5
 800374a:	f04f 0c00 	mov.w	ip, #0
 800374e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8003752:	f8d9 1000 	ldr.w	r1, [r9]
 8003756:	fa1f fb82 	uxth.w	fp, r2
 800375a:	b289      	uxth	r1, r1
 800375c:	fb0a 110b 	mla	r1, sl, fp, r1
 8003760:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8003764:	f8d9 2000 	ldr.w	r2, [r9]
 8003768:	4461      	add	r1, ip
 800376a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800376e:	fb0a c20b 	mla	r2, sl, fp, ip
 8003772:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8003776:	b289      	uxth	r1, r1
 8003778:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800377c:	4577      	cmp	r7, lr
 800377e:	f849 1b04 	str.w	r1, [r9], #4
 8003782:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003786:	d8e2      	bhi.n	800374e <__multiply+0xb2>
 8003788:	9a01      	ldr	r2, [sp, #4]
 800378a:	f845 c002 	str.w	ip, [r5, r2]
 800378e:	9a03      	ldr	r2, [sp, #12]
 8003790:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8003794:	3304      	adds	r3, #4
 8003796:	f1b9 0f00 	cmp.w	r9, #0
 800379a:	d021      	beq.n	80037e0 <__multiply+0x144>
 800379c:	6829      	ldr	r1, [r5, #0]
 800379e:	f104 0c14 	add.w	ip, r4, #20
 80037a2:	46ae      	mov	lr, r5
 80037a4:	f04f 0a00 	mov.w	sl, #0
 80037a8:	f8bc b000 	ldrh.w	fp, [ip]
 80037ac:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80037b0:	fb09 220b 	mla	r2, r9, fp, r2
 80037b4:	4452      	add	r2, sl
 80037b6:	b289      	uxth	r1, r1
 80037b8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80037bc:	f84e 1b04 	str.w	r1, [lr], #4
 80037c0:	f85c 1b04 	ldr.w	r1, [ip], #4
 80037c4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80037c8:	f8be 1000 	ldrh.w	r1, [lr]
 80037cc:	fb09 110a 	mla	r1, r9, sl, r1
 80037d0:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80037d4:	4567      	cmp	r7, ip
 80037d6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80037da:	d8e5      	bhi.n	80037a8 <__multiply+0x10c>
 80037dc:	9a01      	ldr	r2, [sp, #4]
 80037de:	50a9      	str	r1, [r5, r2]
 80037e0:	3504      	adds	r5, #4
 80037e2:	e799      	b.n	8003718 <__multiply+0x7c>
 80037e4:	3e01      	subs	r6, #1
 80037e6:	e79b      	b.n	8003720 <__multiply+0x84>
 80037e8:	080042f1 	.word	0x080042f1
 80037ec:	08004302 	.word	0x08004302

080037f0 <__pow5mult>:
 80037f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80037f4:	4615      	mov	r5, r2
 80037f6:	f012 0203 	ands.w	r2, r2, #3
 80037fa:	4606      	mov	r6, r0
 80037fc:	460f      	mov	r7, r1
 80037fe:	d007      	beq.n	8003810 <__pow5mult+0x20>
 8003800:	4c25      	ldr	r4, [pc, #148]	; (8003898 <__pow5mult+0xa8>)
 8003802:	3a01      	subs	r2, #1
 8003804:	2300      	movs	r3, #0
 8003806:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800380a:	f7ff fe9d 	bl	8003548 <__multadd>
 800380e:	4607      	mov	r7, r0
 8003810:	10ad      	asrs	r5, r5, #2
 8003812:	d03d      	beq.n	8003890 <__pow5mult+0xa0>
 8003814:	69f4      	ldr	r4, [r6, #28]
 8003816:	b97c      	cbnz	r4, 8003838 <__pow5mult+0x48>
 8003818:	2010      	movs	r0, #16
 800381a:	f7ff fd7f 	bl	800331c <malloc>
 800381e:	4602      	mov	r2, r0
 8003820:	61f0      	str	r0, [r6, #28]
 8003822:	b928      	cbnz	r0, 8003830 <__pow5mult+0x40>
 8003824:	4b1d      	ldr	r3, [pc, #116]	; (800389c <__pow5mult+0xac>)
 8003826:	481e      	ldr	r0, [pc, #120]	; (80038a0 <__pow5mult+0xb0>)
 8003828:	f240 11b3 	movw	r1, #435	; 0x1b3
 800382c:	f000 fc3a 	bl	80040a4 <__assert_func>
 8003830:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003834:	6004      	str	r4, [r0, #0]
 8003836:	60c4      	str	r4, [r0, #12]
 8003838:	f8d6 801c 	ldr.w	r8, [r6, #28]
 800383c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003840:	b94c      	cbnz	r4, 8003856 <__pow5mult+0x66>
 8003842:	f240 2171 	movw	r1, #625	; 0x271
 8003846:	4630      	mov	r0, r6
 8003848:	f7ff ff12 	bl	8003670 <__i2b>
 800384c:	2300      	movs	r3, #0
 800384e:	f8c8 0008 	str.w	r0, [r8, #8]
 8003852:	4604      	mov	r4, r0
 8003854:	6003      	str	r3, [r0, #0]
 8003856:	f04f 0900 	mov.w	r9, #0
 800385a:	07eb      	lsls	r3, r5, #31
 800385c:	d50a      	bpl.n	8003874 <__pow5mult+0x84>
 800385e:	4639      	mov	r1, r7
 8003860:	4622      	mov	r2, r4
 8003862:	4630      	mov	r0, r6
 8003864:	f7ff ff1a 	bl	800369c <__multiply>
 8003868:	4639      	mov	r1, r7
 800386a:	4680      	mov	r8, r0
 800386c:	4630      	mov	r0, r6
 800386e:	f7ff fe49 	bl	8003504 <_Bfree>
 8003872:	4647      	mov	r7, r8
 8003874:	106d      	asrs	r5, r5, #1
 8003876:	d00b      	beq.n	8003890 <__pow5mult+0xa0>
 8003878:	6820      	ldr	r0, [r4, #0]
 800387a:	b938      	cbnz	r0, 800388c <__pow5mult+0x9c>
 800387c:	4622      	mov	r2, r4
 800387e:	4621      	mov	r1, r4
 8003880:	4630      	mov	r0, r6
 8003882:	f7ff ff0b 	bl	800369c <__multiply>
 8003886:	6020      	str	r0, [r4, #0]
 8003888:	f8c0 9000 	str.w	r9, [r0]
 800388c:	4604      	mov	r4, r0
 800388e:	e7e4      	b.n	800385a <__pow5mult+0x6a>
 8003890:	4638      	mov	r0, r7
 8003892:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003896:	bf00      	nop
 8003898:	08004450 	.word	0x08004450
 800389c:	08004282 	.word	0x08004282
 80038a0:	08004302 	.word	0x08004302

080038a4 <__lshift>:
 80038a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80038a8:	460c      	mov	r4, r1
 80038aa:	6849      	ldr	r1, [r1, #4]
 80038ac:	6923      	ldr	r3, [r4, #16]
 80038ae:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80038b2:	68a3      	ldr	r3, [r4, #8]
 80038b4:	4607      	mov	r7, r0
 80038b6:	4691      	mov	r9, r2
 80038b8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80038bc:	f108 0601 	add.w	r6, r8, #1
 80038c0:	42b3      	cmp	r3, r6
 80038c2:	db0b      	blt.n	80038dc <__lshift+0x38>
 80038c4:	4638      	mov	r0, r7
 80038c6:	f7ff fddd 	bl	8003484 <_Balloc>
 80038ca:	4605      	mov	r5, r0
 80038cc:	b948      	cbnz	r0, 80038e2 <__lshift+0x3e>
 80038ce:	4602      	mov	r2, r0
 80038d0:	4b28      	ldr	r3, [pc, #160]	; (8003974 <__lshift+0xd0>)
 80038d2:	4829      	ldr	r0, [pc, #164]	; (8003978 <__lshift+0xd4>)
 80038d4:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80038d8:	f000 fbe4 	bl	80040a4 <__assert_func>
 80038dc:	3101      	adds	r1, #1
 80038de:	005b      	lsls	r3, r3, #1
 80038e0:	e7ee      	b.n	80038c0 <__lshift+0x1c>
 80038e2:	2300      	movs	r3, #0
 80038e4:	f100 0114 	add.w	r1, r0, #20
 80038e8:	f100 0210 	add.w	r2, r0, #16
 80038ec:	4618      	mov	r0, r3
 80038ee:	4553      	cmp	r3, sl
 80038f0:	db33      	blt.n	800395a <__lshift+0xb6>
 80038f2:	6920      	ldr	r0, [r4, #16]
 80038f4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80038f8:	f104 0314 	add.w	r3, r4, #20
 80038fc:	f019 091f 	ands.w	r9, r9, #31
 8003900:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003904:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003908:	d02b      	beq.n	8003962 <__lshift+0xbe>
 800390a:	f1c9 0e20 	rsb	lr, r9, #32
 800390e:	468a      	mov	sl, r1
 8003910:	2200      	movs	r2, #0
 8003912:	6818      	ldr	r0, [r3, #0]
 8003914:	fa00 f009 	lsl.w	r0, r0, r9
 8003918:	4310      	orrs	r0, r2
 800391a:	f84a 0b04 	str.w	r0, [sl], #4
 800391e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003922:	459c      	cmp	ip, r3
 8003924:	fa22 f20e 	lsr.w	r2, r2, lr
 8003928:	d8f3      	bhi.n	8003912 <__lshift+0x6e>
 800392a:	ebac 0304 	sub.w	r3, ip, r4
 800392e:	3b15      	subs	r3, #21
 8003930:	f023 0303 	bic.w	r3, r3, #3
 8003934:	3304      	adds	r3, #4
 8003936:	f104 0015 	add.w	r0, r4, #21
 800393a:	4584      	cmp	ip, r0
 800393c:	bf38      	it	cc
 800393e:	2304      	movcc	r3, #4
 8003940:	50ca      	str	r2, [r1, r3]
 8003942:	b10a      	cbz	r2, 8003948 <__lshift+0xa4>
 8003944:	f108 0602 	add.w	r6, r8, #2
 8003948:	3e01      	subs	r6, #1
 800394a:	4638      	mov	r0, r7
 800394c:	612e      	str	r6, [r5, #16]
 800394e:	4621      	mov	r1, r4
 8003950:	f7ff fdd8 	bl	8003504 <_Bfree>
 8003954:	4628      	mov	r0, r5
 8003956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800395a:	f842 0f04 	str.w	r0, [r2, #4]!
 800395e:	3301      	adds	r3, #1
 8003960:	e7c5      	b.n	80038ee <__lshift+0x4a>
 8003962:	3904      	subs	r1, #4
 8003964:	f853 2b04 	ldr.w	r2, [r3], #4
 8003968:	f841 2f04 	str.w	r2, [r1, #4]!
 800396c:	459c      	cmp	ip, r3
 800396e:	d8f9      	bhi.n	8003964 <__lshift+0xc0>
 8003970:	e7ea      	b.n	8003948 <__lshift+0xa4>
 8003972:	bf00      	nop
 8003974:	080042f1 	.word	0x080042f1
 8003978:	08004302 	.word	0x08004302

0800397c <__mcmp>:
 800397c:	b530      	push	{r4, r5, lr}
 800397e:	6902      	ldr	r2, [r0, #16]
 8003980:	690c      	ldr	r4, [r1, #16]
 8003982:	1b12      	subs	r2, r2, r4
 8003984:	d10e      	bne.n	80039a4 <__mcmp+0x28>
 8003986:	f100 0314 	add.w	r3, r0, #20
 800398a:	3114      	adds	r1, #20
 800398c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003990:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003994:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003998:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800399c:	42a5      	cmp	r5, r4
 800399e:	d003      	beq.n	80039a8 <__mcmp+0x2c>
 80039a0:	d305      	bcc.n	80039ae <__mcmp+0x32>
 80039a2:	2201      	movs	r2, #1
 80039a4:	4610      	mov	r0, r2
 80039a6:	bd30      	pop	{r4, r5, pc}
 80039a8:	4283      	cmp	r3, r0
 80039aa:	d3f3      	bcc.n	8003994 <__mcmp+0x18>
 80039ac:	e7fa      	b.n	80039a4 <__mcmp+0x28>
 80039ae:	f04f 32ff 	mov.w	r2, #4294967295
 80039b2:	e7f7      	b.n	80039a4 <__mcmp+0x28>

080039b4 <__mdiff>:
 80039b4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039b8:	460c      	mov	r4, r1
 80039ba:	4606      	mov	r6, r0
 80039bc:	4611      	mov	r1, r2
 80039be:	4620      	mov	r0, r4
 80039c0:	4690      	mov	r8, r2
 80039c2:	f7ff ffdb 	bl	800397c <__mcmp>
 80039c6:	1e05      	subs	r5, r0, #0
 80039c8:	d110      	bne.n	80039ec <__mdiff+0x38>
 80039ca:	4629      	mov	r1, r5
 80039cc:	4630      	mov	r0, r6
 80039ce:	f7ff fd59 	bl	8003484 <_Balloc>
 80039d2:	b930      	cbnz	r0, 80039e2 <__mdiff+0x2e>
 80039d4:	4b3a      	ldr	r3, [pc, #232]	; (8003ac0 <__mdiff+0x10c>)
 80039d6:	4602      	mov	r2, r0
 80039d8:	f240 2137 	movw	r1, #567	; 0x237
 80039dc:	4839      	ldr	r0, [pc, #228]	; (8003ac4 <__mdiff+0x110>)
 80039de:	f000 fb61 	bl	80040a4 <__assert_func>
 80039e2:	2301      	movs	r3, #1
 80039e4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80039e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80039ec:	bfa4      	itt	ge
 80039ee:	4643      	movge	r3, r8
 80039f0:	46a0      	movge	r8, r4
 80039f2:	4630      	mov	r0, r6
 80039f4:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80039f8:	bfa6      	itte	ge
 80039fa:	461c      	movge	r4, r3
 80039fc:	2500      	movge	r5, #0
 80039fe:	2501      	movlt	r5, #1
 8003a00:	f7ff fd40 	bl	8003484 <_Balloc>
 8003a04:	b920      	cbnz	r0, 8003a10 <__mdiff+0x5c>
 8003a06:	4b2e      	ldr	r3, [pc, #184]	; (8003ac0 <__mdiff+0x10c>)
 8003a08:	4602      	mov	r2, r0
 8003a0a:	f240 2145 	movw	r1, #581	; 0x245
 8003a0e:	e7e5      	b.n	80039dc <__mdiff+0x28>
 8003a10:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003a14:	6926      	ldr	r6, [r4, #16]
 8003a16:	60c5      	str	r5, [r0, #12]
 8003a18:	f104 0914 	add.w	r9, r4, #20
 8003a1c:	f108 0514 	add.w	r5, r8, #20
 8003a20:	f100 0e14 	add.w	lr, r0, #20
 8003a24:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003a28:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003a2c:	f108 0210 	add.w	r2, r8, #16
 8003a30:	46f2      	mov	sl, lr
 8003a32:	2100      	movs	r1, #0
 8003a34:	f859 3b04 	ldr.w	r3, [r9], #4
 8003a38:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003a3c:	fa11 f88b 	uxtah	r8, r1, fp
 8003a40:	b299      	uxth	r1, r3
 8003a42:	0c1b      	lsrs	r3, r3, #16
 8003a44:	eba8 0801 	sub.w	r8, r8, r1
 8003a48:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003a4c:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003a50:	fa1f f888 	uxth.w	r8, r8
 8003a54:	1419      	asrs	r1, r3, #16
 8003a56:	454e      	cmp	r6, r9
 8003a58:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003a5c:	f84a 3b04 	str.w	r3, [sl], #4
 8003a60:	d8e8      	bhi.n	8003a34 <__mdiff+0x80>
 8003a62:	1b33      	subs	r3, r6, r4
 8003a64:	3b15      	subs	r3, #21
 8003a66:	f023 0303 	bic.w	r3, r3, #3
 8003a6a:	3304      	adds	r3, #4
 8003a6c:	3415      	adds	r4, #21
 8003a6e:	42a6      	cmp	r6, r4
 8003a70:	bf38      	it	cc
 8003a72:	2304      	movcc	r3, #4
 8003a74:	441d      	add	r5, r3
 8003a76:	4473      	add	r3, lr
 8003a78:	469e      	mov	lr, r3
 8003a7a:	462e      	mov	r6, r5
 8003a7c:	4566      	cmp	r6, ip
 8003a7e:	d30e      	bcc.n	8003a9e <__mdiff+0xea>
 8003a80:	f10c 0203 	add.w	r2, ip, #3
 8003a84:	1b52      	subs	r2, r2, r5
 8003a86:	f022 0203 	bic.w	r2, r2, #3
 8003a8a:	3d03      	subs	r5, #3
 8003a8c:	45ac      	cmp	ip, r5
 8003a8e:	bf38      	it	cc
 8003a90:	2200      	movcc	r2, #0
 8003a92:	4413      	add	r3, r2
 8003a94:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8003a98:	b17a      	cbz	r2, 8003aba <__mdiff+0x106>
 8003a9a:	6107      	str	r7, [r0, #16]
 8003a9c:	e7a4      	b.n	80039e8 <__mdiff+0x34>
 8003a9e:	f856 8b04 	ldr.w	r8, [r6], #4
 8003aa2:	fa11 f288 	uxtah	r2, r1, r8
 8003aa6:	1414      	asrs	r4, r2, #16
 8003aa8:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8003aac:	b292      	uxth	r2, r2
 8003aae:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003ab2:	f84e 2b04 	str.w	r2, [lr], #4
 8003ab6:	1421      	asrs	r1, r4, #16
 8003ab8:	e7e0      	b.n	8003a7c <__mdiff+0xc8>
 8003aba:	3f01      	subs	r7, #1
 8003abc:	e7ea      	b.n	8003a94 <__mdiff+0xe0>
 8003abe:	bf00      	nop
 8003ac0:	080042f1 	.word	0x080042f1
 8003ac4:	08004302 	.word	0x08004302

08003ac8 <__d2b>:
 8003ac8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003acc:	460f      	mov	r7, r1
 8003ace:	2101      	movs	r1, #1
 8003ad0:	ec59 8b10 	vmov	r8, r9, d0
 8003ad4:	4616      	mov	r6, r2
 8003ad6:	f7ff fcd5 	bl	8003484 <_Balloc>
 8003ada:	4604      	mov	r4, r0
 8003adc:	b930      	cbnz	r0, 8003aec <__d2b+0x24>
 8003ade:	4602      	mov	r2, r0
 8003ae0:	4b24      	ldr	r3, [pc, #144]	; (8003b74 <__d2b+0xac>)
 8003ae2:	4825      	ldr	r0, [pc, #148]	; (8003b78 <__d2b+0xb0>)
 8003ae4:	f240 310f 	movw	r1, #783	; 0x30f
 8003ae8:	f000 fadc 	bl	80040a4 <__assert_func>
 8003aec:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003af0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003af4:	bb2d      	cbnz	r5, 8003b42 <__d2b+0x7a>
 8003af6:	9301      	str	r3, [sp, #4]
 8003af8:	f1b8 0300 	subs.w	r3, r8, #0
 8003afc:	d026      	beq.n	8003b4c <__d2b+0x84>
 8003afe:	4668      	mov	r0, sp
 8003b00:	9300      	str	r3, [sp, #0]
 8003b02:	f7ff fd87 	bl	8003614 <__lo0bits>
 8003b06:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003b0a:	b1e8      	cbz	r0, 8003b48 <__d2b+0x80>
 8003b0c:	f1c0 0320 	rsb	r3, r0, #32
 8003b10:	fa02 f303 	lsl.w	r3, r2, r3
 8003b14:	430b      	orrs	r3, r1
 8003b16:	40c2      	lsrs	r2, r0
 8003b18:	6163      	str	r3, [r4, #20]
 8003b1a:	9201      	str	r2, [sp, #4]
 8003b1c:	9b01      	ldr	r3, [sp, #4]
 8003b1e:	61a3      	str	r3, [r4, #24]
 8003b20:	2b00      	cmp	r3, #0
 8003b22:	bf14      	ite	ne
 8003b24:	2202      	movne	r2, #2
 8003b26:	2201      	moveq	r2, #1
 8003b28:	6122      	str	r2, [r4, #16]
 8003b2a:	b1bd      	cbz	r5, 8003b5c <__d2b+0x94>
 8003b2c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003b30:	4405      	add	r5, r0
 8003b32:	603d      	str	r5, [r7, #0]
 8003b34:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003b38:	6030      	str	r0, [r6, #0]
 8003b3a:	4620      	mov	r0, r4
 8003b3c:	b003      	add	sp, #12
 8003b3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003b42:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8003b46:	e7d6      	b.n	8003af6 <__d2b+0x2e>
 8003b48:	6161      	str	r1, [r4, #20]
 8003b4a:	e7e7      	b.n	8003b1c <__d2b+0x54>
 8003b4c:	a801      	add	r0, sp, #4
 8003b4e:	f7ff fd61 	bl	8003614 <__lo0bits>
 8003b52:	9b01      	ldr	r3, [sp, #4]
 8003b54:	6163      	str	r3, [r4, #20]
 8003b56:	3020      	adds	r0, #32
 8003b58:	2201      	movs	r2, #1
 8003b5a:	e7e5      	b.n	8003b28 <__d2b+0x60>
 8003b5c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003b60:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8003b64:	6038      	str	r0, [r7, #0]
 8003b66:	6918      	ldr	r0, [r3, #16]
 8003b68:	f7ff fd34 	bl	80035d4 <__hi0bits>
 8003b6c:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003b70:	e7e2      	b.n	8003b38 <__d2b+0x70>
 8003b72:	bf00      	nop
 8003b74:	080042f1 	.word	0x080042f1
 8003b78:	08004302 	.word	0x08004302

08003b7c <__sfputc_r>:
 8003b7c:	6893      	ldr	r3, [r2, #8]
 8003b7e:	3b01      	subs	r3, #1
 8003b80:	2b00      	cmp	r3, #0
 8003b82:	b410      	push	{r4}
 8003b84:	6093      	str	r3, [r2, #8]
 8003b86:	da08      	bge.n	8003b9a <__sfputc_r+0x1e>
 8003b88:	6994      	ldr	r4, [r2, #24]
 8003b8a:	42a3      	cmp	r3, r4
 8003b8c:	db01      	blt.n	8003b92 <__sfputc_r+0x16>
 8003b8e:	290a      	cmp	r1, #10
 8003b90:	d103      	bne.n	8003b9a <__sfputc_r+0x1e>
 8003b92:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003b96:	f7fe bbe4 	b.w	8002362 <__swbuf_r>
 8003b9a:	6813      	ldr	r3, [r2, #0]
 8003b9c:	1c58      	adds	r0, r3, #1
 8003b9e:	6010      	str	r0, [r2, #0]
 8003ba0:	7019      	strb	r1, [r3, #0]
 8003ba2:	4608      	mov	r0, r1
 8003ba4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003ba8:	4770      	bx	lr

08003baa <__sfputs_r>:
 8003baa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003bac:	4606      	mov	r6, r0
 8003bae:	460f      	mov	r7, r1
 8003bb0:	4614      	mov	r4, r2
 8003bb2:	18d5      	adds	r5, r2, r3
 8003bb4:	42ac      	cmp	r4, r5
 8003bb6:	d101      	bne.n	8003bbc <__sfputs_r+0x12>
 8003bb8:	2000      	movs	r0, #0
 8003bba:	e007      	b.n	8003bcc <__sfputs_r+0x22>
 8003bbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003bc0:	463a      	mov	r2, r7
 8003bc2:	4630      	mov	r0, r6
 8003bc4:	f7ff ffda 	bl	8003b7c <__sfputc_r>
 8003bc8:	1c43      	adds	r3, r0, #1
 8003bca:	d1f3      	bne.n	8003bb4 <__sfputs_r+0xa>
 8003bcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003bd0 <_vfiprintf_r>:
 8003bd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bd4:	460d      	mov	r5, r1
 8003bd6:	b09d      	sub	sp, #116	; 0x74
 8003bd8:	4614      	mov	r4, r2
 8003bda:	4698      	mov	r8, r3
 8003bdc:	4606      	mov	r6, r0
 8003bde:	b118      	cbz	r0, 8003be8 <_vfiprintf_r+0x18>
 8003be0:	6a03      	ldr	r3, [r0, #32]
 8003be2:	b90b      	cbnz	r3, 8003be8 <_vfiprintf_r+0x18>
 8003be4:	f7fe fad6 	bl	8002194 <__sinit>
 8003be8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003bea:	07d9      	lsls	r1, r3, #31
 8003bec:	d405      	bmi.n	8003bfa <_vfiprintf_r+0x2a>
 8003bee:	89ab      	ldrh	r3, [r5, #12]
 8003bf0:	059a      	lsls	r2, r3, #22
 8003bf2:	d402      	bmi.n	8003bfa <_vfiprintf_r+0x2a>
 8003bf4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003bf6:	f7fe fcc6 	bl	8002586 <__retarget_lock_acquire_recursive>
 8003bfa:	89ab      	ldrh	r3, [r5, #12]
 8003bfc:	071b      	lsls	r3, r3, #28
 8003bfe:	d501      	bpl.n	8003c04 <_vfiprintf_r+0x34>
 8003c00:	692b      	ldr	r3, [r5, #16]
 8003c02:	b99b      	cbnz	r3, 8003c2c <_vfiprintf_r+0x5c>
 8003c04:	4629      	mov	r1, r5
 8003c06:	4630      	mov	r0, r6
 8003c08:	f7fe fbe8 	bl	80023dc <__swsetup_r>
 8003c0c:	b170      	cbz	r0, 8003c2c <_vfiprintf_r+0x5c>
 8003c0e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003c10:	07dc      	lsls	r4, r3, #31
 8003c12:	d504      	bpl.n	8003c1e <_vfiprintf_r+0x4e>
 8003c14:	f04f 30ff 	mov.w	r0, #4294967295
 8003c18:	b01d      	add	sp, #116	; 0x74
 8003c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c1e:	89ab      	ldrh	r3, [r5, #12]
 8003c20:	0598      	lsls	r0, r3, #22
 8003c22:	d4f7      	bmi.n	8003c14 <_vfiprintf_r+0x44>
 8003c24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003c26:	f7fe fcaf 	bl	8002588 <__retarget_lock_release_recursive>
 8003c2a:	e7f3      	b.n	8003c14 <_vfiprintf_r+0x44>
 8003c2c:	2300      	movs	r3, #0
 8003c2e:	9309      	str	r3, [sp, #36]	; 0x24
 8003c30:	2320      	movs	r3, #32
 8003c32:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003c36:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c3a:	2330      	movs	r3, #48	; 0x30
 8003c3c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8003df0 <_vfiprintf_r+0x220>
 8003c40:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003c44:	f04f 0901 	mov.w	r9, #1
 8003c48:	4623      	mov	r3, r4
 8003c4a:	469a      	mov	sl, r3
 8003c4c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c50:	b10a      	cbz	r2, 8003c56 <_vfiprintf_r+0x86>
 8003c52:	2a25      	cmp	r2, #37	; 0x25
 8003c54:	d1f9      	bne.n	8003c4a <_vfiprintf_r+0x7a>
 8003c56:	ebba 0b04 	subs.w	fp, sl, r4
 8003c5a:	d00b      	beq.n	8003c74 <_vfiprintf_r+0xa4>
 8003c5c:	465b      	mov	r3, fp
 8003c5e:	4622      	mov	r2, r4
 8003c60:	4629      	mov	r1, r5
 8003c62:	4630      	mov	r0, r6
 8003c64:	f7ff ffa1 	bl	8003baa <__sfputs_r>
 8003c68:	3001      	adds	r0, #1
 8003c6a:	f000 80a9 	beq.w	8003dc0 <_vfiprintf_r+0x1f0>
 8003c6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003c70:	445a      	add	r2, fp
 8003c72:	9209      	str	r2, [sp, #36]	; 0x24
 8003c74:	f89a 3000 	ldrb.w	r3, [sl]
 8003c78:	2b00      	cmp	r3, #0
 8003c7a:	f000 80a1 	beq.w	8003dc0 <_vfiprintf_r+0x1f0>
 8003c7e:	2300      	movs	r3, #0
 8003c80:	f04f 32ff 	mov.w	r2, #4294967295
 8003c84:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003c88:	f10a 0a01 	add.w	sl, sl, #1
 8003c8c:	9304      	str	r3, [sp, #16]
 8003c8e:	9307      	str	r3, [sp, #28]
 8003c90:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003c94:	931a      	str	r3, [sp, #104]	; 0x68
 8003c96:	4654      	mov	r4, sl
 8003c98:	2205      	movs	r2, #5
 8003c9a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c9e:	4854      	ldr	r0, [pc, #336]	; (8003df0 <_vfiprintf_r+0x220>)
 8003ca0:	f7fc faa6 	bl	80001f0 <memchr>
 8003ca4:	9a04      	ldr	r2, [sp, #16]
 8003ca6:	b9d8      	cbnz	r0, 8003ce0 <_vfiprintf_r+0x110>
 8003ca8:	06d1      	lsls	r1, r2, #27
 8003caa:	bf44      	itt	mi
 8003cac:	2320      	movmi	r3, #32
 8003cae:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003cb2:	0713      	lsls	r3, r2, #28
 8003cb4:	bf44      	itt	mi
 8003cb6:	232b      	movmi	r3, #43	; 0x2b
 8003cb8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003cbc:	f89a 3000 	ldrb.w	r3, [sl]
 8003cc0:	2b2a      	cmp	r3, #42	; 0x2a
 8003cc2:	d015      	beq.n	8003cf0 <_vfiprintf_r+0x120>
 8003cc4:	9a07      	ldr	r2, [sp, #28]
 8003cc6:	4654      	mov	r4, sl
 8003cc8:	2000      	movs	r0, #0
 8003cca:	f04f 0c0a 	mov.w	ip, #10
 8003cce:	4621      	mov	r1, r4
 8003cd0:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003cd4:	3b30      	subs	r3, #48	; 0x30
 8003cd6:	2b09      	cmp	r3, #9
 8003cd8:	d94d      	bls.n	8003d76 <_vfiprintf_r+0x1a6>
 8003cda:	b1b0      	cbz	r0, 8003d0a <_vfiprintf_r+0x13a>
 8003cdc:	9207      	str	r2, [sp, #28]
 8003cde:	e014      	b.n	8003d0a <_vfiprintf_r+0x13a>
 8003ce0:	eba0 0308 	sub.w	r3, r0, r8
 8003ce4:	fa09 f303 	lsl.w	r3, r9, r3
 8003ce8:	4313      	orrs	r3, r2
 8003cea:	9304      	str	r3, [sp, #16]
 8003cec:	46a2      	mov	sl, r4
 8003cee:	e7d2      	b.n	8003c96 <_vfiprintf_r+0xc6>
 8003cf0:	9b03      	ldr	r3, [sp, #12]
 8003cf2:	1d19      	adds	r1, r3, #4
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	9103      	str	r1, [sp, #12]
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	bfbb      	ittet	lt
 8003cfc:	425b      	neglt	r3, r3
 8003cfe:	f042 0202 	orrlt.w	r2, r2, #2
 8003d02:	9307      	strge	r3, [sp, #28]
 8003d04:	9307      	strlt	r3, [sp, #28]
 8003d06:	bfb8      	it	lt
 8003d08:	9204      	strlt	r2, [sp, #16]
 8003d0a:	7823      	ldrb	r3, [r4, #0]
 8003d0c:	2b2e      	cmp	r3, #46	; 0x2e
 8003d0e:	d10c      	bne.n	8003d2a <_vfiprintf_r+0x15a>
 8003d10:	7863      	ldrb	r3, [r4, #1]
 8003d12:	2b2a      	cmp	r3, #42	; 0x2a
 8003d14:	d134      	bne.n	8003d80 <_vfiprintf_r+0x1b0>
 8003d16:	9b03      	ldr	r3, [sp, #12]
 8003d18:	1d1a      	adds	r2, r3, #4
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	9203      	str	r2, [sp, #12]
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	bfb8      	it	lt
 8003d22:	f04f 33ff 	movlt.w	r3, #4294967295
 8003d26:	3402      	adds	r4, #2
 8003d28:	9305      	str	r3, [sp, #20]
 8003d2a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8003e00 <_vfiprintf_r+0x230>
 8003d2e:	7821      	ldrb	r1, [r4, #0]
 8003d30:	2203      	movs	r2, #3
 8003d32:	4650      	mov	r0, sl
 8003d34:	f7fc fa5c 	bl	80001f0 <memchr>
 8003d38:	b138      	cbz	r0, 8003d4a <_vfiprintf_r+0x17a>
 8003d3a:	9b04      	ldr	r3, [sp, #16]
 8003d3c:	eba0 000a 	sub.w	r0, r0, sl
 8003d40:	2240      	movs	r2, #64	; 0x40
 8003d42:	4082      	lsls	r2, r0
 8003d44:	4313      	orrs	r3, r2
 8003d46:	3401      	adds	r4, #1
 8003d48:	9304      	str	r3, [sp, #16]
 8003d4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d4e:	4829      	ldr	r0, [pc, #164]	; (8003df4 <_vfiprintf_r+0x224>)
 8003d50:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003d54:	2206      	movs	r2, #6
 8003d56:	f7fc fa4b 	bl	80001f0 <memchr>
 8003d5a:	2800      	cmp	r0, #0
 8003d5c:	d03f      	beq.n	8003dde <_vfiprintf_r+0x20e>
 8003d5e:	4b26      	ldr	r3, [pc, #152]	; (8003df8 <_vfiprintf_r+0x228>)
 8003d60:	bb1b      	cbnz	r3, 8003daa <_vfiprintf_r+0x1da>
 8003d62:	9b03      	ldr	r3, [sp, #12]
 8003d64:	3307      	adds	r3, #7
 8003d66:	f023 0307 	bic.w	r3, r3, #7
 8003d6a:	3308      	adds	r3, #8
 8003d6c:	9303      	str	r3, [sp, #12]
 8003d6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d70:	443b      	add	r3, r7
 8003d72:	9309      	str	r3, [sp, #36]	; 0x24
 8003d74:	e768      	b.n	8003c48 <_vfiprintf_r+0x78>
 8003d76:	fb0c 3202 	mla	r2, ip, r2, r3
 8003d7a:	460c      	mov	r4, r1
 8003d7c:	2001      	movs	r0, #1
 8003d7e:	e7a6      	b.n	8003cce <_vfiprintf_r+0xfe>
 8003d80:	2300      	movs	r3, #0
 8003d82:	3401      	adds	r4, #1
 8003d84:	9305      	str	r3, [sp, #20]
 8003d86:	4619      	mov	r1, r3
 8003d88:	f04f 0c0a 	mov.w	ip, #10
 8003d8c:	4620      	mov	r0, r4
 8003d8e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003d92:	3a30      	subs	r2, #48	; 0x30
 8003d94:	2a09      	cmp	r2, #9
 8003d96:	d903      	bls.n	8003da0 <_vfiprintf_r+0x1d0>
 8003d98:	2b00      	cmp	r3, #0
 8003d9a:	d0c6      	beq.n	8003d2a <_vfiprintf_r+0x15a>
 8003d9c:	9105      	str	r1, [sp, #20]
 8003d9e:	e7c4      	b.n	8003d2a <_vfiprintf_r+0x15a>
 8003da0:	fb0c 2101 	mla	r1, ip, r1, r2
 8003da4:	4604      	mov	r4, r0
 8003da6:	2301      	movs	r3, #1
 8003da8:	e7f0      	b.n	8003d8c <_vfiprintf_r+0x1bc>
 8003daa:	ab03      	add	r3, sp, #12
 8003dac:	9300      	str	r3, [sp, #0]
 8003dae:	462a      	mov	r2, r5
 8003db0:	4b12      	ldr	r3, [pc, #72]	; (8003dfc <_vfiprintf_r+0x22c>)
 8003db2:	a904      	add	r1, sp, #16
 8003db4:	4630      	mov	r0, r6
 8003db6:	f7fd fd9b 	bl	80018f0 <_printf_float>
 8003dba:	4607      	mov	r7, r0
 8003dbc:	1c78      	adds	r0, r7, #1
 8003dbe:	d1d6      	bne.n	8003d6e <_vfiprintf_r+0x19e>
 8003dc0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003dc2:	07d9      	lsls	r1, r3, #31
 8003dc4:	d405      	bmi.n	8003dd2 <_vfiprintf_r+0x202>
 8003dc6:	89ab      	ldrh	r3, [r5, #12]
 8003dc8:	059a      	lsls	r2, r3, #22
 8003dca:	d402      	bmi.n	8003dd2 <_vfiprintf_r+0x202>
 8003dcc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003dce:	f7fe fbdb 	bl	8002588 <__retarget_lock_release_recursive>
 8003dd2:	89ab      	ldrh	r3, [r5, #12]
 8003dd4:	065b      	lsls	r3, r3, #25
 8003dd6:	f53f af1d 	bmi.w	8003c14 <_vfiprintf_r+0x44>
 8003dda:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003ddc:	e71c      	b.n	8003c18 <_vfiprintf_r+0x48>
 8003dde:	ab03      	add	r3, sp, #12
 8003de0:	9300      	str	r3, [sp, #0]
 8003de2:	462a      	mov	r2, r5
 8003de4:	4b05      	ldr	r3, [pc, #20]	; (8003dfc <_vfiprintf_r+0x22c>)
 8003de6:	a904      	add	r1, sp, #16
 8003de8:	4630      	mov	r0, r6
 8003dea:	f7fe f825 	bl	8001e38 <_printf_i>
 8003dee:	e7e4      	b.n	8003dba <_vfiprintf_r+0x1ea>
 8003df0:	0800445c 	.word	0x0800445c
 8003df4:	08004466 	.word	0x08004466
 8003df8:	080018f1 	.word	0x080018f1
 8003dfc:	08003bab 	.word	0x08003bab
 8003e00:	08004462 	.word	0x08004462

08003e04 <__sflush_r>:
 8003e04:	898a      	ldrh	r2, [r1, #12]
 8003e06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e0a:	4605      	mov	r5, r0
 8003e0c:	0710      	lsls	r0, r2, #28
 8003e0e:	460c      	mov	r4, r1
 8003e10:	d458      	bmi.n	8003ec4 <__sflush_r+0xc0>
 8003e12:	684b      	ldr	r3, [r1, #4]
 8003e14:	2b00      	cmp	r3, #0
 8003e16:	dc05      	bgt.n	8003e24 <__sflush_r+0x20>
 8003e18:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003e1a:	2b00      	cmp	r3, #0
 8003e1c:	dc02      	bgt.n	8003e24 <__sflush_r+0x20>
 8003e1e:	2000      	movs	r0, #0
 8003e20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003e24:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003e26:	2e00      	cmp	r6, #0
 8003e28:	d0f9      	beq.n	8003e1e <__sflush_r+0x1a>
 8003e2a:	2300      	movs	r3, #0
 8003e2c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003e30:	682f      	ldr	r7, [r5, #0]
 8003e32:	6a21      	ldr	r1, [r4, #32]
 8003e34:	602b      	str	r3, [r5, #0]
 8003e36:	d032      	beq.n	8003e9e <__sflush_r+0x9a>
 8003e38:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003e3a:	89a3      	ldrh	r3, [r4, #12]
 8003e3c:	075a      	lsls	r2, r3, #29
 8003e3e:	d505      	bpl.n	8003e4c <__sflush_r+0x48>
 8003e40:	6863      	ldr	r3, [r4, #4]
 8003e42:	1ac0      	subs	r0, r0, r3
 8003e44:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003e46:	b10b      	cbz	r3, 8003e4c <__sflush_r+0x48>
 8003e48:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003e4a:	1ac0      	subs	r0, r0, r3
 8003e4c:	2300      	movs	r3, #0
 8003e4e:	4602      	mov	r2, r0
 8003e50:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003e52:	6a21      	ldr	r1, [r4, #32]
 8003e54:	4628      	mov	r0, r5
 8003e56:	47b0      	blx	r6
 8003e58:	1c43      	adds	r3, r0, #1
 8003e5a:	89a3      	ldrh	r3, [r4, #12]
 8003e5c:	d106      	bne.n	8003e6c <__sflush_r+0x68>
 8003e5e:	6829      	ldr	r1, [r5, #0]
 8003e60:	291d      	cmp	r1, #29
 8003e62:	d82b      	bhi.n	8003ebc <__sflush_r+0xb8>
 8003e64:	4a29      	ldr	r2, [pc, #164]	; (8003f0c <__sflush_r+0x108>)
 8003e66:	410a      	asrs	r2, r1
 8003e68:	07d6      	lsls	r6, r2, #31
 8003e6a:	d427      	bmi.n	8003ebc <__sflush_r+0xb8>
 8003e6c:	2200      	movs	r2, #0
 8003e6e:	6062      	str	r2, [r4, #4]
 8003e70:	04d9      	lsls	r1, r3, #19
 8003e72:	6922      	ldr	r2, [r4, #16]
 8003e74:	6022      	str	r2, [r4, #0]
 8003e76:	d504      	bpl.n	8003e82 <__sflush_r+0x7e>
 8003e78:	1c42      	adds	r2, r0, #1
 8003e7a:	d101      	bne.n	8003e80 <__sflush_r+0x7c>
 8003e7c:	682b      	ldr	r3, [r5, #0]
 8003e7e:	b903      	cbnz	r3, 8003e82 <__sflush_r+0x7e>
 8003e80:	6560      	str	r0, [r4, #84]	; 0x54
 8003e82:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003e84:	602f      	str	r7, [r5, #0]
 8003e86:	2900      	cmp	r1, #0
 8003e88:	d0c9      	beq.n	8003e1e <__sflush_r+0x1a>
 8003e8a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003e8e:	4299      	cmp	r1, r3
 8003e90:	d002      	beq.n	8003e98 <__sflush_r+0x94>
 8003e92:	4628      	mov	r0, r5
 8003e94:	f7ff f9f6 	bl	8003284 <_free_r>
 8003e98:	2000      	movs	r0, #0
 8003e9a:	6360      	str	r0, [r4, #52]	; 0x34
 8003e9c:	e7c0      	b.n	8003e20 <__sflush_r+0x1c>
 8003e9e:	2301      	movs	r3, #1
 8003ea0:	4628      	mov	r0, r5
 8003ea2:	47b0      	blx	r6
 8003ea4:	1c41      	adds	r1, r0, #1
 8003ea6:	d1c8      	bne.n	8003e3a <__sflush_r+0x36>
 8003ea8:	682b      	ldr	r3, [r5, #0]
 8003eaa:	2b00      	cmp	r3, #0
 8003eac:	d0c5      	beq.n	8003e3a <__sflush_r+0x36>
 8003eae:	2b1d      	cmp	r3, #29
 8003eb0:	d001      	beq.n	8003eb6 <__sflush_r+0xb2>
 8003eb2:	2b16      	cmp	r3, #22
 8003eb4:	d101      	bne.n	8003eba <__sflush_r+0xb6>
 8003eb6:	602f      	str	r7, [r5, #0]
 8003eb8:	e7b1      	b.n	8003e1e <__sflush_r+0x1a>
 8003eba:	89a3      	ldrh	r3, [r4, #12]
 8003ebc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003ec0:	81a3      	strh	r3, [r4, #12]
 8003ec2:	e7ad      	b.n	8003e20 <__sflush_r+0x1c>
 8003ec4:	690f      	ldr	r7, [r1, #16]
 8003ec6:	2f00      	cmp	r7, #0
 8003ec8:	d0a9      	beq.n	8003e1e <__sflush_r+0x1a>
 8003eca:	0793      	lsls	r3, r2, #30
 8003ecc:	680e      	ldr	r6, [r1, #0]
 8003ece:	bf08      	it	eq
 8003ed0:	694b      	ldreq	r3, [r1, #20]
 8003ed2:	600f      	str	r7, [r1, #0]
 8003ed4:	bf18      	it	ne
 8003ed6:	2300      	movne	r3, #0
 8003ed8:	eba6 0807 	sub.w	r8, r6, r7
 8003edc:	608b      	str	r3, [r1, #8]
 8003ede:	f1b8 0f00 	cmp.w	r8, #0
 8003ee2:	dd9c      	ble.n	8003e1e <__sflush_r+0x1a>
 8003ee4:	6a21      	ldr	r1, [r4, #32]
 8003ee6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003ee8:	4643      	mov	r3, r8
 8003eea:	463a      	mov	r2, r7
 8003eec:	4628      	mov	r0, r5
 8003eee:	47b0      	blx	r6
 8003ef0:	2800      	cmp	r0, #0
 8003ef2:	dc06      	bgt.n	8003f02 <__sflush_r+0xfe>
 8003ef4:	89a3      	ldrh	r3, [r4, #12]
 8003ef6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003efa:	81a3      	strh	r3, [r4, #12]
 8003efc:	f04f 30ff 	mov.w	r0, #4294967295
 8003f00:	e78e      	b.n	8003e20 <__sflush_r+0x1c>
 8003f02:	4407      	add	r7, r0
 8003f04:	eba8 0800 	sub.w	r8, r8, r0
 8003f08:	e7e9      	b.n	8003ede <__sflush_r+0xda>
 8003f0a:	bf00      	nop
 8003f0c:	dfbffffe 	.word	0xdfbffffe

08003f10 <_fflush_r>:
 8003f10:	b538      	push	{r3, r4, r5, lr}
 8003f12:	690b      	ldr	r3, [r1, #16]
 8003f14:	4605      	mov	r5, r0
 8003f16:	460c      	mov	r4, r1
 8003f18:	b913      	cbnz	r3, 8003f20 <_fflush_r+0x10>
 8003f1a:	2500      	movs	r5, #0
 8003f1c:	4628      	mov	r0, r5
 8003f1e:	bd38      	pop	{r3, r4, r5, pc}
 8003f20:	b118      	cbz	r0, 8003f2a <_fflush_r+0x1a>
 8003f22:	6a03      	ldr	r3, [r0, #32]
 8003f24:	b90b      	cbnz	r3, 8003f2a <_fflush_r+0x1a>
 8003f26:	f7fe f935 	bl	8002194 <__sinit>
 8003f2a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d0f3      	beq.n	8003f1a <_fflush_r+0xa>
 8003f32:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003f34:	07d0      	lsls	r0, r2, #31
 8003f36:	d404      	bmi.n	8003f42 <_fflush_r+0x32>
 8003f38:	0599      	lsls	r1, r3, #22
 8003f3a:	d402      	bmi.n	8003f42 <_fflush_r+0x32>
 8003f3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003f3e:	f7fe fb22 	bl	8002586 <__retarget_lock_acquire_recursive>
 8003f42:	4628      	mov	r0, r5
 8003f44:	4621      	mov	r1, r4
 8003f46:	f7ff ff5d 	bl	8003e04 <__sflush_r>
 8003f4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003f4c:	07da      	lsls	r2, r3, #31
 8003f4e:	4605      	mov	r5, r0
 8003f50:	d4e4      	bmi.n	8003f1c <_fflush_r+0xc>
 8003f52:	89a3      	ldrh	r3, [r4, #12]
 8003f54:	059b      	lsls	r3, r3, #22
 8003f56:	d4e1      	bmi.n	8003f1c <_fflush_r+0xc>
 8003f58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003f5a:	f7fe fb15 	bl	8002588 <__retarget_lock_release_recursive>
 8003f5e:	e7dd      	b.n	8003f1c <_fflush_r+0xc>

08003f60 <__swhatbuf_r>:
 8003f60:	b570      	push	{r4, r5, r6, lr}
 8003f62:	460c      	mov	r4, r1
 8003f64:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003f68:	2900      	cmp	r1, #0
 8003f6a:	b096      	sub	sp, #88	; 0x58
 8003f6c:	4615      	mov	r5, r2
 8003f6e:	461e      	mov	r6, r3
 8003f70:	da0d      	bge.n	8003f8e <__swhatbuf_r+0x2e>
 8003f72:	89a3      	ldrh	r3, [r4, #12]
 8003f74:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003f78:	f04f 0100 	mov.w	r1, #0
 8003f7c:	bf0c      	ite	eq
 8003f7e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8003f82:	2340      	movne	r3, #64	; 0x40
 8003f84:	2000      	movs	r0, #0
 8003f86:	6031      	str	r1, [r6, #0]
 8003f88:	602b      	str	r3, [r5, #0]
 8003f8a:	b016      	add	sp, #88	; 0x58
 8003f8c:	bd70      	pop	{r4, r5, r6, pc}
 8003f8e:	466a      	mov	r2, sp
 8003f90:	f000 f848 	bl	8004024 <_fstat_r>
 8003f94:	2800      	cmp	r0, #0
 8003f96:	dbec      	blt.n	8003f72 <__swhatbuf_r+0x12>
 8003f98:	9901      	ldr	r1, [sp, #4]
 8003f9a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8003f9e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8003fa2:	4259      	negs	r1, r3
 8003fa4:	4159      	adcs	r1, r3
 8003fa6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003faa:	e7eb      	b.n	8003f84 <__swhatbuf_r+0x24>

08003fac <__smakebuf_r>:
 8003fac:	898b      	ldrh	r3, [r1, #12]
 8003fae:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003fb0:	079d      	lsls	r5, r3, #30
 8003fb2:	4606      	mov	r6, r0
 8003fb4:	460c      	mov	r4, r1
 8003fb6:	d507      	bpl.n	8003fc8 <__smakebuf_r+0x1c>
 8003fb8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003fbc:	6023      	str	r3, [r4, #0]
 8003fbe:	6123      	str	r3, [r4, #16]
 8003fc0:	2301      	movs	r3, #1
 8003fc2:	6163      	str	r3, [r4, #20]
 8003fc4:	b002      	add	sp, #8
 8003fc6:	bd70      	pop	{r4, r5, r6, pc}
 8003fc8:	ab01      	add	r3, sp, #4
 8003fca:	466a      	mov	r2, sp
 8003fcc:	f7ff ffc8 	bl	8003f60 <__swhatbuf_r>
 8003fd0:	9900      	ldr	r1, [sp, #0]
 8003fd2:	4605      	mov	r5, r0
 8003fd4:	4630      	mov	r0, r6
 8003fd6:	f7ff f9c9 	bl	800336c <_malloc_r>
 8003fda:	b948      	cbnz	r0, 8003ff0 <__smakebuf_r+0x44>
 8003fdc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003fe0:	059a      	lsls	r2, r3, #22
 8003fe2:	d4ef      	bmi.n	8003fc4 <__smakebuf_r+0x18>
 8003fe4:	f023 0303 	bic.w	r3, r3, #3
 8003fe8:	f043 0302 	orr.w	r3, r3, #2
 8003fec:	81a3      	strh	r3, [r4, #12]
 8003fee:	e7e3      	b.n	8003fb8 <__smakebuf_r+0xc>
 8003ff0:	89a3      	ldrh	r3, [r4, #12]
 8003ff2:	6020      	str	r0, [r4, #0]
 8003ff4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003ff8:	81a3      	strh	r3, [r4, #12]
 8003ffa:	9b00      	ldr	r3, [sp, #0]
 8003ffc:	6163      	str	r3, [r4, #20]
 8003ffe:	9b01      	ldr	r3, [sp, #4]
 8004000:	6120      	str	r0, [r4, #16]
 8004002:	b15b      	cbz	r3, 800401c <__smakebuf_r+0x70>
 8004004:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004008:	4630      	mov	r0, r6
 800400a:	f000 f81d 	bl	8004048 <_isatty_r>
 800400e:	b128      	cbz	r0, 800401c <__smakebuf_r+0x70>
 8004010:	89a3      	ldrh	r3, [r4, #12]
 8004012:	f023 0303 	bic.w	r3, r3, #3
 8004016:	f043 0301 	orr.w	r3, r3, #1
 800401a:	81a3      	strh	r3, [r4, #12]
 800401c:	89a3      	ldrh	r3, [r4, #12]
 800401e:	431d      	orrs	r5, r3
 8004020:	81a5      	strh	r5, [r4, #12]
 8004022:	e7cf      	b.n	8003fc4 <__smakebuf_r+0x18>

08004024 <_fstat_r>:
 8004024:	b538      	push	{r3, r4, r5, lr}
 8004026:	4d07      	ldr	r5, [pc, #28]	; (8004044 <_fstat_r+0x20>)
 8004028:	2300      	movs	r3, #0
 800402a:	4604      	mov	r4, r0
 800402c:	4608      	mov	r0, r1
 800402e:	4611      	mov	r1, r2
 8004030:	602b      	str	r3, [r5, #0]
 8004032:	f7fd fb22 	bl	800167a <_fstat>
 8004036:	1c43      	adds	r3, r0, #1
 8004038:	d102      	bne.n	8004040 <_fstat_r+0x1c>
 800403a:	682b      	ldr	r3, [r5, #0]
 800403c:	b103      	cbz	r3, 8004040 <_fstat_r+0x1c>
 800403e:	6023      	str	r3, [r4, #0]
 8004040:	bd38      	pop	{r3, r4, r5, pc}
 8004042:	bf00      	nop
 8004044:	200004fc 	.word	0x200004fc

08004048 <_isatty_r>:
 8004048:	b538      	push	{r3, r4, r5, lr}
 800404a:	4d06      	ldr	r5, [pc, #24]	; (8004064 <_isatty_r+0x1c>)
 800404c:	2300      	movs	r3, #0
 800404e:	4604      	mov	r4, r0
 8004050:	4608      	mov	r0, r1
 8004052:	602b      	str	r3, [r5, #0]
 8004054:	f7fd fb21 	bl	800169a <_isatty>
 8004058:	1c43      	adds	r3, r0, #1
 800405a:	d102      	bne.n	8004062 <_isatty_r+0x1a>
 800405c:	682b      	ldr	r3, [r5, #0]
 800405e:	b103      	cbz	r3, 8004062 <_isatty_r+0x1a>
 8004060:	6023      	str	r3, [r4, #0]
 8004062:	bd38      	pop	{r3, r4, r5, pc}
 8004064:	200004fc 	.word	0x200004fc

08004068 <_sbrk_r>:
 8004068:	b538      	push	{r3, r4, r5, lr}
 800406a:	4d06      	ldr	r5, [pc, #24]	; (8004084 <_sbrk_r+0x1c>)
 800406c:	2300      	movs	r3, #0
 800406e:	4604      	mov	r4, r0
 8004070:	4608      	mov	r0, r1
 8004072:	602b      	str	r3, [r5, #0]
 8004074:	f7fd fb2a 	bl	80016cc <_sbrk>
 8004078:	1c43      	adds	r3, r0, #1
 800407a:	d102      	bne.n	8004082 <_sbrk_r+0x1a>
 800407c:	682b      	ldr	r3, [r5, #0]
 800407e:	b103      	cbz	r3, 8004082 <_sbrk_r+0x1a>
 8004080:	6023      	str	r3, [r4, #0]
 8004082:	bd38      	pop	{r3, r4, r5, pc}
 8004084:	200004fc 	.word	0x200004fc

08004088 <memcpy>:
 8004088:	440a      	add	r2, r1
 800408a:	4291      	cmp	r1, r2
 800408c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004090:	d100      	bne.n	8004094 <memcpy+0xc>
 8004092:	4770      	bx	lr
 8004094:	b510      	push	{r4, lr}
 8004096:	f811 4b01 	ldrb.w	r4, [r1], #1
 800409a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800409e:	4291      	cmp	r1, r2
 80040a0:	d1f9      	bne.n	8004096 <memcpy+0xe>
 80040a2:	bd10      	pop	{r4, pc}

080040a4 <__assert_func>:
 80040a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80040a6:	4614      	mov	r4, r2
 80040a8:	461a      	mov	r2, r3
 80040aa:	4b09      	ldr	r3, [pc, #36]	; (80040d0 <__assert_func+0x2c>)
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	4605      	mov	r5, r0
 80040b0:	68d8      	ldr	r0, [r3, #12]
 80040b2:	b14c      	cbz	r4, 80040c8 <__assert_func+0x24>
 80040b4:	4b07      	ldr	r3, [pc, #28]	; (80040d4 <__assert_func+0x30>)
 80040b6:	9100      	str	r1, [sp, #0]
 80040b8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80040bc:	4906      	ldr	r1, [pc, #24]	; (80040d8 <__assert_func+0x34>)
 80040be:	462b      	mov	r3, r5
 80040c0:	f000 f844 	bl	800414c <fiprintf>
 80040c4:	f000 f854 	bl	8004170 <abort>
 80040c8:	4b04      	ldr	r3, [pc, #16]	; (80040dc <__assert_func+0x38>)
 80040ca:	461c      	mov	r4, r3
 80040cc:	e7f3      	b.n	80040b6 <__assert_func+0x12>
 80040ce:	bf00      	nop
 80040d0:	200000a0 	.word	0x200000a0
 80040d4:	08004477 	.word	0x08004477
 80040d8:	08004484 	.word	0x08004484
 80040dc:	080044b2 	.word	0x080044b2

080040e0 <_calloc_r>:
 80040e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80040e2:	fba1 2402 	umull	r2, r4, r1, r2
 80040e6:	b94c      	cbnz	r4, 80040fc <_calloc_r+0x1c>
 80040e8:	4611      	mov	r1, r2
 80040ea:	9201      	str	r2, [sp, #4]
 80040ec:	f7ff f93e 	bl	800336c <_malloc_r>
 80040f0:	9a01      	ldr	r2, [sp, #4]
 80040f2:	4605      	mov	r5, r0
 80040f4:	b930      	cbnz	r0, 8004104 <_calloc_r+0x24>
 80040f6:	4628      	mov	r0, r5
 80040f8:	b003      	add	sp, #12
 80040fa:	bd30      	pop	{r4, r5, pc}
 80040fc:	220c      	movs	r2, #12
 80040fe:	6002      	str	r2, [r0, #0]
 8004100:	2500      	movs	r5, #0
 8004102:	e7f8      	b.n	80040f6 <_calloc_r+0x16>
 8004104:	4621      	mov	r1, r4
 8004106:	f7fe f9c1 	bl	800248c <memset>
 800410a:	e7f4      	b.n	80040f6 <_calloc_r+0x16>

0800410c <__ascii_mbtowc>:
 800410c:	b082      	sub	sp, #8
 800410e:	b901      	cbnz	r1, 8004112 <__ascii_mbtowc+0x6>
 8004110:	a901      	add	r1, sp, #4
 8004112:	b142      	cbz	r2, 8004126 <__ascii_mbtowc+0x1a>
 8004114:	b14b      	cbz	r3, 800412a <__ascii_mbtowc+0x1e>
 8004116:	7813      	ldrb	r3, [r2, #0]
 8004118:	600b      	str	r3, [r1, #0]
 800411a:	7812      	ldrb	r2, [r2, #0]
 800411c:	1e10      	subs	r0, r2, #0
 800411e:	bf18      	it	ne
 8004120:	2001      	movne	r0, #1
 8004122:	b002      	add	sp, #8
 8004124:	4770      	bx	lr
 8004126:	4610      	mov	r0, r2
 8004128:	e7fb      	b.n	8004122 <__ascii_mbtowc+0x16>
 800412a:	f06f 0001 	mvn.w	r0, #1
 800412e:	e7f8      	b.n	8004122 <__ascii_mbtowc+0x16>

08004130 <__ascii_wctomb>:
 8004130:	b149      	cbz	r1, 8004146 <__ascii_wctomb+0x16>
 8004132:	2aff      	cmp	r2, #255	; 0xff
 8004134:	bf85      	ittet	hi
 8004136:	238a      	movhi	r3, #138	; 0x8a
 8004138:	6003      	strhi	r3, [r0, #0]
 800413a:	700a      	strbls	r2, [r1, #0]
 800413c:	f04f 30ff 	movhi.w	r0, #4294967295
 8004140:	bf98      	it	ls
 8004142:	2001      	movls	r0, #1
 8004144:	4770      	bx	lr
 8004146:	4608      	mov	r0, r1
 8004148:	4770      	bx	lr
	...

0800414c <fiprintf>:
 800414c:	b40e      	push	{r1, r2, r3}
 800414e:	b503      	push	{r0, r1, lr}
 8004150:	4601      	mov	r1, r0
 8004152:	ab03      	add	r3, sp, #12
 8004154:	4805      	ldr	r0, [pc, #20]	; (800416c <fiprintf+0x20>)
 8004156:	f853 2b04 	ldr.w	r2, [r3], #4
 800415a:	6800      	ldr	r0, [r0, #0]
 800415c:	9301      	str	r3, [sp, #4]
 800415e:	f7ff fd37 	bl	8003bd0 <_vfiprintf_r>
 8004162:	b002      	add	sp, #8
 8004164:	f85d eb04 	ldr.w	lr, [sp], #4
 8004168:	b003      	add	sp, #12
 800416a:	4770      	bx	lr
 800416c:	200000a0 	.word	0x200000a0

08004170 <abort>:
 8004170:	b508      	push	{r3, lr}
 8004172:	2006      	movs	r0, #6
 8004174:	f000 f82c 	bl	80041d0 <raise>
 8004178:	2001      	movs	r0, #1
 800417a:	f7fd fa2f 	bl	80015dc <_exit>

0800417e <_raise_r>:
 800417e:	291f      	cmp	r1, #31
 8004180:	b538      	push	{r3, r4, r5, lr}
 8004182:	4604      	mov	r4, r0
 8004184:	460d      	mov	r5, r1
 8004186:	d904      	bls.n	8004192 <_raise_r+0x14>
 8004188:	2316      	movs	r3, #22
 800418a:	6003      	str	r3, [r0, #0]
 800418c:	f04f 30ff 	mov.w	r0, #4294967295
 8004190:	bd38      	pop	{r3, r4, r5, pc}
 8004192:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8004194:	b112      	cbz	r2, 800419c <_raise_r+0x1e>
 8004196:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800419a:	b94b      	cbnz	r3, 80041b0 <_raise_r+0x32>
 800419c:	4620      	mov	r0, r4
 800419e:	f000 f831 	bl	8004204 <_getpid_r>
 80041a2:	462a      	mov	r2, r5
 80041a4:	4601      	mov	r1, r0
 80041a6:	4620      	mov	r0, r4
 80041a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80041ac:	f000 b818 	b.w	80041e0 <_kill_r>
 80041b0:	2b01      	cmp	r3, #1
 80041b2:	d00a      	beq.n	80041ca <_raise_r+0x4c>
 80041b4:	1c59      	adds	r1, r3, #1
 80041b6:	d103      	bne.n	80041c0 <_raise_r+0x42>
 80041b8:	2316      	movs	r3, #22
 80041ba:	6003      	str	r3, [r0, #0]
 80041bc:	2001      	movs	r0, #1
 80041be:	e7e7      	b.n	8004190 <_raise_r+0x12>
 80041c0:	2400      	movs	r4, #0
 80041c2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80041c6:	4628      	mov	r0, r5
 80041c8:	4798      	blx	r3
 80041ca:	2000      	movs	r0, #0
 80041cc:	e7e0      	b.n	8004190 <_raise_r+0x12>
	...

080041d0 <raise>:
 80041d0:	4b02      	ldr	r3, [pc, #8]	; (80041dc <raise+0xc>)
 80041d2:	4601      	mov	r1, r0
 80041d4:	6818      	ldr	r0, [r3, #0]
 80041d6:	f7ff bfd2 	b.w	800417e <_raise_r>
 80041da:	bf00      	nop
 80041dc:	200000a0 	.word	0x200000a0

080041e0 <_kill_r>:
 80041e0:	b538      	push	{r3, r4, r5, lr}
 80041e2:	4d07      	ldr	r5, [pc, #28]	; (8004200 <_kill_r+0x20>)
 80041e4:	2300      	movs	r3, #0
 80041e6:	4604      	mov	r4, r0
 80041e8:	4608      	mov	r0, r1
 80041ea:	4611      	mov	r1, r2
 80041ec:	602b      	str	r3, [r5, #0]
 80041ee:	f7fd f9e5 	bl	80015bc <_kill>
 80041f2:	1c43      	adds	r3, r0, #1
 80041f4:	d102      	bne.n	80041fc <_kill_r+0x1c>
 80041f6:	682b      	ldr	r3, [r5, #0]
 80041f8:	b103      	cbz	r3, 80041fc <_kill_r+0x1c>
 80041fa:	6023      	str	r3, [r4, #0]
 80041fc:	bd38      	pop	{r3, r4, r5, pc}
 80041fe:	bf00      	nop
 8004200:	200004fc 	.word	0x200004fc

08004204 <_getpid_r>:
 8004204:	f7fd b9d2 	b.w	80015ac <_getpid>

08004208 <_init>:
 8004208:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800420a:	bf00      	nop
 800420c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800420e:	bc08      	pop	{r3}
 8004210:	469e      	mov	lr, r3
 8004212:	4770      	bx	lr

08004214 <_fini>:
 8004214:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004216:	bf00      	nop
 8004218:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800421a:	bc08      	pop	{r3}
 800421c:	469e      	mov	lr, r3
 800421e:	4770      	bx	lr
