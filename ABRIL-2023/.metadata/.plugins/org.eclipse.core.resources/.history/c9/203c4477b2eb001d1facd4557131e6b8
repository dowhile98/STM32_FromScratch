/*
 * circularuart.c
 *
 *  Created on: May 5, 2023
 *      Author: jeffr
 */

#include "circularuart.h"

RBUART_Result_t rbuart_init(rbuart_t *RB, USART_TypeDef *USARTX, void *buffData, size_t _size){
	RB->USART = USARTX;
	RB->size = _size;
	if(lwrb_init(&RB->buff, buffData, _size) == 1){
		return RBUART_OK;
	}
	return RBUART_ERROR;
}

RBUART_Result_t rbuart_send(rbuart_t *rb, uint8_t *pData, size_t size){

	if(lwrb_get_free(&rb->buff) >= size){
		lwrb_write(&rb->buff, pData, size);
		//enable interrupt
		rb->USART->CR1 |= USART_CR1_TXEIE;
		return RBUART_OK;
	}
	return RBUART_ERROR;
}


/**
 * @brief funcion que inicia la recepcion de datos por interrupcion en el buffer circular
 * @param rb: puntero al buffer circular
 */
RBUART_Result_t rbuart_start_receive(rbuart_t *rb){
	rb->USART->CR1 |= USART_CR1_RXNEIE;
	return RBUART_OK;
}
