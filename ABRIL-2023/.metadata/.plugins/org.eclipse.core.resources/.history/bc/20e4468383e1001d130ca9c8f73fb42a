/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */
/*
 * PA0 -> ENTRADA
 * PD15 -> SALIDA
 */
#include <stdint.h>
#include <stm32f4xx.h>



int main(void)
{
	uint6_t pa0;
	/*1. habilitar el reloj*/
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIODEN;
	/*2. configurar el registro MODER*/
	//PD15
	GPIOD->MODER &=~ GPIO_MODER_MODE15;
	GPIOD->MODER |= GPIO_MODER_MODE15_0;	//salida de proposito general
	//PA0
	GPIOA->MODER &=~ GPIO_MODER_MODE0;		//INPUT FLOATING
	/*3. configurar el registro OTYPER (solo en caso de AF o OUT)	 */
	GPIOD->OTYPER &=~ GPIO_OTYPER_OT15;		//PUSH PULL
	/*4. configurar el registro OSPEEDR (solo en caso de AF o OUT)*/
	GPIOD->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR15;	//VERY HIGH SPEED
	/*5. Configurar el registro PUPDR */
	GPIOD->PUPDR &=~ GPIO_PUPDR_PUPD15;		//CLEAR
	GPIOA->PUPDR &=~ GPIO_PUPDR_PUPD0;
	//GPIOA->PUPDR |= GPIO_PUPDR_PUPD0_0;		//pull pup interno
    /* Loop forever */
	for(;;){
		if(GPIOA->IDR & GPIO_IDR_ID5){
			GPIOD->BSRR |= GPIO_BSRR_BS15;
		}else{
			GPIOD->BSRR |= GPIO_BSRR_BR15;
		}
	}
}
