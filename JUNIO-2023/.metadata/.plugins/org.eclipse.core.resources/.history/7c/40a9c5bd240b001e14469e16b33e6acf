/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */
/*Includes ----------------------------------------------------*/
#include <stdint.h>
#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include "stm32f4xx.h"
#include "core_cm4.h"
/*Typedef -----------------------------------------------------*/

/*Defines -----------------------------------------------------*/

/*Global variables --------------------------------------------*/

/*Function prototype ------------------------------------------*/
int __io_putchar(int ch){
	//salida
	ITM_SendChar(ch);

	return ch;
}
/*main function -----------------------------------------------*/
int main(void)
{
	//habilitar el reloj
	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIODEN;
	/**
	 * PA0 -> ENTRADA
	 */
	//GPIOA->MODER = GPIOA->MODER & ~(0x1U);
	GPIOA->MODER &=~ GPIO_MODER_MODE0;		//00 -> input
	GPIOA->PUPDR &=~ GPIO_PUPDR_PUPD0;		//00 -> no pull up /down
	/**
	 * PD12-PD15 ->salida de proposito general
	 */				//0x3<<24
	GPIOD->MODER &=~ (GPIO_MODER_MODE12 | GPIO_MODER_MODE13 | GPIO_MODER_MODE14 | GPIO_MODER_MODE15);
	GPIOD->MODER |= GPIO_MODER_MODE12_0;	//01 -> salida de proposito general
	GPIOD->MODER |= GPIO_MODER_MODE13_0;
	GPIOD->MODER |= GPIO_MODER_MODE14_0;
	GPIOD->MODER |= GPIO_MODER_MODE15_0;

	GPIOD->OTYPER &=~(GPIO_OTYPER_OT12 | GPIO_OTYPER_OT13 | GPIO_OTYPER_OT14 | GPIO_OTYPER_OT15); //PUSH PULL

	GPIOD->OSPEEDR &=~ GPIO_OSPEEDER_OSPEEDR12; //00 -> LOW ESPEED
	GPIOD->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR12;	//11 -> VERY HIGH SPEED

    /* Loop forever */
	for(;;){

	}
}
/*Function definition -----------------------------------------*/


